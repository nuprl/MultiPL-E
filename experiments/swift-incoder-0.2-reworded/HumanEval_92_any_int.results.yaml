language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z + y) || (x ==\
    \ z + z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbz89709h/tmpbz89709h.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3006205c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3005efcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3005efc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3005efb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz89709h                        0x0000560782bd64e2 <unavailable> + 5346

    5    libc.so.6                          0x00002b30063f1460 __libc_start_main +
    245

    6    tmpbz89709h                        0x0000560782bd5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y ==\
    \ z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmprisev2tr.swift:15:30: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z)))\n                             ^\n          \
    \                   Int( )\n/tmp/tmprisev2tr.swift:15:47: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y ==\
    \ z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z)))\n                   \
    \                           ^\n                                              Int(\
    \ )\n/tmp/tmprisev2tr.swift:15:64: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z)))\n                                          \
    \                     ^\n                                                    \
    \           Int( )\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || ((x != x + y) && (x != x + z) && (x !=\
    \ y + z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmploat1an8/tmploat1an8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ad888ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ad8585b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ad8585988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ad85847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmploat1an8                        0x0000560f8572324d <unavailable> + 4685

    5    libc.so.6                          0x00002b7ad8a7a460 __libc_start_main +
    245

    6    tmploat1an8                        0x0000560f85722e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != 0 ||\
    \ y != 0 || z != 0) &&\n        Int(x) == Int(x) + Int(y) + Int(z))\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmptgnw0twk/tmptgnw0twk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab705665c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab70535cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab70535c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab70535b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptgnw0twk                        0x00005583eaf80254 <unavailable> + 4692

    5    libc.so.6                          0x00002ab705851460 __libc_start_main +
    245

    6    tmptgnw0twk                        0x00005583eaf7fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return (x == x + y\
    \ && x == x + z && x == y + z && x == z + x && x == z + y && x == z + z)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpa299tg9c/tmpa299tg9c.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b15aa494c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b15aa18bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b15aa18b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b15aa18a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa299tg9c                        0x000055c9509a81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b15aa680460 __libc_start_main +
    245

    6    tmpa299tg9c                        0x000055c9509a7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\
    \ && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpecsjd81n.swift:15:26: error: cannot find 'is_int' in scope\n  \
    \  return x == y + z && is_int(x) && is_int(y) && is_int(z)\n                \
    \         ^~~~~~\n/tmp/tmpecsjd81n.swift:15:39: error: cannot find 'is_int' in\
    \ scope\n    return x == y + z && is_int(x) && is_int(y) && is_int(z)\n      \
    \                                ^~~~~~\n/tmp/tmpecsjd81n.swift:15:52: error:\
    \ cannot find 'is_int' in scope\n    return x == y + z && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                   ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return true\n    }\n    if x == z {\n        return true\n    }\n    if\
    \ y == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9hwx98pz/tmp9hwx98pz.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2894826c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b289451db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b289451d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b289451c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9hwx98pz                        0x00005621d3c581c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2894a12460 __libc_start_main +
    245

    6    tmp9hwx98pz                        0x00005621d3c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == y +\
    \ z) || (x == z) || (y == z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpd1yiz3kd/tmpd1yiz3kd.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e640afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e63da6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e63da6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e63da57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd1yiz3kd                        0x000055d7da1161c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0e6429b460 __libc_start_main +
    245

    6    tmpd1yiz3kd                        0x000055d7da115e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (y == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9gu6c8zm/tmp9gu6c8zm.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46a0873c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46a056ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46a056a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46a05697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9gu6c8zm                        0x0000561e8bb121c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b46a0a5f460 __libc_start_main +
    245

    6    tmp9gu6c8zm                        0x0000561e8bb11e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return true\n    }\n    if x == z {\n        return true\n    }\n    if\
    \ y == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9hwx98pz/tmp9hwx98pz.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2894826c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b289451db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b289451d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b289451c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9hwx98pz                        0x00005621d3c581c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2894a12460 __libc_start_main +
    245

    6    tmp9hwx98pz                        0x00005621d3c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return ((x + y + z)\
    \ == (x * y * z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyd9da214/tmpyd9da214.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab200b9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab200896b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab200896988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2008957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyd9da214                        0x00005576a71db3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ab200d8b460 __libc_start_main +
    245

    6    tmpyd9da214                        0x00005576a71dae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z + y) || (x ==\
    \ z + z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbz89709h/tmpbz89709h.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3006205c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3005efcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3005efc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3005efb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz89709h                        0x0000560782bd64e2 <unavailable> + 5346

    5    libc.so.6                          0x00002b30063f1460 __libc_start_main +
    245

    6    tmpbz89709h                        0x0000560782bd5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z)) && (x != Double.NaN) && (y != Double.NaN) && (z !=\
    \ Double.NaN)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpdd6h7m54.swift:15:63: error: type 'Double' has no member 'NaN'\n\
    \    return ((x != x) || (y != y) || (z != z)) && (x != Double.NaN) && (y != Double.NaN)\
    \ && (z != Double.NaN)\n                                                     \
    \  ~~~~~~ ^~~\n/tmp/tmpdd6h7m54.swift:15:84: error: type 'Double' has no member\
    \ 'NaN'\n    return ((x != x) || (y != y) || (z != z)) && (x != Double.NaN) &&\
    \ (y != Double.NaN) && (z != Double.NaN)\n                                   \
    \                                         ~~~~~~ ^~~\n/tmp/tmpdd6h7m54.swift:15:105:\
    \ error: type 'Double' has no member 'NaN'\n    return ((x != x) || (y != y) ||\
    \ (z != z)) && (x != Double.NaN) && (y != Double.NaN) && (z != Double.NaN)\n \
    \                                                                            \
    \                    ~~~~~~ ^~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (y == y + z) && (x == y))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp45qo5yph/tmp45qo5yph.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbf4302c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbf3ff9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbf3ff9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbf3ff87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45qo5yph                        0x000055e1bdd231c4 <unavailable> + 4548

    5    libc.so.6                          0x00002afbf44ee460 __libc_start_main +
    245

    6    tmp45qo5yph                        0x000055e1bdd22e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || ((x == x) && (y == y) && (z == z))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6pctm6g0/tmp6pctm6g0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af064eecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af064be3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af064be3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af064be27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6pctm6g0                        0x000055ac6ad5f24d <unavailable> + 4685

    5    libc.so.6                          0x00002af0650d8460 __libc_start_main +
    245

    6    tmp6pctm6g0                        0x000055ac6ad5ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return ((x != 0 ||\
    \ y != 0 || z != 0) && (x == y + z)) || ((x != 0 || y != 0 || z != 0) && (x ==\
    \ y + z) && is_int(y) && is_int(z) && is_int(x))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpslbxbce3.swift:15:109: error: cannot find 'is_int' in scope\n \
    \ return ((x != 0 || y != 0 || z != 0) && (x == y + z)) || ((x != 0 || y != 0\
    \ || z != 0) && (x == y + z) && is_int(y) && is_int(z) && is_int(x))\n       \
    \                                                                            \
    \                         ^~~~~~\n/tmp/tmpslbxbce3.swift:15:122: error: cannot\
    \ find 'is_int' in scope\n  return ((x != 0 || y != 0 || z != 0) && (x == y +\
    \ z)) || ((x != 0 || y != 0 || z != 0) && (x == y + z) && is_int(y) && is_int(z)\
    \ && is_int(x))\n                                                            \
    \                                                             ^~~~~~\n/tmp/tmpslbxbce3.swift:15:135:\
    \ error: cannot find 'is_int' in scope\n  return ((x != 0 || y != 0 || z != 0)\
    \ && (x == y + z)) || ((x != 0 || y != 0 || z != 0) && (x == y + z) && is_int(y)\
    \ && is_int(z) && is_int(x))\n                                               \
    \                                                                            \
    \           ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1cpoxsgl/tmp1cpoxsgl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb0b9d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0b6cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0b6ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0b6c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1cpoxsgl                        0x00005595e9fa31c4 <unavailable> + 4548

    5    libc.so.6                          0x00002acb0bbbf460 __libc_start_main +
    245

    6    tmp1cpoxsgl                        0x00005595e9fa2e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y) ==\
    \ z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp2l09cw8c.swift:15:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmp2l09cw8c.swift:15:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmp2l09cw8c.swift:15:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y +\
    \ z) == (x + y + z)) && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp56e10jgg.swift:15:44: error: cannot find 'is_int' in scope\n  \
    \  return ((x + y + z) == (x + y + z)) && is_int(x) && is_int(y) && is_int(z)\n\
    \                                           ^~~~~~\n/tmp/tmp56e10jgg.swift:15:57:\
    \ error: cannot find 'is_int' in scope\n    return ((x + y + z) == (x + y + z))\
    \ && is_int(x) && is_int(y) && is_int(z)\n                                   \
    \                     ^~~~~~\n/tmp/tmp56e10jgg.swift:15:70: error: cannot find\
    \ 'is_int' in scope\n    return ((x + y + z) == (x + y + z)) && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                             \
    \        ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || ((x == x) && (y == y) && (z == z))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6pctm6g0/tmp6pctm6g0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af064eecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af064be3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af064be3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af064be27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6pctm6g0                        0x000055ac6ad5f24d <unavailable> + 4685

    5    libc.so.6                          0x00002af0650d8460 __libc_start_main +
    245

    6    tmp6pctm6g0                        0x000055ac6ad5ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\
    \ && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpecsjd81n.swift:15:26: error: cannot find 'is_int' in scope\n  \
    \  return x == y + z && is_int(x) && is_int(y) && is_int(z)\n                \
    \         ^~~~~~\n/tmp/tmpecsjd81n.swift:15:39: error: cannot find 'is_int' in\
    \ scope\n    return x == y + z && is_int(x) && is_int(y) && is_int(z)\n      \
    \                                ^~~~~~\n/tmp/tmpecsjd81n.swift:15:52: error:\
    \ cannot find 'is_int' in scope\n    return x == y + z && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                   ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return z == x + y\n    }\n    if x == z {\n        return y == x + z\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpgb0aigcl/tmpgb0aigcl.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a91df9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a91af0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a91af0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a91aef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb0aigcl                        0x0000561e773c41c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0a91fe5460 __libc_start_main +
    245

    6    tmpgb0aigcl                        0x0000561e773c3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpwrb_b_5t/tmpwrb_b_5t.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29061ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2905ec3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2905ec3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2905ec27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwrb_b_5t                        0x00005622b98661c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b29063b8460 __libc_start_main +
    245

    6    tmpwrb_b_5t                        0x00005622b9865e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjzttlvmi/tmpjzttlvmi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae97ce6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae97cb62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae97cb62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae97cb617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjzttlvmi                        0x0000560ddcb0d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ae97d057460 __libc_start_main +
    245

    6    tmpjzttlvmi                        0x0000560ddcb0ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpx7smwutz/tmpx7smwutz.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd7fb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd7cb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd7cb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd7caf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx7smwutz                        0x0000557e976011c4 <unavailable> + 4548

    5    libc.so.6                          0x00002afbd81a5460 __libc_start_main +
    245

    6    tmpx7smwutz                        0x0000557e97600e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return true\n    }\n    if x == z {\n        return true\n    }\n    if\
    \ y == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9hwx98pz/tmp9hwx98pz.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2894826c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b289451db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b289451d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b289451c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9hwx98pz                        0x00005621d3c581c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2894a12460 __libc_start_main +
    245

    6    tmp9hwx98pz                        0x00005621d3c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y) ==\
    \ z) && (Int(x) == Int(y)) && Int(x) == Int(z)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpkk3xuz99/tmpkk3xuz99.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e93ccfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e939c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e939c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e939c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkk3xuz99                        0x0000559b05d0b254 <unavailable> + 4692

    5    libc.so.6                          0x00002b1e93ebb460 __libc_start_main +
    245

    6    tmpkk3xuz99                        0x0000559b05d0aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return ((x != x) ||\
    \ (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpurpk4c0p/tmpurpk4c0p.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8ef3d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8ef0d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8ef0d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8ef0cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpurpk4c0p                        0x00005599243731c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad8ef5c5460 __libc_start_main +
    245

    6    tmpurpk4c0p                        0x0000559924372e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y) ==\
    \ z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp2l09cw8c.swift:15:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmp2l09cw8c.swift:15:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmp2l09cw8c.swift:15:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return z == x + y\n    }\n    if x == z {\n        return y == x + z\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpgb0aigcl/tmpgb0aigcl.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a91df9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a91af0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a91af0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a91aef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb0aigcl                        0x0000561e773c41c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0a91fe5460 __libc_start_main +
    245

    6    tmpgb0aigcl                        0x0000561e773c3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjzttlvmi/tmpjzttlvmi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae97ce6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae97cb62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae97cb62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae97cb617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjzttlvmi                        0x0000560ddcb0d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ae97d057460 __libc_start_main +
    245

    6    tmpjzttlvmi                        0x0000560ddcb0ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == y +\
    \ z) || (x == z) || (y == z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpd1yiz3kd/tmpd1yiz3kd.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e640afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e63da6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0e63da6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0e63da57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd1yiz3kd                        0x000055d7da1161c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0e6429b460 __libc_start_main +
    245

    6    tmpd1yiz3kd                        0x000055d7da115e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1cpoxsgl/tmp1cpoxsgl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb0b9d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0b6cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0b6ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0b6c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1cpoxsgl                        0x00005595e9fa31c4 <unavailable> + 4548

    5    libc.so.6                          0x00002acb0bbbf460 __libc_start_main +
    245

    6    tmp1cpoxsgl                        0x00005595e9fa2e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return z == x + y\n    }\n    if x == z {\n        return y == x + z\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpgb0aigcl/tmpgb0aigcl.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a91df9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a91af0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a91af0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a91aef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb0aigcl                        0x0000561e773c41c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0a91fe5460 __libc_start_main +
    245

    6    tmpgb0aigcl                        0x0000561e773c3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ && (y != y) && (z != z)) || (x == x + y && y == y + z && z == z + x)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp243r9yes/tmp243r9yes.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b96c23f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b96c20ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b96c20ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b96c20eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp243r9yes                        0x000055d6265051c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b96c25e1460 __libc_start_main +
    245

    6    tmp243r9yes                        0x000055d626504e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z + y) || (x ==\
    \ z + z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbz89709h/tmpbz89709h.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3006205c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3005efcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3005efc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3005efb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz89709h                        0x0000560782bd64e2 <unavailable> + 5346

    5    libc.so.6                          0x00002b30063f1460 __libc_start_main +
    245

    6    tmpbz89709h                        0x0000560782bd5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z)) || (x == x + y && y == y + z && z == z + x)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7vcz71po/tmp7vcz71po.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b772c4ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b772c1c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b772c1c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b772c1c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7vcz71po                        0x000055772e1ac1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b772c6b8460 __libc_start_main +
    245

    6    tmp7vcz71po                        0x000055772e1abe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z)) || (x == x + y && x == x + z && x == y + z)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprj31vdnv/tmprj31vdnv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5aaa3d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5aaa0cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5aaa0cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5aaa0cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprj31vdnv                        0x000056011fbed1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b5aaa5c2460 __libc_start_main +
    245

    6    tmprj31vdnv                        0x000056011fbece69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return z == x + y\n    }\n    return z == x + y || z == x - y\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0cwbr_wl/tmp0cwbr_wl.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ba95aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ba92a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ba92a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ba92a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0cwbr_wl                        0x000055f63803b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b1ba9796460 __libc_start_main +
    245

    6    tmp0cwbr_wl                        0x000055f63803ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ && (y != y) && (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp88876adp/tmp88876adp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f06b1dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f06814b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f06814988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f068137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp88876adp                        0x0000557e140db1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2f06d09460 __libc_start_main +
    245

    6    tmp88876adp                        0x0000557e140dae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\
    \ && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpecsjd81n.swift:15:26: error: cannot find 'is_int' in scope\n  \
    \  return x == y + z && is_int(x) && is_int(y) && is_int(z)\n                \
    \         ^~~~~~\n/tmp/tmpecsjd81n.swift:15:39: error: cannot find 'is_int' in\
    \ scope\n    return x == y + z && is_int(x) && is_int(y) && is_int(z)\n      \
    \                                ^~~~~~\n/tmp/tmpecsjd81n.swift:15:52: error:\
    \ cannot find 'is_int' in scope\n    return x == y + z && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                   ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpx7smwutz/tmpx7smwutz.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd7fb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd7cb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd7cb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd7caf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx7smwutz                        0x0000557e976011c4 <unavailable> + 4548

    5    libc.so.6                          0x00002afbd81a5460 __libc_start_main +
    245

    6    tmpx7smwutz                        0x0000557e97600e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y +\
    \ z) == (x * y * z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1krechkf/tmp1krechkf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30caafdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30ca7f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30ca7f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30ca7f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1krechkf                        0x00005605acd013dc <unavailable> + 5084

    5    libc.so.6                          0x00002b30cace9460 __libc_start_main +
    245

    6    tmp1krechkf                        0x00005605acd00e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ && (y != y) && (z != z)) || ((x != x) && (y != y) && (z != z) && (x != y) &&\
    \ (z != z) && (x != z) && (y != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpsbh73npz/tmpsbh73npz.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abaa7e27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abaa7b1eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abaa7b1e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abaa7b1d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsbh73npz                        0x000055bc250261c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abaa8013460 __libc_start_main +
    245

    6    tmpsbh73npz                        0x000055bc25025e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y) ==\
    \ z && (x + y) == z && (x + y) == z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp_vhsjjdv/tmp_vhsjjdv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77bd7a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77bd49cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77bd49c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77bd49b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_vhsjjdv                        0x00005632b626d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b77bd991460 __libc_start_main +
    245

    6    tmp_vhsjjdv                        0x00005632b626ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     return z == x + y\n    }\n    if x == z {\n        return y == x + z\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpgb0aigcl/tmpgb0aigcl.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a91df9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a91af0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a91af0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a91aef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb0aigcl                        0x0000561e773c41c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0a91fe5460 __libc_start_main +
    245

    6    tmpgb0aigcl                        0x0000561e773c3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpx7smwutz/tmpx7smwutz.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd7fb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd7cb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd7cb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd7caf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx7smwutz                        0x0000557e976011c4 <unavailable> + 4548

    5    libc.so.6                          0x00002afbd81a5460 __libc_start_main +
    245

    6    tmpx7smwutz                        0x0000557e97600e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\
    \ && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpecsjd81n.swift:15:26: error: cannot find 'is_int' in scope\n  \
    \  return x == y + z && is_int(x) && is_int(y) && is_int(z)\n                \
    \         ^~~~~~\n/tmp/tmpecsjd81n.swift:15:39: error: cannot find 'is_int' in\
    \ scope\n    return x == y + z && is_int(x) && is_int(y) && is_int(z)\n      \
    \                                ^~~~~~\n/tmp/tmpecsjd81n.swift:15:52: error:\
    \ cannot find 'is_int' in scope\n    return x == y + z && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                   ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpe2khf2h9/tmpe2khf2h9.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb00a7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb00772b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb00772988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb007717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe2khf2h9                        0x00005593967b81c4 <unavailable> + 4548

    5    libc.so.6                          0x00002abb00c67460 __libc_start_main +
    245

    6    tmpe2khf2h9                        0x00005593967b7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\
    \ && is_int(x) && is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpecsjd81n.swift:15:26: error: cannot find 'is_int' in scope\n  \
    \  return x == y + z && is_int(x) && is_int(y) && is_int(z)\n                \
    \         ^~~~~~\n/tmp/tmpecsjd81n.swift:15:39: error: cannot find 'is_int' in\
    \ scope\n    return x == y + z && is_int(x) && is_int(y) && is_int(z)\n      \
    \                                ^~~~~~\n/tmp/tmpecsjd81n.swift:15:52: error:\
    \ cannot find 'is_int' in scope\n    return x == y + z && is_int(x) && is_int(y)\
    \ && is_int(z)\n                                                   ^~~~~~\n"
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (y == y + z) && (x % 1 == 0) && (y % 1 == 0) && (z % 1\
    \ == 0))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmprh1c4881.swift:15:64: error: '%' is unavailable: For floating point\
    \ numbers use truncatingRemainder instead\n    return ((x == x + y) && (x == x\
    \ + z) && (y == y + z) && (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0))\n    \
    \                                                           ^\nSwift.%:2:13: note:\
    \ '%' has been explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs:\
    \ T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmprh1c4881.swift:15:80:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return ((x == x + y) && (x == x + z) && (y == y + z) && (x % 1\
    \ == 0) && (y % 1 == 0) && (z % 1 == 0))\n                                   \
    \                                            ^\nSwift.%:2:13: note: '%' has been\
    \ explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs: T) -> T where\
    \ T : BinaryFloatingPoint\n            ^\n/tmp/tmprh1c4881.swift:15:96: error:\
    \ '%' is unavailable: For floating point numbers use truncatingRemainder instead\n\
    \    return ((x == x + y) && (x == x + z) && (y == y + z) && (x % 1 == 0) && (y\
    \ % 1 == 0) && (z % 1 == 0))\n                                               \
    \                                                ^\nSwift.%:2:13: note: '%' has\
    \ been explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs: T) ->\
    \ T where T : BinaryFloatingPoint\n            ^\n"
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n        return false\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmk8cdnwa/tmpmk8cdnwa.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d1f7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d1f4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d1f4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d1f4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk8cdnwa                        0x000056329e7f71c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b7d1f999460 __libc_start_main +
    245

    6    tmpmk8cdnwa                        0x000056329e7f6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjzttlvmi/tmpjzttlvmi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae97ce6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae97cb62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae97cb62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae97cb617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjzttlvmi                        0x0000560ddcb0d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ae97d057460 __libc_start_main +
    245

    6    tmpjzttlvmi                        0x0000560ddcb0ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y +\
    \ z) == (x * y * z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1krechkf/tmp1krechkf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30caafdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30ca7f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30ca7f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30ca7f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1krechkf                        0x00005605acd013dc <unavailable> + 5084

    5    libc.so.6                          0x00002b30cace9460 __libc_start_main +
    245

    6    tmp1krechkf                        0x00005605acd00e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || (x == y + z) || (x == z) || (y == z)\
    \ || (x == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvy19kp08/tmpvy19kp08.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ffac9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff7c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff7c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff7bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvy19kp08                        0x000055c374f0b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b06ffcb5460 __libc_start_main +
    245

    6    tmpvy19kp08                        0x000055c374f0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjzttlvmi/tmpjzttlvmi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae97ce6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae97cb62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae97cb62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae97cb617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjzttlvmi                        0x0000560ddcb0d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ae97d057460 __libc_start_main +
    245

    6    tmpjzttlvmi                        0x0000560ddcb0ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y +\
    \ z) == (x * y * z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1krechkf/tmp1krechkf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30caafdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30ca7f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30ca7f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30ca7f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1krechkf                        0x00005605acd013dc <unavailable> + 5084

    5    libc.so.6                          0x00002b30cace9460 __libc_start_main +
    245

    6    tmp1krechkf                        0x00005605acd00e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616

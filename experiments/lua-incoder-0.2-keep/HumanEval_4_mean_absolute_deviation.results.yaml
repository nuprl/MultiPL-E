language: lua
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9sd0bkl2.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmp9sd0bkl2.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp9sd0bkl2.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp1u8_fs0.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmpp1u8_fs0.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpp1u8_fs0.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, x in pairs(numbers) do\n    sum = sum + math.abs(x -\
    \ math.mean(x))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_ikt7vdj.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmp_ikt7vdj.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp_ikt7vdj.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9sd0bkl2.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmp9sd0bkl2.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp9sd0bkl2.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local mean = 0\n  local deviation = 0\n  for _, value in pairs(numbers) do\n\
    \    local diff = value - mean\n    deviation = deviation + diff * diff\n    mean\
    \ = mean + value\n  end\n  return deviation / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph6a8s0wj.lua:22:\
    \ expected: 0.5, actual: 1\nstack traceback:\n\t/tmp/tmph6a8s0wj.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  local count = 0\n  for _, value in pairs(numbers) do\n    sum\
    \ = sum + math.abs(value - math.fmean(numbers))\n    count = count + 1\n  end\n\
    \  return sum / count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcsbddu1a.lua:12:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpcsbddu1a.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpcsbddu1a.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local mean = 0\n  for _, value in ipairs(numbers) do\n    local diff = value\
    \ - mean\n    mean = mean + diff\n  end\n  return mean / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcvzkc9sz.lua:20:\
    \ expected: 0.5, actual: 1\nstack traceback:\n\t/tmp/tmpcvzkc9sz.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp1u8_fs0.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmpp1u8_fs0.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpp1u8_fs0.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9sd0bkl2.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmp9sd0bkl2.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp9sd0bkl2.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv8j8tkvi.lua:11:\
    \ attempt to call a nil value (field 'fmean')\nstack traceback:\n\t/tmp/tmpv8j8tkvi.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpv8j8tkvi.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp1u8_fs0.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmpp1u8_fs0.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpp1u8_fs0.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, x in pairs(numbers) do\n    sum = sum + math.abs(x -\
    \ math.mean(x))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_ikt7vdj.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmp_ikt7vdj.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp_ikt7vdj.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
    -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average\
    \ absolute difference between each\n-- element and a centerpoint (mean in this\
    \ case):\n-- MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0,\
    \ 2.0, 3.0, 4.0])\n-- 1.0\nlocal function mean_absolute_deviation(numbers)\n \
    \ local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n    lu.assertEquals(candidate({1.0,\
    \ 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)\n   \
    \ lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp1u8_fs0.lua:11:\
    \ attempt to call a nil value (field 'mean')\nstack traceback:\n\t/tmp/tmpp1u8_fs0.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpp1u8_fs0.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"

name: HumanEval_76_is_simple_power
language: lua
prompt: "-- Your task is to write a function that returns true if a number x is a\
  \ simple\n-- power of n and false in other cases.\n-- x is a simple power of n if\
  \ n**int=x\n-- For example:\n-- is_simple_power(1, 4) => true\n-- is_simple_power(2,\
  \ 2) => true\n-- is_simple_power(8, 2) => true\n-- is_simple_power(3, 2) => false\n\
  -- is_simple_power(3, 1) => false\n-- is_simple_power(5, 3) => false\nlocal function\
  \ is_simple_power(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_simple_power\n\
  \    lu.assertEquals(candidate(16, 2), true)\n    lu.assertEquals(candidate(143214,\
  \ 16), false)\n    lu.assertEquals(candidate(4, 2), true)\n    lu.assertEquals(candidate(9,\
  \ 3), true)\n    lu.assertEquals(candidate(16, 4), true)\n    lu.assertEquals(candidate(24,\
  \ 2), false)\n    lu.assertEquals(candidate(128, 4), false)\n    lu.assertEquals(candidate(12,\
  \ 6), false)\n    lu.assertEquals(candidate(1, 1), true)\n    lu.assertEquals(candidate(1,\
  \ 12), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if x == n then\n    return true\n  end\n  if x < n then\n    return\
    \ false\n  end\n  local y = 1\n  while y < n do\n    if x % n == 0 then\n    \
    \  return false\n    end\n    y = y * n\n  end\n  return true\nend", "  if x ==\
    \ n then\n    return true\n  end\n  if x < n then\n    return false\n  end\n \
    \ local i = 2\n  while i <= n do\n    if x % i == 0 then\n      return false\n\
    \    end\n    i = i * 2\n  end\n  return true\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1\
    \ then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == n then\n    return true\n  else\n    return false\n  end\nend", "  if\
    \ x == n then\n    return true\n  end\n  if x < n then\n    return false\n  end\n\
    \  if n == 1 then\n    return true\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x, n / 2) or is_simple_power(x, n /\
    \ 2)\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if n == 1 then\n    return true\n\
    \  else\n    return (x == n) or (is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-1))\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n\
    \    return false\n  end\n  if n == -1 then\n    return false\n  end\n  if n ==\
    \ -2 then\n    return false\n  end\n  if n == -3 then\n    return false\n  end\n\
    \  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return false\n\
    \  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n    return\
    \ false\n  end\n  if n == -8 then\n    return false\n  end\n  if n == -9 then\n\
    \    return false\n  end\n  if n == -10 then\n    return false\n  end\n  if n\
    \ == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local power = 1\n  while power < n do\n    power =\
    \ power * x\n  end\n  return power == x\nend", "  if x == n then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == n then\n    return true\n \
    \ elseif x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n\
    \  end\nend", "  if x == 1 then\n    return true\n  elseif x == 0 then\n    return\
    \ false\n  elseif n == 0 then\n    return false\n  elseif n == 1 then\n    return\
    \ x == n\n  else\n    return is_simple_power(x, n-1) and is_simple_power(x*n,\
    \ n)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  if x ~= n then\n    return is_simple_power(x, n-1)\n\
    \  end\n  return false\nend", "  if n == 1 then\n    return true\n  end\n  if\
    \ x == 1 then\n    return false\n  end\n  if x == 0 then\n    return false\n \
    \ end\n  if n == 0 then\n    return false\n  end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend",
  "  if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return\
    \ false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n \
    \ end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == 1 then\n    return\
    \ true\n  elseif x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ n then\n    return true\n  elseif x < n then\n    return false\n  else\n   \
    \ return is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == n then\n    return true\n \
    \ elseif x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x * x, n)\n  end\nend", "  if n ==\
    \ 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local r = 1\n  while n ~= 1 do\n    r = r * x\n    local tmp = n\n \
    \   n = n / 2\n    if tmp == n then\n      return true\n    end\n  end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  elseif n < 0 then\n    return\
    \ false\n  else\n    return is_simple_power(x^n, n)\n  end\nend", "  if x == n\
    \ then\n    return true\n  end\n  if x < n then\n    return false\n  end\n  local\
    \ i = 1\n  while i < n do\n    i = i * 2\n  end\n  return x == i\nend", "  if\
    \ n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n < 0 then\n    return false\n  end\n  if x < 1 then\n    return false\n\
    \  end\n  if x == 1 then\n    return true\n  end\n  if x == 0 then\n    return\
    \ false\n  end\n  if x == -1 then\n    return false\n  end\n  if x == -2 then\n\
    \    return false\n  end\n  if x == -3 then\n    return false\n  end\n  if x ==\
    \ -4 then\n    return false\n  end\n  if x == -5 then\n    return false\n  end\n\
    \  if x == -6 then\n    return false\n  end\n  if x == -7 then\n    return false\n\
    \  end\n  if x == -8 then\n    return false\n  end\n  if x == -9 then\n    return\
    \ false\n  end\n  if x == -10 then\n    return false\n  end\n  if x == -11 then\n\
    \    return false\n  end\n  if x == -12 then\n    return false\n  end\n  if x\
    \ == -13 then\n    return false\n  end\n  if x == -14 then\n    return false\n\
    \  end\n  if x == -15 then\n    return false\n  end\n  if x == -16 then\n    return\
    \ false\n  end\n  if x == -17 then\n    return false\n  end\n  if x == -18 then\n\
    \    return false\n  end\n  if x == -19 then\n    return false\n  end\n  if x\
    \ == -20 then\n    return false\n  end\n  if x == -21 then\n    return false\n\
    \  end\n  if x == -22 then\n    return false\n  end\n  if x == -23 then\n    return\
    \ false\n  end\n  if x == -24 then\n    return false\n  end\n  if x == -25 then\n\
    \    return false\n  end\n  if x == -26 then\n    return false\n  end\n  if x\
    \ == -27 then\n    return false\n  end\n  if x == -28 then\n    return false\n\
    \  end\n  if x == -29 then\n    return false\n  end\n  if x == -30 then\n    return\
    \ false\n  end\n  if x == -31 then\n    return false\n  end\n  if x == -32 then\n\
    \    return false\n  end\n  if x == -33 then\n    return false\n  end\n  if x\
    \ == -34 then\n    return false\n  end\n  if x == -35 then\n    return false\n\
    \  end\n  if x == -36 then\n    return false\n  end\n  if x == -37 then\n    return\
    \ false\n  end\n  if x == -38 then\n    return false\n  end\n  if x == -39 then\n\
    \    return false\n  end\n  if x == -40 then\n    return false\n  end\n  if x\
    \ == -41 then\n    return false\n  end", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == 1 then\n    return n == 1\n  else\n    return\
    \ x ~= n and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and\
    \ x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x)\
    \ and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~=\
    \ math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x)\
    \ and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~=\
    \ math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x)\
    \ and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~=\
    \ math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x)\
    \ and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~=\
    \ math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x)\
    \ and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~=\
    \ math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x)\
    \ and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~=\
    \ math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x)\
    \ and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~=\
    \ math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x)\
    \ and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~=\
    \ math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x)\
    \ and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x) and x ~=\
    \ math.floor(x) and x ~= math.ceil(x) and x ~= math.floor(x) and x ~= math.ceil(x)\
    \ and x ~= math.", "  if n == 1 then\n    return x == 1\n  else\n    return x\
    \ % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  return n == 1 or (x\
    \ % n == 0 and is_simple_power(x, n-1))\nend", "  if n == 1 then\n    return true\n\
    \  end\n  if x == 1 then\n    return false\n  end\n  if x == 0 then\n    return\
    \ false\n  end\n  if n == 0 then\n    return false\n  end\n  if n % 2 == 1 then\n\
    \    return false\n  end\n  local i = 1\n  while i <= n do\n    if x % n == 0\
    \ then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local power = 1\n  while power < n do\n    power = power * x\n  end\n\
    \  return power == x\nend", "  if n == 1 then\n    return true\n  end\n  if x\
    \ == 1 then\n    return false\n  end\n  if x == 0 then\n    return false\n  end\n\
    \  if n == 0 then\n    return false\n  end\n  if n == -1 then\n    return false\n\
    \  end\n  if n == -2 then\n    return false\n  end\n  if n == -3 then\n    return\
    \ false\n  end\n  if n == -4 then\n    return false\n  end\n  if n == -5 then\n\
    \    return false\n  end\n  if n == -6 then\n    return false\n  end\n  if n ==\
    \ -7 then\n    return false\n  end\n  if n == -8 then\n    return false\n  end\n\
    \  if n == -9 then\n    return false\n  end\n  if n == -10 then\n    return false\n\
    \  end\n  if n == -11 then\n    return false\n  end\n  if n == -12 then\n    return\
    \ false\n  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n\
    \    return false\n  end\n  if n == -15 then\n    return false\n  end\n  if n\
    \ == -16 then\n    return false\n  end\n  if n == -17 then\n    return false\n\
    \  end\n  if n == -18 then\n    return false\n  end\n  if n == -19 then\n    return\
    \ false\n  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n\
    \    return false\n  end\n  if n == -22 then\n    return false\n  end\n  if n\
    \ == -23 then\n    return false\n  end\n  if n == -24 then\n    return false\n\
    \  end\n  if n == -25 then\n    return false\n  end\n  if n == -26 then\n    return\
    \ false\n  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n\
    \    return false\n  end\n  if n == -29 then\n    return false\n  end\n  if n\
    \ == -30 then\n    return false\n  end\n  if n == -31 then\n    return false\n\
    \  end\n  if n == -32 then\n    return false\n  end\n  if n == -33 then\n    return\
    \ false\n  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n\
    \    return false\n  end\n  if n == -36 then\n    return false\n  end\n  if n\
    \ == -37 then\n    return false\n  end\n  if n == -38 then\n    return false\n\
    \  end\n  if n == -39 then\n    return false\n  end\n  if n == -40 then\n    return\
    \ false\n  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n\
    \    return false\n  end\n  if n == -43 then\n    return false", "  if n == 1\
    \ then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if\
    \ n == -1 then\n    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  if n % x == 0 then\n    return false\n  end\n  local i = 1\n  while\
    \ i * i <= n do\n    if n % i == 0 then\n      return false\n    end\n    i =\
    \ i + 1\n  end\n  return true\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ 1 then\n    return n == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n\
    \ then\n    return false\n  end\n  local r = 1\n  while n ~= 1 do\n    r = r *\
    \ n\n    n = n / 2\n  end\n  return x == r\nend", "  if n == 1 then return true\
    \ end\n  if n == 0 then return false end\n  if n == -1 then return false end\n\
    \  if n == -2 then return false end\n  if n == -3 then return false end\n  if\
    \ n == -4 then return false end\n  if n == -5 then return false end\n  if n ==\
    \ -6 then return false end\n  if n == -7 then return false end\n  if n == -8 then\
    \ return false end\n  if n == -9 then return false end\n  if n == -10 then return\
    \ false end\n  if n == -11 then return false end\n  if n == -12 then return false\
    \ end\n  if n == -13 then return false end\n  if n == -14 then return false end\n\
    \  if n == -15 then return false end\n  if n == -16 then return false end\n  if\
    \ n == -17 then return false end\n  if n == -18 then return false end\n  if n\
    \ == -19 then return false end\n  if n == -20 then return false end\n  if n ==\
    \ -21 then return false end\n  if n == -22 then return false end\n  if n == -23\
    \ then return false end\n  if n == -24 then return false end\n  if n == -25 then\
    \ return false end\n  if n == -26 then return false end\n  if n == -27 then return\
    \ false end\n  if n == -28 then return false end\n  if n == -29 then return false\
    \ end\n  if n == -30 then return false end\n  if n == -31 then return false end\n\
    \  if n == -32 then return false end\n  if n == -33 then return false end\n  if\
    \ n == -34 then return false end\n  if n == -35 then return false end\n  if n\
    \ == -36 then return false end\n  if n == -37 then return false end\n  if n ==\
    \ -38 then return false end\n  if n == -39 then return false end\n  if n == -40\
    \ then return false end\n  if n == -41 then return false end\n  if n == -42 then\
    \ return false end\n  if n == -43 then return false end\n  if n == -44 then return\
    \ false end\n  if n == -45 then return false end\n  if n == -46 then return false\
    \ end\n  if n == -47 then return false end\n  if n == -48 then return false end\n\
    \  if n == -49 then return false end\n  if n == -50 then return false end\n  if\
    \ n == -51 then return false end\n  if n == -52 then return false end\n  if n\
    \ == -53 then return false end\n  if n == -54 then return false end\n  if n ==\
    \ -", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x//n, n) or is_simple_power(x, n-1)\n  end\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x//n, n)\n  end\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x * x, n)\n  end\nend", "  if x ==\
    \ n then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n\
    \  if n <= 1 then\n    return false\n  end\n  local i = 1\n  while i <= n do\n\
    \    if x ~= n and x % n == 0 then\n      return false\n    end\n    i = i + 1\n\
    \  end\n  return true\nend", "  if n == 1 then\n    return true\n  else\n    return\
    \ x == n^int(x)\n  end\nend", "  if n == 1 then\n    return true\n  else\n   \
    \ return x == n^x\n  end\nend", "  if n == 1 then return true end\n  if n == 0\
    \ then return false end\n  if n == -1 then return false end\n  if n == -2 then\
    \ return false end\n  if n == -3 then return false end\n  if n == -4 then return\
    \ false end\n  if n == -5 then return false end\n  if n == -6 then return false\
    \ end\n  if n == -7 then return false end\n  if n == -8 then return false end\n\
    \  if n == -9 then return false end\n  if n == -10 then return false end\n  if\
    \ n == -11 then return false end\n  if n == -12 then return false end\n  if n\
    \ == -13 then return false end\n  if n == -14 then return false end\n  if n ==\
    \ -15 then return false end\n  if n == -16 then return false end\n  if n == -17\
    \ then return false end\n  if n == -18 then return false end\n  if n == -19 then\
    \ return false end\n  if n == -20 then return false end\n  if n == -21 then return\
    \ false end\n  if n == -22 then return false end\n  if n == -23 then return false\
    \ end\n  if n == -24 then return false end\n  if n == -25 then return false end\n\
    \  if n == -26 then return false end\n  if n == -27 then return false end\n  if\
    \ n == -28 then return false end\n  if n == -29 then return false end\n  if n\
    \ == -30 then return false end\n  if n == -31 then return false end\n  if n ==\
    \ -32 then return false end\n  if n == -33 then return false end\n  if n == -34\
    \ then return false end\n  if n == -35 then return false end\n  if n == -36 then\
    \ return false end\n  if n == -37 then return false end\n  if n == -38 then return\
    \ false end\n  if n == -39 then return false end\n  if n == -40 then return false\
    \ end\n  if n == -41 then return false end\n  if n == -42 then return false end\n\
    \  if n == -43 then return false end\n  if n == -44 then return false end\n  if\
    \ n == -45 then return false end\n  if n == -46 then return false end\n  if n\
    \ == -47 then return false end\n  if n == -48 then return false end\n  if n ==\
    \ -49 then return false end\n  if n == -50 then return false end\n  if n == -51\
    \ then return false end\n  if n == -52 then return false end\n  if n == -53 then\
    \ return false end\n  if n == -54 then return false end\n  if n == -", "  -- Base\
    \ case\n  if x == 1 then\n    return true\n  end", "  if x == n then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x * x, n / 2)\n  else\n    return is_simple_power(x * x, (n\
    \ - 1) / 2)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local r = 1\n  while n ~= 0 do\n    r = r * x\n    local tmp = n\n \
    \   n = n / 2\n    if tmp == n then\n      return true\n    end\n  end\n  return\
    \ false\nend", "  if x == 1 then\n    return true\n  else\n    return ((x % n)\
    \ == 0 and is_simple_power(x / n, n)) or (x ~= 1 and is_simple_power(x, n))\n\
    \  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n   \
    \ return false\n  end\n  local i = 1\n  while i <= n do\n    if x % n == 0 then\n\
    \      return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  if\
    \ x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 0 then return false\
    \ end\n  if n == 1 then return true end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if n % 3 == 0 then return is_simple_power(x, n / 3) end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n  \
    \  return false\n  end\n  local r = 1\n  while n > 1 do\n    r = r * x\n    n\
    \ = n - 1\n  end\n  return r == x\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if n == 1 then return true end\n  if n == 0 then return false end\n  if n ==\
    \ -1 then return false end\n  if n % 2 == 0 then return is_simple_power(x, n /\
    \ 2) end\n  if x % n == 0 then return true end\n  return false\nend", "  if n\
    \ == 1 then\n    return true\n  else\n    return x == n^x\n  end\nend", "  if\
    \ n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local i = 1\n  while i <= n do\n    if x%i == 0 then\n      return false\n\
    \    end\n    i = i * 2\n  end\n  return true\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n \
    \   return true\n  end\n  if x < n then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if n == 2 then\n    return x == 1\n  end\n \
    \ if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x,\
    \ (n - 1) / 2)\nend", "  if n == 0 then return false end\n  if n == 1 then return\
    \ x == 1 end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2) or is_simple_power(x\
    \ * x, n / 2)\n  else\n    return is_simple_power(x * x, n / 2)\n  end\nend",
  "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n == -1 then\n    return false\n  end\n  if n == -2 then\n    return\
    \ false\n  end\n  if n == -3 then\n    return false\n  end\n  if n == -4 then\n\
    \    return false\n  end\n  if n == -5 then\n    return false\n  end\n  if n ==\
    \ -6 then\n    return false\n  end\n  if n == -7 then\n    return false\n  end\n\
    \  if n == -8 then\n    return false\n  end\n  if n == -9 then\n    return false\n\
    \  end\n  if n == -10 then\n    return false\n  end\n  if n == -11 then\n    return\
    \ false\n  end\n  if n == -12 then\n    return false\n  end\n  if n == -13 then\n\
    \    return false\n  end\n  if n == -14 then\n    return false\n  end\n  if n\
    \ == -15 then\n    return false\n  end\n  if n == -16 then\n    return false\n\
    \  end\n  if n == -17 then\n    return false\n  end\n  if n == -18 then\n    return\
    \ false\n  end\n  if n == -19 then\n    return false\n  end\n  if n == -20 then\n\
    \    return false\n  end\n  if n == -21 then\n    return false\n  end\n  if n\
    \ == -22 then\n    return false\n  end\n  if n == -23 then\n    return false\n\
    \  end\n  if n == -24 then\n    return false\n  end\n  if n == -25 then\n    return\
    \ false\n  end\n  if n == -26 then\n    return false\n  end\n  if n == -27 then\n\
    \    return false\n  end\n  if n == -28 then\n    return false\n  end\n  if n\
    \ == -29 then\n    return false\n  end\n  if n == -30 then\n    return false\n\
    \  end\n  if n == -31 then\n    return false\n  end\n  if n == -32 then\n    return\
    \ false\n  end\n  if n == -33 then\n    return false\n  end\n  if n == -34 then\n\
    \    return false\n  end\n  if n == -35 then\n    return false\n  end\n  if n\
    \ == -36 then\n    return false\n  end\n  if n == -37 then\n    return false\n\
    \  end\n  if n == -38 then\n    return false\n  end\n  if n == -39 then\n    return\
    \ false\n  end\n  if n == -40 then\n    return false\n  end\n  if n == -41 then\n\
    \    return false\n  end\n  if n == -42 then\n    return false\n  end\n  if n\
    \ == -43 then\n    return false\n  end\n  if n == -44 then\n    return false\n\
    \  end\n  if n == -45 then\n", "  if n == 1 then\n    return true\n  end\n  if\
    \ x == 1 then\n    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x\
    \ * x, n / 2)\n  end\n  return is_simple_power(x * x, (n - 1) / 2)\nend", "  if\
    \ x == 1 then return true end\n  if x == 0 then return false end\n  if n == 0\
    \ then return false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then\
    \ return is_simple_power(x, n / 2) end\n  return false\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  if n == 1 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x,\
    \ n / 2) or is_simple_power(x, n / 2)\nend", "  if x == n then\n    return true\n\
    \  end\n  if x < n then\n    return false\n  end\n  local r = 1\n  while n ~=\
    \ 1 do\n    r = r * x\n    x = n / n\n    n = x\n  end\n  return r == x\nend",
  "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n\
    \ then\n    return false\n  end\n  local power = 1\n  while power < n do\n   \
    \ power = power * x\n  end\n  return power == x\nend", "  if n == 1 then\n   \
    \ return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 0 then return false end\n  if n == 1 then return true\
    \ end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == n then\n    return true\n  else\n    return false\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1\
    \ then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if\
    \ n ~= x then\n    return false\n  end\n  local result = 1\n  while n ~= 1 do\n\
    \    if n % 2 == 1 then\n      result = result * n\n    end\n    n = n / 2\n \
    \ end\n  return result == x\nend", "  -- Base case\n  if x == 1 then\n    return\
    \ true\n  end", "  if x == n then\n    return true\n  end\n  if x < n then\n \
    \   return false\n  end\n  local i = 1\n  while i <= n do\n    if x%i == 0 then\n\
    \      return false\n    end\n    i = i * 2\n  end\n  return true\nend", "  --\
    \ Base cases\n  if x == 1 then return true end\n  if x == 0 then return false\
    \ end\n  if n == 0 then return false end\n  if n == 1 then return true end", " \
    \ if x == n then\n    return true\n  else\n    return false\n  end\nend", "  if\
    \ n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return true\n  else\n    return\
    \ (x == n) or (is_simple_power(x, n-1) and is_simple_power(x, n-1))\n  end\nend",
  "  return math.pow(x, n) == x\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  return (x == 1) or (x == n) or (x%n == 0)\nend", "  if n == 1\
    \ then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if\
    \ n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  -- Base case\n  if n == 1 then\n    return x == 1\n  end\n\
    \  -- Recursive case\n  if x % n == 0 then\n    return true\n  end\n  return false\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n    return true\n\
    \  end\n  if x < n then\n    return false\n  end\n  local r = 1\n  while n > 1\
    \ do\n    r = r * x\n    n = n - 1\n  end\n  return r == x\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  -- Base case\n  if n == 1 then\n  \
    \  return x == 1\n  else\n    -- Recursive case\n    return is_simple_power(x^n,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local power = 1\n  while power < n do\n    power =\
    \ power * x\n  end\n  return power == x\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 0 then return false end\n  if n == 1 then return\
    \ x == 1 end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  -- Base case\n  if n == 1 then\n   \
    \ return true\n  end", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  -- Base case\n  if n == 1 then\n    return x == 1\n  end\n  --\
    \ Recursive case\n  if x < n then\n    return false\n  else\n    return is_simple_power(x%n,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local r = 1\n  while n ~= 1 do\n    r = r * x\n  \
    \  x = n / x\n    n = x\n  end\n  return r == x\nend", "  -- Base case\n  if n\
    \ == 1 then\n    return x == 1\n  else\n    -- Recursive case\n    return is_simple_power(x%n,\
    \ n-1) or is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local power = 1\n \
    \ while power < n do\n    power = power * x\n  end\n  return power == x\nend",
  "  if n == 0 then return true end\n  if n == 1 then return x == 1 end\n  if n %\
    \ 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x^n, n)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x * x, n / 2)\n  else\n\
    \    return is_simple_power(x * x, (n - 1) / 2)\n  end\nend", "  -- Base case\n\
    \  if x == 1 then\n    return n == 1\n  else\n    -- Recursive case\n    return\
    \ is_simple_power(x%n, n) or is_simple_power(x, n-1)\n  end\nend", "  if n ==\
    \ 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n == -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n\
    \  end\n  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return\
    \ false\n  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n\
    \    return false\n  end\n  if n == -7 then\n    return false\n  end\n  if n ==\
    \ -8 then\n    return false\n  end\n  if n == -9 then\n    return false\n  end\n\
    \  if n == -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n\
    \  end\n  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return\
    \ false\n  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n\
    \    return false\n  end\n  if n == -16 then\n    return false\n  end\n  if n\
    \ == -17 then\n    return false\n  end\n  if n == -18 then\n    return false\n\
    \  end\n  if n == -19 then\n    return false\n  end\n  if n == -20 then\n    return\
    \ false\n  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n\
    \    return false\n  end\n  if n == -23 then\n    return false\n  end\n  if n\
    \ == -24 then\n    return false\n  end\n  if n == -25 then\n    return false\n\
    \  end\n  if n == -26 then\n    return false\n  end\n  if n == -27 then\n    return\
    \ false\n  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n\
    \    return false\n  end\n  if n == -30 then\n    return false\n  end\n  if n\
    \ == -31 then\n    return false\n  end\n  if n == -32 then\n    return false\n\
    \  end\n  if n == -33 then\n    return false\n  end\n  if n == -34 then\n    return\
    \ false\n  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n\
    \    return false\n  end\n  if n == -37 then\n    return false\n  end\n  if n\
    \ == -38 then\n    return false\n  end\n  if n == -39 then\n    return false\n\
    \  end\n  if n == -40 then\n    return false\n  end\n  if n == -41 then\n    return\
    \ false\n  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n\
    \    return false\n  end\n  if n == -44 then\n    return false\n  end\n  if n\
    \ == -45 then\n", "  -- Base case\n  if n == 1 then\n    return x == 1\n  end\n\
    \  -- Recursive case\n  if x % n == 0 then\n    return is_simple_power(x / n,\
    \ n)\n  end\n  return false\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n   \
    \ return false\n  end\n  if x == 1 then\n    return true\n  end\n  if x == 0 then\n\
    \    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if n == 0 then\
    \ return true end\n  if n == 1 then return x == 1 end\n  if n == -1 then return\
    \ x == -1 end\n  if n == -2 then return x == -2 end\n  if n == -3 then return\
    \ x == -3 end\n  if n == -4 then return x == -4 end\n  if n == -5 then return\
    \ x == -5 end\n  if n == -6 then return x == -6 end\n  if n == -7 then return\
    \ x == -7 end\n  if n == -8 then return x == -8 end\n  if n == -9 then return\
    \ x == -9 end\n  if n == -10 then return x == -10 end\n  if n == -11 then return\
    \ x == -11 end\n  if n == -12 then return x == -12 end\n  if n == -13 then return\
    \ x == -13 end\n  if n == -14 then return x == -14 end\n  if n == -15 then return\
    \ x == -15 end\n  if n == -16 then return x == -16 end\n  if n == -17 then return\
    \ x == -17 end\n  if n == -18 then return x == -18 end\n  if n == -19 then return\
    \ x == -19 end\n  if n == -20 then return x == -20 end\n  if n == -21 then return\
    \ x == -21 end\n  if n == -22 then return x == -22 end\n  if n == -23 then return\
    \ x == -23 end\n  if n == -24 then return x == -24 end\n  if n == -25 then return\
    \ x == -25 end\n  if n == -26 then return x == -26 end\n  if n == -27 then return\
    \ x == -27 end\n  if n == -28 then return x == -28 end\n  if n == -29 then return\
    \ x == -29 end\n  if n == -30 then return x == -30 end\n  if n == -31 then return\
    \ x == -31 end\n  if n == -32 then return x == -32 end\n  if n == -33 then return\
    \ x == -33 end\n  if n == -34 then return x == -34 end\n  if n == -35 then return\
    \ x == -35 end\n  if n == -36 then return x == -36 end\n  if n == -37 then return\
    \ x == -37 end\n  if n == -38 then return x == -38 end\n  if n == -39 then return\
    \ x == -39 end\n  if n == -40 then return x == -40 end\n  if n == -41 then return\
    \ x == -41 end\n  if n == -42 then return x == -42 end\n  if n == -43 then return\
    \ x == -43 end\n  if n == -44 then return x == -44 end\n  if n == -45 then return\
    \ x == ", "  if x == n then\n    return true\n  else\n    return false\n  end\n\
    end", "  if n == 1 then return true end\n  if x == n then return true end\n  if\
    \ x ~= n then return false end\n  local power = 1\n  while n ~= 1 do\n    power\
    \ = power * n\n    n = math.floor(n/n)\n    if n == 1 then return true end\n \
    \ end\n  return false\nend", "  if n == 1 then\n    return x == 1\n  else\n  \
    \  return x == n^int(x)\n  end\nend", "  -- Base case\n  if n == 1 then\n    return\
    \ x == 1\n  end", "  if n == 1 then\n    return x == 1\n  else\n    return x %\
    \ n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local i = 1\n  while i <= n do\n    local t = x\n    x = x * x\n   \
    \ if x == t then\n      return true\n    end\n    i = i + 1\n  end\n  return false\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if x == 1 then return true end\n\
    \  if x == 0 then return false end\n  if n == 0 then return false end\n  if n\
    \ == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if n % 3 == 0 then return is_simple_power(x, n / 3) end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif n < 0 then\n    return false\n  elseif n ==\
    \ 0 then\n    return false\n  else\n    return is_simple_power(x^n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x//n, n)\n  end\nend", "  if x == n then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x == n then\n \
    \   return true\n  end\n  if x < n then\n    return false\n  end\n  local power\
    \ = 1\n  while n > power do\n    power = power * 2\n  end\n  local result = true\n\
    \  for i = 1, power do\n    if x % i == 0 then\n      result = false\n    end\n\
    \  end\n  return result\nend", "  if x == 1 then\n    return n == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ n then\n    return true\n  end\n  if x < n then\n    return false\n  end\n \
    \ local i = 1\n  while i * i <= n do\n    if x * i == n then\n      return true\n\
    \    end\n    i = i + 1\n  end\n  return false\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local i = 1\n  while\
    \ i <= n do\n    if x%i == 0 then\n      return false\n    end\n    i = i + 1\n\
    \  end\n  return true\nend", "  if n == 1 then\n    return x == 1\n  else\n  \
    \  return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then return true end\n  if\
    \ x == 1 then return false end\n  if x == 0 then return false end\n  if n % 2\
    \ == 0 then return is_simple_power(x / 2, n) end\n  if n % 3 == 0 then return\
    \ is_simple_power(x / 3, n) end\n  return false\nend", "  if n == 1 then\n   \
    \ return x == 1\n  else\n    return x == n\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n   \
    \ return false\n  end\n  local i = 1\n  while i <= n do\n    local r = x\n   \
    \ x = r * x\n    i = i + 1\n  end\n  return x == n\nend", "  -- Base case\n  if\
    \ n == 1 then\n    return x == 1\n  end\n  -- Recursive case\n  if x % n == 0\
    \ then\n    return true\n  end\n  return false\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local i = 1\n  while\
    \ i * i <= n do\n    if x%i == 0 then\n      return false\n    end\n    i = i\
    \ + 1\n  end\n  return true\nend", "  if n == 1 then\n    return true\n  end\n\
    \  if n == 0 then\n    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == n then\n\
    \    return true\n  end\n  if x < n then\n    return false\n  end\n  local i =\
    \ 1\n  while i <= n do\n    if x%i == 0 then\n      return false\n    end\n  \
    \  i = i * 2\n  end\n  return true\nend", "  if x == 1 then\n    return n == 1\n\
    \  else\n    return ((n % 2) == 0 and (x % n) == 0) or\n           ((n % 2) ==\
    \ 1 and (x % n) == 1)\n  end\nend", "  if x == 1 then\n    return true\n  end\n\
    \  if x == 0 then\n    return false\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n == 1 then\n    return x == n\n  end\n  if n % 2 == 0 then\n   \
    \ return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x * x, n /\
    \ 2)\nend", "  if x == n then\n    return true\n  else\n    return false\n  end\n\
    end", "  if n == 0 then return false end\n  if n == 1 then return true end\n \
    \ if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n\
    \    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  if x % n == 0 then\n    return true\n  end\n  return false\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x == n*n\n  end\n\
    end", "  if n == 1 then\n    return true\n  else\n    return (x == n) or (x %\
    \ n == 0)\n  end\nend", "  if n == 0 then return false end\n  if n == 1 then return\
    \ true end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if n == 1 then\n    return true\n  end\n\
    \  if x == 1 then\n    return false\n  end\n  if x ~= n then\n    return false\n\
    \  end\n  return is_simple_power(x / n, n)\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1 then\n\
    \    return false\n  end\n  if n == -2 then\n    return false\n  end\n  if n ==\
    \ -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n  end\n\
    \  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return false\n\
    \  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n    return\
    \ false\n  end\n  if n == -9 then\n    return false\n  end\n  if n == -10 then\n\
    \    return false\n  end\n  if n == -11 then\n    return false\n  end\n  if n\
    \ == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local power = 1\n  while power < n do\n    power = power * x\n  end\n\
    \  return x == power\nend", "  if n == 1 then\n    return true\n  end\n  if n\
    \ == 0 then\n    return false\n  end\n  if n ~= math.floor(n) then\n    return\
    \ false\n  end\n  local r = 1\n  while n > 1 do\n    r = r * x\n    n = n - 1\n\
    \  end\n  return r == x\nend", "  if x == n then\n    return true\n  elseif n\
    \ < 0 then\n    return false\n  elseif n == 0 then\n    return false\n  else\n\
    \    return is_simple_power(x^n, n)\n  end\nend", "  -- Base case\n  if n == 1\
    \ then\n    return x == 1\n  end", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n ==\
    \ 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local r = 1\n  while n ~= 1 do\n    r = r * x\n  \
    \  x = n / x\n    n = x\n  end\n  return r == x\nend", "  if n == 1 then\n   \
    \ return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1\
    \ then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local i = 1\n  while i <= n do\n    if x%i == 0 then\n      return false\n\
    \    end\n    i = i * 2\n  end\n  return true\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return\
    \ false\n  end\n  if n == -1 then\n    return false\n  end\n  if n == -2 then\n\
    \    return false\n  end\n  if n == -3 then\n    return false\n  end\n  if n ==\
    \ -4 then\n    return false\n  end\n  if n == -5 then\n    return false\n  end\n\
    \  if n == -6 then\n    return false\n  end\n  if n == -7 then\n    return false\n\
    \  end\n  if n == -8 then\n    return false\n  end\n  if n == -9 then\n    return\
    \ false\n  end\n  if n == -10 then\n    return false\n  end\n  if n == -11 then\n\
    \    return false\n  end\n  if n == -12 then\n    return false\n  end\n  if n\
    \ == -13 then\n    return false\n  end\n  if n == -14 then\n    return false\n\
    \  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n    return\
    \ false\n  end\n  if n == -17 then\n    return false\n  end\n  if n == -18 then\n\
    \    return false\n  end\n  if n == -19 then\n    return false\n  end\n  if n\
    \ == -20 then\n    return false\n  end\n  if n == -21 then\n    return false\n\
    \  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n    return\
    \ false\n  end\n  if n == -24 then\n    return false\n  end\n  if n == -25 then\n\
    \    return false\n  end\n  if n == -26 then\n    return false\n  end\n  if n\
    \ == -27 then\n    return false\n  end\n  if n == -28 then\n    return false\n\
    \  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n    return\
    \ false\n  end\n  if n == -31 then\n    return false\n  end\n  if n == -32 then\n\
    \    return false\n  end\n  if n == -33 then\n    return false\n  end\n  if n\
    \ == -34 then\n    return false\n  end\n  if n == -35 then\n    return false\n\
    \  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n    return\
    \ false\n  end\n  if n == -38 then\n    return false\n  end\n  if n == -39 then\n\
    \    return false\n  end\n  if n == -40 then\n    return false\n  end\n  if n\
    \ == -41 then\n    return false\n  end\n  if n == -42 then\n    return false\n\
    \  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n    return\
    \ false\n  end\n  if n == -45 then\n", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  -- Base cases\n  if x == 1\
    \ then\n    return n == 1\n  elseif x == 0 then\n    return false\n  elseif n\
    \ == 0 then\n    return false\n  elseif n == 1 then\n    return true\n  end",
  "  -- Base cases\n  if x == 1 then\n    return n == 1\n  elseif x == n then\n  \
    \  return true\n  else\n    -- Recursion\n    return is_simple_power(x % n, n)\n\
    \  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local i = 1\n  while\
    \ i <= n do\n    if x % n == 0 then\n      return false\n    end\n    i = i +\
    \ 1\n  end\n  return true\nend", "  if x == n then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if x == n then\n    return true\n  elseif x\
    \ < n then\n    return false\n  else\n    return is_simple_power(x//n, n)\n  end\n\
    end", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return\
    \ false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n \
    \ end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == 1 then return\
    \ true end\n  if x == 0 then return false end\n  if n == 0 then return false end\n\
    \  if n == 1 then return x == n end\n  if n == -1 then return x == n end\n  if\
    \ n == -2 then return x == n end\n  if n == -3 then return x == n end\n  if n\
    \ == -4 then return x == n end\n  if n == -5 then return x == n end\n  if n ==\
    \ -6 then return x == n end\n  if n == -7 then return x == n end\n  if n == -8\
    \ then return x == n end\n  if n == -9 then return x == n end\n  if n == -10 then\
    \ return x == n end\n  if n == -11 then return x == n end\n  if n == -12 then\
    \ return x == n end\n  if n == -13 then return x == n end\n  if n == -14 then\
    \ return x == n end\n  if n == -15 then return x == n end\n  if n == -16 then\
    \ return x == n end\n  if n == -17 then return x == n end\n  if n == -18 then\
    \ return x == n end\n  if n == -19 then return x == n end\n  if n == -20 then\
    \ return x == n end\n  if n == -21 then return x == n end\n  if n == -22 then\
    \ return x == n end\n  if n == -23 then return x == n end\n  if n == -24 then\
    \ return x == n end\n  if n == -25 then return x == n end\n  if n == -26 then\
    \ return x == n end\n  if n == -27 then return x == n end\n  if n == -28 then\
    \ return x == n end\n  if n == -29 then return x == n end\n  if n == -30 then\
    \ return x == n end\n  if n == -31 then return x == n end\n  if n == -32 then\
    \ return x == n end\n  if n == -33 then return x == n end\n  if n == -34 then\
    \ return x == n end\n  if n == -35 then return x == n end\n  if n == -36 then\
    \ return x == n end\n  if n == -37 then return x == n end\n  if n == -38 then\
    \ return x == n end\n  if n == -39 then return x == n end\n  if n == -40 then\
    \ return x == n end\n  if n == -41 then return x == n end\n  if n == -42 then\
    \ return x == n end\n  if n == -43 then return x == n end\n  if n == -44 then\
    \ return x == n end\n  if n == -45 then return x == n end\n  if n == -46 then\
    \ return x == n end\n  if n == -47 then return x == n end\n  if n == -48 ", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0\
    \ then\n    return false\n  end\n  if n ~= 1 then\n    return is_simple_power(x^n,\
    \ n)\n  end\n  return true\nend", "  if x == n then\n    return true\n  end\n\
    \  if x ~= n then\n    return false\n  end\n  if n == 1 then\n    return true\n\
    \  end\n  if n == 0 then\n    return false\n  end\n  if n < 0 then\n    return\
    \ false\n  end\n  local i = 1\n  while i <= n do\n    if x % n == 0 then\n   \
    \   return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  if n\
    \ == 1 then return true end\n  if n == 0 then return false end\n  if n % 2 ==\
    \ 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x * x,\
    \ n / 2)\nend", "  return (x == 1) or (x == n) or (x == n*n)\nend", "  if x ==\
    \ n then\n    return true\n  else\n    return false\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x == n\n  end\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_4_mean_absolute_deviation
language: lua
prompt: "-- For a given list of input numbers, calculate Mean Absolute Deviation\n\
  -- around the mean of this dataset.\n-- Mean Absolute Deviation is the average absolute\
  \ difference between each\n-- element and a centerpoint (mean in this case):\n--\
  \ MAD = average | x - x_mean |\n-- >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\
  -- 1.0\nlocal function mean_absolute_deviation(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = mean_absolute_deviation\n\
  \    lu.assertEquals(candidate({1.0, 2.0}), 0.5)\n    lu.assertEquals(candidate({1.0,\
  \ 2.0, 3.0, 4.0}), 1.0)\n    lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}),\
  \ 1.2)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum\
    \ + math.abs(value - math.mean(numbers))\n  end\n  return sum / #numbers\nend",
  "  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend", "  local sum =\
    \ 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value - math.fmean(numbers))\n\
    \  end\n  return sum / #numbers\nend", "  local sum = 0\n  for _, value in ipairs(numbers)\
    \ do\n    sum = sum + math.abs(value - math.fmean(numbers))\n  end\n  return sum\
    \ / #numbers\nend", "  local sum = 0\n  for _, value in ipairs(numbers) do\n \
    \   sum = sum + math.abs(value - math.fmean(numbers))\n  end\n  return sum / #numbers\n\
    end", "  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum +\
    \ math.abs(value - math.fmean(numbers))\n  end\n  return sum / #numbers\nend",
  "  local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend", "  local sum =\
    \ 0\n  for _, x in pairs(numbers) do\n    sum = sum + math.abs(x - math.mean(x))\n\
    \  end\n  return sum / #numbers\nend", "  local sum = 0\n  for _, value in ipairs(numbers)\
    \ do\n    sum = sum + math.abs(value - math.mean(numbers))\n  end\n  return sum\
    \ / #numbers\nend", "  local mean = 0\n  local deviation = 0\n  for _, value in\
    \ pairs(numbers) do\n    local diff = value - mean\n    deviation = deviation\
    \ + diff * diff\n    mean = mean + value\n  end\n  return deviation / #numbers\n\
    end", "  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum +\
    \ math.abs(value - math.fmean(numbers))\n  end\n  return sum / #numbers\nend",
  "  local sum = 0\n  local count = 0\n  for _, value in pairs(numbers) do\n    sum\
    \ = sum + math.abs(value - math.fmean(numbers))\n    count = count + 1\n  end\n\
    \  return sum / count\nend", "  local sum = 0\n  for _, value in ipairs(numbers)\
    \ do\n    sum = sum + math.abs(value - math.fmean(numbers))\n  end\n  return sum\
    \ / #numbers\nend", "  local mean = 0\n  for _, value in ipairs(numbers) do\n\
    \    local diff = value - mean\n    mean = mean + diff\n  end\n  return mean /\
    \ #numbers\nend", "  local sum = 0\n  for _, value in pairs(numbers) do\n    sum\
    \ = sum + math.abs(value - math.mean(numbers))\n  end\n  return sum / #numbers\n\
    end", "  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum +\
    \ math.abs(value - math.mean(numbers))\n  end\n  return sum / #numbers\nend",
  "  local sum = 0\n  for _, value in ipairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.fmean(numbers))\n  end\n  return sum / #numbers\nend", "  local sum =\
    \ 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value - math.mean(numbers))\n\
    \  end\n  return sum / #numbers\nend", "  local sum = 0\n  for _, x in pairs(numbers)\
    \ do\n    sum = sum + math.abs(x - math.mean(x))\n  end\n  return sum / #numbers\n\
    end", "  local sum = 0\n  for _, value in pairs(numbers) do\n    sum = sum + math.abs(value\
    \ - math.mean(numbers))\n  end\n  return sum / #numbers\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_84_solve
language: lua
prompt: "-- Given a positive integer N, return the total sum of its digits in binary.\n\
  -- Example\n-- For N = 1000, the sum of digits will be 1 the output should be \"\
  1\".\n-- For N = 150, the sum of digits will be 6 the output should be \"110\".\n\
  -- For N = 147, the sum of digits will be 12 the output should be \"1100\".\n--\
  \ Variables:\n-- @N integer\n-- Constraints: 0 \u2264 N \u2264 10000.\n-- Output:\n\
  -- a string of binary number\nlocal function solve(N)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate(1000), '1')\n    lu.assertEquals(candidate(150),\
  \ '110')\n    lu.assertEquals(candidate(147), '1100')\n    lu.assertEquals(candidate(333),\
  \ '1001')\n    lu.assertEquals(candidate(963), '10010')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  local n = 1\n  while n <= N do\n    sum = sum +\
    \ math.floor(n/10)\n    n = math.floor(n/10)\n  end\n  return sum\nend", "   \
    \ local sum = 0\n    local result = ''\n    local i = 1\n    while i <= N do\n\
    \        sum = sum + math.floor(i/10)\n        i = math.floor(i/10)\n    end\n\
    \    if sum > 0 then\n        result = result .. math.floor(sum)\n    end\n  \
    \  return result\nend", "    local sum = 0\n    local i = 1\n    while i <= N\
    \ do\n        sum = sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n\
    \    return sum\nend", "    local sum = 0\n    local sumString = \"\"\n    while\
    \ N > 0 do\n        sum = sum + math.floor((N % 10)/2)\n        N = math.floor(N/10)\n\
    \    end\n    sumString = sumString .. sum\n    return sumString\nend", "    local\
    \ sum = 0\n    local i = 1\n    while i <= N do\n        sum = sum + math.floor((N\
    \ % i) / 2)\n        i = i + 1\n    end\n    return sum\nend", "    local sum\
    \ = 0\n    local i = 1\n    while i <= N do\n        sum = sum + math.floor(i/10)\n\
    \        i = math.floor(i/10)\n    end\n    return sum\nend", "    local sum =\
    \ 0\n    local i = 0\n    while N > 0 do\n        sum = sum + math.floor((N %\
    \ 10) * math.pow(2, i))\n        N = math.floor(N/10)\n        i = i + 1\n   \
    \ end\n    return sum\nend", "    local sum = 0\n    local i = 1\n    while i\
    \ <= N do\n        sum = sum + math.floor((N % i) / 2)\n        i = i + 1\n  \
    \  end\n    return sum\nend", "    local s = ''\n    local n = 0\n    while N\
    \ > 0 do\n        local t = math.floor(math.log2(N))\n        local digits = math.floor((N\
    \ - math.pow(2, t)) / math.pow(2, t))\n        s = s .. digits:reverse()\n   \
    \     N = math.floor((N - math.pow(2, t)) / math.pow(2, t))\n        n = n + 1\n\
    \    end\n    return s\nend", "  local sum = 0\n  local i = 1\n  while i <= N\
    \ do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    local result = \"\"\n    for i = 1, N do\n\
    \        sum = sum + math.floor((N % 10) * math.pow(2, i))\n    end\n    if sum\
    \ > 0 then\n        result = result .. math.floor(sum / 2)\n    end\n    return\
    \ result\nend", "    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N\
    \ % 10) * math.pow(2, i))\n        N = math.floor(N/10)\n    end\n    return sum\n\
    end", "    local sum = 0\n    local i = 1\n    while i <= N do\n        sum =\
    \ sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n    return sum\n\
    end", "    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N\
    \ % 10) * math.pow(2, i))\n        N = math.floor(N / 10)\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    local n = 0\n    while N > 0 do\n       \
    \ sum = sum + math.floor((N % 10) * math.pow(2, n))\n        N = math.floor(N\
    \ / 10)\n        n = n + 1\n    end\n    return sum\nend", "    local sum = 0\n\
    \    local i = 0\n    while i < N do\n        sum = sum + math.floor((N % 10)\
    \ * (math.pow(2, i)))\n        i = i + 1\n    end\n    return sum\nend", "   \
    \ local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N % 10)\
    \ * math.pow(2, i))\n        N = math.floor(N/10)\n    end\n    return sum\nend",
  "    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N % 10)\
    \ * (math.pow(2, i)))\n        N = math.floor(N / 10)\n    end\n    return sum\n\
    end", "    local sum = 0\n    local result = ''\n    for i = 1, N do\n       \
    \ sum = sum + math.floor((N % 10) * math.pow(2, i))\n    end\n    if sum > 0 then\n\
    \        result = result .. math.floor(sum / 2)\n    end\n    return result\n\
    end", "    local sum = 0\n    local n = 1\n    while n > 0 do\n        sum = sum\
    \ + math.floor((N % 10) * math.pow(2, n))\n        n = n + 1\n    end\n    return\
    \ sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

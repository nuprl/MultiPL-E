name: HumanEval_61_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"(\" and \")\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing(\"(\"\
  )\n-- False\n-- >>> correct_bracketing(\"()\")\n-- True\n-- >>> correct_bracketing(\"\
  (()())\")\n-- True\n-- >>> correct_bracketing(\")(()\")\n-- False\nlocal function\
  \ correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('()'), true)\n    lu.assertEquals(candidate('(()())'),\
  \ true)\n    lu.assertEquals(candidate('()()(()())()'), true)\n    lu.assertEquals(candidate('()()((()()())())(()()(()))'),\
  \ true)\n    lu.assertEquals(candidate('((()())))'), false)\n    lu.assertEquals(candidate(')(()'),\
  \ false)\n    lu.assertEquals(candidate('('), false)\n    lu.assertEquals(candidate('(((('),\
  \ false)\n    lu.assertEquals(candidate(')'), false)\n    lu.assertEquals(candidate('(()'),\
  \ false)\n    lu.assertEquals(candidate('()()(()())())(()'), false)\n    lu.assertEquals(candidate('()()(()())()))()'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend",
  "  local open_brackets = brackets:gsub(\"%[(%)%]\", \"\")\n  local close_brackets\
    \ = brackets:gsub(\"%[)]%]\", \"\")\n  return open_brackets:len() == close_brackets:len()\
    \ and open_brackets:gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"\
    %[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"\
    %[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\",\
    \ \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\",\
    \ \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\",\
    \ \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\",\
    \ \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\",\
    \ \"()\"):gsub(\"%[(%)%]\", \"()\"):gsub(\"%[)]%]\", \"()\"):gsub(\"%[(%)%]\"\
    , \"()\"):gsub(\"%", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local closed_count = brackets:sub(2):len()\n\
    \  return opening_count == closed_count and opening:sub(1,opening_count) == closing:sub(1,closed_count)\n\
    end", "  local open_brackets = brackets:gsub(\"[()%]\", \"\")\n  local close_brackets\
    \ = brackets:gsub(\"[%)]\", \"\")\n  return open_brackets:len() == close_brackets:len()\
    \ and\n         open_brackets:gsub(\"[%)]\", \"()\"):len() == close_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"^%[(%[%{%[\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"%]%]%}%}]\", \"\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  brackets = brackets:gsub(\"%[(%)]\", \"\
    %%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\"\
    , \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\"\
    , \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\"\
    , \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\"\
    , \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\"\
    , \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"\
    %[(%)]\", \"%%%1\")\n  brackets = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  brackets\
    \ = brackets:gsub(\"%[(%)]\", \"%%%1\")\n  bracket", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening and closing and opening:sub(1,1)\
    \ == closing:sub(1,1)\nend", "  local opening = brackets:sub(1,1)\n  local closing\
    \ = brackets:sub(2,2)\n  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\n\
    end", '  local open_brackets = brackets:gsub
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening:find(closing) == nil\nend", "  local opening = brackets:sub(1,1)\n \
    \ local closing = brackets:sub(2,2)\n  return opening and closing and opening\
    \ == closing\nend", "  local opening_brackets = brackets:gsub(\"^%[(%)].*$\",\
    \ \"%1\"):gsub(\"%[(%)]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ^%[)](%).*$\", \"%1\"):gsub(\"%[)]\", \"\")\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"^%[(%[(%[%[\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"%]%)]%)]\", \"\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  brackets = brackets:gsub(\"[()]+\", \"\"\
    )\n  local opening_brackets = brackets:gsub(\"[()]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[)]\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n         opening_brackets:sub(1, 1) == closing_brackets:sub(1, 1)\nend",
  "  local opening_brackets = brackets:gsub(\"%[(%)%]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"%[%[(%)]%]\", \"\")\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend",
  "  local opening_brackets = brackets:gsub(\"%[(%)%]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"%[)]%]\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"^%[(%[(%[%[\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"%]%)]%)]\", \"\")\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:gsub(\"%[(%[\", \"\"\
    )\nend", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend",
  "  local opening_brackets = brackets:gsub(\"^%[(%[(%[%[\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"%]%]%]%]\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

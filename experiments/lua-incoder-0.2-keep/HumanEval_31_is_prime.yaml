name: HumanEval_31_is_prime
language: lua
prompt: "-- Return true if a given number is prime, and false otherwise.\n-- >>> is_prime(6)\n\
  -- False\n-- >>> is_prime(101)\n-- True\n-- >>> is_prime(11)\n-- True\n-- >>> is_prime(13441)\n\
  -- True\n-- >>> is_prime(61)\n-- True\n-- >>> is_prime(4)\n-- False\n-- >>> is_prime(1)\n\
  -- False\nlocal function is_prime(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_prime\n\
  \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(101), true)\n\
  \    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(13441),\
  \ true)\n    lu.assertEquals(candidate(61), true)\n    lu.assertEquals(candidate(4),\
  \ false)\n    lu.assertEquals(candidate(1), false)\n    lu.assertEquals(candidate(5),\
  \ true)\n    lu.assertEquals(candidate(11), true)\n    lu.assertEquals(candidate(17),\
  \ true)\n    lu.assertEquals(candidate(85), false)\n    lu.assertEquals(candidate(77),\
  \ false)\n    lu.assertEquals(candidate(255379), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return\
    \ true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n\
    \  while i * i <= n do\n    if n % i == 0 then\n      return false\n    end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then return false end\n\
    \  if n == 2 then return true end\n  if n == 1 then return false end\n  if n %\
    \ 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n\
    \ % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if\
    \ n == 1 then return false end\n  if n == 0 then return false end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if n\
    \ == 1 then return false end\n  if n == 0 then return false end\n  if n % 2 ==\
    \ 0 then return false end\n  if n % 3 == 0 then return false end\n  if n % 5 ==\
    \ 0 then return false end\n  if n % 7 == 0 then return false end\n  if n == 1\
    \ then return false end\n  if n == 0 then return false end\n  if n % 2 == 0 then\
    \ return false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then\
    \ return false end\n  if n % 7 == 0 then return false end\n  if n == 1 then return\
    \ false end\n  if n == 0 then return false end\n  if n % 2 == 0 then return false\
    \ end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false\
    \ end\n  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n\
    \  if n == 0 then return false end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if n\
    \ == 0 then return false end\n  if n % 2 == 0 then return false end\n  if n %\
    \ 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if n\
    \ % 7 == 0 then return false end\n  if n == 1 then return false end\n  if n ==\
    \ 0 then return false end\n  if n % 2 == 0 then return false end\n  if n % 3 ==\
    \ 0 then return false end\n  if n % 5 == 0 then return false end\n  if n % 7 ==\
    \ 0 then return false end\n  if n == 1 then return false end\n  if n == 0 then\
    \ return false end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then\
    \ return false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then\
    \ return false end\n  if n == 1 then return false end\n  if n == 0 then return\
    \ false end\n  if n % ", "  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  for i = 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997\ndo\n  if n % i == 0 then\
    \ return false end\nend\nreturn true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even numbers for primeness\n  local i = 3\n\
    \  while i <= math.sqrt(n) do\n    if n % i == 0 then\n      return false\n  \
    \  end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n\
    \  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 217 == 0 then return false ", "  -- The prime test is based\
    \ on the sieve of Eratosthenes. \n  -- The sieve consists of two arrays, one containing\
    \ the odd numbers, \n  -- one containing the even numbers. \n  -- The even numbers\
    \ are the multiples of 2 less than the odd numbers. \n  -- The odd numbers are\
    \ the multiples of 2 greater than the odd numbers. \n  -- The sieve is then generated\
    \ by starting with the odd numbers and \n  -- multiplying them by 2 until they\
    \ are greater than the previous \n  -- odd number. \n  -- The odd numbers are\
    \ then added to the even numbers to get the \n  -- next odd number. \n  -- The\
    \ process continues until there are no more odd numbers. \n  -- The final sieve\
    \ is the concatenation of the odd numbers and the \n  -- even numbers. \n  --\
    \ The sieve is also called the Sieve of Atkin. \n  -- The Sieve of Atkin is described\
    \ in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Atkin\n  -- The\
    \ Sieve of Atkin is also known as the Sieve of Eratosthenes \n  -- The Sieve of\
    \ Eratosthenes is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n\
    \  -- The Sieve of Eratosthenes is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_of_Sundaram\n\
    \  -- The Sieve of Sundaram is described in detail here: \n  -- http://en.wikipedia.org/wiki/Sieve_",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check odd and even\n\
    \  if n % 3 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if\
    \ n % 5 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n %\
    \ 7 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 11 ==\
    \ 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 13 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even\n  if n % 17 == 0 then\n   \
    \ return false\n  end\n  -- Check odd and even\n  if n % 19 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even\n  if n % 23 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even\n  if n % 29 == 0 then\n    return false\n  end\n\
    \  -- Check odd and even\n  if n % 31 == 0 then\n    return false\n  end\n  --\
    \ Check odd and even\n  if n % 37 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even\n  if n % 41 == 0 then\n    return false\n  end\n  -- Check odd\
    \ and even\n  if n % 43 == 0 then\n    return false\n  end\n  -- Check odd and\
    \ even\n  if n % 47 == 0 then\n    return false\n  end\n  -- Check odd and even\n\
    \  if n % 53 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if\
    \ n % 59 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n %\
    \ 61 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 67\
    \ == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 71 ==\
    \ 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 73 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even\n  if n % 79 == 0 then\n   \
    \ return false\n  end\n  -- Check odd and even\n  if n % 83 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even\n  if n % 89 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even\n  if n % 97 == 0 then\n    return false\n  end\n\
    \  -- Check odd and even\n  if n % 101 == 0 then\n    return false\n  end\n  --\
    \ Check odd and even\n", "  -- The prime number theorem states that a prime number\
    \ greater than 1 has only two divisors: 1 and itself.\n  -- The first prime number\
    \ is named 2. The number 1 is named 1.\n  -- The number 2 is named 3. The number\
    \ 3 is named 5 and so on...\n  -- The number n can be written as the sum of consecutive\
    \ powers of prime numbers.\n  -- The first prime number is named 2. The number\
    \ 1 is named 1.\n  -- The number 2 is named 3. The number 3 is named 5 and so\
    \ on...\n  -- The number n can be written as the sum of consecutive powers of\
    \ prime numbers.\n  -- The first prime number is named 2. The number 1 is named\
    \ 1.\n  -- The number 2 is named 3. The number 3 is named 5 and so on...\n  --\
    \ The number n can be written as the sum of consecutive powers of prime numbers.\n\
    \  -- The first prime number is named 2. The number 1 is named 1.\n  -- The number\
    \ 2 is named 3. The number 3 is named 5 and so on...\n  -- The number n can be\
    \ written as the sum of consecutive powers of prime numbers.\n  -- The first prime\
    \ number is named 2. The number 1 is named 1.\n  -- The number 2 is named 3. The\
    \ number 3 is named 5 and so on...\n  -- The number n can be written as the sum\
    \ of consecutive powers of prime numbers.\n  -- The first prime number is named\
    \ 2. The number 1 is named 1.\n  -- The number 2 is named 3. The number 3 is named\
    \ 5 and so on...\n  -- The number n can be written as the sum of consecutive powers\
    \ of prime numbers.\n  -- The first prime number is named 2. The number 1 is named\
    \ 1.\n  -- The number 2 is named 3. The number 3 is named 5 and so on...\n  --\
    \ The number n can be written as the sum of consecutive powers of prime numbers.\n\
    \  -- The first prime number is named 2. The number 1 is named 1.\n  -- The number\
    \ 2 is named 3. The number 3 is named 5 and so on...\n  -- The number n can be\
    \ written as the sum of consecutive powers of prime numbers.\n  -- The first prime\
    \ number is named 2. The number 1 is named 1.\n  -- The number 2 is named 3. The\
    \ number 3 is named 5 and so on...\n  -- The number n can be written as the sum\
    \ of consecutive powers of prime numbers.\n  -- The first prime number is named\
    \ 2. The number 1 is named 1.\n  -- The number 2 is named 3. The number 3 is named\
    \ 5 and so on...\n  -- The number n can be written as the sum of consecutive powers\
    \ of prime numbers.", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even numbers\n  if n % 3 == 0 then\n    return false\n  end\n  if n\
    \ % 5 == 0 then\n    return false\n  end\n  -- Check divisibility by 2, 3, and\
    \ 5\n  if n % 6 == 0 then\n    return false\n  end\n  if n % 7 == 0 then\n   \
    \ return false\n  end\n  -- Check divisibility by 2 and 3\n  if n % 12 == 0 then\n\
    \    return false\n  end\n  if n % 13 == 0 then\n    return false\n  end\n  --\
    \ Check divisibility by 5\n  if n % 17 == 0 then\n    return false\n  end\n  return\
    \ true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n  \
    \  return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even numbers since they are special cases.\n  if n % 3 == 0 then\n \
    \   return false\n  end\n  if n % 5 == 0 then\n    return false\n  end\n  -- Check\
    \ all the numbers from 3 to sqrt(n).\n  for i = 4, math.floor(math.sqrt(n)) +\
    \ 1, 2 do\n    if n % i == 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false\
    \ end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false\
    \ end\n  if n % 11 == 0 then return false end\n  if n % 13 == 0 then return false\
    \ end\n  if n % 17 == 0 then return false end\n  if n % 19 == 0 then return false\
    \ end\n  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false\
    \ end\n  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false\
    \ end\n  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false\
    \ end\n  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false\
    \ end\n  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false\
    \ end\n  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false\
    \ end\n  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false\
    \ end\n  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false\
    \ end\n  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false\
    \ end\n  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return\
    \ false end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 1253 == 0 then\
    \ return false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0\
    \ then return false end\n  if n % 137 == 0 then return false end\n  if n % 141\
    \ == 0 then return false end\n  if n % 147 == 0 then return false end\n  if n\
    \ % 151 == 0 then return false end\n  if n % 157 == 0 then return false end\n\
    \  if n % 161 == 0 then return false end\n  if n % 165 == 0 then return false\
    \ end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 193 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return ", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even numbers\n  if n % 2 == 1 then\n    return\
    \ not is_prime(n - 1)\n  end\n  -- Check odd and even numbers, starting from 3\n\
    \  for i = 2, n do\n    if n % i == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  -- Base case: n is 0 or 1.\n  if n == 0 or n == 1 then\n\
    \    return false\n  end", "  if n < 2 then\n    return false\n  end\n  if n ==\
    \ 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n\
    \  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\
    \ return false end\n  if n == 1 then return true end\n  if n % 2 == 0 then return\
    \ false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return\
    \ false end\n  if n % 7 == 0 then return false end\n  if n % 11 == 0 then return\
    \ false end\n  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return\
    \ false end\n  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return\
    \ false end\n  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return\
    \ false end\n  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return\
    \ false end\n  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return\
    \ false end\n  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return\
    \ false end\n  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return\
    \ false end\n  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return\
    \ false end\n  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return\
    \ false end\n  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return\
    \ false end\n  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return\
    \ false end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 189 == 0 then return false end\n  if n % 193 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false ", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  -- Check odd-even primality of n\n  local function\
    \ is_odd_prime(n)\n    if n % 2 == 0 then\n      return false\n    end\n    local\
    \ i = 3\n    while i * i <= n do\n      if n % i == 0 then\n        return false\n\
    \      end\n      i = i + 2\n    end\n    return true\n  end\n  if is_odd_prime(n)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n-1\n  local\
    \ function is_odd_prime_prev(n)\n    if n % 2 == 0 then\n      return false\n\
    \    end\n    local i = 3\n    while i * i <= n do\n      if n % i == 0 then\n\
    \        return false\n      end\n      i = i + 2\n    end\n    return true\n\
    \  end\n  if is_odd_prime_prev(n) then\n    return false\n  end\n  -- Check odd-even\
    \ primality of n+1\n  local function is_odd_prime_next(n)\n    if n % 2 == 0 then\n\
    \      return false\n    end\n    local i = 3\n    while i * i <= n do\n     \
    \ if n % i == 0 then\n        return false\n      end\n      i = i + 2\n    end\n\
    \    return true\n  end\n  if is_odd_prime_next(n) then\n    return false\n  end\n\
    \  -- Check odd-even primality of n+2\n  local function is_odd_prime_next(n)\n\
    \    if n % 2 == 0 then\n      return false\n    end\n    local i = 3\n    while\
    \ i * i <= n do\n      if n % i == 0 then\n        return false\n      end\n \
    \     i = i + 2\n    end\n    return true\n  end\n  if is_odd_prime_next(n) then\n\
    \    return false\n  end\n  -- Check odd-even primality of n+3\n  local function\
    \ is_odd_prime_next(n)\n    if n % 2 == 0 then\n      return false\n    end\n\
    \    local i = 3\n    while i * i <= n do\n      if n % i == 0 then\n        return\
    \ false\n      end\n      i = i + 2\n    end\n    return true\n  end\n  if is_odd_prime_next(n)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+4\n  local\
    \ function is_odd_prime_next(n)\n    if n % 2 == 0 then\n      return false\n\
    \    end\n    local i = 3\n    while i * i <= n do\n      if n % i == 0 then\n\
    \        return ", "  if n < 2 then return false end\n  if n == 2 then return\
    \ true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return\
    \ false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return\
    \ false end\n  if n == 1 then return false end\n  if n == 0 then return false\
    \ end\n  if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or\
    \ n == 0 then\n    return false\n  end\n  local i = 3\n  while i <= math.sqrt(n)\
    \ do\n    if n % i == 0 then return false end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n  \
    \  return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check\
    \ odd-ness of candidate.\n  for i = 3, math.floor(n/2), 2 do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n  end\n  return true\nend", "  -- Prime\
    \ numbers are greater than 1 and divisible by 3.\n  if n < 1 then return false\
    \ end\n  if n % 3 == 0 then return false end\n  -- Check all odd numbers up to\
    \ sqrt(n).\n  for i = 2, math.sqrt(n) + 1 do\n    if n % i == 0 then return false\
    \ end\n  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <= n do\n \
    \   if n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false\
    \ end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false\
    \ end\n  if n == 1 then return false end\n  if n == 0 then return true end\n \
    \ if n == 2 then return true end\n  if n == 3 then return true end\n  if n ==\
    \ 4 then return true end\n  if n == 5 then return true end\n  if n == 6 then return\
    \ true end\n  if n == 7 then return true end\n  if n == 8 then return true end\n\
    \  if n == 9 then return true end\n  if n % 11 == 0 then return false end\n  if\
    \ n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 123 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 171 == 0 then return false ", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even numbers since they are special\
    \ cases.\n  if n % 3 == 0 then\n    return false\n  end\n  if n % 5 == 0 then\n\
    \    return false\n  end\n  -- Check all the numbers from 3 to n / 2 since they\
    \ are special cases.\n  for i = 4, n / 2, 2 do\n    if n % i == 0 then\n     \
    \ return false\n    end\n  end\n  return true\nend", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if\
    \ n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n == 3 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if\
    \ n == 0 then return false end\n  if n == 2 then return true end\n  if n == 3\
    \ then return true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0\
    \ then return false end\n  if n % 5 == 0 then return false end\n  if n % 7 ==\
    \ 0 then return false end\n  if n == 1 then return false end\n  if n == 0 then\
    \ return false end\n  if n == 2 then return true end\n  if n == 3 then return\
    \ true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return\
    \ false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return\
    \ false end\n  if n == 1 then return false end\n  if n == 0 then return false\
    \ end\n  if n == 2 then return true end\n  if n == 3 then return true end\n  if\
    \ n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n  if\
    \ n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if\
    \ n == 1 then return false end\n  if n == 0 then return false end\n  if n == 2\
    \ then return true end\n  if n == 3 then return true end\n  if n % 2 == 0 then\
    \ return false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then\
    \ return false end\n  if n % 7 == 0 then return false end\n  if n == 1 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 2 then return true end\n\
    \  if n == 3 then return true end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if n\
    \ == 0 then return false end\n  if n == 2 then return true end\n  if n == 3 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then\
    \ return false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then\
    \ return false end\n  if n == 1 then return false end\n  if n == 0 then return\
    \ false end\n  if n == 2 then return true end\n  if n == 3 then return true ",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  local\
    \ i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd-even primality of n\n  local function is_odd_prime(n)\n\
    \    if n % 2 == 0 then\n      return false\n    end\n    local i = 3\n    while\
    \ i * i <= n do\n      if n % i == 0 then\n        return false\n      end\n \
    \     i = i + 2\n    end\n    return true\n  end\n  if is_odd_prime(n) then\n\
    \    return false\n  end\n  -- Check odd-even primality of n+1\n  if is_odd_prime(n\
    \ + 1) then\n    return true\n  end\n  -- Check odd-even primality of n-1\n  if\
    \ is_odd_prime(n - 1) then\n    return false\n  end\n  -- Check odd-even primality\
    \ of n+2\n  if is_odd_prime(n + 2) then\n    return true\n  end\n  -- Check odd-even\
    \ primality of n-2\n  if is_odd_prime(n - 2) then\n    return false\n  end\n \
    \ -- Check odd-even primality of n+3\n  if is_odd_prime(n + 3) then\n    return\
    \ true\n  end\n  -- Check odd-even primality of n-3\n  if is_odd_prime(n - 3)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+4\n  if is_odd_prime(n\
    \ + 4) then\n    return true\n  end\n  -- Check odd-even primality of n-4\n  if\
    \ is_odd_prime(n - 4) then\n    return false\n  end\n  -- Check odd-even primality\
    \ of n+5\n  if is_odd_prime(n + 5) then\n    return true\n  end\n  -- Check odd-even\
    \ primality of n-5\n  if is_odd_prime(n - 5) then\n    return false\n  end\n \
    \ -- Check odd-even primality of n+6\n  if is_odd_prime(n + 6) then\n    return\
    \ true\n  end\n  -- Check odd-even primality of n-6\n  if is_odd_prime(n - 6)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+7\n  if is_odd_prime(n\
    \ + 7) then\n    return true\n  end\n  -- Check odd-even primality of n-7\n  if\
    \ is_odd_prime(n - 7) then\n    return false\n  end\n  -- ", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  for i = 3, math.floor(n/2), 2 do\n   \
    \ if n % i == 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  -- The prime number theorem states that every positive integer greater than 1\
    \ that has no positive divisors other than 1 and itself is prime can be factored\
    \ into a product of primes less than or equal to n. This theorem can be proved\
    \ mathematically. For example, 6 is a prime since it has no positive divisors\
    \ other than 1 and itself. 7 is a prime since it can be factored into 1, 2, and\
    \ 3, which also have no positive divisors other than 1 and itself. 8 is not prime\
    \ since it can be factored into 1, 2, and 4, which also have no positive divisors\
    \ other than 1 and itself. 9 is not prime since it can be factored into 1, 2,\
    \ 3, 5, and 7, which also have no positive divisors other than 1 and itself.\n\
    \  -- Source: http://en.wikipedia.org/wiki/Prime_number\n  -- Source: http://primes.utm.edu/lists/small/1000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000.txt\n  -- Source: http://primes.utm.edu/lists/small/1000001.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000.txt\n  -- Source: http://primes.utm.edu/lists/small/1000000000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/1000000000000.txt\n  -- Source:\
    \ http://primes.utm.edu/lists/small/1000000000000000.txt\n  -- Source: http://primes.utm.edu/lists/small/1000000000000000000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/100000000000000000000.txt\n  --\
    \ Source: http://primes.utm.edu/lists/small/100000000000000000000000.txt\n  --\
    \ Source: http://primes.utm.edu/lists/small/10000000000000000000000000000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/1000000000000000000000000000000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/1000000000000000000000000000000000.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000001.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000002.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000003.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000004.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000005.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/10000000000000000000000000000000006.txt\n\
    \  -- Source: http://primes.utm.edu/lists/small/100", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even numbers since they are the only\
    \ primes less than n.\n  for i = 3, n, 2 do\n    if n % i == 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Test if n is prime.\n  for i = 3, math.floor(n/2), 2 do\n\
    \    if n % i == 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  local i\
    \ = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local m = math.floor(n/2)\n  for i = 2, m do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n  end\n  return true\nend", "  if n <=\
    \ 1 then return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then\
    \ return false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then\
    \ return false end\n  if n % 7 == 0 then return false end\n  if n == 1 then return\
    \ false end\n  if n == 0 then return false end\n  if n == -1 then return false\
    \ end\n  if n == -2 then return false end\n  if n == -3 then return false end\n\
    \  if n == -4 then return false end\n  if n == -5 then return false end\n  if\
    \ n == -6 then return false end\n  if n == -7 then return false end\n  if n ==\
    \ -8 then return false end\n  if n == -9 then return false end\n  if n == -10\
    \ then return false end\n  if n == -11 then return false end\n  if n == -12 then\
    \ return false end\n  if n == -13 then return false end\n  if n == -14 then return\
    \ false end\n  if n == -15 then return false end\n  if n == -16 then return false\
    \ end\n  if n == -17 then return false end\n  if n == -18 then return false end\n\
    \  if n == -19 then return false end\n  if n == -20 then return false end\n  if\
    \ n == -21 then return false end\n  if n == -22 then return false end\n  if n\
    \ == -23 then return false end\n  if n == -24 then return false end\n  if n ==\
    \ -25 then return false end\n  if n == -26 then return false end\n  if n == -27\
    \ then return false end\n  if n == -28 then return false end\n  if n == -29 then\
    \ return false end\n  if n == -30 then return false end\n  if n == -31 then return\
    \ false end\n  if n == -32 then return false end\n  if n == -33 then return false\
    \ end\n  if n == -34 then return false end\n  if n == -35 then return false end\n\
    \  if n == -36 then return false end\n  if n == -37 then return false end\n  if\
    \ n == -38 then return false end\n  if n == -39 then return false end\n  if n\
    \ == -40 then return false end\n  if n == -41 then return false end\n  if n ==\
    \ -42 then return false end\n  if n == -43 then return false end\n  if n == -44\
    \ then return false end\n  if n == -45 then return false end\n  if n == -46 then\
    \ return false end\n  if n == -47 then return false end\n  if n == -48 then return\
    \ false end\n  if n == -49", "  if n < 2 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  for i = 3, math.floor(n/2),\
    \ 2 do\n    if n % i == 0 then return false end\n  end\n  return true\nend", " \
    \ if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if n\
    \ == 1 then return false end\n  if n == 0 then return false end\n  if n == 2 then\
    \ return true end\n  if n == 3 then return true end\n  if n == 4 then return true\
    \ end\n  if n == 5 then return true end\n  if n == 6 then return true end\n  if\
    \ n == 7 then return true end\n  if n == 8 then return true end\n  if n == 9 then\
    \ return true end\n  if n == 10 then return true end\n  if n == 11 then return\
    \ true end\n  if n == 12 then return true end\n  if n == 13 then return true end\n\
    \  if n == 14 then return true end\n  if n == 15 then return true end\n  if n\
    \ == 16 then return true end\n  if n == 17 then return true end\n  if n == 18\
    \ then return true end\n  if n == 19 then return true end\n  if n == 20 then return\
    \ true end\n  if n == 21 then return true end\n  if n == 22 then return true end\n\
    \  if n == 23 then return true end\n  if n == 24 then return true end\n  if n\
    \ == 25 then return true end\n  if n == 26 then return true end\n  if n == 27\
    \ then return true end\n  if n == 28 then return true end\n  if n == 29 then return\
    \ true end\n  if n == 30 then return true end\n  if n == 31 then return true end\n\
    \  if n == 32 then return true end\n  if n == 33 then return true end\n  if n\
    \ == 34 then return true end\n  if n == 35 then return true end\n  if n == 36\
    \ then return true end\n  if n == 37 then return true end\n  if n == 38 then return\
    \ true end\n  if n == 39 then return true end\n  if n == 40 then return true end\n\
    \  if n == 41 then return true end\n  if n == 42 then return true end\n  if n\
    \ == 43 then return true end\n  if n == 44 then return true end\n  if n == 45\
    \ then return true end\n  if n == 46 then return true end\n  if n == 47 then return\
    \ true end\n  if n == 48 then return true end\n  if n == 49 then return true end\n\
    \  if n == 50 then return true end\n  if n == 51 then return true end\n  if n\
    \ == 52 then return true end\n  if n == 53 then return true end\n  if n == 54\
    \ then return true end\n", "  if n < 2 then\n    return false\n  end\n  if n ==\
    \ 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n\
    \  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return false\n\
    \    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false\
    \ end\n    i = i + 2\n  end\n  return true\nend", "  -- Primality test. Returns\
    \ true if n is prime and false otherwise.\n  -- >>> is_prime(6)\n  -- False\n\
    \  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>>\
    \ is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n\
    \  -- False\n  -- >>> is_prime(1)\n  -- False\n  if n < 2 then\n    return false\n\
    \  end\n  -- Test for primeness up to sqrt(n).\n  -- >>> is_prime(6)\n  -- False\n\
    \  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>>\
    \ is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n\
    \  -- False\n  -- >>> is_prime(1)\n  -- False\n  local function is_prime_up(n)\n\
    \    -- Test for primeness up to sqrt(n).\n    -- >>> is_prime_up(6)\n    -- False\n\
    \    -- >>> is_prime_up(101)\n    -- True\n    -- >>> is_prime_up(11)\n    --\
    \ True\n    -- >>> is_prime_up(13441)\n    -- True\n    -- >>> is_prime_up(61)\n\
    \    -- True\n    -- >>> is_prime_up(4)\n    -- False\n    -- >>> is_prime_up(1)\n\
    \    -- False\n    if n < 2 then\n      return false\n    end\n    -- Test for\
    \ primeness up to sqrt(n).\n    -- >>> is_prime_up(6)\n    -- False\n    -- >>>\
    \ is_prime_up(101)\n    -- True\n    -- >>> is_prime_up(11)\n    -- True\n   \
    \ -- >>> is_prime_up(13441)\n    -- True\n    -- >>> is_prime_up(61)\n    -- True\n\
    \    -- >>> is_prime_up(4)\n    -- False\n    -- >>> is_prime_up(1)\n    -- False\n\
    \    local function is_prime_up_up(n)\n      -- Test for primeness up to sqrt(n).\n\
    \      -- >>> is_prime_up_up(6)\n      -- False\n      -- >>> is_prime_up_up(101)\n\
    \      -- True\n      -- >>> is_prime_up_up(11)\n      -- True\n      -- >>> is_prime_up_up(13441)\n\
    \      -- True\n      -- >>> is_prime_up_up(61)\n      -- True", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible by 3\n\
    \  if n % 3 == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible\
    \ by 5\n  if n % 5 == 0 then\n    return false\n  end\n  -- If n is evenly divisible\
    \ by both 3 and 5, then\n  -- it is prime.\n  return true\nend", "  if n < 2 then\
    \ return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return\
    \ false end\n  -- Check odd and even.\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  -- Check odd and even.\n  if n % 7 ==\
    \ 0 then return false end\n  -- Check odd and even.\n  if n % 11 == 0 then return\
    \ false end\n  -- Check odd and even.\n  if n % 13 == 0 then return false end\n\
    \  -- Check odd and even.\n  if n % 17 == 0 then return false end\n  -- Check\
    \ odd and even.\n  if n % 19 == 0 then return false end\n  -- Check odd and even.\n\
    \  if n % 23 == 0 then return false end\n  -- Check odd and even.\n  if n % 29\
    \ == 0 then return false end\n  -- Check odd and even.\n  if n % 31 == 0 then\
    \ return false end\n  -- Check odd and even.\n  if n % 37 == 0 then return false\
    \ end\n  -- Check odd and even.\n  if n % 41 == 0 then return false end\n  --\
    \ Check odd and even.\n  if n % 43 == 0 then return false end\n  -- Check odd\
    \ and even.\n  if n % 47 == 0 then return false end\n  -- Check odd and even.\n\
    \  if n % 53 == 0 then return false end\n  -- Check odd and even.\n  if n % 59\
    \ == 0 then return false end\n  -- Check odd and even.\n  if n % 61 == 0 then\
    \ return false end\n  -- Check odd and even.\n  if n % 67 == 0 then return false\
    \ end\n  -- Check odd and even.\n  if n % 71 == 0 then return false end\n  --\
    \ Check odd and even.\n  if n % 73 == 0 then return false end\n  -- Check odd\
    \ and even.\n  if n % 79 == 0 then return false end\n  -- Check odd and even.\n\
    \  if n % 83 == 0 then return false end\n  -- Check odd and even.\n  if n % 89\
    \ == 0 then return false end\n  -- Check odd and even.\n  if n % 97 == 0 then\
    \ return false end\n  -- Check odd and even.\n  if n % 101 == 0 then return false\
    \ end\n  -- Check odd and even.\n  if n % 103 == 0 then return false end\n  --\
    \ Check odd and even.\n  if n % 107 == 0 then return false end\n  -- Check odd\
    \ and even.\n  if n % ", "  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- ", "  if n < 2 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  -- If we get here, n is prime.\n  -- Now we know that n is odd.\n  -- If n\
    \ is even, then n / 2 is odd.\n  -- If n is odd, then n / 2 is even.\n  -- We\
    \ know that n / 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be\
    \ even.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 must be odd.\n  -- Therefore, n must be odd and n / 2 must be odd.\n  -- Therefore,\
    \ n must be odd and n / 2 must be odd.\n  -- Therefore, n must be odd and n /\
    \ 2 ", "  if n <= 1 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  local i = 3\n  while i <= math.sqrt(n)\
    \ do\n    if n % i == 0 then return false end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false\
    \ end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false\
    \ end\n  for i = 5, 7, 9 do\n    if n % i == 0 then return false end\n  end\n\
    \  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local\
    \ i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n      return false\n\
    \    end\n    i = i + 2\n  end\n  return true\nend", "  -- http://primes.utm.edu/lists/small/millions/\n\
    \  -- http://primes.utm.edu/lists/small/millions/test.html\n  -- http://primes.utm.edu/lists/small/millions/large/\n\
    \  -- http://primes.utm.edu/lists/small/millions/large/test.html\n  -- http://primes.utm.edu/lists/small/millions/medium/\n\
    \  -- http://primes.utm.edu/lists/small/millions/medium/test.html\n  -- http://primes.utm.edu/lists/small/millions/small/\n\
    \  -- http://primes.utm.edu/lists/small/millions/small/test.html\n  -- http://primes.utm.edu/lists/small/millions/medium-large/\n\
    \  -- http://primes.utm.edu/lists/small/millions/medium-large/test.html\n  --\
    \ http://primes.utm.edu/lists/small/millions/large-medium/\n  -- http://primes.utm.edu/lists/small/millions/large-medium/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/small-large/\n  -- http://primes.utm.edu/lists/small/millions/small-large/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/medium-small/\n  -- http://primes.utm.edu/lists/small/millions/medium-small/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/large-small/\n  -- http://primes.utm.edu/lists/small/millions/large-small/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/small-medium/\n  -- http://primes.utm.edu/lists/small/millions/small-medium/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/medium-large/\n  -- http://primes.utm.edu/lists/small/millions/medium-large/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/large-medium/\n  -- http://primes.utm.edu/lists/small/millions/large-medium/test.html\n\
    \  -- http://primes.utm.edu/lists/small/millions/small-large-medium/\n  -- http://primes.utm.edu/lists/small/milli",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  for i=3,math.floor(n/2),2 do\n    if n % i ==\
    \ 0 then return false end\n  end\n  return true\nend", "  if n < 2 then return\
    \ false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false\
    \ end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false\
    \ end\n  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n\
    \  if n == 0 then return false end\n  if n % 2 == 0 and n % 3 == 0 and n % 5 ==\
    \ 0 and n % 7 == 0 then\n    return true\n  end\n  return false\nend", "  if n\
    \ < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if\
    \ n % 3 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n %\
    \ 5 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 7 ==\
    \ 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 11 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even\n  if n % 13 == 0 then\n   \
    \ return false\n  end\n  -- Check odd and even\n  if n % 17 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even\n  if n % 19 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even\n  if n % 23 == 0 then\n    return false\n  end\n\
    \  -- Check odd and even\n  if n % 29 == 0 then\n    return false\n  end\n  --\
    \ Check odd and even\n  if n % 31 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even\n  if n % 37 == 0 then\n    return false\n  end\n  -- Check odd\
    \ and even\n  if n % 41 == 0 then\n    return false\n  end\n  -- Check odd and\
    \ even\n  if n % 43 == 0 then\n    return false\n  end\n  -- Check odd and even\n\
    \  if n % 47 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if\
    \ n % 53 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n %\
    \ 59 == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 61\
    \ == 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 67 ==\
    \ 0 then\n    return false\n  end\n  -- Check odd and even\n  if n % 71 == 0 then\n\
    \    return false\n  end\n  -- Check odd and even\n  if n % 73 == 0 then\n   \
    \ return false\n  end\n  -- Check odd and even\n  if n % 79 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even\n  if n % 83 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even\n  if n % 89 == 0 then\n    return false\n  end\n\
    \  -- Check odd and even\n  if n % 97 == 0 then\n    return false\n  end\n  --\
    \ Check odd and even\n  if n % 101 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even\n", "  if n < 2 then return false end\n  if n == 2 then return\
    \ true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return\
    \ false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return\
    \ false end\n  if n % 11 == 0 then return false end\n  if n % 13 == 0 then return\
    \ false end\n  if n % 17 == 0 then return false end\n  if n % 19 == 0 then return\
    \ false end\n  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return\
    \ false end\n  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return\
    \ false end\n  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return\
    \ false end\n  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return\
    \ false end\n  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return\
    \ false end\n  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return\
    \ false end\n  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return\
    \ false end\n  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return\
    \ false end\n  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return\
    \ false end\n  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return\
    \ false end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 1253 == 0 then\
    \ return false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0\
    \ then return false end\n  if n % 137 == 0 then return false end\n  if n % 141\
    \ == 0 then return false end\n  if n % 147 == 0 then return false end\n  if n\
    \ % 151 == 0 then return false end\n  if n % 157 == 0 then return false end\n\
    \  if n % 161 == 0 then return false end\n  if n % 165 == 0 then return false\
    \ end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 193 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return ", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n <= 1 then return false end\n  if n == 2 then return true end\n  if n % 2 ==\
    \ 0 then return false end\n  local i = 3\n  while i * i <= n do\n    if n % i\
    \ == 0 then return false end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2 ==\
    \ 0 then return false end\n  if n % 3 == 0 then return false end\n  if n % 5 ==\
    \ 0 then return false end\n  if n % 7 == 0 then return false end\n  if n == 1\
    \ then return false end\n  if n == 0 then return false end\n  if n % 2 == 0 or\
    \ n % 3 == 0 or n % 5 == 0 or n % 7 == 0 then return false end\n  local i\n  for\
    \ i = 5, 7, 1 do\n    if n % i == 0 then return false end\n  end\n  return true\n\
    end", "  if n < 2 then return false end\n  if n == 2 then return true end\n  if\
    \ n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n  if\
    \ n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if\
    \ n % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n\
    \  if n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 113 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 1253 == 0 then return false end\n  if n % 127 == 0 then\
    \ return false end\n  if n % 129 == 0 then return false end\n  if n % 131 == 0\
    \ then return false end\n  if n % 133 == 0 then return false end\n  if n % 137\
    \ == 0 then return false end\n  if n % 139 == 0 then return false end\n  if n\
    \ % 141 == 0 then return false end\n  if n % 143 == 0 then return false end\n\
    \  if n % 147 == 0 then return false end\n  if n % 149 == 0 then return false\
    \ end\n  if n % 151 == 0 then return false end\n  if n % 153 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 159 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 163 == 0 then return\
    \ false end\n  if n % 167 == 0 then return ", "  -- The prime number theorem states\
    \ that every positive integer greater than 1 that has no positive divisors other\
    \ than 1 is a prime number.\n  -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- http://primes.utm.edu/lists/small/10000.txt\n  -- http://primes.utm.edu/lists/small/100003.txt\n\
    \  -- http://primes.utm.edu/lists/small/100004.txt\n  -- http://primes.utm.edu/lists/small/100005.txt\n\
    \  -- http://primes.utm.edu/lists/small/100006.txt\n  -- http://primes.utm.edu/lists/small/100007.txt\n\
    \  -- http://primes.utm.edu/lists/small/100008.txt\n  -- http://primes.utm.edu/lists/small/100009.txt\n\
    \  -- http://primes.utm.edu/lists/small/100010.txt\n  -- http://primes.utm.edu/lists/small/100011.txt\n\
    \  -- http://primes.utm.edu/lists/small/100012.txt\n  -- http://primes.utm.edu/lists/small/100013.txt\n\
    \  -- http://primes.utm.edu/lists/small/100014.txt\n  -- http://primes.utm.edu/lists/small/100015.txt\n\
    \  -- http://primes.utm.edu/lists/small/100016.txt\n  -- http://primes.utm.edu/lists/small/100017.txt\n\
    \  -- http://primes.utm.edu/lists/small/100018.txt\n  -- http://primes.utm.edu/lists/small/100019.txt\n\
    \  -- http://primes.utm.edu/lists/small/100020.txt\n  -- http://primes.utm.edu/lists/small/100021.txt\n\
    \  -- http://primes.utm.edu/lists/small/100022.txt\n  -- http://primes.utm.edu/lists/small/100023.txt\n\
    \  -- http://primes.utm.edu/lists/small/100024.txt\n  -- http://primes.utm.edu/lists/small/100025.txt\n\
    \  -- http://primes.utm.edu/lists/small/100026.txt\n  -- http://primes.utm.edu/lists/small/100027.txt\n\
    \  -- http://primes.utm.edu/lists/small/100028.txt\n  -- http://primes.utm.edu/lists/small/100029.txt\n\
    \  -- http://primes.utm.edu/lists/small/100030.txt\n  -- http://primes.utm.edu/lists/small/100032.txt",
  "  if n <= 1 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if n\
    \ % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n  if\
    \ n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 173 == 0 then return false end\n  if n % 179 == 0 then return\
    \ false end\n  if n % 183 == 0 then return false end\n  if n % 187 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 193 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return ",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  for i = 3, math.floor(n/2),\
    \ 2 do\n    if n % i == 0 then\n      return false\n    end\n  end\n  return true\n\
    end", "  -- http://en.wikipedia.org/wiki/Primality_test\n  -- http://primes.utm.edu/lists/small/10000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100003.txt\n  -- http://primes.utm.edu/lists/small/100004.txt\n\
    \  -- http://primes.utm.edu/lists/small/100005.txt\n  -- http://primes.utm.edu/lists/small/100006.txt\n\
    \  -- http://primes.utm.edu/lists/small/100007.txt\n  -- http://primes.utm.edu/lists/small/100008.txt\n\
    \  -- http://primes.utm.edu/lists/small/100009.txt\n  -- http://primes.utm.edu/lists/small/100010.txt\n\
    \  -- http://primes.utm.edu/lists/small/100011.txt\n  -- http://primes.utm.edu/lists/small/100013.txt\n\
    \  -- http://primes.utm.edu/lists/small/100014.txt\n  -- http://primes.utm.edu/lists/small/100015.txt\n\
    \  -- http://primes.utm.edu/lists/small/100016.txt\n  -- http://primes.utm.edu/lists/small/100017.txt\n\
    \  -- http://primes.utm.edu/lists/small/100018.txt\n  -- http://primes.utm.edu/lists/small/100019.txt\n\
    \  -- http://primes.utm.edu/lists/small/100020.txt\n  -- http://primes.utm.edu/lists/small/100024.txt\n\
    \  -- http://primes.utm.edu/lists/small/100025.txt\n  -- http://primes.utm.edu/lists/small/100026.txt\n\
    \  -- http://primes.utm.edu/lists/small/100027.txt\n  -- http://primes.utm.edu/lists/small/100028.txt\n\
    \  -- http://primes.utm.edu/lists/small/100029.txt\n  -- http://primes.utm.edu/lists/small/100032.txt\n\
    \  -- http://primes.utm.edu/lists/small/100033.txt\n  -- http://primes.utm.edu/lists/small/100034.txt\n\
    \  -- http://primes.utm.edu/lists/small/100035.txt\n  -- http://primes.utm.edu/lists/small/100036.txt\n\
    \  -- http://primes.utm.edu/lists/small/100037.txt\n  -- http://primes.utm.edu/lists/small/100038.txt\n\
    \  -- http://primes.utm.edu/", "  if n < 2 then\n    return false\n  end\n  if\
    \ n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even numbers for primality\n  if n % 3 == 0 then\n\
    \    return false\n  end\n  if n % 5 == 0 then\n    return false\n  end\n  --\
    \ Check divisibility by all prime factors\n  for i = 5, n / 2, 2 do\n    if n\
    \ % i == 0 then\n      return false\n    end\n  end\n  return true\nend", "  --\
    \ Primality test. Returns true if n is prime and false otherwise.\n  -- >>> is_prime(6)\n\
    \  -- False\n  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n\
    \  -- >>> is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>>\
    \ is_prime(4)\n  -- False\n  -- >>> is_prime(1)\n  -- False\n  if n < 2 then\n\
    \    return false\n  end\n  -- Test for primality up to sqrt(n).\n  local function\
    \ is_prime_upto(n)\n    local function is_prime_upto_helper(n)\n      if n < 2\
    \ then\n        return false\n      end\n      -- Test for primality up to sqrt(n).\n\
    \      local function is_prime_upto_helper_helper(n)\n        if n < 2 then\n\
    \          return false\n        end\n        -- Test for primality up to sqrt(n).\n\
    \        local function is_prime_upto_helper_helper_helper(n)\n          if n\
    \ < 2 then\n            return false\n          end\n          -- Test for primality\
    \ up to sqrt(n).\n          local function is_prime_upto_helper_helper_helper_helper(n)\n\
    \            if n < 2 then\n              return false\n            end\n    \
    \        -- Test for primality up to sqrt(n).\n            local function is_prime_upto_helper_helper_helper_helper_helper(n)\n\
    \              if n < 2 then\n                return false\n              end\n\
    \              -- Test for primality up to sqrt(n).\n              local function\
    \ is_prime_upto_helper_helper_helper_helper_helper_helper(n)\n               \
    \ if n < 2 then\n                  return false\n                end\n       \
    \         -- Test for primality up to sqrt(n).\n                local function\
    \ is_prime_upto_helper_helper_helper_helper_helper_helper_helper(n)\n        \
    \          if n < 2 then\n                    return false\n                 \
    \ end\n                  -- Test for primality up to sqrt(n).\n              \
    \    local function is_prime_upto_helper_helper_helper_helper_helper_helper_helper_helper(n)\n\
    \                    if n < 2 then\n                      return false\n     \
    \               end\n                    -- Test for primality up to sqrt(n).\n\
    \                    local function is_prime_upto_helper_helper_helper_helper_helper_helper_helper_helper_helper(n)\n\
    \                      if n < 2 then\n                        return false\n \
    \                     end\n                      -- Test for primality up to sqrt(n).\n\
    \                      local function is_prime_upto_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper(n)\n\
    \                        if n < 2 then\n                          return false\n\
    \                        end", "  if n < 2 then\n    return false\n  end\n  if\
    \ n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\
    \ return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return\
    \ false end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\
    \ return false end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <= n do\n \
    \   if n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n  \
    \  return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  for i\
    \ = 3, math.floor(n/2), 2 do\n    if n % i == 0 then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n\
    \  -- ", "  -- http://en.wikipedia.org/wiki/Primality_test\n  -- http://primes.utm.edu/lists/small/10000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100003.txt\n  -- http://primes.utm.edu/lists/small/100004.txt\n\
    \  -- http://primes.utm.edu/lists/small/100005.txt\n  -- http://primes.utm.edu/lists/small/100006.txt\n\
    \  -- http://primes.utm.edu/lists/small/100007.txt\n  -- http://primes.utm.edu/lists/small/100008.txt\n\
    \  -- http://primes.utm.edu/lists/small/100009.txt\n  -- http://primes.utm.edu/lists/small/100010.txt\n\
    \  -- http://primes.utm.edu/lists/small/100011.txt\n  -- http://primes.utm.edu/lists/small/100013.txt\n\
    \  -- http://primes.utm.edu/lists/small/100014.txt\n  -- http://primes.utm.edu/lists/small/100015.txt\n\
    \  -- http://primes.utm.edu/lists/small/100016.txt\n  -- http://primes.utm.edu/lists/small/100017.txt\n\
    \  -- http://primes.utm.edu/lists/small/100018.txt\n  -- http://primes.utm.edu/lists/small/100019.txt\n\
    \  -- http://primes.utm.edu/lists/small/100020.txt\n  -- http://primes.utm.edu/lists/small/100024.txt\n\
    \  -- http://primes.utm.edu/lists/small/100025.txt\n  -- http://primes.utm.edu/lists/small/100026.txt\n\
    \  -- http://primes.utm.edu/lists/small/100027.txt\n  -- http://primes.utm.edu/lists/small/100028.txt\n\
    \  -- http://primes.utm.edu/lists/small/100029.txt\n  -- http://primes.utm.edu/lists/small/100032.txt\n\
    \  -- http://primes.utm.edu/lists/small/100033.txt\n  -- http://primes.utm.edu/lists/small/100034.txt\n\
    \  -- http://primes.utm.edu/lists/small/100035.txt\n  -- http://primes.utm.edu/lists/small/100036.txt\n\
    \  -- http://primes.utm.edu/lists/small/100037.txt\n  -- http://primes.utm.edu/lists/small/100038.txt\n\
    \  -- http://primes.utm.edu/", "  -- Prime numbers are greater than 1 and divisible\
    \ by 3.\n  if n < 1 then return false end\n  if n % 3 == 0 then return false end\n\
    \  -- Check all numbers from 3 to sqrt(n).\n  for i = 4, math.floor(math.sqrt(n))\
    \ + 1, 4 do\n    if n % i == 0 then return false end\n  end\n  return true\nend",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if n\
    \ % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n  if\
    \ n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 173 == 0 then return false end\n  if n % 179 == 0 then return\
    \ false end\n  if n % 183 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false end\n  if n % 219 == 0 then return\
    \ false ", "  if n < 2 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  if n == 1 then return false end\n  if n == 0 then return false end\n  if n\
    \ == -1 then return false end\n  if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or\
    \ n % 7 == 0 or n == 1 or n == 0 then return false end\n  if n == -1 or n % 2\
    \ == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return\
    \ false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 ==\
    \ 0 or n == 1 or n == 0 then return false end\n  if n == -1 or n % 2 == 0 or n\
    \ % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return false end\n\
    \  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n ==\
    \ 1 or n == 0 then return false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0\
    \ or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return false end\n  if\
    \ n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or\
    \ n == 0 then return false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0 or n\
    \ % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return false end\n  if n ==\
    \ -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n ==\
    \ 0 then return false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 ==\
    \ 0 or n % 7 == 0 or n == 1 or n == 0 then return false end\n  if n == -1 or n\
    \ % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then\
    \ return false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or\
    \ n % 7 == 0 or n == 1 or n == 0 then return false end\n  if n == -1 or n % 2\
    \ == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return\
    \ false end\n  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 ==\
    \ 0 or n == 1 or n == 0 then return false end\n  if n == -1 or n % 2 == 0 or n\
    \ % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n == 1 or n == 0 then return false end\n\
    \  if n == -1 or n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n ==\
    \ 1 or n == 0 then return false end\n  if n == -1 or n % ", "  -- The prime number\
    \ theorem states that every positive integer greater than 1 that has no positive\
    \ divisors other than 1 is a prime number.\n  -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- http://oeis.org/A001493\n  -- http://oeis.org/A001501\n  -- http://oeis.org/A001506\n\
    \  -- http://oeis.org/A001507\n  -- http://oeis.org/A001510\n  -- http://oeis.org/A001512\n\
    \  -- http://oeis.org/A001513\n  -- http://oeis.org/A001514\n  -- http://oeis.org/A001517\n\
    \  -- http://oeis.org/A001519\n  -- http://oeis.org/A001520\n  -- http://oeis.org/A001521\n\
    \  -- http://oeis.org/A001523\n  -- http://oeis.org/A001524\n  -- http://oeis.org/A001525\n\
    \  -- http://oeis.org/A001526\n  -- http://oeis.org/A001527\n  -- http://oeis.org/A001529\n\
    \  -- http://oeis.org/A001530\n  -- http://oeis.org/A001531\n  -- http://oeis.org/A001532\n\
    \  -- http://oeis.org/A001533\n  -- http://oeis.org/A001534\n  -- http://oeis.org/A001535\n\
    \  -- http://oeis.org/A001536\n  -- http://oeis.org/A001537\n  -- http://oeis.org/A001538\n\
    \  -- http://oeis.org/A001539\n  -- http://oeis.org/A001540\n  -- http://oeis.org/A001541\n\
    \  -- http://oeis.org/A001542\n  -- http://oeis.org/A001543\n  -- http://oeis.org/A001544\n\
    \  -- http://oeis.org/A001545\n  -- http://oeis.org/A001546\n  -- http://oeis.org/A001547\n\
    \  -- http://oeis.org/A001548\n  -- http://oeis.org/A001549\n  -- http://oeis.org/A001550\n\
    \  -- http://oeis.org/A001551", "  if n < 2 then return false end\n  if n == 2\
    \ then return true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0\
    \ then return false end\n  if n % 5 == 0 then return false end\n  if n % 7 ==\
    \ 0 then return false end\n  if n % 11 == 0 then return false end\n  if n % 13\
    \ == 0 then return false end\n  if n % 17 == 0 then return false end\n  if n %\
    \ 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n  if\
    \ n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 189 == 0 then return false end\n  if n % 193 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false ", "  -- The prime number theorem\
    \ states that every positive integer greater than 1 can be expressed as the sum\
    \ of two prime numbers. \n  -- The first prime number is named p and is defined\
    \ as the product of prime numbers less than or equal to n. \n  -- The second prime\
    \ number is named q and is defined as the product of prime numbers greater than\
    \ or equal to n/2. \n  -- If n = pq, then: \n  --   p < q < 2n\n  --   p + q +\
    \ 2n = 2n\n  --   n is prime\n  -- If n = pq + r, then: \n  --   p < q < r < 2n\n\
    \  --   p + q + r + 2n = 2n\n  --   n is prime\n  -- If n = pq, then: \n  -- \
    \  p < q < n\n  --   p + q + n = n\n  --   n is prime\n  -- If n = pq + r, then:\
    \ \n  --   p < q < r < n\n  --   p + q + r + n = n\n  --   n is prime\n  -- If\
    \ n = pq, then: \n  --   p < q < 2n\n  --   p + q + 2n = 2n\n  --   n is prime\n\
    \  -- If n = pq + r, then: \n  --   p < q < r < 2n\n  --   p + q + r + 2n = 2n\n\
    \  --   n is prime\n  -- If n = pq, then: \n  --   p < q < n\n  --   p + q + n\
    \ = n\n  --   n is prime\n  -- If n = pq + r, then: \n  --   p < q < r < n\n \
    \ --   p + q + r + n = n\n  --   n is prime\n  -- If n = pq, then: \n  --   p\
    \ < q < 2n\n  --   p + q + 2n = 2n\n  --   n is prime\n  -- If n = pq + r, then:\
    \ \n  --   p < q < r < 2n\n  --   p + q + r + 2n = 2n\n  --   n is prime\n  --\
    \ If n = pq, then: \n  --   p < q < n\n  --   p + q + n = n\n  --   n is prime\n\
    \  -- If n = pq + r, then: \n  --   p < q < r < n\n  --   p + q + r + n = n\n\
    \  --   n is prime\n  -- If n = pq, then: \n  --   p < q < 2n\n  --   p + q +\
    \ 2", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return\
    \ true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n\
    \  while i * i <= n do\n    if n % i == 0 then\n      return false\n    end\n\
    \    i = i + 2\n  end\n  return true\nend", "  -- Primality test. Based on the\
    \ Wikipedia article.\n  -- https://en.wikipedia.org/wiki/Primality_test\n  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  -- Test for divisibility by\
    \ all primes less than the given number.\n  -- If no prime divides n, n is not\
    \ prime.\n  for i = 2, n do\n    if n % i == 0 then\n      return false\n    end\n\
    \  end\n  return true\nend", "  if n < 2 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  -- Check odd-ness\
    \ of candidate\n  for i = 3, math.floor(n/2), 2 do\n    if n % i == 0 then return\
    \ false end\n  end\n  return true\nend", "  if n < 2 then return false end\n \
    \ if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  local\
    \ i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then return false end\n\
    \  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n \
    \ if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 217 == 0 then return false ", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return true\nend",
  "  -- The prime number theorem states that a prime number greater than 2\n  -- can\
    \ be written as the sum of the only even primes less than or equal\n  -- to, and\
    \ including that number, and a single composite number.\n  -- -- Source: MathWorld\n\
    \  -- -- http://mathworld.wolfram.com/PrimeNumbers.html\n  -- -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Sixty_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Fifty_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Eighty_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Ninety_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Twenty_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Eleven_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Twelve_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Thirteen_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Fourteen_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Fifteen_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Sixteen_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Seventeen_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Eighteen_Four\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Nineteen_Four\n  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Twenty_Five\n\
    \  -- -- http://primes.utm.edu/notes/faq/faq.shtml#Twenty_Six\n  -- -- http://",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i\
    \ * i <= n do\n    if n % i == 0 then\n      return false\n    end\n    i = i\
    \ + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd-ness of candidate.\n  for i = 3, n, 2 do\n    if n % i\
    \ == 0 then\n      return false\n    end\n  end\n  return true\nend", "  -- Prime\
    \ numbers are greater than 1 and divisible by 3.\n  -- See http://en.wikipedia.org/wiki/Prime_number\n\
    \  return n > 1 and n % 3 == 0\nend", "  if n < 2 then return false end\n  if\
    \ n == 2 then return true end\n  if n % 2 == 0 then return false end\n  if n %\
    \ 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if n\
    \ % 7 == 0 then return false end\n  if n == 1 then return false end\n  if n ==\
    \ 0 then return true end\n  if n == -1 then return false end\n  if n == -2 then\
    \ return false end\n  if n == -3 then return false end\n  if n == -4 then return\
    \ false end\n  if n == -5 then return false end\n  if n == -6 then return false\
    \ end\n  if n == -7 then return false end\n  if n == -8 then return false end\n\
    \  if n == -9 then return false end\n  if n == -10 then return false end\n  if\
    \ n == -11 then return false end\n  if n == -12 then return false end\n  if n\
    \ == -13 then return false end\n  if n == -14 then return false end\n  if n ==\
    \ -15 then return false end\n  if n == -16 then return false end\n  if n == -17\
    \ then return false end\n  if n == -18 then return false end\n  if n == -19 then\
    \ return false end\n  if n == -20 then return false end\n  if n == -21 then return\
    \ false end\n  if n == -22 then return false end\n  if n == -23 then return false\
    \ end\n  if n == -24 then return false end\n  if n == -25 then return false end\n\
    \  if n == -26 then return false end\n  if n == -27 then return false end\n  if\
    \ n == -28 then return false end\n  if n == -29 then return false end\n  if n\
    \ == -30 then return false end\n  if n == -31 then return false end\n  if n ==\
    \ -32 then return false end\n  if n == -33 then return false end\n  if n == -34\
    \ then return false end\n  if n == -35 then return false end\n  if n == -36 then\
    \ return false end\n  if n == -37 then return false end\n  if n == -38 then return\
    \ false end\n  if n == -39 then return false end\n  if n == -40 then return false\
    \ end\n  if n == -41 then return false end\n  if n == -42 then return false end\n\
    \  if n == -43 then return false end\n  if n == -44 then return false end\n  if\
    \ n == -45 then return false end\n  if n == -46 then return false end\n  if n\
    \ == -47 then return false end\n  if n == -48 then return false end\n  if n ==\
    \ -49 ", "  if n < 2 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  for i = 3, math.floor(n/2), 2 do\n \
    \   if n % i == 0 then return false end\n  end\n  return true\nend", "  if n <\
    \ 2 then return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then\
    \ return false end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i\
    \ == 0 then return false end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <=\
    \ n do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n \
    \ end\n  return true\nend", "  -- Primality test. Returns true if n is prime and\
    \ false otherwise.\n  -- >>> is_prime(6)\n  -- False\n  -- >>> is_prime(101)\n\
    \  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>> is_prime(13441)\n  -- True\n\
    \  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n  -- False\n  -- >>>\
    \ is_prime(1)\n  -- False\n  if n <= 1 then\n    return false\n  end\n  -- Test\
    \ for divisibility by 2, 3, 5, and 7.\n  -- If n is divisible by any number other\
    \ than 2 and 3, then it is\n  -- not prime.\n  if n % 2 == 0 or n % 3 == 0 then\n\
    \    return false\n  end\n  -- Test for divisibility by 5 and 7.\n  -- If n is\
    \ divisible by 5, then it is not prime.\n  if n % 5 == 0 then\n    return false\n\
    \  end\n  -- Test for divisibility by 7.\n  -- If n is divisible by 7, then it\
    \ is not prime.\n  if n % 7 == 0 then\n    return false\n  end\n  -- If we get\
    \ here, then n is prime.\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <=\
    \ n do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n \
    \ end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n\
    \ == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even numbers since they are special cases.\n  if n\
    \ % 3 == 0 then\n    return false\n  end\n  if n % 5 == 0 then\n    return false\n\
    \  end\n  -- Check divisibility by primes up to sqrt(n).\n  for i = 5, math.floor(math.sqrt(n))\
    \ + 1, 2 do\n    if n % i == 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n % 2 == 0 then return false end\n  local i = 3\n  while i * i <=\
    \ n do\n    if n % i == 0 then return false end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  -- The prime number theorem states that every positive integer\
    \ greater than 1 that has no positive divisors other than 1 and itself is prime\
    \ can be factored into a product of primes less than or equal to n. For example,\
    \ 6 is a prime since it can be factored into 1, 2, and 3.\n  -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- http://primes.utm.edu/lists/small/1000.txt\n  -- http://primes.utm.edu/lists/small/10000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000001.txt\n  -- http://primes.utm.edu/lists/small/10000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000.txt\n  -- http://primes.utm.edu/lists/small/100000000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/10000000000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/1000000000000000000000000000000000.txt\n \
    \ -- http://primes.utm.edu/lists/small/10000000000000000000000000000000001.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000002.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000003.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000004.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000005.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000006.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000007.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000009.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000a.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000b.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000c.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000d.txt\n\
    \  -- ", "  if n <= 1 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  for i = 3, math.floor(n/2), 2 do\n \
    \   if n % i == 0 then return false end\n  end\n  return true\nend", "  if n <\
    \ 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  for i = 3, math.floor(n/2),\
    \ 2 do\n    if n % i == 0 then\n      return false\n    end\n  end\n  return true\n\
    end", "  if n < 2 then return false end\n  if n == 2 then return true end\n  if\
    \ n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n  if\
    \ n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if\
    \ n == 1 then return false end\n  if n == 0 then return false end\n  if n == 2\
    \ then return true end\n  if n == 3 then return true end\n  if n == 4 then return\
    \ true end\n  if n == 5 then return true end\n  if n == 6 then return true end\n\
    \  if n == 7 then return true end\n  if n == 8 then return true end\n  if n ==\
    \ 9 then return true end\n  if n == 10 or n == 11 or n == 12 or n == 13 or n ==\
    \ 14 or n == 15 or n == 16 or n == 17 or n == 18 or n == 19 or n == 20 or n ==\
    \ 21 or n == 22 or n == 23 or n == 24 or n == 25 or n == 26 or n == 27 or n ==\
    \ 28 or n == 29 or n == 30 or n == 31 or n == 32 or n == 33 or n == 34 or n ==\
    \ 35 or n == 36 or n == 37 or n == 38 or n == 39 or n == 40 or n == 41 or n ==\
    \ 42 or n == 43 or n == 44 or n == 45 or n == 46 or n == 47 or n == 48 or n ==\
    \ 49 or n == 50 or n == 51 or n == 52 or n == 53 or n == 54 or n == 55 or n ==\
    \ 56 or n == 57 or n == 58 or n == 59 or n == 60 or n == 61 or n == 62 or n ==\
    \ 63 or n == 64 or n == 65 or n == 66 or n == 67 or n == 68 or n == 69 or n ==\
    \ 70 or n == 71 or n == 72 or n == 73 or n == 74 or n == 75 or n == 76 or n ==\
    \ 77 or n == 78 or n == 79 or n == 80 or n == 81 or n == 82 or n == 83 or n ==\
    \ 84 or n == 85 or n == 86 or n == 87 or n == 88 or n == 89 or n == 90 or n ==\
    \ 91 or n == 92 or n == 93 or n == 94 and n == 95 then return true end\n  if n\
    \ == 101 or n == 110 or n == 111 or n == 120 or n == 121 or n == 130 or n == 131\
    \ or n == 140 or n == 141 or n == 150 or n == 151 or n == 160 or n == 161 or n\
    \ == 170 or n == 171 or n == 180 or n == 181 or n == 190 or n == 191 or n == 200\
    \ or n == 201 or n == 210 or n == 210 then return true end\n  if n == 211 or n\
    \ == 220 or n == 21 or n == 221 or n == 230 or n == 231 or n == 240 or n == 241\
    \ or n == 250 or n == 251 or n == 26", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even numbers since they are the only primes less than\
    \ n.\n  local function is_odd(n)\n    return not n % 2\n  end\n  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  local function is_prime(n)\n   \
    \ -- Check odd and even numbers since they are the only primes less than n.\n\
    \    local function is_odd(n)\n      return not n % 2\n    end\n    local function\
    \ is_even(n)\n      return n % 2 == 0\n    end\n    local function is_prime(n)\n\
    \      -- Check odd and even numbers since they are the only primes less than\
    \ n.\n      if n < 2 then\n        return false\n      end\n      if n == 2 then\n\
    \        return true\n      end\n      if n % 2 == 0 then\n        return false\n\
    \      end\n      -- Check odd and even numbers since they are the only primes\
    \ less than n.\n      if is_odd(n) then\n        return is_prime(n - 1)\n    \
    \  elseif is_even(n) then\n        return is_prime(n - 2)\n      else\n      \
    \  return false\n      end\n    end\n    return is_prime(n)\n  end\n  return is_prime(n)\n\
    end", "  if n <= 1 then return false end\n  if n == 2 then return true end\n \
    \ if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  if n % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n\
    \  if n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 173 == 0 then return false end\n  if n % 179 == 0 then return\
    \ false end\n  if n % 183 == 0 then return false end\n  if n % 189 == 0 then return\
    \ false end\n  if n % 193 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 215 == 0 then return ",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  for i\
    \ = 7, 2, -1 do\n    if n % i == 0 then return false end\n  end\n  return true\n\
    end", "  -- Return true if a given number is prime, and false otherwise.\n  --\
    \ >>> is_prime(6)\n  -- False\n  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n\
    \  -- True\n  -- >>> is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n\
    \  -- >>> is_prime(4)\n  -- False\n  -- >>> is_prime(1)\n  -- False\n  if n <\
    \ 2 then\n    return false\n  end\n  -- Test for primeness up to sqrt(n).\n  --\
    \ If n is prime then either n >= 2 or n % 2 == 0, so only need to test up to sqrt(n).\n\
    \  -- If n is composite then either n >= 3 or n % 3 == 0, so only need to test\
    \ up to sqrt(n).\n  -- If n is composite then either n >= 5 or n % 5 == 0, so\
    \ only need to test up to sqrt(n).\n  -- If n is composite then either n >= 7\
    \ or n % 7 == 0, so only need to test up to sqrt(n).\n  -- If n is composite then\
    \ either n >= 9 or n % 9 == 0, so only need to test up to sqrt(n).\n  -- If n\
    \ is composite then either n >= 11 or n % 11 == 0, so only need to test up to\
    \ sqrt(n).\n  -- If n is composite then either n >= 13 or n % 13 == 0, so only\
    \ need to test up to sqrt(n).\n  -- If n is composite then either n >= 15 or n\
    \ % 15 == 0, so only need to test up to sqrt(n).\n  -- If n is composite then\
    \ either n >= 17 or n % 17 == 0, so only need to test up to sqrt(n).\n  -- If\
    \ n is composite then either n >= 19 or n % 19 == 0, so only need to test up to\
    \ sqrt(n).\n  -- If n is composite then either n >= 21 or n % 21 == 0, so only\
    \ need to test up to sqrt(n).\n  -- If n is composite then either n >= 23 or n\
    \ % 23 == 0, so only need to test up to sqrt(n).\n  -- If n is composite then\
    \ either n >= 25 or n % 25 == 0, so only need to test up to sqrt(n).\n  -- If\
    \ n is composite then either n >= 27 or n % 27 == 0, so only need to test up to\
    \ sqrt(n).\n  -- If n is composite then either n >= 29 or n % 29 == 0, so only\
    \ need to test up to sqrt(n).\n  -- If n is compo", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return true\nend",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i\
    \ <= math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n  \
    \  i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd-even number\n  if n % 2 == 1 then\n    return not\
    \ is_prime(n - 2)\n  end\n  -- Check odd-odd number\n  local m = math.floor(n/2)\n\
    \  if m == 1 then\n    return not is_prime(m - 2)\n  end\n  -- Check even number\n\
    \  local m = math.floor(n/2)\n  if m == 1 then\n    return not is_prime(m - 2)\n\
    \  end\n  -- Check odd number\n  local m = math.floor(n/2)\n  if m == 1 then\n\
    \    return not is_prime(m - 2)\n  end\n  -- Check even number\n  local m = math.floor(n/2)\n\
    \  if m == 1 then\n    return not is_prime(m - 2)\n  end\n  -- Check odd number\n\
    \  local m = math.floor(n/2)\n  if m == 1 then\n    return not is_prime(m - 2)\n\
    \  end\n  -- Check even number\n  local m = math.floor(n/2)\n  if m == 1 then\n\
    \    return not is_prime(m - 2)\n  end\n  -- Check odd number\n  local m = math.floor(n/2)\n\
    \  if m == 1 then\n    return not is_prime(m - 2)\n  end\n  -- Check even number\n\
    \  local m = math.floor(n/2)\n  if m == 1 then\n    return not is_prime(m - 2)\n\
    \  end\n  -- Check odd number\n  local m = math.floor(n/2)\n  if m == 1 then\n\
    \    return not is_prime(m - 2)\n  end\n  -- Check even number\n  local m = math.floor(n/2)\n\
    \  if m == 1 then\n    return not is_prime(m - 2)\n  end\n  -- Check odd number\n\
    \  local m = math.floor(n/2)\n  if m == 1 then\n    return not is_prime(m - 2)\n\
    \  end\n  -- Check even number\n  local m = math.floor(n/2)\n  if m == 1 then\n\
    \    return not is_prime(m - 2)\n  end\n  -- Check odd number\n  local m = math.floor(n/2)\n\
    \  if m == 1 then\n    return not is_prime(m - 2)\n  end\n  -- Check even number\n\
    \  local m = math.floor(n/2)\n  if m == 1 then\n    return not is_prime(m - 2)\n\
    \  end\n  -- Check odd number\n  local m = math.floor(n/2)\n  if m == 1 then\n\
    \    return not is_prime(m - 2)\n  end\n  -- Check even ", "  if n <= 1 then return\
    \ false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false\
    \ end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false\
    \ end\n  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n\
    \  if n == 0 then return true end\n  if n == -1 then return false end\n  if n\
    \ == -2 then return false end\n  if n == -3 then return false end\n  if n == -4\
    \ then return false end\n  if n == -5 then return false end\n  if n == -6 then\
    \ return false end\n  if n == -7 then return false end\n  if n == -8 then return\
    \ false end\n  if n == -9 then return false end\n  if n == -10 then return false\
    \ end\n  if n == -11 then return false end\n  if n == -12 then return false end\n\
    \  if n == -13 then return false end\n  if n == -14 then return false end\n  if\
    \ n == -15 then return false end\n  if n == -16 then return false end\n  if n\
    \ == -17 then return false end\n  if n == -18 then return false end\n  if n ==\
    \ -19 then return false end\n  if n == -20 then return false end\n  if n == -21\
    \ then return false end\n  if n == -22 then return false end\n  if n == -23 then\
    \ return false end\n  if n == -24 then return false end\n  if n == -25 then return\
    \ false end\n  if n == -26 then return false end\n  if n == -27 then return false\
    \ end\n  if n == -28 then return false end\n  if n == -29 then return false end\n\
    \  if n == -30 then return false end\n  if n == -31 then return false end\n  if\
    \ n == -32 then return false end\n  if n == -33 then return false end\n  if n\
    \ == -34 then return false end\n  if n == -35 then return false end\n  if n ==\
    \ -36 then return false end\n  if n == -37 then return false end\n  if n == -38\
    \ then return false end\n  if n == -39 then return false end\n  if n == -40 then\
    \ return false end\n  if n == -41 then return false end\n  if n == -42 then return\
    \ false end\n  if n == -43 then return false end\n  if n == -44 then return false\
    \ end\n  if n == -45 then return false end\n  if n == -46 then return false end\n\
    \  if n == -47 then return false end\n  if n == -48 then return false end\n  if\
    \ n == -49", "  if n < 2 then return false end\n  if n == 1 then return true end\n\
    \  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  if n % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n\
    \  if n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 113 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 1253 == 0 then return false end\n  if n % 127 == 0 then\
    \ return false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0\
    \ then return false end\n  if n % 141 == 0 then return false end\n  if n % 147\
    \ == 0 then return false end\n  if n % 151 == 0 then return false end\n  if n\
    \ % 157 == 0 then return false end\n  if n % 161 == 0 then return false end\n\
    \  if n % 165 == 0 then return false end\n  if n % 167 == 0 then return false\
    \ end\n  if n % 171 == 0 then return false end\n  if n % 177 == 0 then return\
    \ false end\n  if n % 181 == 0 then return false end\n  if n % 187 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 193 == 0 then return\
    \ false end\n  if n % 197 == 0 then return ", "  if n < 2 then return false end\n\
    \  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if n\
    \ == 0 then return false end\n  if n % 2 == 0 and n % 3 == 0 and n % 5 == 0 and\
    \ n % 7 == 0 then\n    return true\n  end\n  if n == 1 or n == 0 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 1 then\n\
    \    return false\n  end\n  if n % 3 == 1 then\n    return false\n  end\n  if\
    \ n % 5 == 1 or n % 7 == 1 then\n    return false\n  end\n  if n % 2 == 0 and\
    \ n % 3 == 0 and n % 5 == 0 and n % 7 == 0 then\n    return true\n  end\n  if\
    \ n == 1 or n == 0 then\n    return false\n  end\n  if n == 2 then\n    return\
    \ true\n  end\n  if n % 2 == 1 then\n    return false\n  end\n  if n % 3 == 1\
    \ then\n    return false\n  end\n  if n % 5 == 1 or n % 7 == 1 then\n    return\
    \ false\n  end\n  if n % 2 == 0 and n % 3 == 0 and n % 5 == 0 and n % 7 == 0 then\n\
    \    return true\n  end\n  if n == 1 or n == 0 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  if n % 3 == 1 then\n    return false\n  end\n  if n % 5 == 1 or n %\
    \ 7 == 1 then\n    return false\n  end\n  if n % 2 == 0 and n % 3 == 0 and n %\
    \ 5 == 0 and n % 7 == 0 then\n    return true\n  end\n  if n == 1 or n == 0 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 1 then\n    return false\n  end\n  if n % 3 == 1 then\n    return false\n\
    \  end\n  if n % 5 == 1 or n % 7 == 1 then\n    return false\n  end\n  if n %\
    \ 2 == 0 and n % 3 == 0 and n % 5 == 0 and n % 7 == 0 then\n    return true\n\
    \  end\n  if n == 1 or n == 0 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 1 then\n    return false\n  end\n  if n\
    \ % 3 == 1 then\n    return false\n  end\n  if n % 5 == 1 or n % 7 == 1 then\n\
    \    return false\n  end\n  if n % 2 == 0 and n % 3 == 0 and n % 5 == 0 and n\
    \ % 7 == 0 then\n    return true\n  end\n  if n == 1 or n == 0 then\n    return\
    \ false\n  end\n  if n == 2 ", "  if n < 2 then\n    return false\n  end\n  if\
    \ n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  local m = math.floor(n/2)\n  local i =\
    \ 2\n  while i <= m do\n    if n % i == 0 then\n      return false\n    end\n\
    \    i = i + 2\n  end\n  return true\nend", "  -- The prime number theorem states\
    \ that every positive integer greater than 1 that has no positive divisors other\
    \ than 1 is a prime number.\n  -- The first prime number is named 2.\n  -- >>>\
    \ is_prime(2)\n  -- True\n  -- >>> is_prime(3)\n  -- False\n  -- >>> is_prime(4)\n\
    \  -- False\n  -- >>> is_prime(5)\n  -- False\n  -- >>> is_prime(6)\n  -- False\n\
    \  -- >>> is_prime(7)\n  -- False\n  -- >>> is_prime(8)\n  -- False\n  -- >>>\
    \ is_prime(9)\n  -- False\n  -- >>> is_prime(10)\n  -- False\n  -- >>> is_prime(11)\n\
    \  -- False\n  -- >>> is_prime(12)\n  -- False\n  -- >>> is_prime(13)\n  -- False\n\
    \  -- >>> is_prime(14)\n  -- False\n  -- >>> is_prime(15)\n  -- False\n  -- >>>\
    \ is_prime(16)\n  -- False\n  -- >>> is_prime(17)\n  -- False\n  -- >>> is_prime(18)\n\
    \  -- False\n  -- >>> is_prime(19)\n  -- False\n  -- >>> is_prime(20)\n  -- False\n\
    \  -- >>> is_prime(21)\n  -- False\n  -- >>> is_prime(22)\n  -- False\n  -- >>>\
    \ is_prime(23)\n  -- False\n  -- >>> is_prime(24)\n  -- False\n  -- >>> is_prime(25)\n\
    \  -- False\n  -- >>> is_prime(26)\n  -- False\n  -- >>> is_prime(27)\n  -- False\n\
    \  -- >>> is_prime(28)\n  -- False\n  -- >>> is_prime(29)\n  -- False\n  -- >>>\
    \ is_prime(30)\n  -- False\n  -- >>> is_prime(31)\n  -- False\n  -- >>> is_prime(32)\n\
    \  -- False\n  -- >>> is_prime(33)\n  -- False\n  -- >>> is_prime(34)\n  -- False\n\
    \  -- >>> is_prime(35)\n  -- False\n  -- >>> is_prime(36)\n  -- False\n  -- >>>\
    \ is_prime(37)\n  -- False\n  -- >>> is_prime(38)\n  -- False\n  -- >>> is_prime(39)\n\
    \  -- False\n  -- >>> is_prime(40)\n  -- False\n", "  if n <= 1 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  local i = 3\n  while i * i <= n do\n    if n % i == 0 then return false end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local m = math.floor(n/2)\n  local i = 2\n  while i <= m do\n\
    \    if n % i == 0 then\n      return false\n    end\n    i = i + 1\n  end\n \
    \ return true\nend", "  if n < 2 then return false end\n  if n == 2 then return\
    \ true end\n  if n % 2 == 0 then return false end\n  for i=3,math.floor(n/2),2\
    \ do\n    if n % i == 0 then return false end\n  end\n  return true\nend", " \
    \ if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  local\
    \ i\n  for i = 5, n do\n    if n % i == 0 then return false end\n  end\n  return\
    \ true\nend", "  -- The prime number theorem states that a prime number greater\
    \ than 2\n  -- is only conjectured to be composite if all prime factors\n  --\
    \ are less than or equal to its square root. Since any factor\n  -- greater than\
    \ 2 can be written as a product of primes, the\n  -- only way a composite number\
    \ greater than 2 can be written\n  -- as a product of primes is if all prime factors\
    \ are less than or\n  -- equal to their square roots.\n  -- http://en.wikipedia.org/wiki/Prime_number_theorem\n\
    \  -- http://mathworld.wolfram.com/PrimeFactors.html\n  -- http://primes.utm.edu/lists/small/1000.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000.txt\n  -- http://primes.utm.edu/lists/small/1000001.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000.txt\n  -- http://primes.utm.edu/lists/small/10000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000.txt\n  -- http://primes.utm.edu/lists/small/100000000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/10000000000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/1000000000000000000000000000000000.txt\n \
    \ -- http://primes.utm.edu/lists/small/10000000000000000000000000000000001.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000002.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000003.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000004.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000005.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000006.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000007.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000009.txt\n\
    \  -- http://primes.utm.", "  if n < 2 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  local i = 3\n  while\
    \ i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n    i = i + 2\n\
    \  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n\
    \ == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\
    \ return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return\
    \ false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return\
    \ false end\n  if n % 7 == 0 then return false end\n  if n == 1 then return false\
    \ end\n  if n == 0 then return true end\n  if n == -1 then return false end\n\
    \  if n == -2 then return false end\n  if n == -3 then return false end\n  if\
    \ n == -4 then return false end\n  if n == -5 then return false end\n  if n ==\
    \ -6 then return false end\n  if n == -7 then return false end\n  if n == -8 then\
    \ return false end\n  if n == -9 then return false end\n  if n == -10 then return\
    \ false end\n  if n == -11 then return false end\n  if n == -12 then return false\
    \ end\n  if n == -13 then return false end\n  if n == -14 then return false end\n\
    \  if n == -15 then return false end\n  if n == -16 then return false end\n  if\
    \ n == -17 then return false end\n  if n == -18 then return false end\n  if n\
    \ == -19 then return false end\n  if n == -20 then return false end\n  if n ==\
    \ -21 then return false end\n  if n == -22 then return false end\n  if n == -23\
    \ then return false end\n  if n == -24 then return false end\n  if n == -25 then\
    \ return false end\n  if n == -26 then return false end\n  if n == -27 then return\
    \ false end\n  if n == -28 then return false end\n  if n == -29 then return false\
    \ end\n  if n == -30 then return false end\n  if n == -31 then return false end\n\
    \  if n == -32 then return false end\n  if n == -33 then return false end\n  if\
    \ n == -34 then return false end\n  if n == -35 then return false end\n  if n\
    \ == -36 then return false end\n  if n == -37 then return false end\n  if n ==\
    \ -38 then return false end\n  if n == -39 then return false end\n  if n == -40\
    \ then return false end\n  if n == -41 then return false end\n  if n == -42 then\
    \ return false end\n  if n == -43 then return false end\n  if n == -44 then return\
    \ false end\n  if n == -45 then return false end\n  if n == -46 then return false\
    \ end\n  if n == -47 then return false end\n  if n == -48 then return false end\n\
    \  if n == -49 ", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check\
    \ odd and even numbers for primeness\n  if n % 3 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  -- If n is even, then (n-1)/2\
    \ is odd, so (n-1)/2 must be even.\n  if n % 2 == 1 then\n    return not is_prime(math.floor((n\
    \ - 1) / 2))\n  end\n  -- If n is odd, then (n-1)/2 is even, so n-1 must be odd.\n\
    \  return not is_prime(math.floor((n - 1) / 2))\nend", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  -- Check odd-even primality of n\n  local function\
    \ is_odd_prime(n)\n    if n % 2 == 0 then\n      return false\n    end\n    local\
    \ i = 3\n    while i * i <= n do\n      if n % i == 0 then\n        return false\n\
    \      end\n      i = i + 2\n    end\n    return true\n  end\n  if is_odd_prime(n)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n-1\n  if is_odd_prime(n-1)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+1\n  if is_odd_prime(n+1)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+2\n  if is_odd_prime(n+2)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+3\n  if is_odd_prime(n+3)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+4\n  if is_odd_prime(n+4)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+5\n  if is_odd_prime(n+5)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+6\n  if is_odd_prime(n+6)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+7\n  if is_odd_prime(n+7)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+8\n  if is_odd_prime(n+8)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+9\n  if is_odd_prime(n+9)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+10\n  if is_odd_prime(n+10)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+11\n  if is_odd_prime(n+11)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+12\n  if is_odd_prime(n+12)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n+13\n  if is_odd_prime(n+13)\
    \ then", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return\
    \ true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- If n is even,\
    \ then (n-1)/2 is even, and (n-1)/2 > 1\n  -- If n is odd, then (n-1)/2 is odd,\
    \ and (n-1)/2 > 1\n  if n % 2 == 1 then\n    return not (math.floor(n/2) > 1)\n\
    \  end\n  -- If n is odd, then (n-1)/2 is odd, and (n-1)/2 > 1\n  -- If n is even,\
    \ then (n-1)/2 is even, and (n-1)/2 > 1\n  local m = math.floor(n/2)\n  -- If\
    \ m is odd, then (n-1)/2 is odd, and (n-1)/2 > 1\n  -- If m is even, then (n-1)/2\
    \ is even, and (n-1)/2 > 1\n  if m % 2 == 1 then\n    return not (math.floor(n/2)\
    \ > 1)\n  end\n  -- If m is odd, then (n-1)/2 is odd, and (n-1)/2 > 1\n  -- If\
    \ m is even, then (n-1)/2 is even, and (n-1)/2 > 1\n  -- If m is even, then (n-1)/2\
    \ is even, and (n-1)/2 > 1\n  -- If m is odd, then (n-1)/2 is odd, and (n-1)/2\
    \ > 1\n  -- If m is even, then (n-1)/2 is even, and (n-1)/2 > 1\n  -- If m is\
    \ odd, then (n-1)/2 is odd, and (n-1)/2 > 1\n  -- If m is even, then (n-1)/2 is\
    \ even, and (n-1)/2 > 1\n  -- If m is odd, then (n-1)/2 is odd, and (n-1)/2 >\
    \ 1\n  -- If m is even, then (n-1)/2 is even, and (n-1)/2 > 1\n  -- If m is odd,\
    \ then (n-1)/2 is odd, and (n-1)/2 > 1\n  -- If m is even, then (n-1)/2 is even,\
    \ and (n-1)/2 > 1\n  -- If m is odd, then (n-1)/2 is odd, and (n-1)/2 > 1\n  --\
    \ If m is even, then (n-1)/2 is even, and (n-1)/2 > 1\n  -- If m is odd, then\
    \ (n-1)/2 is odd, and (n-1)/", "  if n <= 1 then return false end\n  if n == 2\
    \ then return true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0\
    \ then return false end\n  if n % 5 == 0 then return false end\n  if n % 7 ==\
    \ 0 then return false end\n  if n % 11 == 0 then return false end\n  if n % 13\
    \ == 0 then return false end\n  if n % 17 == 0 then return false end\n  if n %\
    \ 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n  if\
    \ n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 217 == 0 then return\
    \ false end\n  if n % 221 == 0 then return ", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd-even primality of n\n  local function is_odd_prime(n)\n\
    \    if n < 2 then\n      return false\n    end\n    if n == 2 then\n      return\
    \ true\n    end\n    if n % 2 == 0 then\n      return false\n    end\n    -- Check\
    \ odd-even primality of n\n    local function is_odd_prime(n)\n      if n < 2\
    \ then\n        return false\n      end\n      if n == 2 then\n        return\
    \ true\n      end\n      if n % 2 == 0 then\n        return false\n      end\n\
    \      -- Check odd-even primality of n\n      local function is_odd_prime(n)\n\
    \        if n < 2 then\n          return false\n        end\n        if n == 2\
    \ then\n          return true\n        end\n        if n % 2 == 0 then\n     \
    \     return false\n        end\n        -- Check odd-even primality of n\n  \
    \      local function is_odd_prime(n)\n          if n < 2 then\n            return\
    \ false\n          end\n          if n == 2 then\n            return true\n  \
    \        end\n          if n % 2 == 0 then\n            return false\n       \
    \   end\n          -- Check odd-even primality of n\n          local function\
    \ is_odd_prime(n)\n            if n < 2 then\n              return false\n   \
    \         end\n            if n == 2 then\n              return true\n       \
    \     end\n            if n % 2 == 0 then\n              return false\n      \
    \      end\n            -- Check odd-even primality of n\n            local function\
    \ is_odd_prime(n)\n              if n < 2 then\n                return false\n\
    \              end\n              if n == 2 then\n                return true\n\
    \              end\n              if n % 2 == 0 then\n                return false\n\
    \              end\n              -- Check odd-even primality of n\n         \
    \     local function is_odd_prime(n)\n                if n < 2 then\n        \
    \          return false\n                end\n                if n == 2 then\n\
    \                  return true\n                end\n                if n % 2\
    \ == 0 then\n                  return false\n                end\n           \
    \     -- Check odd-even primality of n\n                local function is_odd_prime(n)\n\
    \                  if n < 2 then\n                    return false\n         \
    \         end\n                  if n == 2 then\n                    return true\n\
    \                  end\n                  if n % 2 == 0 then\n               \
    \     return false\n                  end\n                  -- Check odd-even\
    \ primality of n\n                  local function is_odd_prime(n)\n         \
    \           if n < 2 then\n                      return false\n              \
    \      end\n                    if n == 2 ", "  if n < 2 then return false end\n\
    \  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  local\
    \ i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n\
    \    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2 ==\
    \ 0 then return false end\n  if n % 3 == 0 then return false end\n  if n % 5 ==\
    \ 0 then return false end\n  if n % 7 == 0 then return false end\n  local i\n\
    \  for i = 7, 2, -1 do\n    if n % i == 0 then return false end\n  end\n  return\
    \ true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n  \
    \  return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local\
    \ i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n      return false\n\
    \    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return true\nend",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i\
    \ * i <= n do\n    if n % i == 0 then\n      return false\n    end\n    i = i\
    \ + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even numbers since they are special cases.\n  if n\
    \ % 2 == 1 then\n    return not is_prime(n - 1)\n  end\n  -- Check odd and even\
    \ numbers since they are special cases.\n  if n % 3 == 0 then\n    return not\
    \ is_prime(n - 1)\n  end\n  -- Check odd and even numbers since they are special\
    \ cases.\n  if n % 5 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check\
    \ odd and even numbers since they are special cases.\n  if n % 7 == 0 then\n \
    \   return not is_prime(n - 1)\n  end\n  -- Check odd and even numbers since they\
    \ are special cases.\n  if n % 11 == 0 then\n    return not is_prime(n - 1)\n\
    \  end\n  -- Check odd and even numbers since they are special cases.\n  if n\
    \ % 13 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check odd and even\
    \ numbers since they are special cases.\n  if n % 17 == 0 then\n    return not\
    \ is_prime(n - 1)\n  end\n  -- Check odd and even numbers since they are special\
    \ cases.\n  if n % 19 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check\
    \ odd and even numbers since they are special cases.\n  if n % 23 == 0 then\n\
    \    return not is_prime(n - 1)\n  end\n  -- Check odd and even numbers since\
    \ they are special cases.\n  if n % 29 == 0 then\n    return not is_prime(n -\
    \ 1)\n  end\n  -- Check odd and even numbers since they are special cases.\n \
    \ if n % 31 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check odd and\
    \ even numbers since they are special cases.\n  if n % 37 == 0 then\n    return\
    \ not is_prime(n - 1)\n  end\n  -- Check odd and even numbers since they are special\
    \ cases.\n  if n % 41 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check\
    \ odd and even numbers since they are special cases.\n  if n % 43 == 0 then\n\
    \    return not is_prime(n - 1)\n  end\n  -- Check odd and even numbers since\
    \ they are special cases.\n  if n % 47 == 0 then\n    return not is_prime(n -\
    \ 1)\n  end\n  -- Check odd and even numbers since they are special cases.\n \
    \ if n % 53 == 0 then\n    return not is_prime(n - 1)\n  end\n  -- Check odd and\
    \ even numbers since they are special cases.\n  if n % 59 == 0 then\n", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i <= math.sqrt(n)\
    \ do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n\
    \  return true\nend", "  -- The prime number theorem states that every positive\
    \ integer greater than 1 that has no positive divisors other than 1 and itself\
    \ is prime, is called a prime.\n  -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- http://primes.utm.edu/lists/small/1000.txt\n  -- http://primes.utm.edu/lists/small/10000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000001.txt\n  -- http://primes.utm.edu/lists/small/10000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000.txt\n  -- http://primes.utm.edu/lists/small/1000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000.txt\n  -- http://primes.utm.edu/lists/small/100000000000000000000000.txt\n\
    \  -- http://primes.utm.edu/lists/small/100000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/1000000000000000000000000000000.txt\n  --\
    \ http://primes.utm.edu/lists/small/1000000000000000000000000000000000.txt\n \
    \ -- http://primes.utm.edu/lists/small/10000000000000000000000000000000001.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000002.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000003.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000004.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000005.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000006.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000007.txt\n\
    \  -- http://primes.utm.edu/lists/small/10000000000000000000000000000000009.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000a.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000b.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000c.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000d.txt\n\
    \  -- http://primes.utm.edu/lists/small/1000000000000000000000000000000000e.txt\n\
    \  -- http://primes.ut", "  if n < 2 then\n    return false\n  end\n  if n ==\
    \ 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n\
    \  -- Check odd and even numbers\n  if n % 3 == 0 then\n    return false\n  end\n\
    \  if n % 5 == 0 then\n    return false\n  end\n  -- Check divisible by 3 and\
    \ 5\n  if n % 3 == 0 or n % 5 == 0 then\n    return false\n  end\n  -- Check divisible\
    \ by 3 and 5\n  if n % 7 == 0 then\n    return false\n  end\n  -- Check divisible\
    \ by 7\n  if n % 17 == 0 then\n    return false\n  end\n  -- Check divisible by\
    \ 11\n  if n % 11 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 13\n  if n % 13 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 17\n  if n % 17 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 19\n  if n % 19 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 23\n  if n % 23 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 29\n  if n % 29 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 31\n  if n % 31 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 37\n  if n % 37 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 41\n  if n % 41 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 43\n  if n % 43 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 47\n  if n % 47 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 53\n  if n % 53 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 59\n  if n % 59 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 61\n  if n % 61 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 67\n  if n % 67 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 71\n  if n % 71 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 73\n  if n % 73 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 79\n  if n % 79 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 83\n  if n % 83 == 1 then\n    return false\n  end\n  -- Check divisible by\
    \ 89\n  if n % 89 == 1 then\n    return false\n  end\n  -- Check ", "  if n <\
    \ 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <=\
    \ n do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n \
    \ end\n  return true\nend", "  -- Primality test. Returns true if n is prime and\
    \ false otherwise.\n  -- >>> is_prime(6)\n  -- False\n  -- >>> is_prime(101)\n\
    \  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>> is_prime(13441)\n  -- True\n\
    \  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n  -- False\n  -- >>>\
    \ is_prime(1)\n  -- False\n  if n < 2 then\n    return false\n  end\n  -- Test\
    \ for primeness using the Sieve of Eratosthenes.\n  -- The sieve is constructed\
    \ by considering all odd numbers as candidates.\n  -- The even numbers are then\
    \ chosen as candidates using the following rule:\n  --   If p is even, then p+2\
    \ is also an odd number.\n  --   If p is odd, then p+2 is not an odd number.\n\
    \  -- The sieve is then constructed by considering all numbers which are multiples\
    \ of p+2.\n  -- The final sieve is then constructed by considering all numbers\
    \ which are multiples of p+3.\n  -- The sieve is then constructed by considering\
    \ all numbers which are multiples of p+4.\n  -- The sieve is then constructed\
    \ by considering all numbers which are multiples of p+5.\n  -- The sieve is then\
    \ constructed by considering all numbers which are multiples of p+6.\n  -- The\
    \ sieve is then constructed by considering all numbers which are multiples of\
    \ p+7.\n  -- The sieve is then constructed by considering all numbers which are\
    \ multiples of p+8.\n  -- The sieve is then constructed by considering all numbers\
    \ which are multiples of p+9.\n  -- The sieve is then constructed by considering\
    \ all numbers which are multiples of p+10.\n  -- The sieve is then constructed\
    \ by considering all numbers which are multiples of p+11.\n  -- The sieve is then\
    \ constructed by considering all numbers which are multiples of p+12.\n  -- The\
    \ sieve is then constructed by considering all numbers which are multiples of\
    \ p+13.\n  -- The sieve is then constructed by considering all numbers which are\
    \ multiples of p+14.\n  -- The sieve is then constructed by considering all numbers\
    \ which are multiples of p+15.\n  -- The sieve is then constructed by considering\
    \ all numbers which are multiples of p+16.", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Check odd and even numbers for primality\n  -- >>> is_prime(6)\n\
    \  -- False\n  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n\
    \  -- >>> is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>>\
    \ is_prime(4)\n  -- False\n  -- >>> is_prime(1)\n  -- False\n  local function\
    \ is_odd_prime(n)\n    if n < 2 then\n      return false\n    end\n    if n ==\
    \ 2 then\n      return true\n    end\n    if n % 2 == 0 then\n      return false\n\
    \    end\n    local function is_odd_prime_helper(n)\n      if n < 2 then\n   \
    \     return false\n      end\n      if n == 2 then\n        return true\n   \
    \   end\n      if n % 2 == 0 then\n        return false\n      end\n      local\
    \ function is_odd_prime_helper(n)\n        if n < 2 then\n          return false\n\
    \        end\n        if n == 2 then\n          return true\n        end\n   \
    \     if n % 2 == 0 then\n          return false\n        end\n        return\
    \ is_odd_prime_helper(n - 2)\n      end\n      return is_odd_prime_helper(n)\n\
    \    end\n    return is_odd_prime_helper(n)\n  end\n  return is_odd_prime(n)\n\
    end", "  -- Prime numbers are greater than 1.\n  if n < 1 then return false end\n\
    \  -- Check that the number is even.\n  if n % 2 == 0 then return false end\n\
    \  -- Check that the number is odd.\n  if n % 2 == 1 then return true end\n  --\
    \ Check that the number is odd.\n  if n % 3 == 0 then return false end\n  -- Check\
    \ that the number is odd.\n  if n % 3 == 1 then return true end\n  -- Check that\
    \ the number is odd.\n  if n % 5 == 0 then return false end\n  -- Check that the\
    \ number is odd.\n  if n % 5 == 1 then return true end\n  -- Check that the number\
    \ is odd.\n  if n % 7 == 0 then return false end\n  -- Check that the number is\
    \ odd.\n  if n % 7 == 1 then return true end\n  -- Check that the number is odd.\n\
    \  if n % 11 == 0 then return false end\n  -- Check that the number is odd.\n\
    \  if n % 11 == 1 then return true end\n  -- Check that the number is odd.\n \
    \ if n % 13 == 0 then return false end\n  -- Check that the number is odd.\n \
    \ if n % 13 == 1 then return true end\n  -- Check that the number is odd.\n  if\
    \ n % 17 == 0 then return false end\n  -- Check that the number is odd.\n  if\
    \ n % 17 == 1 then return true end\n  -- Check that the number is odd.\n  if n\
    \ % 19 == 0 then return false end\n  -- Check that the number is odd.\n  if n\
    \ % 19 == 1 then return true end\n  -- Check that the number is odd.\n  if n %\
    \ 23 == 0 then return false end\n  -- Check that the number is odd.\n  if n %\
    \ 23 == 1 then return true end\n  -- Check that the number is odd.\n  if n % 29\
    \ == 0 then return false end\n  -- Check that the number is odd.\n  if n % 29\
    \ == 1 then return true end\n  -- Check that the number is odd.\n  if n % 31 ==\
    \ 0 then return false end\n  -- Check that the number is odd.\n  if n % 31 ==\
    \ 1 then return true end\n  -- Check that the number is odd.\n  if n % 37 == 0\
    \ then return false end\n  -- Check that the number is odd.\n  if n % 37 == 1\
    \ then return true end\n  -- Check that the number is odd.\n  if n % 41 == 0 then\
    \ return false end\n  -- Check that the number is odd.\n  if n % 41 == 1 then\
    \ return true end\n  -- Check that the number is odd.\n  if n % 43 == 0 then return\
    \ false end\n  -- Check that the number is odd.\n  if n % 43 == 1 then return\
    \ true end\n  -- Check that the number is odd.", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return false\
    \ end\n    i = i + 2\n  end\n  return true\nend", "  -- Primality test. Returns\
    \ true if n is prime and false otherwise.\n  -- >>> is_prime(6)\n  -- False\n\
    \  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>>\
    \ is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n\
    \  -- False\n  -- >>> is_prime(1)\n  -- False\n  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  -- Test for divisibility by all prime factors up to sqrt(n).\n\
    \  -- If n is divisible by any prime factor other than 2, then it is\n  -- not\
    \ prime.\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2 ==\
    \ 0 then return false end\n  if n % 3 == 0 then return false end\n  if n % 5 ==\
    \ 0 then return false end\n  if n % 7 == 0 then return false end\n  if n % 11\
    \ == 0 then return false end\n  if n % 13 == 0 then return false end\n  if n %\
    \ 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n  if\
    \ n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 171 == 0 then return false end\n  if n % 177 == 0 then return\
    \ false end\n  if n % 181 == 0 then return false end\n  if n % 187 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 217 == 0 then return\
    \ false ", "  if n < 2 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  if n == 1 then return false end\n  if n == 0 then return true end\n  if n ==\
    \ 2 then return true end\n  if n == 3 then return true end\n  if n == 4 then return\
    \ true end\n  if n == 5 then return true end\n  if n == 6 then return true end\n\
    \  if n == 7 then return true end\n  if n == 8 then return true end\n  if n ==\
    \ 9 then return true end\n  if n % 11 == 1 then return false end\n  if n % 13\
    \ == 1 then return false end\n  if n % 17 == 1 then return false end\n  if n %\
    \ 19 == 1 then return false end\n  if n % 23 == 1 then return false end\n  if\
    \ n % 29 == 1 then return false end\n  if n % 31 == 1 then return false end\n\
    \  if n % 37 == 1 then return false end\n  if n % 41 == 1 then return false end\n\
    \  if n % 43 == 1 then return false end\n  if n % 47 == 1 then return false end\n\
    \  if n % 53 == 1 then return false end\n  if n % 59 == 1 then return false end\n\
    \  if n % 63 ~= 1 then return false end\n  if n % 67 ~= 1 then return false end\n\
    \  if n % 71 ~= 1 then return false end\n  if n % 73 ~= 1 then return false end\n\
    \  if n % 79 ~= 1 then return false end\n  if n % 83 ~= 1 then return false end\n\
    \  if n % 89 ~= 1 then return false end\n  if n % 97 ~= 1 then return false end\n\
    \  if n % 101 ~= 1 then return false end\n  if n % 103 ~= 1 then return false\
    \ end\n  if n % 107 ~= 1 then return false end\n  if n % 109 ~= 1 then return\
    \ false end\n  if n % 113 ~= 1 then return false end\n  if n % 117 ~= 1 then return\
    \ false end\n  if n % 121 ~= 1 then return false end\n  if n % 127 ~= 1 then return\
    \ false end\n  if n % 131 ~= 1 then return false end\n  if n % 137 ~= 1 then return\
    \ false end\n  if n % 143 ~= 1 then return false end\n  if n % 149 ~= 1 then return\
    \ false end\n  if n % 151 ~= 1 then return false end\n  if n % 157 ~= 1 then ",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i\
    \ <= math.sqrt(n) do\n    if n % i == 0 then\n      return false\n    end\n  \
    \  i = i + 2\n  end\n  return true\nend", "  -- Prime numbers are greater than\
    \ 1 and divisible by 3.\n  return n > 1 and n % 3 == 0;\nend", "  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python\n\
    \  -- http://stackoverflow.com/questions/2068", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <=\
    \ n do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n \
    \ end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n\
    \ == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then\n\
    \      return false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if\
    \ n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n\
    \  if n % 2 == 0 then\n    return false\n  end\n  for i = 3, math.floor(n/2),\
    \ 2 do\n    if n % i == 0 then\n      return false\n    end\n  end\n  return true\n\
    end", "  if n < 2 then return false end\n  if n == 2 then return true end\n  if\
    \ n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n  if\
    \ n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if\
    \ n == 1 then return false end\n  if n == 0 then return false end\n  if n == 2\
    \ then return true end\n  if n == 3 then return true end\n  if n == 4 then return\
    \ true end\n  if n == 5 then return true end\n  if n == 6 then return true end\n\
    \  if n == 7 then return true end\n  if n == 8 then return true end\n  if n ==\
    \ 9 then return true end\n  if n == 10 then return true end\n  if n == 11 then\
    \ return true end\n  if n == 12 then return true end\n  if n == 13 then return\
    \ true end\n  if n == 14 then return true end\n  if n == 15 then return true end\n\
    \  if n == 16 then return true end\n  if n == 17 then return true end\n  if n\
    \ == 18 then return true end\n  if n == 19 then return true end\n  if n == 20\
    \ then return true end\n  if n == 21 then return true end\n  if n == 22 then return\
    \ true end\n  if n == 23 then return true end\n  if n == 24 then return true end\n\
    \  if n == 25 then return true end\n  if n == 26 then return true end\n  if n\
    \ == 27 then return true end\n  if n == 28 then return true end\n  if n == 29\
    \ then return true end\n  if n == 30 then return true end\n  if n == 31 then return\
    \ true end\n  if n == 32 then return true end\n  if n == 33 then return true end\n\
    \  if n == 34 then return true end\n  if n == 35 then return true end\n  if n\
    \ == 36 then return true end\n  if n == 37 then return true end\n  if n == 38\
    \ then return true end\n  if n == 39 then return true end\n  if n == 40 then return\
    \ true end\n  if n == 41 then return true end\n  if n == 42 then return true end\n\
    \  if n == 43 then return true end\n  if n == 44 then return true end\n  if n\
    \ == 45 then return true end\n  if n == 46 then return true end\n  if n == 47\
    \ then return true end\n  if n == 48 then return true end\n  if n == 49 then return\
    \ true end\n  if n == 50 then return true end\n  if n == 51 then return true end\n\
    \  if n == 52 then return true end\n  if n == 53 then return true end\n  if n\
    \ == 54 then return true end\n", "  if n < 2 then return false end\n  if n ==\
    \ 2 then return true end\n  if n % 2 == 0 then return false end\n  if n % 3 ==\
    \ 0 then return false end\n  if n % 5 == 0 then return false end\n  if n % 7 ==\
    \ 0 then return false end\n  if n % 11 == 0 then return false end\n  if n % 13\
    \ == 0 then return false end\n  if n % 17 == 0 then return false end\n  if n %\
    \ 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n  if\
    \ n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 115 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 215 == 0 then return\
    \ false end\n  if n % 221 == 0 then return false ", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n\
    \  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false ", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  -- Test if n is evenly divisible by 3\n  if n % 3\
    \ == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible by 5\n\
    \  if n % 5 == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible\
    \ by 7\n  if n % 7 == 0 then\n    return false\n  end\n  -- Test if n is evenly\
    \ divisible by 11\n  if n % 11 == 0 then\n    return false\n  end\n  -- Test if\
    \ n is evenly divisible by 13\n  if n % 13 == 0 then\n    return false\n  end\n\
    \  -- Test if n is evenly divisible by 17\n  if n % 17 == 0 then\n    return false\n\
    \  end\n  -- Test if n is evenly divisible by 19\n  if n % 19 == 0 then\n    return\
    \ false\n  end\n  -- Test if n is evenly divisible by 23\n  if n % 23 == 0 then\n\
    \    return false\n  end\n  -- Test if n is evenly divisible by 29\n  if n % 29\
    \ == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible by 31\n\
    \  if n % 31 == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible\
    \ by 37\n  if n % 37 == 0 then\n    return false\n  end\n  -- Test if n is evenly\
    \ divisible by 41\n  if n % 41 == 0 then\n    return false\n  end\n  -- Test if\
    \ n is evenly divisible by 43\n  if n % 43 == 0 then\n    return false\n  end\n\
    \  -- Test if n is evenly divisible by 47\n  if n % 47 == 0 then\n    return false\n\
    \  end\n  -- Test if n is evenly divisible by 53\n  if n % 53 == 0 then\n    return\
    \ false\n  end\n  -- Test if n is evenly divisible by 59\n  if n % 59 == 0 then\n\
    \    return false\n  end\n  -- Test if n is evenly divisible by 61\n  if n % 61\
    \ == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible by 67\n\
    \  if n % 67 == 0 then\n    return false\n  end\n  -- Test if n is evenly divisible\
    \ by 71\n  if n % 71 == 0 then\n    return false\n  end\n  -- Test if n is even",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check odd and even\
    \ numbers since they are special cases.\n  if n % 3 == 0 then\n    return false\n\
    \  end\n  if n % 5 == 0 then\n    return false\n  end\n  -- Check divisibility\
    \ by all numbers up to and including n.\n  for i = 4, n do\n    if n % i == 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  -- Check odd-even primality of n\n  local\
    \ function is_odd_even(n)\n    if n % 2 == 0 then\n      return false\n    end\n\
    \    local i = 3\n    while i * i <= n do\n      if n % i == 0 then\n        return\
    \ false\n      end\n      i = i + 2\n    end\n    return true\n  end\n  -- Check\
    \ odd-even primality of n\n  if is_odd_even(n) then\n    return false\n  end\n\
    \  -- Check odd-odd primality of n\n  local function is_odd_odd(n)\n    if n %\
    \ 2 == 0 then\n      return false\n    end\n    local i = 3\n    while i * i <=\
    \ n do\n      if n % i == 0 then\n        return false\n      end\n      i = i\
    \ + 2\n    end\n    return true\n  end\n  -- Check odd-odd primality of n\n  if\
    \ is_odd_odd(n) then\n    return false\n  end\n  -- Check odd-even primality of\
    \ n\n  if is_odd_even(n) then\n    return false\n  end\n  -- Check odd-odd primality\
    \ of n\n  if is_odd_odd(n) then\n    return false\n  end\n  -- Check odd-even\
    \ primality of n\n  if is_odd_even(n) then\n    return false\n  end\n  -- Check\
    \ odd-odd primality of n\n  if is_odd_odd(n) then\n    return false\n  end\n \
    \ -- Check odd-even primality of n\n  if is_odd_even(n) then\n    return false\n\
    \  end\n  -- Check odd-odd primality of n\n  if is_odd_odd(n) then\n    return\
    \ false\n  end\n  -- Check odd-even primality of n\n  if is_odd_even(n) then\n\
    \    return false\n  end\n  -- Check odd-odd primality of n\n  if is_odd_odd(n)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n\n  if is_odd_even(n)\
    \ then\n    return false\n  end\n  -- Check odd-odd primality of n\n  if is_odd_odd(n)\
    \ then\n    return false\n  end\n  -- Check odd-even primality of n\n  if is_odd_even(n)\
    \ then\n    return false\n  end\n  -- ", "  if n < 2 then\n    return false\n\
    \  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ false\n  end\n  local m = math.floor(n/2)\n  for i = 2, m do\n    if n % i ==\
    \ 0 then\n      return false\n    end\n  end\n  return true\nend", "  if n < 2\
    \ then\n    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if\
    \ n % 2 == 0 then\n    return false\n  end\n  -- Check odd-even numbers for primality\n\
    \  if n % 3 == 0 then\n    return false\n  end\n  -- Check odd-even numbers for\
    \ primality\n  if n % 5 == 0 then\n    return false\n  end\n  -- Check odd-even\
    \ numbers for primality\n  if n % 7 == 0 then\n    return false\n  end\n  -- Check\
    \ odd-even numbers for primality\n  if n % 11 == 0 then\n    return false\n  end\n\
    \  -- Check odd-even numbers for primality\n  if n % 13 == 0 then\n    return\
    \ false\n  end\n  -- Check odd-even numbers for primality\n  if n % 17 == 0 then\n\
    \    return false\n  end\n  -- Check odd-even numbers for primality\n  if n %\
    \ 19 == 0 then\n    return false\n  end\n  -- Check odd-even numbers for primality\n\
    \  if n % 23 == 0 then\n    return false\n  end\n  -- Check odd-even numbers for\
    \ primality\n  if n % 29 == 0 then\n    return false\n  end\n  -- Check odd-even\
    \ numbers for primality\n  if n % 31 == 0 then\n    return false\n  end\n  --\
    \ Check odd-even numbers for primality\n  if n % 37 == 0 then\n    return false\n\
    \  end\n  -- Check odd-even numbers for primality\n  if n % 41 == 0 then\n   \
    \ return false\n  end\n  -- Check odd-even numbers for primality\n  if n % 43\
    \ == 0 then\n    return false\n  end\n  -- Check odd-even numbers for primality\n\
    \  if n % 47 == 0 then\n    return false\n  end\n  -- Check odd-even numbers for\
    \ primality\n  if n % 53 == 0 then\n    return false\n  end\n  -- Check odd-even\
    \ numbers for primality\n  if n % 59 == 0 then\n    return false\n  end\n  --\
    \ Check odd-even numbers for primality\n  if n % 61 == 0 then\n    return false\n\
    \  end\n  -- Check odd-even numbers for primality\n  if n % 67 == 0 then\n   \
    \ return false\n  end\n  -- Check odd-even numbers for primality\n  if n % 71\
    \ == 0 then\n    return false\n  end\n  -- Check odd-even numbers for primality\n\
    \  if n % 73 == 0 then\n    return false\n  end\n  -- ", "  -- Check special cases\
    \ (all primes except 2 and 3).\n  if n < 2 then\n    return false\n  elseif n\
    \ < 3 then\n    return true\n  end", "  if n <= 1 then return false end\n  if\
    \ n == 2 then return true end\n  if n % 2 == 0 then return false end\n  if n %\
    \ 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if n\
    \ % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n  if\
    \ n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 1253 == 0 then return false end\n  if n % 127 == 0 then\
    \ return false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0\
    \ then return false end\n  if n % 141 == 0 then return false end\n  if n % 147\
    \ == 0 then return false end\n  if n % 151 == 0 then return false end\n  if n\
    \ % 157 == 0 then return false end\n  if n % 161 == 0 then return false end\n\
    \  if n % 165 == 0 then return false end\n  if n % 169 == 0 then return false\
    \ end\n  if n % 173 == 0 then return false end\n  if n % 177 == 0 then return\
    \ false end\n  if n % 181 == 0 then return false end\n  if n % 185 == 0 then return\
    \ false end\n  if n % 189 == 0 then return false end\n  if n % 193 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then ",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  for i = 3, math.floor(n/2), 2 do\n    if n % i\
    \ == 0 then return false end\n  end\n  return true\nend", "  if n < 2 then\n \
    \   return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  -- Test if n is prime using trial division.\n\
    \  for i = 2, n do\n    if n % i == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local\
    \ i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return false\n \
    \   end\n    i = i + 2\n  end\n  return true\nend", "  -- If n is prime, return\
    \ true, else return false.\n  if n == 1 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  -- If n is even, then\
    \ (n-1)/2 is also even.\n  if n % 2 == 1 then return is_prime((n-1)/2) end\n \
    \ -- If n is odd, then (n-1)/2 is odd.\n  return not is_prime((n-1)/2)\nend",
  "  -- Base case: n is 0 or 1.\n  if n == 0 or n == 1 then\n    return false\n  end",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  if n % 3 == 0 then return false end\n  if n %\
    \ 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n  if n\
    \ % 11 == 0 then return false end\n  if n % 13 == 0 then return false end\n  if\
    \ n % 17 == 0 then return false end\n  if n % 19 == 0 then return false end\n\
    \  if n % 23 == 0 then return false end\n  if n % 29 == 0 then return false end\n\
    \  if n % 31 == 0 then return false end\n  if n % 37 == 0 then return false end\n\
    \  if n % 41 == 0 then return false end\n  if n % 43 == 0 then return false end\n\
    \  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false end\n\
    \  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false end\n\
    \  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false end\n\
    \  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false end\n\
    \  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false end\n\
    \  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false end\n\
    \  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return false\
    \ end\n  if n % 111 == 0 then return false end\n  if n % 117 == 0 then return\
    \ false end\n  if n % 121 == 0 then return false end\n  if n % 1253 == 0 then\
    \ return false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0\
    \ then return false end\n  if n % 137 == 0 then return false end\n  if n % 141\
    \ == 0 then return false end\n  if n % 147 == 0 then return false end\n  if n\
    \ % 151 == 0 then return false end\n  if n % 157 == 0 then return false end\n\
    \  if n % 161 == 0 then return false end\n  if n % 165 == 0 then return false\
    \ end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 193 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return ", "  if n < 2 then return false end\n\
    \  if n == 1 then return true end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n \
    \ if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false ", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n\
    \  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 215 == 0 then return\
    \ false end\n  if n % 219 == 0 then return false ", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if\
    \ n == 0 then return false end\n  if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or\
    \ n % 7 == 0 or n == 1 or n == 0 then return false end\n  local i = 3\n  while\
    \ i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n    i = i + 2\n\
    \  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n\
    \ == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 2 == 1 then\n    return\
    \ not is_prime(n - 2)\n  end\n  -- Check odd-even numbers for primeness\n  if\
    \ n % 3 == 0 then\n    return not is_prime(n - 3)\n  end\n  -- Check odd-even\
    \ numbers for primeness\n  if n % 5 == 0 then\n    return not is_prime(n - 5)\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 7 == 0 then\n    return\
    \ not is_prime(n - 7)\n  end\n  -- Check odd-even numbers for primeness\n  if\
    \ n % 11 == 0 then\n    return not is_prime(n - 11)\n  end\n  -- Check odd-even\
    \ numbers for primeness\n  if n % 13 == 0 then\n    return not is_prime(n - 13)\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 17 == 0 then\n   \
    \ return not is_prime(n - 17)\n  end\n  -- Check odd-even numbers for primeness\n\
    \  if n % 19 == 0 then\n    return not is_prime(n - 19)\n  end\n  -- Check odd-even\
    \ numbers for primeness\n  if n % 23 == 0 then\n    return not is_prime(n - 23)\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 29 == 0 then\n   \
    \ return not is_prime(n - 29)\n  end\n  -- Check odd-even numbers for primeness\n\
    \  if n % 31 == 0 then\n    return not is_prime(n - 31)\n  end\n  -- Check odd-even\
    \ numbers for primeness\n  if n % 37 == 0 then\n    return not is_prime(n - 37)\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 41 == 0 then\n   \
    \ return not is_prime(n - 41)\n  end\n  -- Check odd-even numbers for primeness\n\
    \  if n % 43 == 0 then\n    return not is_prime(n - 43)\n  end\n  -- Check odd-even\
    \ numbers for primeness\n  if n % 47 == 0 then\n    return not is_prime(n - 47)\n\
    \  end\n  -- Check odd-even numbers for primeness\n  if n % 53 == 0 then\n   \
    \ return not is_prime(n - ", "  if n < 2 then\n    return false\n  end\n  if n\
    \ == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\n\
    \    return false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  local i = 3\n  while i * i <= n do\n \
    \   if n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n  return\
    \ true\nend", "  if n < 2 then return false end\n  if n == 2 then return true\
    \ end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false\
    \ end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false\
    \ end\n  if n == 1 then return false end\n  if n == 0 then return true end\n \
    \ if n == 2 then return true end\n  if n == 3 then return true end\n  if n ==\
    \ 4 then return true end\n  if n == 5 then return true end\n  if n == 6 then return\
    \ true end\n  if n == 7 then return true end\n  if n == 8 then return true end\n\
    \  if n == 9 then return true end\n  if n == 10 then return true end\n  if n ==\
    \ 11 then return true end\n  if n == 12 then return true end\n  if n == 13 then\
    \ return true end\n  if n == 14 then return true end\n  if n == 15 then return\
    \ true end\n  if n == 16 then return true end\n  if n == 17 then return true end\n\
    \  if n == 18 then return true end\n  if n == 19 then return true end\n  if n\
    \ == 20 then return true end\n  if n == 21 then return true end\n  if n == 22\
    \ then return true end\n  if n == 23 then return true end\n  if n == 24 then return\
    \ true end\n  if n == 25 then return true end\n  if n == 26 then return true end\n\
    \  if n == 27 then return true end\n  if n == 28 then return true end\n  if n\
    \ == 29 then return true end\n  if n == 30 then return true end\n  if n == 31\
    \ then return true end\n  if n == 32 then return true end\n  if n == 33 then return\
    \ true end\n  if n == 34 then return true end\n  if n == 35 then return true end\n\
    \  if n == 36 then return true end\n  if n == 37 then return true end\n  if n\
    \ == 38 then return true end\n  if n == 39 then return true end\n  if n == 40\
    \ then return true end\n  if n == 41 then return true end\n  if n == 42 then return\
    \ true end\n  if n == 43 then return true end\n  if n == 44 then return true end\n\
    \  if n == 45 then return true end\n  if n == 46 then return true end\n  if n\
    \ == 47 then return true end\n  if n == 48 then return true end\n  if n == 49\
    \ then return true end\n  if n == 50 then return true end\n  if n == 51 then return\
    \ true end\n  if n == 52 then return true end\n  if n == 53 then return true end\n\
    \  if n == 54 then return true end\n", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then\
    \ return false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return\
    \ false end\n  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return\
    \ false end\n  if n % 7 == 0 then return false end\n  if n % 11 == 0 then return\
    \ false end\n  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return\
    \ false end\n  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return\
    \ false end\n  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return\
    \ false end\n  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return\
    \ false end\n  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return\
    \ false end\n  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return\
    \ false end\n  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return\
    \ false end\n  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return\
    \ false end\n  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return\
    \ false end\n  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return\
    \ false end\n  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return\
    \ false end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 171 == 0 then return\
    \ false end\n  if n % 177 == 0 then return false end\n  if n % 181 == 0 then return\
    \ false end\n  if n % 187 == 0 then return false end\n  if n % 191 == 0 then return\
    \ false end\n  if n % 197 == 0 then return false end\n  if n % 201 == 0 then return\
    \ false end\n  if n % 207 == 0 then return false end\n  if n % 211 == 0 then return\
    \ false end\n  if n % 215 == 0 then return false ", "  -- Check special case\n\
    \  if n < 2 then\n    return false\n  end", "  if n < 2 then return false end\n\
    \  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  if\
    \ n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n  if\
    \ n % 7 == 0 then return false end\n  if n % 11 == 0 then return false end\n \
    \ if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n\
    \  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 127 == 0 then return false end\n  if n % 131 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 147 == 0 then return false end\n  if n % 151 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 167 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false end\n  if n % 179 == 0 then return false end\n  if n % 183 == 0 then return\
    \ false end\n  if n % 191 == 0 then return false end\n  if n % 197 == 0 then return\
    \ false end\n  if n % 201 == 0 then return false end\n  if n % 207 == 0 then return\
    \ false end\n  if n % 211 == 0 then return false end\n  if n % 215 == 0 then return\
    \ false end\n  if n % 219 == 0 then return false ", "  -- https://en.wikipedia.org/wiki/Primality_test\n\
    \  -- https://primes.utm.edu/lists/small/millions/\n  -- https://primes.utm.edu/lists/small/millions/test.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/small.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- https://primes.utm.edu/lists/small/millions/large.html\n  -- https://primes.utm.edu/lists/small/millions/medium.html\n\
    \  -- ", "  if n < 2 then return false end\n  if n == 2 then return true end\n\
    \  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return false end\n\
    \  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false end\n\
    \  if n == 1 then return false end\n  if n == 0 then return false end\n  if n\
    \ == 2 then return true end\n  if n == 3 then return true end\n  if n == 4 then\
    \ return true end\n  if n == 5 then return true end\n  if n == 6 then return true\
    \ end\n  if n == 7 then return true end\n  if n == 8 then return true end\n  if\
    \ n == 9 then return true end\n  if n % 11 == 0 then return false end\n  if n\
    \ % 13 == 0 then return false end\n  if n % 17 == 0 then return false end\n  if\
    \ n % 19 == 0 then return false end\n  if n % 23 == 0 then return false end\n\
    \  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false end\n\
    \  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false end\n\
    \  if n % 43 == 0 then return false end\n  if n % 47 == 0 then return false end\n\
    \  if n % 53 == 0 then return false end\n  if n % 59 == 0 then return false end\n\
    \  if n % 61 == 0 then return false end\n  if n % 67 == 0 then return false end\n\
    \  if n % 71 == 0 then return false end\n  if n % 73 == 0 then return false end\n\
    \  if n % 79 == 0 then return false end\n  if n % 83 == 0 then return false end\n\
    \  if n % 89 == 0 then return false end\n  if n % 97 == 0 then return false end\n\
    \  if n % 101 == 0 then return false end\n  if n % 103 == 0 then return false\
    \ end\n  if n % 107 == 0 then return false end\n  if n % 111 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 123 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 137 == 0 then return\
    \ false end\n  if n % 141 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 157 == 0 then return\
    \ false end\n  if n % 161 == 0 then return false end\n  if n % 165 == 0 then return\
    \ false end\n  if n % 169 == 0 then return false ", "  -- Primality test. Returns\
    \ true if n is prime and false otherwise.\n  -- >>> is_prime(6)\n  -- False\n\
    \  -- >>> is_prime(101)\n  -- True\n  -- >>> is_prime(11)\n  -- True\n  -- >>>\
    \ is_prime(13441)\n  -- True\n  -- >>> is_prime(61)\n  -- True\n  -- >>> is_prime(4)\n\
    \  -- False\n  -- >>> is_prime(1)\n  -- False\n  if n == 1 then return false end\n\
    \  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n  --\
    \ Test if n is divisible by all primes up to sqrt(n).\n  -- This can be done more\
    \ efficiently by sieving multiples of primes\n  -- instead of testing all numbers\
    \ up to sqrt(n).\n  for i = 2, math.floor(math.sqrt(n)) + 1 do\n    if n % i ==\
    \ 0 then return false end\n  end\n  return true\nend", "  -- http://en.wikipedia.org/wiki/Primality_test\n\
    \  -- http://primes.utm.edu/lists/small/10000.txt\n  -- http://primes.utm.edu/lists/small/100003.txt\n\
    \  -- http://primes.utm.edu/lists/small/100004.txt\n  -- http://primes.utm.edu/lists/small/100005.txt\n\
    \  -- http://primes.utm.edu/lists/small/100006.txt\n  -- http://primes.utm.edu/lists/small/100007.txt\n\
    \  -- http://primes.utm.edu/lists/small/100008.txt\n  -- http://primes.utm.edu/lists/small/100009.txt\n\
    \  -- http://primes.utm.edu/lists/small/100010.txt\n  -- http://primes.utm.edu/lists/small/100011.txt\n\
    \  -- http://primes.utm.edu/lists/small/100012.txt\n  -- http://primes.utm.edu/lists/small/100013.txt\n\
    \  -- http://primes.utm.edu/lists/small/100014.txt\n  -- http://primes.utm.edu/lists/small/100015.txt\n\
    \  -- http://primes.utm.edu/lists/small/100016.txt\n  -- http://primes.utm.edu/lists/small/100017.txt\n\
    \  -- http://primes.utm.edu/lists/small/100018.txt\n  -- http://primes.utm.edu/lists/small/100019.txt\n\
    \  -- http://primes.utm.edu/lists/small/100020.txt\n  -- http://primes.utm.edu/lists/small/100021.txt\n\
    \  -- http://primes.utm.edu/lists/small/100022.txt\n  -- http://primes.utm.edu/lists/small/100023.txt\n\
    \  -- http://primes.utm.edu/lists/small/100024.txt\n  -- http://primes.utm.edu/lists/small/100025.txt\n\
    \  -- http://primes.utm.edu/lists/small/100026.txt\n  -- http://primes.utm.edu/lists/small/100027.txt\n\
    \  -- http://primes.utm.edu/lists/small/100028.txt\n  -- http://primes.utm.edu/lists/small/100029.txt\n\
    \  -- http://primes.utm.edu/lists/small/100030.txt\n  -- http://primes.utm.edu/lists/small/100032.txt\n\
    \  -- http://primes.utm.edu/lists/small/100033.txt\n  -- http://primes.utm.edu/",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  local i = 3\n  while i <= math.sqrt(n) do\n  \
    \  if n % i == 0 then return false end\n    i = i + 2\n  end\n  return true\n\
    end", "  -- The prime number theorem states that every positive integer greater\
    \ than 1 that has no positive divisors other than 1 is a prime number.\n  -- http://en.wikipedia.org/wiki/Prime_number\n\
    \  -- http://primes.utm.edu/lists/small/10000.txt\n  -- http://primes.utm.edu/lists/small/100003.txt\n\
    \  -- http://primes.utm.edu/lists/small/100004.txt\n  -- http://primes.utm.edu/lists/small/100005.txt\n\
    \  -- http://primes.utm.edu/lists/small/100006.txt\n  -- http://primes.utm.edu/lists/small/100007.txt\n\
    \  -- http://primes.utm.edu/lists/small/100008.txt\n  -- http://primes.utm.edu/lists/small/100009.txt\n\
    \  -- http://primes.utm.edu/lists/small/100010.txt\n  -- http://primes.utm.edu/lists/small/100011.txt\n\
    \  -- http://primes.utm.edu/lists/small/100013.txt\n  -- http://primes.utm.edu/lists/small/100014.txt\n\
    \  -- http://primes.utm.edu/lists/small/100015.txt\n  -- http://primes.utm.edu/lists/small/100016.txt\n\
    \  -- http://primes.utm.edu/lists/small/100017.txt\n  -- http://primes.utm.edu/lists/small/100018.txt\n\
    \  -- http://primes.utm.edu/lists/small/100019.txt\n  -- http://primes.utm.edu/lists/small/100020.txt\n\
    \  -- http://primes.utm.edu/lists/small/100024.txt\n  -- http://primes.utm.edu/lists/small/100025.txt\n\
    \  -- http://primes.utm.edu/lists/small/100026.txt\n  -- http://primes.utm.edu/lists/small/100027.txt\n\
    \  -- http://primes.utm.edu/lists/small/100028.txt\n  -- http://primes.utm.edu/lists/small/100029.txt\n\
    \  -- http://primes.utm.edu/lists/small/100032.txt\n  -- http://primes.utm.edu/lists/small/100033.txt\n\
    \  -- http://primes.utm.edu/lists/small/100034.txt\n  -- http://primes.utm.edu/lists/small/100035.txt\n\
    \  -- http://primes.utm.edu/lists/small/100036.txt\n  -- http://primes.utm.edu/lists/small/100037.txt",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n == 1\
    \ then return false end\n  if n % 2 == 0 then return false end\n  local i = 3\n\
    \  while i <= math.sqrt(n) do\n    if n % i == 0 then return false end\n    i\
    \ = i + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return\
    \ false\n    end\n    i = i + 2\n  end\n  return true\nend", "  -- Primality test\n\
    \  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n\
    \  end\n  if n % 2 == 0 then\n    return false\n  end\n  -- Trial division test\n\
    \  local i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return false\n\
    \    end\n    i = i + 2\n  end\n  return true\nend", "  -- Primality test\n  if\
    \ n < 2 then\n    return false\n  end\n  -- Trial division test\n  if n == 1 then\n\
    \    return true\n  end\n  -- Sieve of Eratosthenes\n  local function sieve(k)\n\
    \    local i, p, s, t, m = {}, {}, {}, {}, {}\n    for i = 2, k do\n      p[i]\
    \ = true\n    end\n    for i = 2, k do\n      if not p[i] then\n        for j\
    \ = i * i, k, i do\n          p[j] = false\n        end\n      end\n    end\n\
    \    for i = 2, k do\n      if p[i] then\n        s[i] = i\n      end\n    end\n\
    \    for i = 2, k do\n      if not p[i] then\n        local m = i - 1\n      \
    \  while m > 0 do\n          t = s[m]\n          s[m] = s[m+1]\n          s[m+1]\
    \ = t\n          m = m - 1\n        end\n        s[i] = i - 1\n      end\n   \
    \ end\n    return s\n  end\n  -- Sieve of Atkin\n  local function atkin(k)\n \
    \   local i, p, s, t, m = {}, {}, {}, {}, {}\n    for i = 2, k do\n      p[i]\
    \ = true\n    end\n    for i = 2, k do\n      if not p[i] then\n        for j\
    \ = i * i, k, i do\n          p[j] = false\n        end\n      end\n    end\n\
    \    for i = 2, k do\n      if p[i] then\n        s[i] = i\n      end\n    end\n\
    \    for i = 2, k do\n      if not p[i] then\n        local m = i - 1\n      \
    \  while m > 0 do\n          t = s[m]\n          s[m] = s[m+1]\n          s[m+1]\
    \ = t\n          m = m - 1\n        end\n        s[i] = i - 1\n      end\n   \
    \ end\n    return s\n  end\n  -- Sieve of Sundaram\n  local function sundaram(k)\n\
    \    local i, p, s, t, m = {}, {}, {}, {}, {}\n    for i = 2, k do\n      p[i]\
    \ = true\n    end\n    for i = 2, k do\n      if not p[i] then\n        for j\
    \ = i * i, k, i do\n          p[j] = false\n        end\n      end\n    end\n\
    \    for i = 2, k do\n      if p[i] then\n        s[i] = i\n      end\n    end\n\
    \    for i = 2, k do\n      if not p[i] then\n        local m = i - 1\n      \
    \  while m > 0 do\n          t = s[m]\n          s[m] = s[m+1]\n          s[m+1]\
    \ = t\n          m = m - 1\n        end\n        s[i] = i - 1\n      end\n   \
    \ end\n    return s\n  end", "  -- Check special cases:\n  -- 0 and 1 are not\
    \ primes.\n  if n == 0 then return false end\n  if n == 1 then return true end\n\
    \  -- Check even numbers:\n  if n % 2 == 0 then return false end\n  -- Check odd\
    \ numbers:\n  local m = math.floor(n/2)\n  while m ~= 0 do\n    if n % m == 0\
    \ then return false end\n    -- Skip even numbers:\n    m = m / 2\n  end\n  --\
    \ If we get here, then n is prime!\n  return true\nend", "  -- The prime test\
    \ is based on the sieve of Eratosthenes. \n  -- The sieve consists of two arrays,\
    \ one containing the odd numbers, \n  -- one containing the even numbers. \n \
    \ -- The first array is initialized to {2,3,5,7,11,...} and \n  -- contains all\
    \ the odd numbers. The second array is initialized to \n  -- {0} and contains\
    \ all the even numbers. \n  -- The first array is then iteratively updated with\
    \ the even numbers \n  -- from the second array, until all even numbers have been\
    \ \n  -- iterated over. \n  -- The first array is then iteratively updated with\
    \ the odd numbers \n  -- from the second array, until all odd numbers have been\
    \ \n  -- iterated over. \n  -- The sieve is then iteratively updated with the\
    \ even and odd \n  -- numbers until all numbers have been iterated over. \n  --\
    \ The final array contains all the prime numbers. \n  -- The first array is then\
    \ iteratively updated with the even numbers \n  -- from the second array, until\
    \ all even numbers have been \n  -- iterated over. \n  -- The first array is then\
    \ iteratively updated with the odd numbers \n  -- from the second array, until\
    \ all odd numbers have been \n  -- iterated over. \n  -- The sieve is then iteratively\
    \ updated with the even and odd \n  -- numbers until all numbers have been iterated\
    \ over. \n  -- The final array contains all the prime numbers. \n  -- The first\
    \ array is then iteratively updated with the even numbers \n  -- from the second\
    \ array, until all even numbers have been \n  -- iterated over. \n  -- The first\
    \ array is then iteratively updated with the odd numbers \n  -- from the second\
    \ array, until all odd numbers have been \n  -- iterated over. \n  -- The sieve\
    \ is then iteratively updated with the even and odd \n  -- numbers until all numbers\
    \ have been iterated over. \n  -- The final array contains all the prime numbers.\
    \ \n  -- The first array is then iteratively updated with the even numbers \n\
    \  -- from the second array, until all even numbers have been \n  -- iterated\
    \ over. \n  -- The first array is then iteratively updated with the odd numbers\
    \ \n  -- from the second array, until all odd numbers have been \n  -- iterated\
    \ over. \n  -- The sieve is then iteratively updated with the even and odd \n\
    \  -- numbers until all numbers have been iterated over. \n  -- The final array\
    \ contains all the prime numbers. \n  -- The first array is then iteratively updated\
    \ with the even numbers \n  -- from the second array, until all even number",
  "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n    return true\n \
    \ end\n  if n % 2 == 0 then\n    return false\n  end\n  local i = 3\n  while i\
    \ * i <= n do\n    if n % i == 0 then\n      return false\n    end\n    i = i\
    \ + 2\n  end\n  return true\nend", "  if n < 2 then\n    return false\n  end\n\
    \  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n    return false\n\
    \  end\n  -- Check odd and even numbers\n  local i = 3\n  while i <= math.sqrt(n)\
    \ do\n    if n % i == 0 then\n      return false\n    end\n    i = i + 2\n  end\n\
    \  return true\nend", "  if n < 2 then\n    return false\n  end\n  if n == 2 then\n\
    \    return true\n  end\n  if n % 2 == 0 then\n    return false\n  end\n  local\
    \ i = 3\n  while i * i <= n do\n    if n % i == 0 then\n      return false\n \
    \   end\n    i = i + 2\n  end\n  return true\nend", "  if n < 2 then return false\
    \ end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false end\n\
    \  if n % 3 == 0 then return false end\n  if n % 5 == 0 then return false end\n\
    \  if n % 7 == 0 then return false end\n  if n == 1 then return false end\n  if\
    \ n == 0 then return true end\n  if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or\
    \ n % 7 == 0 or n == 1 then\n    return false\n  end\n  local i = 3\n  while i\
    \ <= math.sqrt(n) do\n    if n % i == 0 then return false end\n    i = i + 2\n\
    \  end\n  return true\nend", "  if n < 2 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  for i=3,math.floor(n/2),2\
    \ do\n    if n % i == 0 then return false end\n  end\n  return true\nend", " \
    \ if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  local i = 3\n  while i <= math.sqrt(n) do\n  \
    \  if n % i == 0 then return false end\n    i = i + 2\n  end\n  return true\n\
    end", "  if n < 2 then return false end\n  if n == 2 then return true end\n  if\
    \ n % 2 == 0 then return false end\n  local i = 3\n  while i * i <= n do\n   \
    \ if n % i == 0 then return false end\n    i = i + 2\n  end\n  return true\nend",
  "  if n < 2 then return false end\n  if n == 2 then return true end\n  if n % 2\
    \ == 0 then return false end\n  for i=3,math.floor(n/2),2 do\n    if n % i ==\
    \ 0 then return false end\n  end\n  return true\nend", "  if n < 2 then\n    return\
    \ false\n  end\n  if n == 2 then\n    return true\n  end\n  if n % 2 == 0 then\n\
    \    return false\n  end\n  for i=3,math.floor(n/2),2 do\n    if n % i == 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  if n < 2 then return\
    \ false end\n  if n == 2 then return true end\n  if n % 2 == 0 then return false\
    \ end\n  local i = 3\n  while i <= math.sqrt(n) do\n    if n % i == 0 then return\
    \ false end\n    i = i + 2\n  end\n  return true\nend", "  -- The prime test is\
    \ based on the sieve of Eratosthenes. \n  -- See http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\
    \ for more information.\n  -- The sieve is computed once per thread, so we use\
    \ a global variable.\n  -- The sieve is computed once per thread, so we use a\
    \ global variable.\n  -- The sieve is computed once per thread, so we use a global\
    \ variable.\n  -- The sieve is computed once per thread, so we use a global variable.\n\
    \  -- The sieve is computed once per thread, so we use a global variable.\n  --\
    \ The sieve is computed once per thread, so we use a global variable.\n  -- The\
    \ sieve is computed once per thread, so we use a global variable.\n  -- The sieve\
    \ is computed once per thread, so we use a global variable.\n  -- The sieve is\
    \ computed once per thread, so we use a global variable.\n  -- The sieve is computed\
    \ once per thread, so we use a global variable.\n  -- The sieve is computed once\
    \ per thread, so we use a global variable.\n  -- The sieve is computed once per\
    \ thread, so we use a global variable.\n  -- The sieve is computed once per thread,\
    \ so we use a global variable.\n  -- The sieve is computed once per thread, so\
    \ we use a global variable.\n  -- The sieve is computed once per thread, so we\
    \ use a global variable.\n  -- The sieve is computed once per thread, so we use\
    \ a global variable.\n  -- The sieve is computed once per thread, so we use a\
    \ global variable.\n  -- The sieve is computed once per thread, so we use a global\
    \ variable.\n  -- The sieve is computed once per thread, so we use a global variable.\n\
    \  -- The sieve is computed once per thread, so we use a global variable.\n  --\
    \ The sieve is computed once per thread, so we use a global variable.\n  -- The\
    \ sieve is computed once per thread, so we use a global variable.\n  -- The sieve\
    \ is computed once per thread, so we use a global variable.\n  -- The sieve is\
    \ computed once per thread, so we use a global variable.\n  -- The sieve is computed\
    \ once per thread, so we use a global variable.\n  -- The sieve is computed once\
    \ per thread, so we use a global variable.\n  -- The sieve is computed once per\
    \ thread, so we use a global variable.\n  -- The sieve is computed once per thread,\
    \ so we use a global variable.\n  -- The sieve is computed once per thread, so\
    \ we use a global variable.\n  -- The sieve is computed once per thread, so we\
    \ use a global variable.", "  if n < 2 then return false end\n  if n == 2 then\
    \ return true end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then\
    \ return false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then\
    \ return false end\n  if n == 1 then return false end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n ==\
    \ 1 or n == 0 then return false end\n  local i\n  for i = 5, 7, 2, 3 do\n    if\
    \ n % i == 0 then return false end\n  end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

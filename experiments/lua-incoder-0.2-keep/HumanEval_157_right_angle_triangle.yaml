name: HumanEval_157_right_angle_triangle
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n-- sides form a right-angled triangle, False otherwise.\n-- A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n-- 90 degree.\n\
  -- Example:\n-- right_angle_triangle(3, 4, 5) == True\n-- right_angle_triangle(1,\
  \ 2, 3) == False\nlocal function right_angle_triangle(a, b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = right_angle_triangle\n\
  \    lu.assertEquals(candidate(3, 4, 5), true)\n    lu.assertEquals(candidate(1,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(10, 6, 8), true)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), false)\n    lu.assertEquals(candidate(7, 24, 25), true)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), false)\n    lu.assertEquals(candidate(5, 12, 13), true)\n    lu.assertEquals(candidate(15,\
  \ 8, 17), true)\n    lu.assertEquals(candidate(48, 55, 73), true)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), false)\n    lu.assertEquals(candidate(2, 2, 10), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local ab = a - b\n  local bc = b - c\n  local ac = c - a\n  return\
    \ ab == bc and ab == ac\nend", "    local ab = math.abs(b - a)\n    local bc =\
    \ math.abs(c - b)\n    local ac = math.abs(c - a)\n    return ab == bc and ab\
    \ == ac\nend", "\t-- Check that the sides are non-zero\n\tif a ~= 0 or b ~= 0\
    \ or c ~= 0 then\n\t\treturn false\n\tend", "\tlocal ab = math.abs(b - a)\n\t\
    local bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and\
    \ (ab > ac or bc > ac)\nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c\
    \ - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "\t\
    local ab = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\tlocal ca = math.abs(c-a)\n\
    \treturn ab > bc and ab > ca\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc\
    \ = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn (ab + bc == ac)\n\
    end", "  local ab = a - b\n  local bc = b - c\n  local cb = c - b\n  return ab\
    \ > 0 and bc > 0 and cb > 0 and ab + bc + cb == ab * bc\nend", "   local ab =\
    \ math.abs(b - a)\n   local bc = math.abs(c - b)\n   local ac = math.abs(c - a)\n\
    \   return (ab > bc) and (ab > ac)\nend", "\tlocal ab = a - b\n\tlocal bc = b\
    \ - c\n\tlocal cb = c - b\n\tlocal ab_sq = ab * ab\n\tlocal bc_sq = bc * bc\n\t\
    local cb_sq = cb * cb\n\tlocal det = ab_sq + bc_sq - cb_sq\n\t\n\tif det < 0 then\n\
    \t\treturn false\n\telse\n\t\tlocal inv_det = 1 / det\n\t\tlocal inv_ab = ab *\
    \ inv_det\n\t\tlocal inv_bc = bc * inv_det\n\t\tlocal inv_cb = cb * inv_det\n\t\
    \t\n\t\treturn (inv_ab + inv_bc + inv_cb) == 0 and\n\t\t\t(inv_ab - inv_bc + inv_cb)\
    \ == 0 and\n\t\t\t(inv_ab - inv_bc - inv_cb) == 0\n\tend\nend", "\tlocal ab =\
    \ a - b\n\tlocal bc = b - c\n\tlocal cb = c - b\n\tlocal det = ab * cb - bc *\
    \ ab\n\treturn det > 0\nend", "\t-- Check that the sides are all positive\n\t\
    if a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend\n\t-- Check that the\
    \ sides are equal\n\tif a == b and a == c then\n\t\treturn true\n\tend\n\t-- Check\
    \ that the sides are equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check\
    \ that the sides are equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check\
    \ that the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n", "  local ab = math.abs(b - a)\n  local bc = math.abs(c\
    \ - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "  --\
    \ Check that the sides are non-zero\n  if a == 0 or b == 0 or c == 0 then\n  \
    \  return false\n  end", "  local ab = math.abs(b - a)\n  local bc = math.abs(c\
    \ - b)\n  local ac = math.abs(c - a)\n  return ab > bc and\n         ab > ac and\n\
    \         bc > ac\nend", "    local ab = a - b\n    local bc = b - c\n    local\
    \ cb = c - b\n    local ab_sq = ab * ab\n    local bc_sq = bc * bc\n    local\
    \ cb_sq = cb * cb\n    local det = ab_sq * bc_sq - bc_sq * cb_sq\n    return det\
    \ >= 0 and det <= ab_sq * cb_sq\nend", "  local ab = a - b\n  local bc = b - c\n\
    \  local ac = c - a\n  return ab*bc*ac > 0\nend", "\tlocal ab = a - b\n\tlocal\
    \ bc = b - c\n\tlocal ac = c - a\n\tlocal ab_sq = ab * ab\n\tlocal bc_sq = bc\
    \ * bc\n\tlocal ac_sq = ac * ac\n\tlocal ab_ac = ab * ac\n\tlocal ab_ab = ab *\
    \ ab\n\tlocal bc_bc = bc * bc \n\tlocal bc_ab = bc * ab\n\tlocal ac_ac = ac *\
    \ ac\n\tlocal ac_ab = ac * ab\n\tlocal ab_bc = ab * bc\n\tlocal ab_bc = ab * bc\n\
    \tlocal bc_ac = bc * ac\n\tlocal bc_ab = bc * ab\n\tlocal ab_ac = ab * ac\n\t\
    local ab_ab = ab * ab\n\tlocal bc_bc = bc * bc \n\tlocal bc_ab = bc * ab\n\tlocal\
    \ ac_ac = ac * ac\n\tlocal ac_ab = ac * ab\n\tlocal ab_bc = ab * bc\n\tlocal ab_bc\
    \ = ab * bc\n\tlocal bc_ac = bc * ac\n\tlocal bc_ab = bc * ab\n\tlocal ab_ac =\
    \ ab * ac\n\tlocal ab_ab = ab * ab\n\tlocal bc_bc = bc * bc \n\tlocal bc_ab =\
    \ bc * ab\n\tlocal ac_ac = ac * ac\n\tlocal ac_ab = ac * ab\n\tlocal ab_bc = ab\
    \ * bc\n\tlocal ab_bc = ab * bc\n\tlocal bc_ac = bc * ac\n\tlocal bc_ab = bc *\
    \ ab\n\tlocal ab_ac = ab * ac\n\tlocal ab_ab = ab * ab\n\tlocal bc_bc = bc * bc\
    \ \n\tlocal bc_ab = bc * ab\n\tlocal ac_ac = ac * ac\n\tlocal ac_ab = ac * ab\n\
    \tlocal ab_bc = ab * bc\n\tlocal ab_bc = ab * bc\n\tlocal bc_ac = bc * ac\n\t\
    local bc_ab = bc * ab\n\tlocal ab_ac = ab * ac\n\tlocal ab_ab = ab * ab\n\tlocal\
    \ bc_bc = bc * bc \n\tlocal bc_ab = bc * ab\n\tlocal ac_ac = ac * ac\n\tlocal\
    \ ac_ab = ac * ab\n\tlocal ab_bc = ab * bc\n\tlocal ab_bc = ab * bc\n\t", "  local\
    \ ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ad = math.abs(a\
    \ - d)\n  local cd = math.abs(d - c)\n  \n  return ab > bc and ab > ad and ab\
    \ > cd\nend", "  -- Check that the sides are non-zero\n  if a == 0 then\n    return\
    \ b == 0 and c == 0 or b == 0 and c == 0 or b == 0 and c == 0 or b == 0 and c\
    \ == 0\n  elseif b == 0 then\n    return a == 0 and c == 0 or a == 0 and c ==\
    \ 0 or a == 0 and c == 0 or a == 0 and c == 0\n  elseif c == 0 then\n    return\
    \ a == 0 and b == 0 or a == 0 and b == 0 or a == 0 and b == 0 or a == 0 and b\
    \ == 0\n  end", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal ac = c - a\n\t\
    return ab > 0 and bc > 0 and ac > 0 and (ab + bc + ac) == (a + b + c)\nend", "\t\
    local ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ad = math.abs(a\
    \ - d)\n\tlocal de = math.abs(d - a)\n\treturn ab >= bc and ab >= ad and bc >=\
    \ de\nend", "\t-- Check that the sides are all positive.\n\tif a < 0 or b < 0\
    \ or c < 0 then\n\t\treturn false\n\tend", "  local ab = a - b\n  local bc = b\
    \ - c\n  local ac = c - a\n  return ab > 0 and bc > 0 and ac > 0 and ab + bc +\
    \ ac == 1\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\
    \tlocal ac = math.abs(c - a)\n\treturn ab == bc and ab == ac\nend", "  local ab\
    \ = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n\
    \  return ab > bc and (ab == bc or ac == math.pi/2)\nend", "\t-- Check that the\
    \ sides are all positive.\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\
    \tend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal cb = c - b\n\tlocal ab_sq\
    \ = ab * ab\n\tlocal bc_sq = bc * bc\n\tlocal cb_sq = cb * cb\n\tlocal det = ab_sq\
    \ * bc_sq - cb_sq * ab_sq\n\t\n\tif det < 0 then\n\t\treturn false\n\telse\n\t\
    \treturn det > 0\n\tend\nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c\
    \ - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "  --\
    \ Check that the sides are non-zero\n  if a ~= 0 or b ~= 0 or c ~= 0 then\n  \
    \  return false\n  end", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab == bc and ab == ac\nend", " \
    \ local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ad = math.abs(a\
    \ - d)\n  local de = math.abs(d - e)\n  return ab > bc and ab > ad and ab > de\n\
    end", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac\
    \ = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and ab > ac\nend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal ac\
    \ = c - a\n\tlocal ab_ac = ab * ac\n\tlocal ab_bc = ab * bc\n\tlocal bc_ac = bc\
    \ * ac\n\treturn ab_ac + ab_bc <= bc_ac\nend", "  local ab = a - b\n  local bc\
    \ = b - c\n  local ac = c - a\n  return ab == bc and ab == ac\nend", "   local\
    \ ab = math.abs(a-b)\n   local bc = math.abs(b-c)\n   local ca = math.abs(c-a)\n\
    \   return ab > bc and ab > ca\nend", "\t-- Check that the sides are all positive.\n\
    \tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend", "\tlocal ab = math.abs(a-b)\n\
    \tlocal bc = math.abs(b-c)\n\tlocal cd = math.abs(c-a)\n\t\n\tif ab > bc then\
    \ return ab > cd end\n\treturn bc > cd\nend", "\t-- Check that the sides are all\
    \ positive\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend", "\t--\
    \ Check that the sides are non-zero\n\tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\t\
    return false\n\tend", "    local ab = math.abs(b - a)\n    local bc = math.abs(c\
    \ - b)\n    local ac = math.abs(c - a)\n    local det = ab * bc - ac * ac\n  \
    \  return det > 0\nend", "\tlocal a = math.abs(a)\n\tlocal b = math.abs(b)\n\t\
    local c = math.abs(c)\n\tlocal ab = math.abs(a + b)\n\tlocal bc = math.abs(b +\
    \ c)\n\tlocal ac = math.abs(a + c)\n\treturn ab > bc and (ab > ac or bc > ac)\n\
    end", "  -- Check that the sides are non-zero\n  if a < 0 or b < 0 or c < 0 then\n\
    \    return false\n  end", "\t-- Check that the sides are non-zero\n\tif a ~=\
    \ 0 or b ~= 0 or c ~= 0 then\n\t\treturn false\n\tend", "  local ab = math.abs(b\
    \ - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab\
    \ > bc and ab > ac\nend", "  -- Check that the sides are non-zero\n  if a ~= 0\
    \ or b ~= 0 or c ~= 0 then\n    return false\n  end", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and (ab > ac or bc > ac)\nend", "  local ab = math.abs(b - a)\n  local\
    \ bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and (ab\
    \ > ac or bc > ac)\nend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal cb\
    \ = c - b\n\tlocal det = ab * cb - bc * ab\n\treturn det > 0\nend", "  local ab\
    \ = a - b\n  local bc = b - c\n  local ac = c - a\n  local abc = ab * bc\n  return\
    \ abc > 0 and abc < ab * ac\nend", "\tlocal ab = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\
    \tlocal ca = math.abs(c-a)\n\treturn ab > bc and (ab == bc or ca == b or ca ==\
    \ ca)\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal\
    \ ac = math.abs(c - a)\n\tlocal det = ab * bc - ac * ac\n\treturn det > 0\nend",
  "  local ab = math.abs(a-b)\n  local bc = math.abs(b-c)\n  local ac = math.abs(a-c)\n\
    \  return ab > bc and ab > ac\nend", "  -- Check that the sides are non-zero\n\
    \  if a <= 0 or b <= 0 or c <= 0 then\n    return false\n  end", "\tlocal ab =\
    \ math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\
    \treturn (ab + bc == ac)\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and ab > ac\nend", "  local\
    \ ab = a - b\n  local bc = b - c\n  local ac = c - a\n  return ab*bc*ac > 0 and\
    \ ab*ac*bc > 0\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c -\
    \ b)\n\tlocal ac = math.abs(c - a)\n\t\n\tif ab > bc then\n\t\tif ab > ac then\n\
    \t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\tif bc >\
    \ ac then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\nend",
  "  local ab = a - b\n  local bc = b - c\n  local ac = c - a\n  local abc = ab *\
    \ bc\n  return abc > 0 and abc < ab\nend", "\t-- Check that the sides are non-zero\n\
    \tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\treturn false\n\tend", "  local ab =\
    \ a - b\n  local bc = b - c\n  local cb = c - b\n  local det = ab * cb - bc *\
    \ ab\n  return det > 0\nend", "\t-- Check that the sides are non-zero\n\tif a\
    \ ~= 0 then\n\t\tif b ~= 0 then\n\t\t\tif c ~= 0 then\n\t\t\t\t-- Check that the\
    \ sides are equal\n\t\t\t\tif a == b and a == c then\n\t\t\t\t\t-- Check that\
    \ the angle is right\n\t\t\t\t\tif math.abs(math.atan2(c-b, a-b)) < math.pi then\n\
    \t\t\t\t\t\treturn true\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false\n\t\t\t\t\t\
    end\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\treturn\
    \ false\n\tend\nend", "\t-- Check that the sides are all positive\n\tif a < 0\
    \ or b < 0 or c < 0 then\n\t\treturn false\n\tend", "  local ab = math.abs(b -\
    \ a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab\
    \ > bc and ab > ac\nend", "  local ab = a - b\n  local bc = b - c\n  local ac\
    \ = c - a\n  return ab == bc and ab == ac\nend", "\tlocal ab = math.abs(b - a)\n\
    \tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and\
    \ ab > ac\nend", "  local ab = math.abs(a-b)\n  local bc = math.abs(b-c)\n  local\
    \ cd = math.abs(c-a)\n  return ab == bc and ab == cd or ab == cd or bc == cd\n\
    end", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac\
    \ = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "  local ab = math.abs(b\
    \ - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab\
    \ > bc and ab > ac\nend", "   local ab = a - b\n   local bc = b - c\n   local\
    \ ac = c - a\n   if ab == bc and ab == ac then\n      return true\n   elseif ab\
    \ == 0 then\n      return false\n   elseif bc == 0 then\n      return false\n\
    \   elseif ac == 0 then\n      return false\n   elseif ab == bc then\n      return\
    \ false\n   elseif ab == ac then\n      return true\n   elseif bc == ac then\n\
    \      return true\n   elseif ab == bc then\n      return true\n   elseif ab ==\
    \ ac then\n      return true\n   else\n      return false\n   end\nend", "  local\
    \ ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c\
    \ - a)\n  return ab > bc and (ab == bc or ac == math.pi/2)\nend", "\tlocal ab\
    \ = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\
    \treturn ab > bc and (ab > ac or math.abs(b - c) > math.abs(a - c))\nend", "\t\
    -- Check that the sides are non-zero\n\tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\
    \treturn false\n\tend", "    local ab = math.abs(b - a)\n    local bc = math.abs(c\
    \ - b)\n    local ac = math.abs(c - a)\n    return ab == bc and ac == bc\nend",
  "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c\
    \ - a)\n  return ab > bc and (ab > ac or bc > ac)\nend", "\tlocal ab = a - b\n\
    \tlocal bc = b - c\n\tlocal cb = c - b\n\tlocal det = ab * bc + bc * b\n\treturn\
    \ det > 0\nend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal cb = c - b\n\
    \tlocal ab_sqr = ab * ab\n\tlocal bc_sqr = bc * bc\n\tlocal cb_sqr = cb * cb\n\
    \tlocal ab_cub = (ab_sqr + bc_sqr + cb_sqr) ^ 3\n\tlocal bc_cub = (bc_sqr + ab_sqr\
    \ + cb_sqr) ^ 3\n\tlocal cb_cub = (cb_sqr + ab_sqr + ab_cub) ^ 3\n\treturn ab_cub\
    \ + bc_cub + cb_cub == 0 \nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn (ab > bc and ab > ac)\nend", "\t\
    local a = math.abs(a)\n\tlocal b = math.abs(b)\n\tlocal c = math.abs(c)\n\tif\
    \ a == 0 then\n\t\treturn false\n\tend\n\tif b == 0 then\n\t\treturn false\n\t\
    end\n\tif c == 0 then\n\t\treturn false\n\tend\n\tif a > b then\n\t\tlocal t =\
    \ b\n\t\tb = a\n\t\ta = t\n\tend\n\tif a > c then\n\t\tlocal t = c\n\t\tc = a\n\
    \t\ta = t\n\tend\n\tif b > c then\n\t\tlocal t = c\n\t\tc = b\n\t\tb = t\n\tend\n\
    \tif b == c then\n\t\treturn false\n\tend\n\tif b > a then\n\t\tlocal t = a\n\t\
    \ta = b\n\t\tb = t\n\tend\n\tif a == c then\n\t\treturn false\n\tend\n\tif a >\
    \ b then\n\t\tlocal t = b\n\t\tb = a\n\t\ta = t\n\tend\n\tif a == b then\n\t\t\
    return false\n\tend\n\tif a > c then\n\t\tlocal t = c\n\t\tc = a\n\t\ta = t\n\t\
    end\n\tif a == c then\n\t\treturn false\n\tend\n\tif b > c then\n\t\tlocal t =\
    \ c\n\t\tc = b\n\t\tb = t\n\tend\n\tif b == c then\n\t\treturn false\n\tend\n\t\
    if a > b then\n\t\tlocal t = b\n\t\tb = a\n\t\ta = t\n\tend\n\tif a == b then\n\
    \t\treturn false\n\tend\n\tif a > c then\n\t\tlocal t = c\n\t\tc = a\n\t\ta =\
    \ t\n\tend\n\tif a == c then\n\t\treturn false\n\tend\n\treturn true\nend", " \
    \ local ab = math.sqrt(math.pow(a, 2) + math.pow(b, 2))\n  local bc = math.sqrt(math.pow(b,\
    \ 2) + math.pow(c, 2))\n  local ac = math.sqrt(math.pow(a, 2) + math.pow(c, 2))\n\
    \  return ab > bc and ab > ac\nend", "  local ab = math.abs(b - a)\n  local bc\
    \ = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and (ab ==\
    \ bc or ac == math.pi/2)\nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c\
    \ - b)\n  local ac = math.abs(c - a)\n  return ab >= bc and ab >= ac\nend", " \
    \  local ab = math.abs(b - a)\n   local bc = math.abs(c - b)\n   local ac = math.abs(c\
    \ - a)\n   return (ab > bc) and (ab > ac)\nend", "\tlocal a, b, c = tonumber(a),\
    \ tonumber(b), tonumber(c)\n\tif a == b and b == c then return true end\n\tif\
    \ a == c then return false end\n\tif b == c then return false end\n\tif a + b\
    \ > c then return false end\n\tif a + c > b then return false end\n\tif b + c\
    \ > a then return false end\n\treturn true\nend", "\t-- Check that the sides are\
    \ all positive.\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend",
  "\tlocal ab = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\tlocal ca = math.abs(c-a)\n\
    \tlocal abc = ab + bc\n\tlocal bca = bc + ca\n\tlocal cab = ca+ab\n\treturn abc\
    \ > bca\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\t\
    local ac = math.abs(c - a)\n\treturn (ab > bc) and (ab > ac)\nend", "\tlocal ab\
    \ = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\
    \treturn ab == bc and ab == ac\nend", "  -- Check that the sides are non-zero\n\
    \  if a < 0 or b < 0 or c < 0 then return false end\n  -- Check that the sides\
    \ are equal\n  if a == b and a == c then return true end\n  -- Check that the\
    \ sides are equal\n  if a == c then return true end\n  -- Check that the sides\
    \ are equal\n  if b == c then return true end\n  -- Check that the sides are equal\n\
    \  if a == b and b == c then return true end\n  -- Check that the sides are equal\n\
    \  if a == b and c == b then return true end\n  -- Check that the sides are equal\n\
    \  if a == c and b == c then return true end\n  -- Check that the sides are equal\n\
    \  if b == c and c == c then return true end\n  -- Check that the sides are equal\n\
    \  if a == b and b == c and c == a then return true end\n  -- Check that the sides\
    \ are equal\n  if a == c and c == b then return true end\n  -- Check that the\
    \ sides are equal\n  if a == c and c == c then return true end\n  -- Check that\
    \ the sides are equal\n  if b == c and c == a then return true end\n  -- Check\
    \ that the sides are equal\n  if a == b and b == c and c == a then return true\
    \ end\n  -- Check that the sides are equal\n  if a == c and c == b then return\
    \ true end\n  -- Check that the sides are equal\n  if a == c and c == c then return\
    \ true end\n  -- Check that the sides are equal\n  if b == c and c == a then return\
    \ true end\n  -- Check that the sides are equal\n  if a == b and b == c and c\
    \ == a then return true end\n  -- Check that the sides are equal\n  if a == c\
    \ and c == b then return true end\n  -- Check that the sides are equal\n  if a\
    \ == c and c == c then return true end\n  -- Check that the sides are equal\n\
    \  if b == c and c == a then return true end\n  -- Check that the sides are equal\n\
    \  if a == b and b == c and c == a then return true end\n  -- Check that the sides\
    \ are equal\n  if a == c and c == b then return true end\n  -- Check that the\
    \ sides are equal\n  if a == c and c == c then return true end\n  -- Check that\
    \ the sides are equal\n  if b == c and c == a then return true end\n  -- Check\
    \ that the sides are equal\n  if a == b and b == c and c == a then return true\
    \ end\n  -- Check that the sides are equal\n  if a == c and c == b then return\
    \ true end\n  -- Check that the sides are equal\n  if a == c and ", "\tlocal ab\
    \ = a - b\n\tlocal bc = b - c\n\tlocal ac = c - a\n\tlocal ab_ac = ab * ac\n\t\
    local bc_ab = bc * ab\n\treturn ab_ac + bc_ab > 0\nend", "  local ab = a - b\n\
    \  local bc = b - c\n  local ac = c - a\n  local ab_sq = ab * ab\n  local bc_sq\
    \ = bc * bc\n  local ac_sq = ac * ac\n  local ab_ac = ab * ac\n  local ab_ab =\
    \ ab * ab\n  local bc_bc = bc * bc\n  local bc_ab = bc * ab\n  local ac_ac = ac\
    \ * ac\n  local ab_ac_bc = ab_ac + bc_bc\n  local ab_ac_bc_ab = ab_ac + bc_ab\
    \ + ab_ab\n  local ab_ac_bc_ab_sq = ab_ac_bc * ab_ac_bc\n  local ab_ac_bc_ab_sq_squared\
    \ = ab_ac_bc_ab_sq * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared\
    \ * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared *\
    \ ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared * ab_ac_bc_ab_sq\n\
    \  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared * ab_ac_bc_ab_sq\n  local\
    \ ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared\
    \ = ab_ac_bc_ab_sq_squared * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared =\
    \ ab_ac_bc_ab_sq_squared * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared\
    \ * ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared *\
    \ ab_ac_bc_ab_sq\n  local ab_ac_bc_ab_sq_squared = ab_ac_bc_ab_sq_squared * ",
  "  local ab = math.sqrt(math.pow(a, 2) + math.pow(b, 2))\n  local bc = math.sqrt(math.pow(b,\
    \ 2) + math.pow(c, 2))\n  local ac = math.sqrt(math.pow(a, 2) + math.pow(c, 2))\n\
    \  return math.abs(math.acos((math.pow(ab, 2) + math.pow(bc, 2) - math.pow(ac,\
    \ 2)) / (2 * ab * bc)) * 180 / math.pi) >= 90\nend", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and ab > ac\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and (ab == bc or ab ==\
    \ ac)\nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local\
    \ ac = math.abs(c - a)\n  return ab >= bc and ab >= ac\nend", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and ab > ac\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and ab > ac\nend", "\t\
    -- Check that the sides are non-zero\n\tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\
    \treturn false\n\tend\n\t\n\t-- Check that the sides are equal\n\tif a == b and\
    \ a == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif a == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn ", "   local ab = math.abs(b - a)\n   local bc = math.abs(c\
    \ - b)\n   local ac = math.abs(c - a)\n   return (ab + bc == ac)\nend", "  local\
    \ ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c\
    \ - a)\n  return ab > bc and ab > ac\nend", "  local ab = a - b\n  local bc =\
    \ b - c\n  local ac = c - a\n  local ab_sqr = ab * ab\n  local bc_sqr = bc * bc\
    \ \n  local ac_sqr = ac * ac\n  local ab_ac = ab * ac\n  local bc_bc = bc * bc\
    \ \n  local ab_bc = ab * bc \n  return ab_sqr + bc_sqr - ab_ac - bc_bc == 0 and\
    \ ab_ac + bc_bc == 0 and ab_bc == 0 and bc_sqr == 0\nend", "  local ab = a - b\n\
    \  local bc = b - c\n  local ac = c - a\n  local ab_sq = ab * ab\n  local bc_sq\
    \ = bc * bc\n  local ac_sq = ac * ac\n  local ab_ac = ab * ac\n  local ab_bc =\
    \ ab * bc\n  local bc_ac = bc * ac\n  local ab_ac_bc = ab_ac + bc_ac\n  local\
    \ ab_bc_ac = ab_bc + ac_ac\n  local ab_ac_bc_sq = ab_ac_bc * ab_ac_bc\n  local\
    \ ab_bc_ac_bc_sq = ab_bc_ac + bc_ac_bc * bc_ac\n  local det = ab_ac_bc_sq - ab_bc_ac_bc_sq\n\
    \  local sq = ab_sq + bc_sq - ac_sq\n  return det >= 0 and sq >= 0 and ab_sq +\
    \ bc_sq - ac_sq == 0 and ab_ac_bc_sq - ab_bc_ac_bc_sq == 0\nend", "  local ab\
    \ = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n\
    \  return ab >= bc and ab >= ac\nend", "  local ab = a - b\n  local bc = b - c\n\
    \  local ac = c - a\n  return ab == bc and ab == ac\nend", "  local ab = math.abs(b\
    \ - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab\
    \ > bc and ab > ac\nend", "  -- Check that the sides are non-zero\n  if a == 0\
    \ or b == 0 or c == 0\n  then\n    return false\n  end", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and ab > ac\nend", "    local ab = a - b\n    local bc = b - c\n    local\
    \ ac = c - a\n    local ab_2 = ab * ab\n    local bc_2 = bc * bc \n    local ac_2\
    \ = ac * ac\n    local ab_3 = ab_2 * ab\n    local bc_3 = bc_2 * bc\n    local\
    \ ac_3 = ac_2 * ac\n    local ab_4 = ab_2 * ab\n    local bc_4 = bc_2 * bc\n \
    \   local ac_4 = ac_2 * ac\n    local ab_5 = ab_2 * ab\n    local bc_5 = bc_2\
    \ * bc\n    local ac_5 = ac_2 * ac\n    local ab_6 = ab_2 * ab\n    local bc_6\
    \ = bc_2 * bc\n    local ac_6 = ac_2 * ac\n    local ab_7 = ab_2 * ab\n    local\
    \ bc_7 = bc_2 * bc\n    local ac_7 = ac_2 * ac\n    local ab_8 = ab_2 * ab\n \
    \   local bc_8 = bc_2 * bc\n    local ac_8 = ac_2 * ac\n    local ab_9 = ab_2\
    \ * ab\n    local bc_9 = bc_2 * bc\n    local ac_9 = ac_2 * ac\n    local ab_10\
    \ = ab_2 * ab\n    local bc_10 = bc_2 * bc\n    local ac_10 = ac_2 * ac\n    local\
    \ ab_11 = ab_2 * ab\n    local bc_11 = bc_2 * bc\n    local ac_11 = ac_2 * ac\n\
    \    local ab_12 = ab_2 * ab\n    local bc_12 = bc_2 * bc\n    local ac_12 = ac_2\
    \ * ac\n    local ab_13 = ab_2 * ab\n    local bc_13 = bc_2 * bc\n    local ac_13\
    \ = ac_2 * ac\n    local ab_14 = ab_2 * ab\n    local bc_14 = bc_2 * bc\n    local\
    \ ac_14 = ac_2 * ac\n    local ab_15 = ab_2 * ab\n    local bc_15 = bc_2 * bc\n\
    \    local ac_15 = ac_2 * ac\n    local ab_16 = ab_2 * ab\n    local bc_16 = bc_2\
    \ * bc\n    local ac_16 = ac_2 * ac\n    local ab_17 = ab_2 * ab\n    local bc_17\
    \ = bc_2 * bc\n    local ac_17 = ac_2 * ac\n    local ab_18 = ab_2 * ab\n    local\
    \ bc_18 = bc_2 * bc\n    local ac_18 = ac_2 * ac\n    local ab_", "\tlocal ab\
    \ = a - b\n\tlocal bc = b - c\n\tlocal cb = c - b\n\tlocal det = ab * cb - bc\
    \ * ab\n\tif det < 0 then\n\t\treturn false\n\telse\n\t\treturn true\n\tend\n\
    end", "   local ab = math.abs(b - a)\n   local bc = math.abs(c - b)\n   local\
    \ ac = math.abs(c - a)\n   if ab > bc then\n      return ab > ac\n   else\n  \
    \    return bc > ac\n   end\nend", "\tlocal ab = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\
    \tlocal ca = math.abs(c-a)\n\treturn ab == bc and ab == ca or ab == ca\nend",
  "\t-- Check that the sides are all positive\n\tif a < 0 or b < 0 or c < 0 then\n\
    \t\treturn false\n\tend\n\t\n\t-- Check that the sides are equal\n\tif a == b\
    \ and a == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif a == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\tend\n\t\n\t-- Check that the sides are equal\n\t\
    if a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t\n\t-- Check that the sides are equal\n\tif a == b or a == c or b ==\
    \ c then\n\t\treturn true\n\t", "  local ab = a - b\n  local bc = b - c\n  local\
    \ ac = c - a\n  return ab > 0 and bc > 0 and ac > 0 and ab + bc + ac == 1\nend",
  "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c\
    \ - a)\n\treturn (ab + bc == ac)\nend", "\tlocal ab = a - b\n\tlocal bc = b -\
    \ c\n\tlocal ac = c - a\n\treturn ab == bc and ab == ac\nend", "\t-- Check that\
    \ the sides are all positive.\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\
    \tend", "  -- Check that the sides are all positive.\n  if a < 0 or b < 0 or c\
    \ < 0 then\n    return false\n  end\n  -- Check that a + b > c and b + c > a.\n\
    \  if a + b > c and b + c > a then\n    return false\n  end\n  -- Check that a\
    \ + c > b and a + b > c.\n  if a + c > b and a + b > c then\n    return true\n\
    \  end\n  -- Check that b + c > a and b + a > c.\n  if b + c > a and b + a > c\
    \ then\n    return true\n  end\n  -- Check that a + b > c and b + c > a.\n  if\
    \ a + b > c and b + c > a then\n    return true\n  end\n  -- Check that a + c\
    \ > b and a + b > c.\n  if a + c > b and a + b > c then\n    return true\n  end\n\
    \  -- Check that b + c > a and b + a > c.\n  if b + c > a and b + a > c then\n\
    \    return true\n  end\n  return false\nend", "  local ab = math.abs(a-b)\n \
    \ local bc = math.abs(b-c)\n  local ca = math.abs(c-a)\n  return ab > bc and ab\
    \ > ca \nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n \
    \ local ac = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "\tlocal ab\
    \ = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\tlocal ca = math.abs(c-a)\n\t\
    return ab > bc and ab > ca \nend", "   local ab = math.abs(b - a)\n   local bc\
    \ = math.abs(c - b)\n   local ac = math.abs(c - a)\n   if ab > bc then return\
    \ true end\n   if ab > ac then return false end\n   if bc > ac then return true\
    \ end\n   return false\nend", "\t-- Check that the sides are all positive.\n\t\
    if a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend", "\t-- Check that the\
    \ sides are non-zero\n\tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\treturn false\n\
    \tend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac\
    \ = math.abs(c - a)\n\treturn ab > bc and (ab == bc or ab == ac)\nend", "    local\
    \ ab = math.abs(b - a)\n    local bc = math.abs(c - b)\n    local ac = math.abs(c\
    \ - a)\n    return ab > bc and ab > ac\nend", "\t-- Check that the sides are non-zero\n\
    \tif a ~= 0 and b ~= 0 and c ~= 0 then\n\t\t-- Check that the sides are equal\n\
    \t\tif a == b and a == c then\n\t\t\t-- Check that the angle is right\n\t\t\t\
    if math.abs(math.atan2(b,c)) < math.pi then\n\t\t\t\treturn true\n\t\t\telse\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\t-- Check that the angle is right\n\
    \t\t\tif math.abs(math.atan2(b,c)) < math.pi then\n\t\t\t\treturn true\n\t\t\t\
    else\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\telse\n\t\treturn false\n\tend\n\
    end", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac\
    \ = math.abs(c - a)\n\treturn ab > bc and ab > ac\nend", "  -- Check that the\
    \ sides are non-zero\n  if a == 0 or b == 0 or c == 0 then\n    return false\n\
    \  end", "\t-- Check that the sides are all positive\n\tif a < 0 or b < 0 or c\
    \ < 0 then\n\t\treturn false\n\tend", "   local ab = math.abs(b-a)\n   local bc\
    \ = math.abs(c-b)\n   local ac = math.abs(c-a)\n   return (ab > bc and ab > ac)\n\
    end", "\t-- Check that the sides are all positive\n\tif a < 0 or b < 0 or c <\
    \ 0 then\n\t\treturn false\n\tend\n\t-- Check that the sides are equal\n\tif a\
    \ == b and a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are\
    \ equal\n\tif a == b then\n\t\treturn true\n\tend", "\t-- Check that the sides\
    \ are all positive\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend",
  "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal cb = c - b\n\tlocal det = ab *\
    \ cb - bc * ab\n\treturn det > 0\nend", "  local ab = math.abs(b - a)\n  local\
    \ bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab\
    \ > ac\nend", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local\
    \ ac = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "\tlocal ab = a -\
    \ b\n\tlocal bc = b - c\n\tlocal ac = c - a\n\treturn ab*bc*ac >= 0\nend", " \
    \ local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c\
    \ - a)\n  return ab > bc and ab > ac\nend", "  local ab = math.abs(b - a)\n  local\
    \ bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab\
    \ > ac\nend", "  -- Check that the sides are non-zero\n  if a < 0 or b < 0 or\
    \ c < 0 then\n    return false\n  end", "\tlocal ab = math.abs(b - a)\n\tlocal\
    \ bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and ab\
    \ > ac\nend", "    local ab = math.abs(b - a)\n    local bc = math.abs(c - b)\n\
    \    local ac = math.abs(c - a)\n    return ab > bc and ab > ac\nend", "\tlocal\
    \ ab = a - b\n\tlocal bc = b - c\n\tlocal ac = c - a\n\tlocal ab_2 = ab * ab\n\
    \tlocal bc_2 = bc * bc \n\tlocal ac_2 = ac * ac\n\tlocal ab_3 = ab_2 * ab\n\t\
    local bc_3 = bc_2 * bc \n\tlocal ac_3 = ac_2 * ac\n\tlocal ab_4 = ab_3 * ab\n\t\
    local bc_4 = bc_3 * bc \n\tlocal ac_4 = ac_3 * ac\n\tlocal ab_5 = ab_4 * ab\n\t\
    local bc_5 = bc_4 * bc \n\tlocal ac_5 = ac_4 * ac\n\tlocal ab_6 = ab_5 * ab\n\t\
    local bc_6 = bc_5 * bc \n\tlocal ac_6 = ac_5 * ac\n\tlocal ab_7 = ab_6 * ab\n\t\
    local bc_7 = bc_6 * bc \n\tlocal ac_7 = ac_6 * ac\n\tlocal ab_8 = ab_7 * ab\n\t\
    local bc_8 = bc_7 * bc \n\tlocal ac_8 = ac_7 * ac\n\tlocal ab_9 = ab_8 * ab\n\t\
    local bc_9 = bc_8 * bc \n\tlocal ac_9 = ac_8 * ac\n\tlocal ab_10 = ab_9 * ab\n\
    \tlocal bc_10 = bc_9 * bc \n\tlocal ac_10 = ac_9 * ac\n\tlocal ab_11 = ab_10 *\
    \ ab\n\tlocal bc_11 = bc_10 * bc \n\tlocal ac_11 = ac_10 * ac\n\tlocal ab_12 =\
    \ ab_11 * ab\n\tlocal bc_12 = bc_11 * bc \n\tlocal ac_12 = ac_11 * ac\n\tlocal\
    \ ab_13 = ab_12 * ab\n\tlocal bc_13 = bc_12 * bc \n\tlocal ac_13 = ac_12 * ac\n\
    \tlocal ab_14 = ab_13 * ab\n\tlocal bc_14 = bc_13 * bc \n\tlocal ac_14 = ac_13\
    \ * ac\n\tlocal ab_15 = ab_14 * ab\n\tlocal bc_15 = bc_14 * bc \n\tlocal ac_15\
    \ = ac_14 * ac\n\tlocal ab_16 = ab_15 * ab\n\tlocal bc_16 = bc_15 * bc \n\tlocal\
    \ ac_16 = ac_15 * ac\n\tlocal ab_17 = ab_16 * ab\n\tlocal bc_17 = bc_16 * bc \n\
    \tlocal ac_17 = ac_16 * ac\n\t", "    local ab = math.abs(b - a)\n    local bc\
    \ = math.abs(c - b)\n    local ac = math.abs(c - a)\n    local abc = ab + bc\n\
    \    if abc > ac then\n        return true\n    else\n        return false\n \
    \   end\nend", "  local ab = math.abs(a-b)\n  local bc = math.abs(b-c)\n  local\
    \ ca = math.abs(c-a)\n  return ab > bc and ab > ca \nend", "\tlocal ab = a - b\n\
    \tlocal bc = b - c\n\tlocal ac = c - a\n\tlocal ab_sqr = ab * ab\n\tlocal bc_sqr\
    \ = bc * bc \n\tlocal ac_sqr = ac * ac\n\tlocal ab_ac = ab * ac\n\tlocal bc_bc\
    \ = bc * bc \n\treturn ab_sqr + bc_sqr + ac_sqr - ab_ac - bc_bc == 0\nend", "\t\
    -- Check that the sides are valid\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn\
    \ false\n\tend\n\t-- Check that the sides are equal\n\tif a == b and a == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif a == b or a\
    \ == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that the sides are equal\n\
    \tif a == b or a == c or b == c then\n\t\treturn true\n\tend\n\t-- Check that\
    \ the sides are equal\n\tif a == b or a == c or b == c then\n\t\treturn true\n\
    \tend\n\t-- Check that the sides are equal\n\tif a == b or a == c or b == c then\n\
    \t\treturn true\n\tend\n\t-- Check that the sides are equal\n\tif ", "  local\
    \ ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c\
    \ - a)\n  return ab >= bc and ab >= ac\nend", "  local ab = a - b\n  local bc\
    \ = b - c\n  local ac = c - a\n  return ab * bc * ac >= 0\nend", "\t-- The three\
    \ sides of a triangle are a, b, c\n\t-- The angle between them is given by acos((a+b+c)/2)\n\
    \t-- The hypotenuse is given by sqrt(a^2 + b^2 + c^2)\n\t-- The area of the triangle\
    \ is given by a * b * c\n\t-- The area of the hypotenuse is given by sqrt(a^2\
    \ + b^2)\n\t-- The area of the triangle is given by a * b * c\n\t-- The area of\
    \ the hypotenuse is given by sqrt(a^2 + b^2)\n\t-- The area of the triangle is\
    \ given by a * b * c\n\t-- The area of the hypotenuse is given by sqrt(a^2 + b^2)\n\
    \t-- The area of the triangle is given by a * b * c\n\t-- The area of the hypotenuse\
    \ is given by sqrt(a^2 + b^2)\n\t-- The area of the triangle is given by a * b\
    \ * c\n\t-- The area of the hypotenuse is given by sqrt(a^2 + b^2)\n\t-- The area\
    \ of the triangle is given by a * b * c\n\t-- The area of the hypotenuse is given\
    \ by sqrt(a^2 + b^2)\n\t-- The area of the triangle is given by a * b * c\n\t\
    -- The area of the hypotenuse is given by sqrt(a^2 + b^2)\n\t-- The area of the\
    \ triangle is given by a * b * c\n\t-- The area of the hypotenuse is given by\
    \ sqrt(a^2 + b^2)\n\t-- The area of the triangle is given by a * b * c\n\t-- The\
    \ area of the hypotenuse is given by sqrt(a^2 + b^2)\n\t-- The area of the triangle\
    \ is given by a * b * c\n\t-- The area of the hypotenuse is given by sqrt(a^2\
    \ + b^2)\n\t-- The area of the triangle is given by a * b * c\n\t-- The area of\
    \ the hypotenuse is given by sqrt(a^2 + b^2)\n\t-- The area of the triangle is\
    \ given by a * b * c\n\t-- The area of the hypotenuse is given by sqrt(a^2 + b^2)\n\
    \t-- The area of the triangle is given by a * b * c\n\t-- The area of the hypotenuse\
    \ is given by sqrt(a^2 + b^2)\n\t-- The area of the triangle is given by a * b\
    \ * c\n\t-- The area ", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\t\n\tif ab > bc then\n\t\tif ab > ac then\n\
    \t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\tif bc >\
    \ ac then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\nend",
  "\tlocal ab = math.abs(a-b)\n\tlocal bc = math.abs(b-c)\n\tlocal ca = math.abs(c-a)\n\
    \treturn ab > bc and ab > ca \nend", "\t-- Check that the sides are non-zero\n\
    \tif a ~= 0 and b ~= 0 and c ~= 0 then\n\t\t-- Check that the sides are equal\n\
    \t\tif a == b and a == c then\n\t\t\t-- Check that the angles are right\n\t\t\t\
    if math.abs(math.atan2(b,a)) < math.pi/2 then\n\t\t\t\treturn true\n\t\t\telse\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\
    \t\treturn false\n\tend\nend", "\t-- Check that the sides are non-zero\n\tif a\
    \ ~= 0 or b ~= 0 or c ~= 0 then\n\t\treturn false\n\tend", "  -- Check that the\
    \ sides are non-zero\n  if a <= 0 or b <= 0 or c <= 0 then\n    return false\n\
    \  end", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal ac = c - a\n\tlocal\
    \ ab_ac = ab * ac\n\tlocal ab_bc = ab * bc\n\tlocal bc_ac = bc * ac\n\treturn\
    \ ab_ac + ab_bc > 0 and bc_ac + bc_bc > 0\nend", "   local ab = math.abs(b - a)\n\
    \   local bc = math.abs(c - b)\n   local ac = math.abs(c - a)\n   return (ab >\
    \ bc and ab > ac)\nend", "\t-- Check that the sides are all positive.\n\tif a\
    \ < 0 or b < 0 or c < 0 then\n\t\treturn false\n\tend", "  local ab = a - b\n\
    \  local bc = b - c\n  local ac = c - a\n  local ab_sqr = ab * ab\n  local bc_sqr\
    \ = bc * bc \n  local ac_sqr = ac * ac\n  local ab_ac = ab * ac\n  local ab_ac_squared\
    \ = ab_ac * ab_ac\n  local bc_ab = bc * ab\n  local bc_ab_squared = bc_ab * bc_ab\n\
    \  local bc_ac = bc * ac\n  local bc_ac_squared = bc_ac * bc_ac\n  local ab_ab_squared\
    \ = ab_sqr + bc_ab_squared\n  local ab_ac_squared = ab_ac_squared + bc_ac_squared\n\
    \  return ab_sqr + bc_ab_squared + ab_ac_squared <= ab_ac_squared\nend", "\t--\
    \ Check that the sides are all positive\n\tif a < 0 or b < 0 or c < 0 then\n\t\
    \treturn false\n\tend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal ac =\
    \ c - a\n\tlocal ab_sqr = ab * ab\n\tlocal bc_sqr = bc * bc \n\tlocal ac_sqr =\
    \ ac * ac\n\tlocal ab_ac = ab * ac\n\tlocal ab_ab = ab * ab\n\tlocal bc_bc = bc\
    \ * bc \n\tlocal bc_ab = bc * ab\n\tlocal ac_ac = ac * ac\n\tlocal ab_bc = ab\
    \ * bc\n\tlocal ab_ac_bc = ab_ac * bc\n\tlocal ab_bc_ac = ab_ab * ac\n\tlocal\
    \ ab_ac_bc_ac = ab_ac_bc * ac\n\tlocal ab_ac_bc_ab = ab_ac_bc * ab\n\tlocal bc_ab_ac\
    \ = bc_ab * ac\n\tlocal bc_ab_ab = bc_ab * ab\n\tlocal bc_bc_ac = bc_bc * ac\n\
    \tlocal bc_bc_ab = bc_bc * ab\n\tlocal bc_ab_ac_bc = bc_ab_ac * bc\n\tlocal bc_ab_ac_bc_ac\
    \ = bc_ab_ac_bc * ac\n\tlocal bc_ab_ac_bc_ab = bc_ab_ac_bc * ab\n\tlocal bc_bc_ab_ac\
    \ = bc_bc_ab * ac\n\tlocal bc_bc_ab_ab = bc_bc_ab * ab\n\tlocal bc_ab_ac_bc_ac\
    \ = bc_ab_ac_bc * ac\n\tlocal bc_ab_ac_bc_ab = bc_ab_ac_bc * ab\n\tlocal bc_ab_ac_bc_ab_ac\
    \ = bc_ab_ac_bc_ac * ac\n\tlocal bc_ab_ac_bc_ab_ab = bc_ab_ac_bc_ab * ab\n\tlocal\
    \ bc_bc_ab_ac_bc_ac = bc_bc_ab_ac * ac\n\tlocal bc_bc_ab_ac_bc_ab = bc_bc_ab_ac\
    \ * ab\n\tlocal bc_bc_ab_ac_bc_ab_ac = bc_bc_ab_ac_bc_ac * ac\n\tlocal bc_bc_ab_ac_bc_ab_ab\
    \ = bc_bc_ab_ac_bc_ab * ab\n\tlocal bc_ab_ac_bc_ac_bc = bc_ab_", "  local ab =\
    \ a - b\n  local bc = b - c\n  local ac = c - a\n  return ab == bc and ab == ac\n\
    end", "  local ab = math.abs(b - a)\n  local bc = math.abs(c - b)\n  local ac\
    \ = math.abs(c - a)\n  return ab > bc and ab > ac\nend", "  -- Check that the\
    \ sides are all positive\n  if a < 0 or b < 0 or c < 0 then\n    return false\n\
    \  end", "   local ab = math.abs(b - a)\n   local bc = math.abs(c - b)\n   local\
    \ ac = math.abs(c - a)\n   if ab > bc then\n      return ab > ac\n   else\n  \
    \    return bc > ac\n   end\nend", "  local ab = math.abs(b - a)\n  local bc =\
    \ math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab > ac\n\
    end", "  local ab = a - b\n  local bc = b - c\n  local cb = c - b\n  local det\
    \ = ab * cb - bc * ab\n  if det < 0 then\n    return false\n  elseif det > 0 then\n\
    \    return true\n  else\n    return ab * bc == -ab * cb\n  end\nend", "\t-- Check\
    \ that the sides are all positive\n\tif a < 0 or b < 0 or c < 0 then\n\t\treturn\
    \ false\n\tend", "\t-- Check that the sides are non-zero.\n\tif a ~= 0 or b ~=\
    \ 0 or c ~= 0 then\n\t\treturn false\n\tend", "\tlocal ab = math.abs(b - a)\n\t\
    local bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and\
    \ ab > ac\nend", "\t-- Check that the sides are non-zero\n\tif a ~= 0 or b ~=\
    \ 0 or c ~= 0 then\n\t\treturn false\n\tend", "\tlocal ab = math.abs(a-b)\n\t\
    local bc = math.abs(b-c)\n\tlocal ac = math.abs(c-a)\n\t\n\tif ab > bc then return\
    \ ab > ac end\n\treturn bc > ac\nend", "\tlocal ab = math.abs(b - a)\n\tlocal\
    \ bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and (ab\
    \ > ac or math.abs(b - c) == math.abs(a - c))\nend", "\t-- The sides are a, b,\
    \ c\n\t-- The angles are the angles between the sides\n\t-- The angles are in\
    \ radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\t\
    -- The angles are in degrees\n\t-- The angles are in radians\n\t-- The angles\
    \ are in degrees\n\t-- The angles are in radians\n\t-- The angles are in degrees\n\
    \t-- The angles are in radians\n\t-- The angles are in degrees\n\t-- The angles\
    \ are in radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\
    \t-- The angles are in degrees\n\t-- The angles are in radians\n\t-- The angles\
    \ are in degrees\n\t-- The angles are in radians\n\t-- The angles are in degrees\n\
    \t-- The angles are in radians\n\t-- The angles are in degrees\n\t-- The angles\
    \ are in radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\
    \t-- The angles are in degrees\n\t-- The angles are in radians\n\t-- The angles\
    \ are in degrees\n\t-- The angles are in radians\n\t-- The angles are in degrees\n\
    \t-- The angles are in radians\n\t-- The angles are in degrees\n\t-- The angles\
    \ are in radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\
    \t-- The angles are in degrees\n\t-- The angles are in radians\n\t-- The angles\
    \ are in degrees\n\t-- The angles are in radians\n\t-- The angles are in degrees\n\
    \t-- The angles are in radians\n\t-- The angles are in degrees\n\t-- The angles\
    \ are in radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\
    \t-- The angles are in degrees\n\t-- The angles are in radians\n\t-- The angles\
    \ are in degrees\n\t-- The angles are in radians\n\t-- The angles are in degrees\n\
    \t-- The angles are in radians\n\t-- The angles are in degrees\n\t-- The angles\
    \ are in radians\n\t-- The angles are in degrees\n\t-- The angles are in radians\n\
    \t-- The angles are in degrees\n\t-- The angles are in ", "    local ab = math.abs(b\
    \ - a)\n    local bc = math.abs(c - b)\n    local ac = math.abs(c - a)\n    return\
    \ ab > bc and\n        ab > ac and\n        ab > bc\nend", "  local ab = math.abs(b\
    \ - a)\n  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab\
    \ > bc and (ab == bc or ac == math.pi/2)\nend", "  local ab = math.abs(b - a)\n\
    \  local bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc\
    \ and (ab == bc or ac == math.pi/2)\nend", "  local ab = math.abs(b - a)\n  local\
    \ bc = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab\
    \ > ac\nend", "  -- Check that the sides are all positive\n  if a < 0 or b < 0\
    \ or c < 0 then\n    return false\n  end\n  \n  -- Check that the sides are equal\n\
    \  if a == b and a == c then\n    return true\n  end\n  \n  -- Check that the\
    \ sides are equal\n  if a == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if b == c then\n    return true\n  end\n  \n  -- Check\
    \ that the sides are equal\n  if a == b or b == c or c == a then\n    return true\n\
    \  end\n  \n  -- Check that the sides are equal\n  if a == b or a == c or b ==\
    \ c then\n    return true\n  end\n  \n  -- Check that the sides are equal\n  if\
    \ a == b or a == c or b == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if a == b or a == c or b == c then\n    return true\n\
    \  end\n  \n  -- Check that the sides are equal\n  if a == b or a == c or b ==\
    \ c then\n    return true\n  end\n  \n  -- Check that the sides are equal\n  if\
    \ a == b or a == c or b == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if a == b or a == c or b == c then\n    return true\n\
    \  end\n  \n  -- Check that the sides are equal\n  if a == b or a == c or b ==\
    \ c then\n    return true\n  end\n  \n  -- Check that the sides are equal\n  if\
    \ a == b or a == c or b == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if a == b or a == c or b == c then\n    return true\n\
    \  end\n  \n  -- Check that the sides are equal\n  if a == b or a == c or b ==\
    \ c then\n    return true\n  end\n  \n  -- Check that the sides are equal\n  if\
    \ a == b or a == c or b == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if a == b or a == c or b == c then\n    return true\n\
    \  end\n  \n  -- Check that the sides are equal\n  if a == b or a == c or b ==\
    \ c then\n    return true\n  end\n  \n  -- Check that the sides are equal\n  if\
    \ a == b or a == c or b == c then\n    return true\n  end\n  \n  -- Check that\
    \ the sides are equal\n  if a == b or a == c or ", "\tlocal ab = math.abs(a -\
    \ b)\n\tlocal bc = math.abs(b - c)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ == bc and ab == ac\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn (ab > bc and ab > ac)\nend", "\t\
    local a = math.abs(a)\n\tlocal b = math.abs(b)\n\tlocal c = math.abs(c)\n\tlocal\
    \ ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal abc = math.abs(bc\
    \ - ab)\n\treturn ab == abc or ab == bc or ab == c\nend", "\tlocal ab = a - b\n\
    \tlocal bc = b - c\n\tlocal ac = c - a\n\treturn ab == bc and ab == ac\nend",
  "   local ab = math.abs(a-b)\n   local bc = math.abs(b-c)\n   local ac = math.abs(a-c)\n\
    \   return ab > bc and ab > ac\nend", "  local ab = math.abs(b - a)\n  local bc\
    \ = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab == bc and ab ==\
    \ ac\nend", "\tlocal ab = math.abs(a - b)\n\tlocal bc = math.abs(b - c)\n\tlocal\
    \ ac = math.abs(c - a)\n\treturn ab > bc and (ab > ac or ab == bc)\nend", "\t\
    local ab = math.abs(b - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c\
    \ - a)\n\treturn ab > bc and ab > ac\nend", "\tlocal ab = a - b\n\tlocal bc =\
    \ b - c\n\tlocal ac = c - a\n\treturn (ab + bc == ac)\nend", "\tlocal ab = math.abs(b\
    \ - a)\n\tlocal bc = math.abs(c - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab\
    \ > bc and ab > ac\nend", "  local ab = a - b\n  local bc = b - c\n  local ac\
    \ = c - a\n  return ab == bc and ab == ac\nend", "\t-- Check that the sides are\
    \ non-zero\n\tif a ~= 0 or b ~= 0 or c ~= 0 then\n\t\treturn false\n\tend", " \
    \ -- Check that the sides are all positive\n  if a < 0 or b < 0 or c < 0 then\n\
    \    return false\n  end", "  -- Check that the sides are non-zero\n  if a ==\
    \ 0 then return False end\n  if b == 0 then return False end\n  if c == 0 then\
    \ return False end\n  -- Check that the sides are equal\n  if a ~= b then return\
    \ False end\n  if a ~= c then return False end\n  -- Check that the angles are\
    \ right\n  if math.abs(math.atan2(b, a) - math.atan2(c, b)) > math.pi / 2 then\n\
    \    return false\n  end\n  return true\nend", "  local ab = a - b\n  local bc\
    \ = b - c\n  local ac = c - a\n  local ab_sq = ab * ab\n  local bc_sq = bc * bc\
    \ \n  local ac_sq = ac * ac\n  local ab_ac = ab * ac\n  return ab_sq + bc_sq ==\
    \ ab_ac + bc_sq\nend", "\tlocal ab = a - b\n\tlocal bc = b - c\n\tlocal cb = c\
    \ - b\n\tlocal det = ab * cb - bc * ab\n\tif det < 0 then\n\t\treturn false\n\t\
    else\n\t\treturn true\n\tend\nend", "  local ab = math.sqrt(math.pow(a, 2) + math.pow(b,\
    \ 2))\n  local bc = math.sqrt(math.pow(b, 2) + math.pow(c, 2))\n  local ac = math.sqrt(math.pow(a,\
    \ 2) + math.pow(c, 2))\n  return ab > bc and (ab > ac or math.abs(a - c) < math.abs(b\
    \ - c))\nend", "  local ab = a - b\n  local bc = b - c\n  local ac = c - a\n \
    \ return ab == bc and ab == ac\nend", "  local ab = math.abs(b - a)\n  local bc\
    \ = math.abs(c - b)\n  local ac = math.abs(c - a)\n  return ab > bc and ab > ac\n\
    end", "  local ab = a - b\n  local bc = b - c\n  local ac = c - a\n  return ab\
    \ == bc and ab == ac\nend", "\tlocal ab = math.abs(b - a)\n\tlocal bc = math.abs(c\
    \ - b)\n\tlocal ac = math.abs(c - a)\n\treturn ab > bc and ab > ac\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_127_intersection
language: lua
prompt: "-- You are given two intervals,\n-- where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n-- The given intervals are closed\
  \ which means that the interval (start, end)\n-- includes both start and end.\n\
  -- For each given interval, it is assumed that its start is less or equal its end.\n\
  -- Your task is to determine whether the length of intersection of these two \n\
  -- intervals is a prime number.\n-- Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n-- which its length is 1, which not a prime number.\n--\
  \ If the length of the intersection is a prime number, return \"YES\",\n-- otherwise,\
  \ return \"NO\".\n-- If the two intervals don't intersect, return \"NO\".\n-- [input/output]\
  \ samples:\n-- intersection((1, 2), (2, 3)) ==> \"NO\"\n-- intersection((-1, 1),\
  \ (0, 4)) ==> \"NO\"\n-- intersection((-3, -1), (-5, 5)) ==> \"YES\"\nlocal function\
  \ intersection(interval1, interval2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = intersection\n\
  \    lu.assertEquals(candidate({1, 2}, {2, 3}), 'NO')\n    lu.assertEquals(candidate({-1,\
  \ 1}, {0, 4}), 'NO')\n    lu.assertEquals(candidate({-3, -1}, {-5, 5}), 'YES')\n\
  \    lu.assertEquals(candidate({-2, 2}, {-4, 0}), 'YES')\n    lu.assertEquals(candidate({-11,\
  \ 2}, {-1, -1}), 'NO')\n    lu.assertEquals(candidate({1, 2}, {3, 5}), 'NO')\n \
  \   lu.assertEquals(candidate({1, 2}, {1, 2}), 'NO')\n    lu.assertEquals(candidate({-2,\
  \ -2}, {-3, -2}), 'NO')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif length == length2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\t\
    return \"YES\"\n\tend\n\tif length2 == 2 then\n\t\tif length == 1 then\n\t\t\t\
    return \"YES\"\n\t\tend\n\t\tif length == 2 then\n\t\t\tif start <= start2 then\n\
    \t\t\t\treturn \"YES\"\n\t\t\tend\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"\
    YES\"\n\t\t\tend\n\t\tend\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\t\
    return \"YES\"\n\tend\n\tif length2 > length / 2 then\n\t\tlength = length / 2\n\
    \tend\n\tif length < length2 then\n\t\tlength = length2\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime", "  local start = interval1[1]\n  local\
    \ end = interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n\
    \  local length = end - start\n  local length2 = end2 - start2\n  if length2 ==\
    \ 0 then\n    return length\n  else\n    return length / length2\n  end\nend",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 > length2 then\n\t\tlocal temp = start1\n\t\tstart1 = start2\n\
    \t\tstart2 = temp\n\tend\n\tlocal prime = true\n\tlocal i = 2\n\twhile i < length1\
    \ do\n\t\tif start1 + i == start2 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\t\
    end\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\treturn \"YES\"\n\tend\n\treturn\
    \ \"NO\"\nend", "  -- Write your code here\n  local interval1start = interval1[1]\n\
    \  local interval1end = interval1[2]\n  local interval2start = interval2[1]\n\
    \  local interval2end = interval2[2]\n  local interval1length = interval1end -\
    \ interval1start\n  local interval2length = interval2end - interval2start\n  local\
    \ interval1start2 = interval1start + interval1length\n  local interval2start2\
    \ = interval2start + interval2length\n  if interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= interval1end\n  and interval1start\
    \ <= interval2start2 <= interval1end\n  and interval1start <= interval2start <=\
    \ interval1end\n  and interval1start <= interval2end2 <= ", "\tlocal start1, end1\
    \ = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1], interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal lengthIntersection\
    \ = length1 + length2\n\tlocal isPrime = true\n\tlocal isPrime2 = true\n\tlocal\
    \ isPrime3 = true\n\tlocal isPrime4 = true\n\tlocal isPrime5 = true\n\tlocal isPrime6\
    \ = true\n\tlocal isPrime7 = true\n\tlocal isPrime8 = true\n\tlocal isPrime9 =\
    \ true\n\tlocal isPrime10 = true\n\tlocal isPrime11 = true\n\tlocal isPrime12\
    \ = true\n\tlocal isPrime13 = true\n\tlocal isPrime14 = true\n\tlocal isPrime15\
    \ = true\n\tlocal isPrime16 = true\n\tlocal isPrime17 = true\n\tlocal isPrime18\
    \ = true\n\tlocal isPrime19 = true\n\tlocal isPrime20 = true\n\tlocal isPrime21\
    \ = true\n\tlocal isPrime22 = true\n\tlocal isPrime23 = true\n\tlocal isPrime24\
    \ = true\n\tlocal isPrime25 = true\n\tlocal isPrime26 = true\n\tlocal isPrime27\
    \ = true\n\tlocal isPrime28 = true\n\tlocal isPrime29 = true\n\tlocal isPrime30\
    \ = true\n\tlocal isPrime31 = true\n\tlocal isPrime32 = true\n\tlocal isPrime33\
    \ = true\n\tlocal isPrime34 = true\n\tlocal isPrime35 = true\n\tlocal isPrime36\
    \ = true\n\tlocal isPrime37 = true\n\tlocal isPrime38 = true\n\tlocal isPrime39\
    \ = true\n\tlocal isPrime40 = true\n\tlocal isPrime41 = true\n\tlocal isPrime42\
    \ = true\n\tlocal isPrime43 = true\n\tlocal isPrime44 = true\n\tlocal isPrime45\
    \ = true\n\tlocal isPrime46 = true\n\tlocal isPrime47 = true\n\tlocal isPrime48\
    \ = true\n\tlocal isPrime49 = true\n\tlocal isPrime50 = true\n\tlocal isPrime51\
    \ = true\n\tlocal isPrime52 = true\n\tlocal isPrime53 = true\n\tlocal isPrime54\
    \ = true\n\tlocal isPrime55 = true\n\tlocal isPrime56 = true\n", "\tlocal interval1Start\
    \ = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start\
    \ = interval2[1]\n\tlocal interval2End = interval2[2]", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telse\n\t\tlocal prime\
    \ = true\n\t\tlocal i = 2\n\t\twhile i < length do\n\t\t\tif start1 + i == end1\
    \ or start2 + i == end2 then\n\t\t\t\tprime = false\n\t\t\t\tbreak\n\t\t\tend\n\
    \t\t\ti = i + 1\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\telse\n\t\
    \t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \t\n\tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tlocal\
    \ length = end - start\n\tlocal length2 = end2 - start2\n\t\n\tif length2 == 0\
    \ then\n\t\treturn \"NO\"\n\tend\n\t\n\tif length2 ~= length then\n\t\treturn\
    \ \"NO\"\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif\
    \ length ~= length2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif length == length2\
    \ then\n\t\treturn \"YES\"\n\tend\n\t\n\tif length2 > length then\n\t\treturn\
    \ \"NO\"\n\tend\n\t\n\tif length2 <= length then\n\t\treturn \"YES\"\n\tend\n\t\
    \n\treturn \"NO\"\nend", "  local start = math.min(interval1[1], interval2[1])\n\
    \  local end = math.max(interval1[2], interval2[2])\n  local length = end - start\n\
    \  local prime = true\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  local prime_end = end\n  local prime_length = 2\n  local prime_start = start\n\
    \  ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\
    \tif length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length == 1 then\n\t\tif length2 == 1 then\n\t\t\tif start <= start2\
    \ then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\
    \t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == 2 then\n\t\tif\
    \ start <= start2 then\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"YES\"\n\t\t\
    \telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\treturn \"NO\"\n\t\t\
    end\n\tend\n\tif length2 == 3 then\n\t\tif start <= start2 then\n\t\t\tif end\
    \ >= end2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\treturn \"YES\"\n\t\t\t\
    \telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn \"NO\"\
    \n\t\t\tend\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == 4\
    \ then\n\t\tif start <= start2 then\n\t\t\tif end >= end2 then\n\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\tif end >= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\
    \t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t\
    return \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\t\
    else\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == 5 then\n\t\tif start\
    \ <= start2 then\n\t\t\tif end >= end2 then\n\t\t\t\tif start <= end2 then\n\t\
    \t\t\t\tif end >= end2 then\n\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\
    if end >= end2 then\n\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\
    if end >= end2 then\n\t\t\t\t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\
    \t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\
    return \"NO\"\n\t\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\
    \t\t\tend\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\
    \t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t", "\t\
    local start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 ==\
    \ 1 then\n\t\tif start1 <= start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\telse\n\t\tlocal prime = true\n\t\tlocal prime2 = true\n\
    \t\tlocal prime3 = true\n\t\tlocal prime4 = true\n\t\tlocal prime5 = true\n\t\t\
    local prime6 = true\n\t\tlocal prime7 = true\n\t\tlocal prime8 = true\n\t\tlocal\
    \ prime9 = true\n\t\tlocal prime10 = true\n\t\tlocal prime11 = true\n\t\tlocal\
    \ prime12 = true\n\t\tlocal prime13 = true\n\t\tlocal prime14 = true\n\t\tlocal\
    \ prime15 = true\n\t\tlocal prime16 = true\n\t\tlocal prime17 = true\n\t\tlocal\
    \ prime18 = true\n\t\tlocal prime19 = true\n\t\tlocal prime20 = true\n\t\tlocal\
    \ prime21 = true\n\t\tlocal prime22 = true\n\t\tlocal prime23 = true\n\t\tlocal\
    \ prime24 = true\n\t\tlocal prime25 = true\n\t\tlocal prime26 = true\n\t\tlocal\
    \ prime27 = true\n\t\tlocal prime28 = true\n\t\tlocal prime29 = true\n\t\tlocal\
    \ prime30 = true\n\t\tlocal prime31 = true\n\t\tlocal prime32 = true\n\t\tlocal\
    \ prime33 = true\n\t\tlocal prime34 = true\n\t\tlocal prime35 = true\n\t\tlocal\
    \ prime36 = true\n\t\tlocal prime37 = true\n\t\tlocal prime38 = true\n\t\tlocal\
    \ prime39 = true\n\t\tlocal prime40 = true\n\t\tlocal prime41 = true\n\t\tlocal\
    \ prime42 = true\n\t\tlocal prime43 = true\n\t\tlocal prime44 = true\n\t\tlocal\
    \ prime45 = true\n\t\tlocal prime46 = true\n\t\tlocal prime47 = true\n\t\tlocal\
    \ prime48 = true\n\t\tlocal prime49 = true\n\t\tlocal prime50 = true\n\t\tlocal\
    \ prime51 = true\n\t\tlocal prime52 = true\n\t\tlocal prime53 = true\n\t\tlocal\
    \ prime54 = true\n\t\tlocal prime55 = true\n\t\tlocal prime56 = true\n\t\tlocal\
    \ prime57 = true\n\t\tlocal prime58 = true\n\t\tlocal prime59 = true\n\t\tlocal\
    \ prime60 = true\n\t\tlocal prime61 = true\n\t\tlocal prime62 = true\n\t\tlocal\
    \ prime63 = true\n\t\tlocal prime64 = true\n\t\tlocal prime65 = true\n\t\tlocal\
    \ prime66 = true\n\t\tlocal prime67 = true\n\t\tlocal prime68 = true\n", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif start <= start2 then\n\t\treturn \"NO\"\n\tend\n\tif end\
    \ <= end2 then\n\t\treturn \"NO\"\n\tend\n\tif start == start2 and end == end2\
    \ then\n\t\treturn \"YES\"\n\tend\n\tlocal length = math.abs(end - start)\n\t\
    local length2 = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\treturn \"\
    NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime", "\tlocal interval1Start = interval1[1]\n\
    \tlocal interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\t\
    local interval2End = interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\n\
    \tlocal interval2Length = interval2End - interval2Start\n\tlocal intersectionStart\
    \ = interval1Start + interval2Start\n\tlocal intersectionEnd = interval1Start\
    \ + interval2End\n\tlocal intersectionLength = intersectionEnd - intersectionStart\n\
    \tlocal isPrime = true\n\tlocal isPrimeLength = 1\n\tlocal isPrimeStart = 1\n\t\
    local isPrimeEnd = 1\n\tlocal isPrimeInterval = true\n\tlocal isPrimeIntervalLength\
    \ = 1\n\tlocal isPrimeIntervalStart = 1\n\tlocal isPrimeIntervalEnd = 1\n\tlocal\
    \ isPrimeIntervalInterval = true\n\tlocal isPrimeIntervalIntervalLength = 1\n\t\
    local isPrimeIntervalIntervalStart = 1\n\tlocal isPrimeIntervalIntervalEnd = 1\n\
    \tlocal isPrimeIntervalIntervalInterval = true\n\tlocal isPrimeIntervalIntervalIntervalLength\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalStart = 1\n\tlocal isPrimeIntervalIntervalIntervalEnd\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalInterval = true\n\tlocal isPrimeIntervalIntervalIntervalIntervalLength\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalStart = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalEnd\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalInterval = true\n\tlocal\
    \ isPrimeIntervalIntervalIntervalIntervalLength = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalStart\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalEnd = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalInterval\
    \ = true\n\tlocal isPrimeIntervalIntervalIntervalIntervalLength = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalStart\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalEnd = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalInterval\
    \ = true\n\tlocal isPrimeIntervalIntervalIntervalIntervalLength = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalStart\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalEnd = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalInterval\
    \ = true\n\tlocal isPrimeIntervalIntervalIntervalIntervalLength = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalStart\
    \ = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalEnd = 1\n\tlocal isPrimeIntervalIntervalIntervalIntervalInterval\
    \ = true\n\tlocal isPrimeIntervalIntervalIntervalIntervalLength = 1\n\tlocal isPrime",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 == length2 then\n\t\tif start1 <= start2 then\n\t\t\treturn\
    \ start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\treturn start2 <= end1 and end1\
    \ <= end2\n\t\tend\n\tend\n\tif length1 > length2 then\n\t\tlocal temp = start1\n\
    \t\tstart1 = start2\n\t\tstart2 = temp\n\t\tend1 = end2\n\t\tend2 = end1\n\tend\n\
    \tlocal prime = true\n\tlocal i = 2\n\twhile prime and i <= length1 do\n\t\tlocal\
    \ temp = start1 + i\n\t\tlocal j = 2\n\t\twhile prime and j <= length2 do\n\t\t\
    \tlocal temp = start2 + j\n\t\t\tif temp > length1 then\n\t\t\t\tprime = false\n\
    \t\t\telseif temp == length1 then\n\t\t\t\tprime = true\n\t\t\telse\n\t\t\t\t\
    prime = temp % length1 == 0 and temp % length2 == 0\n\t\t\tend\n\t\t\tj = j +\
    \ 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn prime\nend", "\tlocal start1, end1\
    \ = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1], interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length\
    \ = length1 + length2\n\tif length == 0 then\n\t\treturn \"NO\"\n\telseif length\
    \ == 1 then\n\t\treturn \"YES\"\n\telseif length == 2 then\n\t\treturn \"YES\"\
    \n\telseif length == 3 then\n\t\treturn \"YES\"\n\telseif length == 4 then\n\t\
    \treturn \"YES\"\n\telseif length == 5 then\n\t\treturn \"YES\"\n\telseif length\
    \ == 6 then\n\t\treturn \"YES\"\n\telseif length == 7 then\n\t\treturn \"YES\"\
    \n\telseif length == 8 then\n\t\treturn \"YES\"\n\telseif length == 9 or length\
    \ == 10 then\n\t\treturn \"YES\"\n\telseif length == 11 or length == 12 or length\
    \ == 13 or length == 14 or length == 15 or length == 16 or length == 17 or length\
    \ == 18 or length == 19 or length == 20 or length == 21 or length == 22 or length\
    \ == 23 or length == 24 or length == 25 or length == 26 or length == 27 or length\
    \ == 28 or length == 29 or length == 30 or length == 31 or length == 32 or length\
    \ == 33 or length == 34 or length == 35 or length == 36 or length == 37 or length\
    \ == 38 or length == 39 or length == 40 or length == 41 or length == 42 or length\
    \ == 43\n\tthen\n\t\treturn \"YES\"\n\telseif length == 46 or length == 47 or\
    \ length == 48 or length == 49 or length == 50 or length == 51 or length == 52\
    \ or length == 53 or length == 54 or length == 55 or length == 56 or length ==\
    \ 57 or length == 58 or length == 59 or length == 60 or length == 61 or length\
    \ == 62 or length == 63 or length == 64 or length == 65 or length == 66 or length\
    \ == 67 or length == 68 or length == 69 or length == 70 or length == 71 or length\
    \ == 72 or length == 73 or length == 74 or length == 75 or length == 76 or length\
    \ == 77 or length == 78 or length == 79 or length == 80 or length == 81 or length\
    \ == 82 or length == 83 or length == 84 or length == 85 or length == 86 or length\
    \ == 87 or length == 88 or length == 89 or length == 90 or length == 91 or length\
    \ == 92 or length == 93 or length == 94\n\tthen\n\t\treturn \"YES\"\n\telseif\
    \ length == 95 or length == 96 or length == 97", "  local start = interval1[1]\n\
    \  local end = interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n\
    \  local length = end - start\n  local length2 = end2 - start2\n  if length2 ==\
    \ 0 then\n    return length\n  elseif length2 == 1 then\n    return length\n \
    \ else\n    return length / length2\n  end\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length == length2 then\n\t\treturn \"YES\"\n\tend\n\tif length < length2\
    \ then\n\t\tstart = start + length\n\t\tend = end - length\n\tend\n\tif length2\
    \ < length then\n\t\tstart2 = start2 + length2\n\t\tend2 = end2 - length2\n\t\
    end\n\tif start < start2 then\n\t\tstart = start + length2\n\t\tend2 = end2 -\
    \ length2\n\tend\n\tif start < end2 then\n\t\tstart = start + length2\n\t\tend2\
    \ = end2 - length2\n\tend\n\tif start > end2 then\n\t\tstart = start + length2\n\
    \t\tend2 = end2 - length2\n\tend\n\tif start > end2 then\n\t\tstart = start +\
    \ length2\n\t\tend2 = end2 - length2\n\tend\n\tif start == end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif start > end2 then\n\t\tstart = start + length2\n\t\tend2\
    \ = end2 - length2\n\tend\n\tif start < end2 then\n\t\tstart = start + length2\n\
    \t\tend2 = end2 - length2\n\tend\n\tif start < end2 then\n\t\tstart = start +\
    \ length2\n\t\tend2 = end2 - length2\n\tend\n\tif start > end2 then\n\t\tstart\
    \ = start + length2\n\t\tend2 = end2 - length2\n\tend\n\tif start == end2 then\n\
    \t\treturn \"NO\"\n\tend\n\tif start < end2 then\n\t\tstart = start + length2\n\
    \t\tend2 = end2 - length2\n\tend\n\tif start < end2 then\n\t\tstart = start +\
    \ length2\n\t\tend2 = end2 - length2\n\tend\n\tif start > end2 then\n\t\tstart\
    \ = start + length2\n\t\tend2 = end2 - length2\n\tend\n\tif start == end2 then\n\
    \t\treturn \"NO\"\n\tend\n\tif start < end2 then\n\t\tstart = start + length2\n\
    \t\tend2 = end2 - length2\n\tend\n\tif start < end2 then\n\t\tstart = start +\
    \ length2\n\t\tend2 = end2 - length2\n\tend\n\tif start > end2 then\n\t\tstart\
    \ = start + length2\n\t\tend2 = end2 - length2\n\tend\n\tif start == end2 then\n\
    \t\treturn \"NO\"\n\tend\n\tif start < end2 then\n", "\tlocal interval1Start =\
    \ interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start =\
    \ interval2[1]\n\tlocal interval2End = interval2[2]\n\t\n\tif interval1Start >\
    \ interval1End or interval2Start > interval2End then\n\t\treturn \"NO\"\n\tend\n\
    \t\n\tif interval1Start <= interval2Start and interval1End >= interval2End then\n\
    \t\treturn \"YES\"\n\tend\n\t\n\tif interval1Start <= interval2Start and interval1End\
    \ <= interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start < interval2Start\
    \ and interval1End > interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start\
    \ < interval2Start and interval1End <= interval2End then\n\t\treturn \"YES\"\n\
    \tend\n\t\n\tif interval1Start > interval2Start and interval1End < interval2End\
    \ then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start > interval2Start and\
    \ interval1End > interval2End then\n\t\treturn \"YES\"\n\tend\n\t\n\treturn \"\
    NO\"\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = 0\n\tlocal\
    \ flag = false\n\tlocal flag2 = false\n\tlocal flag3 = false\n\tlocal flag4 =\
    \ false\n\tlocal flag5 = false\n\tlocal flag6 = false\n\tlocal flag7 = false\n\
    \tlocal flag8 = false\n\tlocal flag9 = false\n\tlocal flag10 = false\n\tlocal\
    \ flag11 = false\n\tlocal flag12 = false\n\tlocal flag13 = false\n\tlocal flag14\
    \ = false\n\tlocal flag15 = false\n\tlocal flag16 = false\n\tlocal flag17 = false\n\
    \tlocal flag18 = false\n\tlocal flag19 = false\n\tlocal flag20 = false\n\tlocal\
    \ flag21 = false\n\tlocal flag22 = false\n\tlocal flag23 = false\n\tlocal flag24\
    \ = false\n\tlocal flag25 = false\n\tlocal flag26 = false\n\tlocal flag27 = false\n\
    \tlocal flag28 = false\n\tlocal flag29 = false\n\tlocal flag30 = false\n\tlocal\
    \ flag31 = false\n\tlocal flag32 = false\n\tlocal flag33 = false\n\tlocal flag34\
    \ = false\n\tlocal flag35 = false\n\tlocal flag36 = false\n\tlocal flag37 = false\n\
    \tlocal flag38 = false\n\tlocal flag39 = false\n\tlocal flag40 = false\n\tlocal\
    \ flag41 = false\n\tlocal flag42 = false\n\tlocal flag43 = false\n\tlocal flag44\
    \ = false\n\tlocal flag45 = false\n\tlocal flag46 = false\n\tlocal flag47 = false\n\
    \tlocal flag48 = false\n\tlocal flag49 = false\n\tlocal flag50 = false\n\tlocal\
    \ flag51 = false\n\tlocal flag52 = false\n\tlocal flag53 = false\n\tlocal flag54\
    \ = false\n\tlocal flag55 = false\n\tlocal flag56 = false\n\tlocal flag57 = false\n\
    \tlocal flag58 = false\n\tlocal flag59 = false\n\tlocal flag60 = false\n\tlocal\
    \ flag61 = false\n\tlocal flag62 = false\n\tlocal flag63 = false\n\tlocal flag64\
    \ = false\n\tlocal flag65 = false\n\tlocal flag66 = false\n\tlocal flag67 = false\n\
    \tlocal flag68 = false\n\tlocal flag69 = false\n\tlocal flag70 = false\n\tlocal\
    \ flag71 = false\n\tlocal flag72 = false\n\tlocal flag73 = false\n\tlocal flag74\
    \ = false\n\tlocal flag75 = false\n\tlocal flag76 = false\n\tlocal flag77 = false",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 and length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 == 0 and length2 ~= 0 then\n\t\treturn \"NO\"\n\tend\n\tif\
    \ length1 ~= 0 and length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 ==\
    \ length2 then\n\t\tif start1 <= start2 and end1 >= end2 then\n\t\t\treturn \"\
    YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif start1 <= start2 and\
    \ end1 >= end2 then\n\t\tif length1 == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif start1 >= start2 and end1 <= end2 then\n\
    \t\tif length1 == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\
    \t\tend\n\tend\n\tif start1 <= start2 and end1 <= end2 then\n\t\tif length1 ==\
    \ 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\
    \tif start1 >= start2 and end1 >= end2 then\n\t\tif length1 == 1 then\n\t\t\t\
    return \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal\
    \ start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn \"NO\"\n\telseif length == 1 then\n\t\treturn\
    \ \"YES\"\n\telse\n\t\tlocal prime = true\n\t\tlocal prime_length = 2\n\t\tlocal\
    \ prime_start = start1\n\t\tlocal prime_end = end1\n\t\tlocal prime_length = end1\
    \ - start1\n\t\tlocal prime_start = start2\n\t\tlocal prime_end = end2\n\t\tlocal\
    \ prime_length = end2 - start2\n\t\tlocal prime_start = start1\n\t\tlocal prime_end\
    \ = end1\n\t\tlocal prime_length = end1 - start1\n\t\tlocal prime_start = start2\n\
    \t\tlocal prime_end = end2\n\t\tlocal prime_length = end2 - start2\n\t\tlocal\
    \ prime_start = start1\n\t\tlocal prime_end = end1\n\t\tlocal prime_length = end1\
    \ - start1\n\t\tlocal prime_start = start2\n\t\tlocal prime_end = end2\n\t\tlocal\
    \ prime_length = end2 - start2\n\t\tlocal prime_start = start1\n\t\tlocal prime_end\
    \ = end1\n\t\tlocal prime_length = end1 - start1\n\t\tlocal prime_start = start2\n\
    \t\tlocal prime_end = end2\n\t\tlocal prime_length = end2 - start2\n\t\tlocal\
    \ prime_start = start1\n\t\tlocal prime_end = end1\n\t\tlocal prime_length = end1\
    \ - start1\n\t\tlocal prime_start = start2\n\t\tlocal prime_end = end2\n\t\tlocal\
    \ prime_length = end2 - start2\n\t\tlocal prime_start = start1\n\t\tlocal prime_end\
    \ = end1\n\t\tlocal prime_length = end1 - start1\n\t\tlocal prime_start = start2\n\
    \t\tlocal prime_end = end2\n\t\tlocal prime_length = end2 - start2\n\t\tlocal\
    \ prime_start = start1\n\t\tlocal prime_end = end1\n\t\tlocal prime_length = end1\
    \ - start1\n\t\tlocal prime_start = start2\n\t\tlocal prime_end = end2\n\t\tlocal\
    \ prime_length = end2 - start2\n\t\tlocal prime_start = start1\n\t\tlocal prime_end\
    \ = end1\n\t\tlocal prime_length = end1 - start1\n\t\tlocal prime_start = start2\n\
    \t\tlocal prime_end = end2\n\t\tlocal prime_length = end2 - start2\n\t\tlocal\
    \ prime_start = start1\n\t\tlocal prime_end = end", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length\
    \ = length1 + length2\n\tlocal prime = true\n\tlocal prime_length = 2\n\tlocal\
    \ prime_start = start1\n\tlocal prime_end = start2\n\tlocal prime_length = length\n\
    \tlocal prime_prime = true\n\tlocal prime_prime_length = 2\n\tlocal prime_prime_start\
    \ = start2\n\tlocal prime_prime_end = end1\n\tlocal prime_prime_length = length\n\
    \tlocal prime_prime_prime = true\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = end2\n\tlocal prime_prime_prime_end = start1\n\tlocal\
    \ prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime = true\n\t\
    local prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime = true\n\tlocal prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_start = end1\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end2\n\tlocal prime_prime_prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_prime_start\
    \ = end2\n\tlocal prime_prime_prime_prime_prime_prime_end = end1\n\tlocal prime_prime_prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime_prime_prime = true\n\tlocal\
    \ prime_prime_prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_prime_prime_start\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_prime_prime_end = end2\n\tlocal\
    \ prime_prime_prime_prime_prime_prime_prime_length = length", "\tlocal start =\
    \ interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tlocal isIntersect = length >= length2\n\tlocal\
    \ isIntersect2 = length2 >= length\n\tlocal isIntersect3 = length >= length2\n\
    \tlocal isIntersect4 = length2 >= length\n\tlocal isIntersect5 = length >= length2\n\
    \tlocal isIntersect6 = length2 >= length\n\tlocal isIntersect7 = length >= length2\n\
    \tlocal isIntersect8 = length2 >= length\n\tlocal isIntersect9 = length >= length2\n\
    \tlocal isIntersect10 = length2 >= length\n\tlocal isIntersect11 = length >= length2\n\
    \tlocal isIntersect12 = length2 >= length\n\tlocal isIntersect13 = length >= length2\n\
    \tlocal isIntersect14 = length2 >= length\n\tlocal isIntersect15 = length >= length2\n\
    \tlocal isIntersect16 = length2 >= length\n\tlocal isIntersect17 = length >= length2\n\
    \tlocal isIntersect18 = length2 >= length\n\tlocal isIntersect19 = length >= length2\n\
    \tlocal isIntersect20 = length2 >= length\n\tlocal isIntersect21 = length >= length2\n\
    \tlocal isIntersect22 = length2 >= length\n\tlocal isIntersect23 = length >= length2\n\
    \tlocal isIntersect24 = length2 >= length\n\tlocal isIntersect25 = length >= length2\n\
    \tlocal isIntersect26 = length2 >= length\n\tlocal isIntersect27 = length >= length2\n\
    \tlocal isIntersect28 = length2 >= length\n\tlocal isIntersect29 = length >= length2\n\
    \tlocal isIntersect30 = length2 >= length\n\tlocal isIntersect31 = length >= length2\n\
    \tlocal isIntersect32 = length2 >= length\n\tlocal isIntersect33 = length >= length2\n\
    \tlocal isIntersect34 = length2 >= length\n\tlocal isIntersect35 = length >= length2\n\
    \tlocal isIntersect36 = length2 >= length\n\tlocal isIntersect37 = length >= length2\n\
    \tlocal isIntersect38 = length2 >= length\n\tlocal isIntersect39 = length >= length2\n\
    \tlocal isIntersect40 = ", "  -- Write your code here\n  local result = \"NO\"\
    \n  if interval1[1] < interval2[1] and interval1[2] < interval2[2] then\n    if\
    \ interval1[1] > interval2[1] then\n      result = result or \"YES\"\n    else\n\
    \      result = result or \"NO\"\n    end\n  end\n  return result\nend", "\tlocal\
    \ start1, end1 = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1],\
    \ interval2[2]\n\tlocal start1_inclusive, end1_inclusive = start1 < end1, start1\
    \ < end2\n\tlocal start2_inclusive, end2_inclusive = start2 < end1, start2 < end2\n\
    \tlocal start1_exclusive, end1_exclusive = start1 < end2, start1 < end1\n\tlocal\
    \ start2_exclusive, end2_exclusive = start2 < end2, start2 < end1\n\tlocal start1_start,\
    \ start1_end = start1 < end1, start1 < end2\n\tlocal start2_start, start2_end\
    \ = start2 < end1, start2 < end2\n\tlocal start1_end, start1_start = start1 <\
    \ end2, start1 < end1\n\tlocal start2_end, start2_start = start2 < end2, start2\
    \ < end1\n\tlocal start1_start, start1_end = start1 < end1, start1 < end2\n\t\
    local start2_start, start2_end = start2 < end1, start2 < end2\n\tlocal start1_end,\
    \ start1_start = start1 < end2, start1 < end1\n\tlocal start2_end, start2_start\
    \ = start2 < end2, start2 < end1\n\tlocal start1_start, start1_end = start1 <\
    \ end1, start1 < end2\n\tlocal start2_start, start2_end = start2 < end1, start2\
    \ < end2\n\tlocal start1_end, start1_start = start1 < end2, start1 < end1\n\t\
    local start2_end, start2_start = start2 < end2, start2 < end1\n\tlocal start1_start,\
    \ start1_end = start1 < end1, start1 < end2\n\tlocal start2_start, start2_end\
    \ = start2 < end1, start2 < end2\n\tlocal start1_end, start1_start = start1 <\
    \ end2, start1 < end1\n\tlocal start2_end, start2_start = start2 < end2, start2\
    \ < end1\n\tlocal start1_start, start1_end = start1 < end1, start1 < end2\n\t\
    local start2_start, start2_end = start2 < end1, start2 < end2\n\tlocal start1_end,\
    \ start1_start = start1 < end2, start1 < end1\n\tlocal start2_end, start2_start\
    \ = start2 < end2, start2 < end1\n\tlocal start1_start, start1_end = start1 <\
    \ end2, start1 < end1\n\tlocal start2_start, start2_end = start2 < end2, start2\
    \ < end1\n\tlocal start1_end, start1_start = start1 < end2, start1 < end1\n\t\
    local start2_end, start2_start = start2 < end2, start2 < end", "\tlocal start1\
    \ = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 and length2 == 0 then\n\t\treturn \"NO\"\n\
    \telseif length1 == 0 and length2 ~= 0 then\n\t\treturn \"NO\"\n\telseif length1\
    \ ~= 0 and length2 == 0 then\n\t\treturn \"NO\"\n\telseif length1 == length2 then\n\
    \t\treturn \"YES\"\n\telseif length1 > length2 then\n\t\tlocal temp = start1\n\
    \t\tstart1 = start2\n\t\tstart2 = temp\n\t\tend1 = end2\n\t\tend2 = end1\n\tend\n\
    \tlocal prime = true\n\tlocal prime_length = 2\n\tlocal prime_start = start1\n\
    \tlocal prime_end = start2\n\tlocal prime_length = end1 - start1\n\tlocal prime_start\
    \ = start2\n\tlocal prime_end = end2\n\tlocal prime_length = end2 - start2\n\t\
    local prime_start = start1\n\tlocal prime_end = end1\n\tlocal prime_length = end1\
    \ - start1\n\tlocal prime_start = start2\n\tlocal prime_end = end2\n\tlocal prime_length\
    \ = end2 - start2\n\tlocal prime_start = start1\n\tlocal prime_end = end1\n\t\
    local prime_length = end1 - start1\n\tlocal prime_start = start2\n\tlocal prime_end\
    \ = end2\n\tlocal prime_length = end2 - start2\n\tlocal prime_start = start1\n\
    \tlocal prime_end = end1\n\tlocal prime_length = end1 - start1\n\tlocal prime_start\
    \ = start2\n\tlocal prime_end = end2\n\tlocal prime_length = end2 - start2\n\t\
    local prime_start = start1\n\tlocal prime_end = end1\n\tlocal prime_length = end1\
    \ - start1\n\tlocal prime_start = start2\n\tlocal prime_end = end2\n\tlocal prime_length\
    \ = end2 - start2\n\tlocal prime_start = start1\n\tlocal prime_end = end1\n\t\
    local prime_length = end1 - start1\n\tlocal prime_start = start2\n\tlocal prime_end\
    \ = end2\n\tlocal prime_length = end2 - start2\n\tlocal prime_start = start1\n\
    \tlocal prime_end = end1\n\tlocal prime_length = end1 - start1\n\tlocal prime_start\
    \ = start2", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\t\n\tif length2 == 0 then\n\t\treturn \"NO\"\
    \n\tend\n\t\n\tif length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"\
    YES\"\n\t\tend\n\t\treturn \"NO\"\n\tend\n\t\n\tif length2 > length / 2 then\n\
    \t\treturn \"NO\"\n\tend\n\t\n\tlocal prime = true\n\t\n\tfor i = 2, length2 do\n\
    \t\tif length2 % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\
    \t\n\tif prime then\n\t\treturn \"YES\"\n\tend\n\t\n\treturn \"NO\"\nend", "\t\
    local interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal\
    \ interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal\
    \ interval1Length = interval1End - interval1Start\n\tlocal interval2Length = interval2End\
    \ - interval2Start\n\tlocal interval1StartIndex = math.floor(interval1Start /\
    \ interval1Length)\n\tlocal interval1EndIndex = math.floor(interval1End / interval1Length)\n\
    \tlocal interval2StartIndex = math.floor(interval2Start / interval2Length)\n\t\
    local interval2EndIndex = math.floor(interval2End / interval2Length)\n\tlocal\
    \ intersectionLength = interval1Length * interval2Length\n\tlocal intersectionStartIndex\
    \ = interval1StartIndex * interval2Length + interval2StartIndex\n\tlocal intersectionEndIndex\
    \ = intersectionStartIndex + intersectionLength\n\tlocal intersection = interval1Start\
    \ + interval1Length * interval2StartIndex + interval2Length * interval1EndIndex\n\
    \tlocal isPrime = true\n\tlocal isPrimeIndex = -1\n\tlocal isPrimeIndex2 = -1\n\
    \tlocal isPrimeIndex3 = -1\n\tlocal isPrimeIndex4 = -1\n\tlocal isPrimeIndex5\
    \ = -1\n\tlocal isPrimeIndex6 = -1\n\tlocal isPrimeIndex7 = -1\n\tlocal isPrimeIndex8\
    \ = -1\n\tlocal isPrimeIndex9 = -1\n\tlocal isPrimeIndex10 = -1\n\tlocal isPrimeIndex11\
    \ = -1\n\tlocal isPrimeIndex12 = -1\n\tlocal isPrimeIndex13 = -1\n\tlocal isPrimeIndex14\
    \ = -1\n\tlocal isPrimeIndex15 = -1\n\tlocal isPrimeIndex16 = -1\n\tlocal isPrimeIndex17\
    \ = -1\n\tlocal isPrimeIndex18 = -1\n\tlocal isPrimeIndex19 = -1\n\tlocal isPrimeIndex20\
    \ = -1\n\tlocal isPrimeIndex21 = -1\n\tlocal isPrimeIndex22 = -1\n\tlocal isPrimeIndex23\
    \ = -1\n\tlocal isPrimeIndex24 = -1\n\tlocal isPrimeIndex25 = -1\n\tlocal isPrimeIndex26\
    \ = -1\n\tlocal isPrimeIndex27 = -1\n\tlocal isPrimeIndex28 = -1\n\tlocal isPrimeIndex29\
    \ = -1\n\tlocal isPrimeIndex30 = -1\n\tlocal isPrimeIndex31 = -1\n\tlocal isPrimeIndex32\
    \ = -1\n\tlocal isPrimeIndex33 = -1\n\tlocal isPrimeIndex34 = -1", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tlocal prime = true\n\tlocal prime2 = true\n\tif length2 == 0 then\n\
    \t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\tif length == 1 then\n\t\t\t\
    return \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif length\
    \ == length2 then\n\t\t\tif start <= start2 then\n\t\t\t\tif end <= end2 then\n\
    \t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\
    \t\tif start <= end2 then\n\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\
    \t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tlocal prime =\
    \ true\n\tlocal prime2 = true\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tlocal i = 1\n\t\twhile i < length2 do\n\
    \t\t\tif start <= start2 and end2 >= end2 then\n\t\t\t\tprime = false\n\t\t\t\t\
    break\n\t\t\telseif start2 <= start and end2 >= end then\n\t\t\t\tprime2 = false\n\
    \t\t\t\tbreak\n\t\t\telse\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\tend\n\t\tif prime\
    \ == true and prime2 == true then\n\t\t\treturn \"YES\"\n\t\telseif prime == true\
    \ and prime2 == false then\n\t\t\treturn \"NO\"\n\t\telseif prime == false and\
    \ prime2 == true then\n\t\t\treturn \"NO\"\n\t\telseif prime == false and prime2\
    \ == false then\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start1, end1\
    \ = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1], interval2[2]\n\
    \tif start1 <= end2 and start2 <= end1 then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\tlocal intersectionStart = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\tlocal intersectionEnd = interval1Start <=\
    \ interval2Start and interval1End >= interval2End\n\tlocal intersectionLength\
    \ = interval1Start <= interval2Start and interval1End >= interval2End\n\tlocal\
    \ intersectionIsPrime = not (interval1Start <= interval2Start and interval1End\
    \ >= interval2End)\n\tlocal intersectionIsNotPrime = not (interval1Start <= interval2Start\
    \ and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime2 = not (interval1Start\
    \ <= interval2Start and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime3\
    \ = not (interval1Start <= interval2Start and interval1End >= interval2End)\n\t\
    local intersectionIsNotPrime4 = not (interval1Start <= interval2Start and interval1End\
    \ >= interval2End)\n\tlocal intersectionIsNotPrime5 = not (interval1Start <= interval2Start\
    \ and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime6 = not (interval1Start\
    \ <= interval2Start and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime7\
    \ = not (interval1Start <= interval2Start and interval1End >= interval2End)\n\t\
    local intersectionIsNotPrime8 = not (interval1Start <= interval2Start and interval1End\
    \ >= interval2End)\n\tlocal intersectionIsNotPrime9 = not (interval1Start <= interval2Start\
    \ and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime10 = not (interval1Start\
    \ <= interval2Start and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime11\
    \ = not (interval1Start <= interval2Start and interval1End >= interval2End)\n\t\
    local intersectionIsNotPrime12 = not (interval1Start <= interval2Start and interval1End\
    \ >= interval2End)\n\tlocal intersectionIsNotPrime13 = not (interval1Start <=\
    \ interval2Start and interval1End >= interval2End)\n\tlocal intersectionIsNotPrime14\
    \ = not (interval1Start <= interval2Start and interval1End >= interval2End)\n\t\
    local intersectionIsNotPrime15 = not ", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start1 <= end2 and start2 <= end1 then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == 1 then\n\t\treturn \"YES\"\n\telseif length2 ==\
    \ length then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\t\
    local start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 == length2 then\n\t\tif start1 <= start2 then\n\t\t\treturn\
    \ interval1[1] < interval2[1]\n\t\telse\n\t\t\treturn interval1[1] > interval2[1]\n\
    \t\tend\n\tend\n\tif start1 < start2 then\n\t\tlocal temp = start1\n\t\tstart1\
    \ = start2\n\t\tstart2 = temp\n\tend\n\tif start1 > start2 then\n\t\tlocal temp\
    \ = start1\n\t\tstart1 = start2\n\t\tstart2 = temp\n\tend\n\tlocal prime = true\n\
    \tlocal i = 2\n\twhile prime and i <= length1 do\n\t\tif start1 + i >= start2\
    \ and start1 + i <= end2 then\n\t\t\tprime = false\n\t\tend\n\t\ti = i + 1\n\t\
    end\n\tif prime then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tlocal length = length1 + length2\n\tlocal prime = true\n\t\
    local prime_length = 2\n\tlocal prime_start = start1\n\tlocal prime_end = start2\n\
    \tlocal prime_prime = true\n\tlocal prime_prime_length = 2\n\tlocal prime_prime_start\
    \ = start2\n\tlocal prime_prime_end = start1\n\tlocal prime_prime_prime = true\n\
    \tlocal prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = start1\n\
    \tlocal prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime = true\n\
    \tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_end = start1\n\tlocal prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = start1\n\tlocal prime_prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_prime_end = start2\n\tlocal\
    \ prime_prime_prime_prime_prime_prime_prime = true\n\tlocal prime_prime_prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_prime_prime_start = start2\n\tlocal\
    \ prime_prime_prime_prime_prime_prime_prime_end = start1\n\tlocal prime_prime_prime_prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \t\n\tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif\
    \ start <= start2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start <= end2 then\n\
    \t\treturn \"YES\"\n\tend\n\t\n\tif start2 <= end then\n\t\treturn \"YES\"\n\t\
    end\n\t\n\treturn \"NO\"\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == 1 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif start <= end2\
    \ then\n\t\t\tif length2 == 2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\t\
    return \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\
    \t\t\t\tif start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn\
    \ \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\t\
    else\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\
    else\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\
    \t\t\tif length2 == 2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\treturn \"\
    YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\t\
    if start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn \"\
    YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\
    \t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\
    \t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2\
    \ = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ == length2 then\n\t\tif length ~= 0 then\n\t\t\tif start <= start2 then\n\t\t\
    \t\treturn \"NO\"\n\t\t\tend\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"NO\"\
    \n\t\t\tend\n\t\tend\n\t\treturn \"YES\"\n\tend\n\tif length2 > length then\n\t\
    \treturn \"NO\"\n\tend\n\tif length2 < length then\n\t\treturn \"NO\"\n\tend\n\
    \tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\t\
    if start <= start2 then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length == length2 then\n\t\tif start\
    \ <= start2 then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\n\tif length2 == 2 then\n\t\tif start <= start2\
    \ then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\t\t\treturn \"\
    NO\"\n\t\tend\n\tend\n\tif length == length2 then\n\t\tif start <= start2 then\n\
    \t\t\treturn \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\t\t\treturn \"NO\"\n\t\
    \tend\n\tend\n\tif length2 == 3 then\n\t\tif start <= start2 then\n\t\t\treturn\
    \ \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\
    \tif length == length2 then\n\t\tif start <= start2 then\n\t\t\treturn \"NO\"\n\
    \t\tend\n\t\tif end >= end2 then\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2\
    \ == 4 then\n\t\tif start <= start2 then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif\
    \ end >= end2 then\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length == length2\
    \ then\n\t\tif start <= start2 then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif end\
    \ >= end2 then\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == 5 then\n\t\
    \tif start <= start2 then\n\t\t\treturn \"NO\"\n\t\tend\n\t\tif end >= end2 then\n\
    \t\t\treturn \"NO\"\n\t\tend\n\t", "\tlocal interval1Start = interval1[1]\n\t\
    local interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal\
    \ interval2End = interval2[2]\n\t\n\tif interval1Start > interval1End or interval2Start\
    \ > interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn \"YES\"\n\tend\n\t\n\tif interval1Start\
    \ <= interval2Start and interval1End > interval2Start then\n\t\treturn \"NO\"\n\
    \tend\n\t\n\tif interval1Start > interval1End and interval2Start <= interval2End\
    \ then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start > interval1End and interval2Start\
    \ > interval2End then\n\t\treturn \"YES\"\n\tend\n\t\n\tif interval1Start <= interval2Start\
    \ and interval1End <= interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start\
    \ <= interval2Start and interval1End > interval2Start then\n\t\treturn \"YES\"\
    \n\tend\n\t\n\tif interval1Start > interval1End and interval2Start <= interval2End\
    \ then\n\t\treturn \"YES\"\n\tend\n\t\n\tif interval1Start > interval1End and\
    \ interval2Start > interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start\
    \ <= interval2Start and interval1End <= interval2End then\n\t\treturn \"YES\"\n\
    \tend\n\t\n\tif interval1Start <= interval2Start and interval1End > interval2Start\
    \ then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start > interval1End and interval2Start\
    \ <= interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start > interval1End\
    \ and interval2Start > interval2End then\n\t\treturn \"YES\"\n\tend\n\t\n\tif\
    \ interval1Start <= interval2Start and interval1End <= interval2End then\n\t\t\
    return \"YES\"\n\tend\n\t\n\tif interval1Start <= interval2Start and interval1End\
    \ > interval2Start then\n\t\treturn \"NO\"\n\tend\n\t\n\tif interval1Start > interval1End\
    \ and interval2Start <= interval2End then\n\t\treturn \"NO\"\n\tend\n\t\n\tif\
    \ interval1Start > interval1End and interval2Start > interval2End then\n\t\treturn\
    \ \"YES\"\n\tend\n", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\t\
    end\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == length2 then\n\t\treturn \"YES\"\n\t\
    end\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal\
    \ prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n", "\t\
    local start1, end1 = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1],\
    \ interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\
    \tlocal length_intersection = length1 + length2\n\tlocal prime_number = 0\n\t\
    local prime_number_count = 0\n\tlocal prime_number_count_2 = 0\n\tlocal prime_number_count_3\
    \ = 0\n\tlocal prime_number_count_4 = 0\n\tlocal prime_number_count_5 = 0\n\t\
    local prime_number_count_6 = 0\n\tlocal prime_number_count_7 = 0\n\tlocal prime_number_count_8\
    \ = 0\n\tlocal prime_number_count_9 = 0\n\tlocal prime_number_count_10 = 0\n\t\
    local prime_number_count_11 = 0\n\tlocal prime_number_count_12 = 0\n\tlocal prime_number_count_13\
    \ = 0\n\tlocal prime_number_count_14 = 0\n\tlocal prime_number_count_15 = 0\n\t\
    local prime_number_count_16 = 0\n\tlocal prime_number_count_17 = 0\n\tlocal prime_number_count_18\
    \ = 0\n\tlocal prime_number_count_19 = 0\n\tlocal prime_number_count_20 = 0\n\t\
    local prime_number_count_21 = 0\n\tlocal prime_number_count_22 = 0\n\tlocal prime_number_count_23\
    \ = 0\n\tlocal prime_number_count_24 = 0\n\tlocal prime_number_count_25 = 0\n\t\
    local prime_number_count_26 = 0\n\tlocal prime_number_count_27 = 0\n\tlocal prime_number_count_28\
    \ = 0\n\tlocal prime_number_count_29 = 0\n\tlocal prime_number_count_30 = 0\n\t\
    local prime_number_count_31 = 0\n\tlocal prime_number_count_32 = 0\n\tlocal prime_number_count_33\
    \ = 0\n\tlocal prime_number_count_34 = 0\n\tlocal prime_number_count_35 = 0\n\t\
    local prime_number_count_36 = 0\n\tlocal prime_number_count_37 = 0\n\tlocal prime_number_count_38\
    \ = 0\n\tlocal prime_number_count_39 = 0\n\tlocal prime_number_count_40 = 0\n\t\
    local prime_number_count_41 = 0\n\tlocal prime_number_count_42 = 0\n\tlocal prime_number_count_43\
    \ = 0\n\tlocal prime_number_count_44 = 0\n\tlocal prime_number_count_45 = 0\n\t\
    local prime_number_count_46 = 0\n\tlocal prime_number_count_47 = 0\n\tlocal prime_number_count_48\
    \ = 0\n\tlocal prime_number_count_49 = 0\n\tlocal prime_number_count_50 = 0\n\t\
    local ", "  local start = interval1[1]\n  local end = interval1[2]\n  local start2\
    \ = interval2[1]\n  local end2 = interval2[2]\n  local length = end - start\n\
    \  local length2 = end2 - start2\n  if length2 == 0 then\n    return true\n  elseif\
    \ length2 == 1 then\n    return start <= end2\n  else\n    return length2 % length\
    \ == 0\n  end\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\tlocal intersectionStart = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\tlocal intersectionEnd = interval1Start <=\
    \ interval2End and interval1End >= interval2Start\n\tlocal intersectionLength\
    \ = interval1End - interval1Start + interval2End - interval2Start\n\tlocal isPrime\
    \ = interval1Start <= interval2Start and interval1End >= interval2End\n\tlocal\
    \ isNotPrime = interval1Start <= interval2End and interval1End >= interval2Start\n\
    \tlocal isNotIntersecting = interval1Start <= interval2Start and interval1End\
    \ >= interval2End\n\tlocal isIntersecting = interval1Start <= interval2End and\
    \ interval1End >= interval2Start\n\tlocal isNotIntersectingAndNotPrime = interval1Start\
    \ <= interval2End and interval1End >= interval2Start\n\tlocal isIntersectingAndNotPrime\
    \ = interval1Start <= interval2End and interval1End >= interval2End\n\tlocal isIntersectingAndPrime\
    \ = interval1Start <= interval2End and interval1End >= interval2Start\n\tlocal\
    \ isIntersectingAndNotPrime = interval1Start <= interval2End and interval1End\
    \ >= interval2End\n\tlocal isIntersectingAndNotPrimeAndNotIntersecting = interval1Start\
    \ <= interval2End and interval1End >= interval2End\n\tlocal isIntersectingAndPrimeAndNotIntersecting\
    \ = interval1Start <= interval2End and interval1End >= interval2Start\n\tlocal\
    \ isIntersectingAndNotPrimeAndPrime = interval1Start <= interval2End and interval1End\
    \ >= interval2End\n\tlocal isIntersectingAndNotPrimeAndNotIntersecting = interval1Start\
    \ <= interval2End and interval1End >= interval2End\n\tlocal isIntersectingAndPrimeAndPrime\
    \ = interval1Start <= interval2End and interval1End >= interval2Start\n\tlocal\
    \ isIntersectingAndNotPrimeAndPrime = interval1Start <= interval2End and interval1End\
    \ >= interval2End\n\tlocal isIntersectingAndNotPrimeAndNotIntersecting = interval1Start\
    \ <= interval2End and interval1End >= interval2End\n\tlocal isIntersecting", "\t\
    local interval1Start, interval1End = interval1[1], interval1[2]\n\tlocal interval2Start,\
    \ interval2End = interval2[1], interval2[2]\n\t\n\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start >= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval2Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval2Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval2End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start ", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    if length == 1 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\tfor i\
    \ = 2, length do\n\t\tif start1 + i == end1 or start2 + i == end2 then\n\t\t\t\
    prime = false\n\t\t\tbreak\n\t\tend\n\tend\n\tif prime then\n\t\treturn \"YES\"\
    \n\tend\n\treturn \"NO\"\nend", "  local start1 = interval1[1]\n  local end1 =\
    \ interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n \
    \ local length = end1 - start1\n  local length2 = end2 - start2\n  if length ==\
    \ 0 then\n    return length2\n  elseif length2 == 0 then\n    return length\n\
    \  else\n    return math.min(length, length2)\n  end\nend", "\tlocal interval1Start\
    \ = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start\
    \ = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal intersectionStart\
    \ = math.min(interval1Start, interval2Start)\n\tlocal intersectionEnd = math.max(interval1End,\
    \ interval2End)\n\tif intersectionStart > intersectionEnd then\n\t\treturn \"\
    NO\"\n\telseif intersectionStart <= intersectionEnd then\n\t\tlocal length = math.abs(intersectionEnd\
    \ - intersectionStart)\n\t\tif length % 2 == 0 then\n\t\t\tif length == 2 or length\
    \ == 3 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\t\
    end\n\t\telse\n\t\t\tif length == 1 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\
    \t\t\t\treturn \"NO\"\n\t\t\tend\n\t\tend\n\telse\n\t\treturn \"NO\"\n\tend\n\
    end", "\tlocal interval1Start, interval1End = interval1[1], interval1[2]\n\tlocal\
    \ interval2Start, interval2End = interval2[1], interval2[2]\n\tlocal interval1Length\
    \ = interval1End - interval1Start\n\tlocal interval2Length = interval2End - interval2Start\n\
    \tlocal intersectionLength = interval1Start + interval2End - interval1End - interval2Start\n\
    \tif interval1Length == interval2Length then\n\t\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\telse\n\t\tif interval1Start <= interval2Start and interval1End\
    \ >= interval2End then\n\t\t\tif intersectionLength == 2 then\n\t\t\t\tif interval1Start\
    \ % interval2Start == 0 and interval1End % interval2End == 0 then\n\t\t\t\t\t\
    return \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\
    \t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\tif intersectionLength == 2 then\n\
    \t\t\t\tif interval1Start % interval2Start == 0 and interval1End % interval2End\
    \ == 0 then\n\t\t\t\t\treturn \"NO\"\n\t\t\t\telse\n\t\t\t\t\treturn \"YES\"\n\
    \t\t\t\tend\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\tend\n\tend\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\
    \tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67\
    \ = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\tlocal prime70 = true\n\
    \tlocal prime71 = true\n\tlocal prime72 = true\n\tlocal prime73 = true\n\tlocal\
    \ prime74 = true\n\tlocal prime75 = true\n\tlocal ", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal lengthIntersection\
    \ = length1 + length2\n\tif lengthIntersection == 0 then\n\t\treturn \"NO\"\n\t\
    end\n\tif lengthIntersection == 1 then\n\t\treturn \"YES\"\n\tend\n\tif lengthIntersection\
    \ == 2 then\n\t\tif start1 <= start2 then\n\t\t\tif end1 <= end2 then\n\t\t\t\t\
    return \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\t\
    if end1 <= end2 then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\treturn \"YES\"\
    \n\t\t\tend\n\t\tend\n\tend\n\tif lengthIntersection > 2 then\n\t\tif start1 <=\
    \ start2 then\n\t\t\tif end1 <= end2 then\n\t\t\t\tif start1 <= start2 then\n\t\
    \t\t\t\tif end1 <= end2 then\n\t\t\t\t\t\tif start1 <= start2 then\n\t\t\t\t\t\
    \t\tif end1 <= end2 then\n\t\t\t\t\t\t\t\tif start1 <= start2 then\n\t\t\t\t\t\
    \t\t\t\tif end1 <= end2 then\n\t\t\t\t\t\t\t\t\t\tif start1 <= start2 then\n\t\
    \t\t\t\t\t\t\t\t\t\tif end1 <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\tif start1 <=\
    \ start2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\tif end1 <= end2 then\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif start1 <= start2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif end1 <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start1 <= start2 then\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\tif end1 <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\tif start1 <= start2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif end1\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    return \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    return \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\
    \t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\
    \t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\treturn \"\
    NO\"\n\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\
    \treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\
    return \"NO\"\n\t\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\
    \t\t\tend\n\t\t\t\telse\n\t\t\t\t\treturn ", "  local start = interval1[1]\n \
    \ local end = interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n\
    \  local length = end - start\n  local length2 = end2 - start2\n  if length2 ==\
    \ 0 then\n    return length\n  elseif length2 == 1 then\n    return length >=\
    \ start and length <= end\n  else\n    return length >= start and length <= end2\
    \ and\n           length2 >= start2 and length2 <= end2\n  end\nend", "\tlocal\
    \ interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal\
    \ interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal\
    \ intersectionStart = interval1Start <= interval2Start and interval1End >= interval2End\n\
    \tlocal intersectionEnd = interval1Start <= interval2Start and interval1End <=\
    \ interval2End\n\tlocal intersectionLength = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\tlocal intersectionIsPrime = not (intersectionStart\
    \ or intersectionEnd)\n\treturn intersectionIsPrime and \"YES\" or \"NO\"\nend",
  "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\t\
    local interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\t\
    local interval1_length = interval1_end - interval1_start\n\tlocal interval2_length\
    \ = interval2_end - interval2_start\n\tlocal interval1_start_index = interval1_start\
    \ + interval1_length\n\tlocal interval2_start_index = interval2_start + interval2_length\n\
    \tlocal intersection_length = interval1_start_index - interval2_start_index\n\t\
    local intersection_start = interval1_start_index\n\tlocal intersection_end = intersection_start\
    \ + intersection_length\n\tlocal intersection_start_index = interval1_start_index\n\
    \tlocal intersection_end_index = intersection_start_index + interval1_length\n\
    \tlocal intersection_start_index_2 = interval2_start_index\n\tlocal intersection_end_index_2\
    \ = intersection_start_index_2 + interval2_length\n\tlocal intersection_start_index_3\
    \ = interval1_start_index\n\tlocal intersection_end_index_3 = intersection_start_index_3\
    \ + interval1_length\n\tlocal intersection_start_index_4 = interval2_start_index\n\
    \tlocal intersection_end_index_4 = intersection_start_index_4 + interval2_length\n\
    \tlocal intersection_start_index_5 = interval1_start_index\n\tlocal intersection_end_index_5\
    \ = intersection_start_index_5 + interval1_length\n\tlocal intersection_start_index_6\
    \ = interval2_start_index\n\tlocal intersection_end_index_6 = intersection_start_index_6\
    \ + interval2_length\n\tlocal intersection_start_index_7 = interval1_start_index\n\
    \tlocal intersection_end_index_7 = intersection_start_index_7 + interval1_length\n\
    \tlocal intersection_start_index_8 = interval2_start_index\n\tlocal intersection_end_index_8\
    \ = intersection_start_index_8 + interval2_length\n\tlocal intersection_start_index_9\
    \ = interval1_start_index\n\tlocal intersection_end_index_9 = intersection_start_index_9\
    \ + interval1_length\n\tlocal intersection_start_index_10 = interval2_start_index\n\
    \tlocal intersection_end_index_10 = intersection_start_index_10 + interval2_length\n\
    \tlocal intersection_start_index_11 = interval1_start_index\n\tlocal intersection_end_index_11\
    \ = intersection_start_index_11 + interval1_length\n\tlocal intersection_start_index_12\
    \ = interval2_start_index\n\tlocal intersection_end_index_12 = intersection_start_index_12\
    \ + interval2_length\n\tlocal intersection_start_index_13 = interval1_start_index\n\
    \tlocal intersection_end_index_13 = intersection_start_index_13 + interval1_length\n\
    \tlocal intersection_start_index_14 = interval2_start_index\n\tlocal intersection_",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 > length2 then\n\t\tlocal temp = start1\n\t\tstart1 = start2\n\
    \t\tstart2 = temp\n\t\tend1 = end2\n\t\tend2 = end1\n\tend\n\tlocal prime = true\n\
    \tlocal prime_length = 2\n\twhile prime and prime_length <= length1 do\n\t\tlocal\
    \ prime_start = start1 + prime_length\n\t\tlocal prime_end = start2 + prime_length\n\
    \t\tif prime_start > prime_end then\n\t\t\tprime = false\n\t\telse\n\t\t\tlocal\
    \ prime_length = prime_length + 1\n\t\t\tif prime_length == length1 then\n\t\t\
    \t\tprime = false\n\t\t\tend\n\t\tend\n\tend\n\tif prime then\n\t\treturn \"YES\"\
    \n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ~=\
    \ length then\n\t\treturn \"NO\"\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n\tlocal prime69\
    \ = true\n\tlocal prime70 = true\n\tlocal prime71 = true\n\tlocal prime72 = true\n\
    \tlocal prime73 = ", "\tlocal interval1Start, interval1End = interval1[1], interval1[2]\n\
    \tlocal interval2Start, interval2End = interval2[1], interval2[2]\n\tif interval1Start\
    \ <= interval2Start and interval1End >= interval2End then\n\t\treturn interval1Start\
    \ <= interval2Start and interval1End >= interval2End\n\telse\n\t\treturn false\n\
    \tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\
    \tlocal interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\t\
    local intersectionStart = interval1Start and interval2Start and interval1Start\
    \ <= interval2Start and interval2Start <= interval1End\n\tlocal intersectionEnd\
    \ = interval1End and interval2End or interval1Start and interval2Start or interval1End\
    \ or interval2End\n\tlocal intersectionLength = interval1End - interval1Start\
    \ + interval2End - interval2Start\n\tlocal isPrime = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\treturn (isPrime and intersectionLength ==\
    \ 2) or (isPrime and intersectionLength == 1) or (isPrime and intersectionLength\
    \ == 0)\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End =\
    \ interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End =\
    \ interval2[2]\n\tlocal interval1Length = interval1End - interval1Start + 1\n\t\
    local interval2Length = interval2End - interval2Start + 1\n\tlocal intersectionLength\
    \ = interval1End + interval2Start - interval1Start + 1\n\tif interval1Start <\
    \ interval2Start then\n\t\tlocal interval1StartIndex = interval1Start - 1\n\t\t\
    local interval2StartIndex = interval2Start - 1\n\t\tlocal interval1EndIndex =\
    \ interval1End + 1\n\t\tlocal interval2EndIndex = interval2End + 1\n\t\tlocal\
    \ interval1StartIndex = interval1Start - 1\n\t\tlocal interval2StartIndex = interval2Start\
    \ - 1\n\t\tlocal interval1EndIndex = interval1End + 1\n\t\tlocal interval2EndIndex\
    \ = interval2End + 1\n\t\tlocal interval1StartIndex = interval1Start - 1\n\t\t\
    local interval2StartIndex = interval2Start - 1\n\t\tlocal interval1EndIndex =\
    \ interval1End + 1\n\t\tlocal interval2EndIndex = interval2End + 1\n\t\tlocal\
    \ interval1StartIndex = interval1Start - 1\n\t\tlocal interval2StartIndex = interval2Start\
    \ - 1\n\t\tlocal interval1EndIndex = interval1End + 1\n\t\tlocal interval2EndIndex\
    \ = interval2End + 1\n\t\tlocal interval1StartIndex = interval1Start - 1\n\t\t\
    local interval2StartIndex = interval2Start - 1\n\t\tlocal interval1EndIndex =\
    \ interval1End + 1\n\t\tlocal interval2EndIndex = interval2End + 1\n\t\tlocal\
    \ interval1StartIndex = interval1Start - 1\n\t\tlocal interval2StartIndex = interval2Start\
    \ - 1\n\t\tlocal interval1EndIndex = interval1End + 1\n\t\tlocal interval2EndIndex\
    \ = interval2End + 1\n\t\tlocal interval1StartIndex = interval1Start - 1\n\t\t\
    local interval2StartIndex = interval2Start - 1\n\t\tlocal interval1EndIndex =\
    \ interval1End + 1\n\t\tlocal interval2EndIndex = interval2End + 1\n\t\tlocal\
    \ interval1StartIndex = interval1Start - 1\n\t\tlocal interval2StartIndex = interval2Start\
    \ - 1\n\t\tlocal interval1EndIndex = interval1End + 1\n\t\tlocal interval2EndIndex\
    \ = interval2End + 1\n\t\tlocal interval1StartIndex = interval1Start - 1\n\t\t\
    local interval2StartIndex = interval2Start - 1\n\t\tlocal interval1EndIndex =\
    \ interval1End + 1\n\t\tlocal interval2EndIndex = interval2End + 1\n\t\tlocal\
    \ interval1StartIndex = interval1Start - 1\n\t\tlocal interval2StartIndex = interval2Start\
    \ - 1\n\t\tlocal interval", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\n\tif start > end\
    \ or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start <= start2 and\
    \ end >= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end\
    \ > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and end <= end2\
    \ then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and end > end2 then\n\
    \t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end >= end2 then\n\t\t\
    return \"NO\"\n\tend\n\t\n\tif start > start2 and end <= end2 then\n\t\treturn\
    \ \"YES\"\n\tend\n\t\n\tif start <= start2 and end > end2 then\n\t\treturn \"\
    NO\"\n\tend\n\t\n\tif start > start2 and end >= end2 then\n\t\treturn \"YES\"\n\
    \tend\n\t\n\tif start <= start2 and end >= end2 then\n\t\treturn \"NO\"\n\tend\n\
    \t\n\tif start > start2 and end <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\t\
    if start <= start2 and end >= end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start\
    \ > start2 and end >= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <=\
    \ start2 and end >= end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2\
    \ and end >= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and\
    \ end >= end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and end\
    \ >= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end >=\
    \ end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and end >= end2\
    \ then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end >= end2 then\n\
    \t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and end >= end2 then\n\t\treturn\
    \ \"YES\"\n\tend\n\t\n\tif start <= start2 and end >= end2 then\n\t\treturn \"\
    NO\"\n\tend\n\t\n\tif start > start2 and end >= end2 then\n\t\treturn \"YES\"\n\
    \t", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn \"NO\"\n\tend\n\tif start <= start2 then\n\t\treturn \"NO\"\
    \n\tend\n\tif start < start2 then\n\t\tstart = start2\n\tend\n\tif end < end2\
    \ then\n\t\tend = end2\n\tend\n\tif start <= end then\n\t\tlocal length = end\
    \ - start\n\t\tif length == 2 or length == 3 then\n\t\t\treturn \"YES\"\n\t\t\
    else\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\treturn \"NO\"\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif start <= end2 then\n\t\t\tif start\
    \ <= end2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    \tend\n\t\t\t\telse\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn \"YES\"\
    \n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\
    else\n\t\t\t\tif start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\
    \t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\
    \t\t\t\telse\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\
    \t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\
    \t\telse\n\t\t\tif start <= end2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\
    \tif start <= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\
    \treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    \tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif start <= end2 then\n\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn\
    \ \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 < length2\
    \ then\n\t\tstart1, end1, start2, end2 = start2, end2, start1, end1\n\tend\n\t\
    local length = end1 - start1\n\tif length == 1 then\n\t\treturn \"YES\"\n\tend\n\
    \tlocal prime = true\n\tlocal prime_numbers = prime_numbers_generator(length)\n\
    \tfor _, prime in pairs(prime_numbers) do\n\t\tif prime == length1 then\n\t\t\t\
    return \"YES\"\n\t\tend\n\t\tif prime == length2 then\n\t\t\treturn \"YES\"\n\t\
    \tend\n\t\tif prime == length1 ~= length2 then\n\t\t\tif prime == length1 ~= length2\
    \ then\n\t\t\t\tprime = false\n\t\t\tend\n\t\tend\n\tend\n\treturn \"NO\"\nend",
  "  local interval1_start = interval1[1]\n  local interval1_end = interval1[2]\n\
    \  local interval2_start = interval2[1]\n  local interval2_end = interval2[2]\n\
    \  local intersection_start = interval1_start <= interval2_start and interval2_start\
    \ <= interval1_end and interval1_end <= interval2_end\n  local intersection_end\
    \ = interval1_start <= interval2_start and interval2_start <= interval1_end and\
    \ interval1_end <= interval2_end\n  local intersection_length = interval1_end\
    \ - interval1_start + interval2_end - interval2_start\n  return intersection_start\
    \ and intersection_end and intersection_length and interval1_start <= interval2_start\
    \ and interval2_start <= interval1_end and interval1_end <= interval2_end and\
    \ interval1_start + interval1_length == interval2_start + interval2_length\nend",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tlocal length = length1 + length2\n\tif length == 0 then\n\
    \t\treturn \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telseif length\
    \ == 2 then\n\t\tif start1 <= start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\
    \treturn \"NO\"\n\t\tend\n\telse\n\t\tif start1 <= start2 then\n\t\t\tif end1\
    \ <= end2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\
    \tend\n\t\telse\n\t\t\tif end1 <= end2 then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\
    \t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal interval1_start\
    \ = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal interval2_start\
    \ = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal intersection_start\
    \ = interval1_start <= interval2_start and interval1_end >= interval2_end\n\t\
    local intersection_end = interval1_start <= interval2_end and interval1_end >=\
    \ interval2_start\n\tlocal intersection_length = interval1_end - interval1_start\n\
    \tlocal intersection_is_prime = not (math.mod(intersection_length, 2) == 0)\n\t\
    return (intersection_start and intersection_end and intersection_is_prime)\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif start == start2 and end == end2 then\n\t\treturn \"YES\"\
    \n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2\
    \ == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == length2 then\n\t\tlocal prime = true\n\t\tlocal prime2\
    \ = true\n\t\tlocal prime3 = true\n\t\tlocal prime4 = true\n\t\tlocal prime5 =\
    \ true\n\t\tlocal prime6 = true\n\t\tlocal prime7 = true\n\t\tlocal prime8 = true\n\
    \t\tlocal prime9 = true\n\t\tlocal prime10 = true\n\t\tlocal prime11 = true\n\t\
    \tlocal prime12 = true\n\t\tlocal prime13 = true\n\t\tlocal prime14 = true\n\t\
    \tlocal prime15 = true\n\t\tlocal prime16 = true\n\t\tlocal prime17 = true\n\t\
    \tlocal prime18 = true\n\t\tlocal prime19 = true\n\t\tlocal prime20 = true\n\t\
    \tlocal prime21 = true\n\t\tlocal prime22 = true\n\t\tlocal prime23 = true\n\t\
    \tlocal prime24 = true\n\t\tlocal prime25 = true\n\t\tlocal prime26 = true\n\t\
    \tlocal prime27 = true\n\t\tlocal prime28 = true\n\t\tlocal prime29 = true\n\t\
    \tlocal prime30 = true\n\t\tlocal prime31 = true\n\t\tlocal prime32 = true\n\t\
    \tlocal prime33 = true\n\t\tlocal prime34 = true\n\t\tlocal prime35 = true\n\t\
    \tlocal prime36 = true\n\t\tlocal prime37 = true\n\t\tlocal prime38 = true\n\t\
    \tlocal prime39 = true\n\t\tlocal prime40 = true\n\t\tlocal prime41 = true\n\t\
    \tlocal prime42 = true\n\t\tlocal prime43 = true\n\t\tlocal prime44 = true\n\t\
    \tlocal prime45 = true\n\t\tlocal prime46 = true\n\t\tlocal prime47 = true\n\t\
    \tlocal prime48 = true\n\t\tlocal prime49 = true\n\t\tlocal prime50 = true\n\t\
    \tlocal prime51 = true\n\t\tlocal prime52 = true\n\t\tlocal prime53 = true\n\t\
    \tlocal prime54 = true\n\t\tlocal prime55 = true\n\t\tlocal prime56 = true\n\t\
    \tlocal prime57 = true\n\t\tlocal prime58 = true\n\t\tlocal prime59 = true\n\t\
    \tlocal prime60 = true\n\t\tlocal prime61 = true\n\t\tlocal prime62 = true\n\t\
    \tlocal prime63 = true\n\t\tlocal prime", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 and length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == 0 or length2\
    \ == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length1 > length2 then\n\t\tstart1, end1 = end1, start1\n\
    \t\tstart2, end2 = end2, start2\n\tend\n\tlocal prime = true\n\tlocal i = 2\n\t\
    while prime and i <= length1 do\n\t\tlocal prime2 = start1 + i / 2\n\t\tif prime2\
    \ > end1 then\n\t\t\tprime2 = end1\n\t\tend\n\t\tif prime2 == end2 then\n\t\t\t\
    prime = false\n\t\tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\treturn \"YES\"\
    \n\tend\n\treturn \"NO\"\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\t\
    end\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length2 == 2 then\n\
    \t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\tend\n\t\tif length == 2 then\n\
    \t\t\tif start <= start2 then\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\t\tif end\
    \ >= end2 then\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\n\t\
    local interval2Length = interval2End - interval2Start\n\tlocal intersectionStart\
    \ = interval1Start + interval2Start\n\tlocal intersectionEnd = interval1Start\
    \ + interval2End\n\tif interval1Start <= interval2Start and interval1End >= interval2End\
    \ then\n\t\tif interval1Start <= intersectionStart and intersectionStart <= interval1End\
    \ then\n\t\t\tif interval1End <= intersectionEnd then\n\t\t\t\treturn \"YES\"\n\
    \t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\treturn \"NO\"\n\t\
    \tend\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length\
    \ = length1 + length2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length == 2 then\n\t\tif start1 <=\
    \ start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t\
    end\n\tif length == 3 then\n\t\tif start1 <= start2 then\n\t\t\tif end1 <= end2\
    \ then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\
    \t\telse\n\t\t\tif end1 <= end2 then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\
    \treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\n\tif length == 4 then\n\t\tif start1\
    \ <= start2 then\n\t\t\tif end1 <= end2 then\n\t\t\t\tif start2 <= start3 then\n\
    \t\t\t\t\treturn \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\
    \t\t\telse\n\t\t\t\tif start2 <= start3 then\n\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    else\n\t\t\t\t\treturn \"YES\"\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tif end1\
    \ <= end2 then\n\t\t\t\tif start2 <= start3 then\n\t\t\t\t\treturn \"YES\"\n\t\
    \t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif start2\
    \ <= start3 then\n\t\t\t\t\treturn \"NO\"\n\t\t\t\telse\n\t\t\t\t\treturn \"YES\"\
    \n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif length == 5 then\n\t\tif start1\
    \ <= start2 then\n\t\t\tif end1 <= end2 then\n\t\t\t\tif start2 <= start3 then\n\
    \t\t\t\t\tif start3 <= start4 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\
    \t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif start2 <=\
    \ start3 then\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"\
    YES\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif end1 <= end2 then\n\t\
    \t\t\t\tif start2 <= start3 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\
    \t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif start2 <=\
    \ start3 then\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"\
    YES\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tif end1 <= end2\
    \ then\n\t\t\t\tif start2 <= start3 then\n\t\t\t\t\tif start3 <= start4 then\n\
    \t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    \t", "  local start = interval1[1]\n  local end = interval1[2]\n  local start2\
    \ = interval2[1]\n  local end2 = interval2[2]\n  local length1 = end - start\n\
    \  local length2 = end2 - start2\n  if length1 < length2 then\n    start = start2\n\
    \    end = end2\n  end\n  if start <= end and start <= end2 then\n    return true\n\
    \  elseif start > end and start > end2 then\n    return false\n  elseif start\
    \ < end and start < end2 then\n    return true\n  elseif start > end and start\
    \ < end2 then\n    return false\n  elseif start == end and start == end2 then\n\
    \    return true\n  else\n    return false\n  end\nend", "\tlocal interval1Start\
    \ = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start\
    \ = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal interval1Length\
    \ = interval1End - interval1Start\n\tlocal interval2Length = interval2End - interval2Start\n\
    \tlocal intersectionLength = interval1Start + interval2End - interval1End - interval2Start\n\
    \tif interval1Length == interval2Length then\n\t\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\t\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\
    \t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\
    \t\tif interval1Start <= interval2Start and interval1End >= interval2End then\n\
    \t\t\tif interval1Start <= interval2Start and interval1End >= interval2End then\n\
    \t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal interval1_start = interval1[1]\n\
    \tlocal interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\
    \tlocal interval2_end = interval2[2]\n\t\n\tif interval1_start <= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\treturn interval1_start, interval1_end\n\
    \telseif interval1_start <= interval2_end and interval1_end >= interval2_start\
    \ then\n\t\treturn interval1_end, interval1_start\n\telseif interval1_start <=\
    \ interval2_start and interval1_end <= interval2_end then\n\t\treturn interval1_start,\
    \ interval1_end\n\telseif interval1_start >= interval2_start and interval1_end\
    \ <= interval2_end then\n\t\treturn interval1_end, interval1_start\n\telseif interval1_start\
    \ >= interval2_start and interval1_end >= interval2_end then\n\t\treturn interval1_start,\
    \ interval1_end\n\telseif interval1_start <= interval2_start and interval1_end\
    \ >= interval2_start then\n\t\treturn interval1_start, interval1_end\n\telseif\
    \ interval1_start >= interval2_start and interval1_end <= interval2_end then\n\
    \t\treturn interval1_end, interval1_start\n\telseif interval1_start >= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\treturn interval1_start, interval1_end\n\
    \telseif interval1_start <= interval2_start and interval1_end <= interval2_start\
    \ then\n\t\treturn interval1_start, interval1_end\n\telseif interval1_start >=\
    \ interval2_start and interval1_end >= interval2_start then\n\t\treturn interval1_start,\
    \ interval1_end\n\telseif interval1_start <= interval2_start and interval1_end\
    \ <= interval2_end then\n\t\treturn interval1_start, interval1_end\n\telseif interval1_start\
    \ >= interval2_start and interval1_end >= interval2_end then\n\t\treturn interval1_start,\
    \ interval1_end\n\telseif interval1_start <= interval2_start and interval1_end\
    \ >= interval2_start then\n\t\treturn interval1_start, interval1_end\n\telseif\
    \ interval1_start >= interval2_start and interval1_end <= interval2_end then\n\
    \t\treturn interval1_end, interval1_start\n\telseif interval1_start >= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\treturn interval1_end, interval1_start\n\
    \telseif interval1_start <= interval2_start and interval1_end <= interval2_start\
    \ then\n\t\treturn interval1_start, interval1_end\n\telseif interval1_start >=\
    \ interval2_start and interval1_end >= interval2_start then\n\t\treturn interval1_start,\
    \ interval1_end\n\telseif interval1_start <= interval2_start and interval1_end\
    \ <= interval2_", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 =\
    \ end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length_intersection\
    \ = length1 + length2\n\tif length_intersection == 0 then\n\t\treturn \"NO\"\n\
    \telseif length_intersection == 1 then\n\t\treturn \"YES\"\n\telse\n\t\tlocal\
    \ prime = true\n\t\tlocal i = 1\n\t\twhile prime and i <= length_intersection\
    \ do\n\t\t\tif start1 <= start2 and end1 >= end2 then\n\t\t\t\tprime = false\n\
    \t\t\telse\n\t\t\t\tprime = true\n\t\t\tend\n\t\t\ti = i + 1\n\t\tend\n\t\tif\
    \ prime then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t\
    end\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\t\
    end\n\tif length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\
    \tend\n\t\treturn \"NO\"\n\tend\n\tif length2 > length or length2 <= 0 then\n\t\
    \treturn \"NO\"\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3\
    \ = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\
    \tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10\
    \ = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\
    \tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal\
    \ prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20\
    \ = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\
    \tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal\
    \ prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30\
    \ = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\
    \tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal\
    \ prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40\
    \ = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\
    \tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal\
    \ prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50\
    \ = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\
    \tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal\
    \ prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60\
    \ = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\
    \tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true", "  local\
    \ start = interval1[1]\n  local end = interval1[2]\n  local start2 = interval2[1]\n\
    \  local end2 = interval2[2]\n  local length = end - start\n  local length2 =\
    \ end2 - start2\n  if length2 == 0 then\n    return length\n  end\n  if length2\
    \ > 0 then\n    return length\n  end\n  if length == 0 then\n    return length2\n\
    \  end\n  if start < start2 then\n    return length\n  end\n  if end > end2 then\n\
    \    return length\n  end\n  if start > end2 then\n    return length2\n  end\n\
    \  if start == start2 then\n    return length\n  end\n  if end == end2 then\n\
    \    return length2\n  end\n  if start < start2 then\n    return length\n  end\n\
    \  if end > end2 then\n    return length\n  end\n  if start == start2 then\n \
    \   return length\n  end\n  if end == end2 then\n    return length2\n  end\n \
    \ if start > end2 then\n    return length2\n  end\n  if start == start2 then\n\
    \    return length\n  end\n  if end == end2 then\n    return length2\n  end\n\
    \  if start < start2 then\n    return length\n  end\n  if end > end2 then\n  \
    \  return length\n  end\n  if start == start2 then\n    return length\n  end\n\
    \  if end == end2 then\n    return length2\n  end\n  if start > end2 then\n  \
    \  return length2\n  end\n  if start == start2 then\n    return length\n  end\n\
    \  if end == end2 then\n    return length2\n  end\n  if start < start2 then\n\
    \    return length\n  end\n  if end > end2 then\n    return length\n  end\n  if\
    \ start == start2 then\n    return length\n  end\n  if end == end2 then\n    return\
    \ length2\n  end\n  if start > end2 then\n    return length2\n  end\n  if start\
    \ == start2 then\n    return length\n  end\n  if end == end2 then\n    return\
    \ length2\n  end\n  if start < start2 then\n    return length\n  end\n  if end\
    \ > end2 then\n    return length\n  end\n  if start == start2 then\n    return\
    \ length\n  end\n  if end == end2 then\n    return length2\n  end\n  if start\
    \ > end2 then\n    return length2\n  end\n  if start == start2 then\n    return\
    \ length\n  end\n  if end == end2 then\n    return length2\n  end\n  if start\
    \ < start2 then\n    return length\n  end\n  if end > end2 then\n    return length\n",
  "  local start = interval1[1]\n  local end = interval1[2]\n  local start2 = interval2[1]\n\
    \  local end2 = interval2[2]\n  if start <= end and start2 <= end2 then\n    if\
    \ start < start2 then\n      start = start2\n    end\n    if end > end2 then\n\
    \      end = end2\n    end\n    if start <= end then\n      local length = end\
    \ - start\n      if length <= 1 then\n        return \"NO\"\n      else\n    \
    \    for i = 2, length do\n          if start % i == 0 and end % i == 0 then\n\
    \            return \"NO\"\n          end\n        end\n        return \"YES\"\
    \n      end\n    end\n  end\n  return \"NO\"\nend", "\tlocal interval1_start =\
    \ interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal interval2_start\
    \ = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal interval1_length\
    \ = interval1_end - interval1_start\n\tlocal interval2_length = interval2_end\
    \ - interval2_start\n\tlocal intersection_length = interval1_end - interval2_start\n\
    \tif interval1_length == interval2_length then\n\t\tif interval1_start <= interval2_start\
    \ then\n\t\t\treturn interval1_start <= intersection_length\n\t\telse\n\t\t\t\
    return interval2_start <= intersection_length\n\t\tend\n\telse\n\t\treturn interval1_length\
    \ < interval2_length\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telseif length == 2\
    \ then\n\t\tif start1 <= start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn\
    \ \"NO\"\n\t\tend\n\telse\n\t\tif start1 <= start2 then\n\t\t\tif end1 <= end2\
    \ then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\
    \t\telse\n\t\t\tif end1 <= end2 then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\
    \treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\tif length == 1\
    \ then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\t\
    if length2 > length + 1 then\n\t\treturn \"NO\"\n\tend\n\tlocal prime = true\n\
    \tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true\n\tlocal prime66 = true\n", "\tlocal interval1_start = interval1[1]\n\
    \tlocal interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\
    \tlocal interval2_end = interval2[2]\n\tlocal interval1_length = interval1_end\
    \ - interval1_start\n\tlocal interval2_length = interval2_end - interval2_start\n\
    \tlocal interval1_prime_length = interval1_length / 2\n\tlocal interval2_prime_length\
    \ = interval2_length / 2\n\tlocal interval1_prime_start = interval1_start + interval1_prime_length\n\
    \tlocal interval2_prime_start = interval2_start + interval2_prime_length\n\tlocal\
    \ interval1_prime_end = interval1_start + interval1_prime_length\n\tlocal interval2_prime_end\
    \ = interval2_start + interval2_prime_length\n\tlocal interval1_prime_prime_length\
    \ = interval1_prime_length / 2\n\tlocal interval2_prime_prime_length = interval2_prime_length\
    \ / 2\n\tlocal interval1_prime_prime_start = interval1_prime_start + interval1_prime_prime_length\n\
    \tlocal interval2_prime_prime_start = interval2_prime_start + interval2_prime_prime_length\n\
    \tlocal interval1_prime_prime_end = interval1_prime_start + interval1_prime_prime_length\n\
    \tlocal interval2_prime_prime_end = interval2_prime_start + interval2_prime_prime_length\n\
    \tlocal interval1_prime_prime_prime_length = interval1_prime_prime_length / 2\n\
    \tlocal interval2_prime_prime_prime_length = interval2_prime_prime_length / 2\n\
    \tlocal interval1_prime_prime_prime_start = interval1_prime_prime_start + interval1_prime_prime_prime_length\n\
    \tlocal interval2_prime_prime_prime_start = interval2_prime_prime_start + interval2_prime_prime_prime_length\n\
    \tlocal interval1_prime_prime_prime_end = interval1_prime_prime_start + interval1_prime_prime_prime_length\n\
    \tlocal interval2_prime_prime_prime_end = interval2_prime_prime_start + interval2_prime_prime_prime_length\n\
    \tlocal interval1_prime_prime_prime_prime_length = interval1_prime_prime_prime_length\
    \ / 2\n\tlocal interval2_prime_prime_prime_prime_length = interval2_prime_prime_prime_length\
    \ / 2\n\tlocal interval1_prime_prime_prime_prime_start = interval1_prime_prime_prime_start\
    \ + interval1_prime_prime_prime_prime_length\n\tlocal ", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\telseif start <= start2\
    \ then\n\t\treturn \"NO\"\n\telseif start2 <= end then\n\t\treturn \"YES\"\n\t\
    else\n\t\treturn \"NO\"\n\tend\nend", "\tlocal interval1_start = interval1[1]\n\
    \tlocal interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\
    \tlocal interval2_end = interval2[2]\n\tlocal interval1_length = interval1_end\
    \ - interval1_start\n\tlocal interval2_length = interval2_end - interval2_start\n\
    \tlocal interval1_start_index = interval1_start + interval1_length\n\tlocal interval2_start_index\
    \ = interval2_start + interval2_length\n\tlocal intersection_length = interval1_start_index\
    \ - interval2_start_index\n\tif intersection_length == 0 then\n\t\treturn \"NO\"\
    \n\telseif interval1_start_index > interval2_start_index then\n\t\treturn \"NO\"\
    \n\telseif interval1_start_index == interval2_start_index then\n\t\tif interval1_length\
    \ == interval2_length then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\
    \n\t\tend\n\telse\n\t\treturn \"YES\"\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 and start2 <= end\n\tthen\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "  local start = interval1[1]\n  local end = interval1[2]\n\
    \  local start2 = interval2[1]\n  local end2 = interval2[2]\n  if start <= end2\
    \ then\n    if start <= end2 then\n      local length = end - start\n      if\
    \ length % 2 == 0 then\n        return true\n      else\n        return false\n\
    \      end\n    else\n      local length = end2 - start2\n      if length % 2\
    \ == 0 then\n        return true\n      else\n        return false\n      end\n\
    \    end\n  else\n    if start <= end2 then\n      local length = end2 - start2\n\
    \      if length % 2 == 0 then\n        return true\n      else\n        return\
    \ false\n      end\n    else\n      local length = end - start\n      if length\
    \ % 2 == 0 then\n        return true\n      else\n        return false\n     \
    \ end\n    end\n  end\nend", "  local start = interval1[1]\n  local end = interval1[2]\n\
    \  local start2 = interval2[1]\n  local end2 = interval2[2]\n  if start > end\
    \ or start2 > end2 then\n    return \"NO\"\n  end\n  if start <= start2 then\n\
    \    return false\n  end\n  if end <= end2 then\n    return false\n  end\n  local\
    \ length = end - start\n  local length2 = end2 - start2\n  if length2 == 0 then\n\
    \    return \"NO\"\n  end\n  if length % length2 == 0 then\n    return \"NO\"\n\
    \  end\n  local prime = true\n  for i = 2, length / 2 do\n    if start % i ==\
    \ 0 and end % i == 0 then\n      prime = false\n    end\n  end\n  if prime then\n\
    \    return \"YES\"\n  end\n  return \"NO\"\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end and start2 <= end2 then\n\t\tif start < start2 then\n\t\t\t\
    start = start2\n\t\tend\n\t\tif end > end2 then\n\t\t\tend = end2\n\t\tend\n\t\
    \tif start <= end then\n\t\t\tif start == end then\n\t\t\t\treturn \"NO\"\n\t\t\
    \telse\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\n\treturn \"NO\"\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\t\
    return \"YES\"\n\tend\n\tif length2 > length * length then\n\t\treturn \"NO\"\n\
    \tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\t\
    local prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length2 == 2 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\tend\n\t\
    \tif length == 2 then\n\t\t\tif start <= start2 then\n\t\t\t\treturn \"YES\"\n\
    \t\t\tend\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\t\
    end\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\
    \tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tif start ==\
    \ start2 and end == end2 then\n\t\treturn \"YES\"\n\tend\n\tlocal length = math.abs(end\
    \ - start)\n\tlocal length2 = math.abs(end2 - start2)\n\tif length2 == 0 then\n\
    \t\treturn \"NO\"\n\tend\n\tif length2 > length then\n\t\tlength = length2\n\t\
    end\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal\
    \ prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 =\
    \ end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1 == 0 or length2\
    \ == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2 then\n\t\tif start1\
    \ <= start2 then\n\t\t\treturn start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\
    \treturn start2 <= end1 and end1 <= end2\n\t\tend\n\tend\n\tif length1 > length2\
    \ then\n\t\tlocal temp = start1\n\t\tstart1 = start2\n\t\tstart2 = temp\n\t\t\
    end1 = end2\n\t\tend2 = end1\n\tend\n\tlocal prime = nil\n\tlocal prime_found\
    \ = false\n\tlocal prime_start = start1\n\tlocal prime_end = start2\n\tlocal prime_length\
    \ = length1\n\tlocal prime_prime_found = false\n\tlocal prime_prime_start = start2\n\
    \tlocal prime_prime_end = end1\n\tlocal prime_prime_length = length2\n\tlocal\
    \ prime_prime_prime_found = false\n\tlocal prime_prime_prime_start = start2\n\t\
    local prime_prime_prime_end = end2\n\tlocal prime_prime_prime_length = length1\n\
    \tlocal prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_length\
    \ = length2\n\tlocal prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_end = end1\n\tlocal prime_prime_prime_prime_length\
    \ = length1\n\tlocal prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_start\
    \ = end1\n\tlocal prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_length\
    \ = length2\n\tlocal prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_start\
    \ = end2\n\tlocal prime_prime_prime_prime_end = end1\n\tlocal prime_prime_prime_prime_length\
    \ = length1\n\tlocal prime_prime_prime_prime_found = false\n\tlocal prime_prime",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\
    \t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\
    \t\tend\n\telse\n\t\tif length < length2 then\n\t\t\tlocal temp = start\n\t\t\t\
    start = end\n\t\t\tend = temp\n\t\t\ttemp = start2\n\t\t\tstart2 = end2\n\t\t\t\
    end2 = temp\n\t\tend\n\t\tlocal flag = true\n\t\tfor i = 1, length2 do\n\t\t\t\
    if start2 > end2 then\n\t\t\t\tflag = false\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\
    if start2 < end2 then\n\t\t\t\tif start > end then\n\t\t\t\t\tflag = false\n\t\
    \t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif flag then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start1\
    \ = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 ==\
    \ 1 then\n\t\treturn \"YES\"\n\telseif length2 > 1 then\n\t\tlocal prime = true\n\
    \t\tfor i = 2, length2 do\n\t\t\tif start1 + i == end2 then\n\t\t\t\tprime = false\n\
    \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\
    \telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\treturn \"NO\"\n\tend\nend",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn \"NO\"\n\telseif length == 1 then\n\t\treturn\
    \ \"YES\"\n\telse\n\t\tlocal prime = true\n\t\tlocal prime_length = 2\n\t\twhile\
    \ prime and prime_length <= length do\n\t\t\tlocal prime_start = start1 + prime_length\n\
    \t\t\tlocal prime_end = prime_start + prime_length\n\t\t\tif prime_start <= end1\
    \ and prime_end >= start2 then\n\t\t\t\tprime = false\n\t\t\telseif prime_start\
    \ <= start1 and prime_end >= end2 then\n\t\t\t\tprime = false\n\t\t\telseif prime_start\
    \ >= start1 and prime_end <= end2 then\n\t\t\t\tprime = false\n\t\t\telse\n\t\t\
    \t\tprime_length = prime_length + 1\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\
    \t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 =\
    \ end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1 == 0 or length2\
    \ == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2 then\n\t\tif start1\
    \ <= start2 then\n\t\t\treturn start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\
    \treturn start2 <= end1 and end1 <= end2\n\t\tend\n\tend\n\tif start1 <= start2\
    \ then\n\t\treturn start1 <= end2 and end2 <= end1\n\telse\n\t\treturn start2\
    \ <= end1 and end1 <= end2\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length\
    \ = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\tif length\
    \ == length2 then\n\t\treturn \"YES\"\n\tend\n\tif length2 > length then\n\t\t\
    length = length2\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal\
    \ prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\
    \tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal\
    \ prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal prime66\
    \ = true\n\tlocal prime67 = true", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\tif length == 1 then\n\
    \t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tlocal\
    \ prime = true\n\t\tlocal prime2 = true\n\t\tfor i = 2, length2 do\n\t\t\tif start\
    \ <= start2 then\n\t\t\t\tprime = false\n\t\t\telse\n\t\t\t\tprime2 = false\n\t\
    \t\tend\n\t\t\tif prime and prime2 then\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
    \tif prime then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\
    \tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\
    \tlocal interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\t\
    local intersectionStart = interval1Start and interval2Start and interval1Start\
    \ <= interval2Start and interval2Start <= interval1End\n\tlocal intersectionEnd\
    \ = interval1End and interval2End or interval1Start or interval2Start\n\tlocal\
    \ intersectionLength = interval1End - interval1Start + interval2End - interval2Start\n\
    \tlocal isPrime = interval1Start <= interval2Start and interval2Start <= interval1End\n\
    \treturn (isPrime and intersectionLength == 1) or (isPrime and intersectionLength\
    \ == 2) or (isPrime and intersectionLength > 1 and intersectionStart and intersectionEnd\
    \ and (interval1Start < intersectionStart and interval1End > intersectionEnd))\n\
    end", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\
    \tlocal length2 = end2 - start2\n\tif length1 <= 0 or length2 <= 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length1 == length2 then\n\t\tif start1 <= start2 then\n\
    \t\t\treturn start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\treturn start2 <=\
    \ end1 and end1 <= end2\n\t\tend\n\tend\n\tif start1 <= start2 then\n\t\tif end1\
    \ <= end2 then\n\t\t\treturn end1 <= length2 and length2 <= length1\n\t\telse\n\
    \t\t\treturn end2 <= length1 and length1 <= length2\n\t\tend\n\telse\n\t\tif end1\
    \ <= end2 then\n\t\t\treturn end1 <= length2 and length2 <= length1\n\t\telse\n\
    \t\t\treturn end2 <= length1 and length1 <= length2\n\t\tend\n\tend\nend", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 ==\
    \ 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\tend\n\t\treturn \"\
    NO\"\n\tend\n\tif length < length2 then\n\t\tlength = length2\n\tend\n\tif length\
    \ == length2 then\n\t\tif start <= start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\
    \tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = ", "\tlocal\
    \ interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal\
    \ interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]", "\tlocal\
    \ interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal\
    \ interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal\
    \ interval1_length = interval1_end - interval1_start\n\tlocal interval2_length\
    \ = interval2_end - interval2_start\n\tlocal intersection_length = interval1_end\
    \ - interval2_start\n\tif interval1_length == interval2_length then\n\t\tif interval1_start\
    \ <= interval2_start then\n\t\t\treturn interval1_start <= interval2_start and\
    \ interval1_end >= interval2_end\n\t\telse\n\t\t\treturn interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n\t\tend\n\telse\n\t\treturn interval1_length\
    \ == interval2_length\n\tend\nend", "  local start1 = interval1[1]\n  local end1\
    \ = interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n\
    \  local length1 = end1 - start1\n  local length2 = end2 - start2\n  local length\
    \ = length1 + length2\n  local prime = true\n  local count = 0\n  local i = 1\n\
    \  while i < length and prime do\n    prime = i % length == 0 and (start1 + i)\
    \ <= end1 and (start2 + i) <= end2\n    count = count + 1\n    i = i + 1\n  end\n\
    \  if prime then\n    return \"YES\"\n  else\n    return \"NO\"\n  end\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\
    \t\treturn \"YES\"\n\telseif length2 == 2 then\n\t\tif start <= start2 then\n\t\
    \t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif start\
    \ <= start2 then\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\
    \t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\tif end >= end2 then\n\t\t\t\t\
    return \"NO\"\n\t\t\telse\n\t\t\t\tif length == length2 then\n\t\t\t\t\tif start\
    \ <= start2 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn\
    \ \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif start <= start2 then\n\t\t\
    \t\t\t\treturn \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\
    end\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tif start <\
    \ start2 or end < end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end -\
    \ start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"\
    NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length2 ~=\
    \ length then\n\t\treturn \"NO\"\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \t", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1 - start1\
    \ + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ == 1 then\n\t\treturn \"YES\"\n\tend\n\tif start1 < start2 then\n\t\tstart1,\
    \ start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2\
    \ then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tlocal prime = true\n\tfor i = start1, end1 + 1 do\n\t\tif i % start2 == 0 then\n\
    \t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\tif prime then\n\t\treturn\
    \ \"YES\"\n\tend\n\treturn \"NO\"\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telseif length == 2\
    \ then\n\t\tif start1 <= start2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn\
    \ \"NO\"\n\t\tend\n\telse\n\t\tlocal prime = true\n\t\tlocal i = 1\n\t\twhile\
    \ prime and i <= length do\n\t\t\tprime = start1 + i == end1 or start2 + i ==\
    \ end2\n\t\t\ti = i + 1\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\t\
    else\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\
    \t\treturn true\n\t\tend\n\telse\n\t\tif start <= end2 then\n\t\t\treturn false\n\
    \t\telse\n\t\t\treturn true\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\telseif start <= end2\
    \ then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 or length2 == 1 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ == length2 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal prime67 = true\n\t", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\tif\
    \ start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\t\
    end\n\telse\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\t\t\t\t\
    if start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\treturn\
    \ \"YES\"\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    \t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\
    \t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\
    end\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\tend\n\t\t\t\t\t\
    else\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\treturn\
    \ \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal interval1_start = interval1[1]\n\
    \tlocal interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\
    \tlocal interval2_end = interval2[2]\n\tlocal interval1_length = interval1_end\
    \ - interval1_start\n\tlocal interval2_length = interval2_end - interval2_start\n\
    \tlocal intersection_length = interval1_end - interval2_start\n\tif interval1_length\
    \ == interval2_length then\n\t\tif interval1_start <= interval2_start then\n\t\
    \t\treturn interval1_start <= intersection_length\n\t\telse\n\t\t\treturn interval2_start\
    \ <= intersection_length\n\t\tend\n\telse\n\t\treturn interval1_length < interval2_length\n\
    \tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 = end1 -\
    \ start1\n\tlocal length2 = end2 - start2\n\tlocal length = length1 + length2\n\
    \tlocal prime = true\n\tlocal prime_found = false\n\tlocal prime_start = start1\n\
    \tlocal prime_end = start2\n\tlocal prime_length = length1\n\tlocal prime_prime_found\
    \ = false\n\tlocal prime_prime_start = prime_start\n\tlocal prime_prime_end =\
    \ prime_end\n\tlocal prime_prime_length = length2\n\tlocal prime_prime_prime_found\
    \ = false\n\tlocal prime_prime_prime_start = prime_prime_start\n\tlocal prime_prime_prime_end\
    \ = prime_prime_end\n\tlocal prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime_found\
    \ = false\n\tlocal prime_prime_prime_prime_start = prime_prime_prime_start\n\t\
    local prime_prime_prime_prime_end = prime_prime_prime_end\n\tlocal prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_prime_start\
    \ = prime_prime_prime_prime_start\n\tlocal prime_prime_prime_prime_prime_end =\
    \ prime_prime_prime_prime_end\n\tlocal prime_prime_prime_prime_prime_length =\
    \ length\n\tlocal prime_prime_prime_prime_prime_prime_found = false\n\tlocal prime_prime_prime_prime_prime_prime_start\
    \ = prime_prime_prime_prime_prime_start\n\tlocal prime_prime_prime_prime_prime_prime_end\
    \ = prime_prime_prime_prime_prime_prime_end\n\tlocal prime_prime_prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime_prime_prime_found = false\n\t\
    local prime_prime_prime_prime_prime_prime_prime_start = prime_prime_prime_prime_prime_prime_prime_start\n\
    \tlocal prime_prime_prime_prime_prime_prime_prime_end = prime_prime_prime_prime_prime_prime_prime_prime_end\n\
    \tlocal prime_prime_prime_", "  local start = interval1[1]\n  local end = interval1[2]\n\
    \  local start2 = interval2[1]\n  local end2 = interval2[2]\n  local length =\
    \ end - start\n  local length2 = end2 - start2\n  if length2 == 0 then\n    return\
    \ length\n  elseif length2 == 1 then\n    return length + start2\n  else\n   \
    \ return length + start2 > length2 + start2 and\n           length2 + start2 <\
    \ length + end\n  end\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = math.abs(end\
    \ - start)\n\tlocal length2 = math.abs(end2 - start2)\n\tif length2 == 0 then\n\
    \t\treturn \"NO\"\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    if length2 == length then\n\t\treturn \"YES\"\n\tend\n\tif length2 > length then\n\
    \t\tlocal temp = start\n\t\tstart = end\n\t\tend = temp\n\t\ttemp = start2\n\t\
    \tstart2 = end2\n\t\tend2 = temp\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tlocal prime = true\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\t\
    elseif length2 == 1 then\n\t\treturn \"YES\"\n\telseif length2 == 2 then\n\t\t\
    if start <= start2 then\n\t\t\tif end <= end2 then\n\t\t\t\treturn \"YES\"\n\t\
    \t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\tif end <= end2 then\n\
    \t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\
    \telse\n\t\tif start <= start2 then\n\t\t\tif end <= end2 then\n\t\t\t\tif length\
    \ == 2 then\n\t\t\t\t\treturn \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\
    \t\t\t\tend\n\t\t\telse\n\t\t\t\tif length == 2 then\n\t\t\t\t\treturn \"NO\"\n\
    \t\t\t\telse\n\t\t\t\t\treturn \"YES\"\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\
    \tif end <= end2 then\n\t\t\t\tif length == 2 then\n\t\t\t\t\treturn \"NO\"\n\t\
    \t\t\telse\n\t\t\t\t\treturn \"YES\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif length\
    \ == 2 then\n\t\t\t\t\treturn \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\tif start <= end2\
    \ then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\
    \t\tif length % length2 == 0 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn\
    \ \"NO\"\n\t\tend\n\tend\nend", "\tlocal start1, end1 = interval1[1], interval1[2]\n\
    \tlocal start2, end2 = interval2[1], interval2[2]\n\tlocal length1 = end1 - start1\n\
    \tlocal length2 = end2 - start2\n\tif length1 < length2 then\n\t\treturn \"NO\"\
    \n\telseif length1 > length2 then\n\t\treturn \"YES\"\n\telse\n\t\tlocal prime\
    \ = true\n\t\tlocal i = 1\n\t\twhile prime and i <= length1 do\n\t\t\tlocal prime\
    \ = true\n\t\t\tlocal j = 1\n\t\t\twhile prime and j <= length2 do\n\t\t\t\tif\
    \ start1 + i == start2 + j then\n\t\t\t\t\tprime = false\n\t\t\t\tend\n\t\t\t\t\
    j = j + 1\n\t\t\tend\n\t\t\ti = i + 1\n\t\tend\n\t\tif prime then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tlocal prime = true\n\tlocal prime2 = true\n\tif\
    \ length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\treturn\
    \ \"YES\"\n\telseif length < length2 then\n\t\tprime = false\n\telse\n\t\tprime2\
    \ = false\n\tend\n\tif prime == true and prime2 == true then\n\t\treturn \"YES\"\
    \n\telseif prime == false and prime2 == false then\n\t\treturn \"NO\"\n\telse\n\
    \t\treturn \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\t\
    end\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 1 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length2 % 2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tlocal count = 0\n\tlocal\
    \ count2 = 0\n\tlocal i = 1\n\tlocal j = 1\n\twhile i <= length and j <= length2\
    \ do\n\t\tif i == j then\n\t\t\tcount = count + 1\n\t\telseif i == start2 then\n\
    \t\t\tcount2 = count2 + 1\n\t\telseif j == start2 then\n\t\t\tcount = count +\
    \ 1\n\t\telse\n\t\t\tcount = count + 1\n\t\t\tcount2 = count2 + 1\n\t\tend\n\t\
    \ti = i + 1\n\t\tj = j + 1\n\tend\n\tif count == length and count2 == length2\
    \ then\n\t\treturn \"YES\"\n\tend\n\treturn \"NO\"\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length == 1 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length2 == length + 1 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length2 < length + 1 then\n\t\treturn \"NO\"\n\tend\n\tif length2\
    \ > length + 1 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\tlocal\
    \ prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n", "\tlocal start1, end1 = interval1[1], interval1[2]\n\
    \tlocal start2, end2 = interval2[1], interval2[2]\n\tlocal startInter, startIntr\
    \ = start1, start2\n\tlocal endInter, endIntr = end1, end2\n\tlocal lengthInter,\
    \ lengthIntr = endInter, endIntr\n\tlocal prime, primeIntr = false, false\n\t\
    local primeLength, primeLengthIntr = 1, 1\n\tlocal primeLength2, primeLength2Intr\
    \ = 1, 1\n\tlocal primeLength3, primeLength3Intr = 1, 1\n\tlocal primeLength4,\
    \ primeLength4Intr = 1, 1\n\tlocal primeLength5, primeLength5Intr = 1, 1\n\tlocal\
    \ primeLength6, primeLength6Intr = 1, 1\n\tlocal primeLength7, primeLength7Intr\
    \ = 1, 1\n\tlocal primeLength8, primeLength8Intr = 1, 1\n\tlocal primeLength9,\
    \ primeLength9Intr = 1, 1\n\tlocal primeLength10, primeLength10Intr = 1, 1\n\t\
    local primeLength11, primeLength11Intr = 1, 1\n\tlocal primeLength12, primeLength12Intr\
    \ = 1, 1\n\tlocal primeLength13, primeLength13Intr = 1, 1\n\tlocal primeLength14,\
    \ primeLength14Intr = 1, 1\n\tlocal primeLength15, primeLength15Intr = 1, 1\n\t\
    local primeLength16, primeLength16Intr = 1, 1\n\tlocal primeLength17, primeLength17Intr\
    \ = 1, 1\n\tlocal primeLength18, primeLength18Intr = 1, 1\n\tlocal primeLength19,\
    \ primeLength19Intr = 1, 1\n\tlocal primeLength20, primeLength20Intr = 1, 1\n\t\
    local primeLength21, primeLength21Intr = 1, 1\n\tlocal primeLength22, primeLength22Intr\
    \ = 1, 1\n\tlocal primeLength23, primeLength23Intr = 1, 1\n\tlocal primeLength24,\
    \ primeLength24Intr = 1, 1\n\tlocal primeLength25, primeLength25Intr = 1, 1\n\t\
    local primeLength26, primeLength26Intr = 1, 1\n\tlocal primeLength27, primeLength27Intr\
    \ = 1, 1\n\tlocal primeLength28, primeLength28Intr = 1, 1\n\tlocal primeLength29,\
    \ primeLength29Intr = 1, 1\n\tlocal primeLength30, primeLength30Intr = 1, 1\n\t\
    local primeLength31, primeLength31Intr = 1, 1\n", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif start1 <= start2 then\n\t\treturn \"NO\"\n\tend\n\tif end1\
    \ >= end2 then\n\t\treturn \"NO\"\n\tend\n\tif length == 1 then\n\t\treturn \"\
    YES\"\n\tend\n\tif length == 2 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 3 then\n\t\treturn \"YES\"\n\tend\n\tif length == 4 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 5 then\n\t\treturn \"YES\"\n\tend\n\tif length == 6 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 7 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length == 8 then\n\t\treturn \"YES\"\n\tend\n\tif length == 9 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 10 then\n\t\treturn \"YES\"\n\tend\n\tif length\
    \ == 11 then\n\t\treturn \"YES\"\n\tend\n\tif length == 12 then\n\t\treturn \"\
    YES\"\n\tend\n\tif length == 13 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 14 then\n\t\treturn \"YES\"\n\tend\n\tif length == 15 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 16 then\n\t\treturn \"YES\"\n\tend\n\tif length == 17\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif length == 18 then\n\t\treturn \"YES\"\n\
    \tend\n\tif length == 19 then\n\t\treturn \"YES\"\n\tend\n\tif length == 20 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 21 then\n\t\treturn \"YES\"\n\tend\n\
    \tif length == 22 then\n\t\treturn \"YES\"\n\tend\n\tif length == 23 then\n\t\t\
    return \"YES\"\n\tend\n\tif length == 24 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length == 25 then\n\t\treturn \"YES\"\n\tend\n\tif length == 26 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 27 then\n\t\treturn \"YES\"\n\tend\n\tif length\
    \ == 28 then\n\t\treturn \"YES\"\n\tend\n\tif length == 29 then\n\t\treturn \"\
    YES\"\n\tend\n\tif length == 30 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 31 then\n\t\treturn \"YES\"\n\tend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == length and start <= end2 then\n\t\treturn \"YES\"\
    \n\telseif length2 == length and start > end2 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == length and start < end2 then\n\t\treturn \"NO\"\n\telseif length2\
    \ == length and start > end2 then\n\t\treturn \"NO\"\n\telseif length2 == length\
    \ and start <= end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and start\
    \ < end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and start > end2\
    \ then\n\t\treturn \"NO\"\n\telseif length2 == length and start <= end2 then\n\
    \t\treturn \"NO\"\n\telseif length2 == length and start > end2 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == length and start < end2 then\n\t\treturn \"NO\"\n\
    \telseif length2 == length and start <= end2 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == length and start > end2 then\n\t\treturn \"NO\"\n\telseif length2\
    \ == length and start < end2 then\n\t\treturn \"NO\"\n\telseif length2 == length\
    \ and start <= end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and start\
    \ > end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and start < end2\
    \ then\n\t\treturn \"NO\"\n\telseif length2 == length and start <= end2 then\n\
    \t\treturn \"NO\"\n\telseif length2 == length and start > end2 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == length and start < end2 then\n\t\treturn \"NO\"\n\
    \telseif length2 == length and start <= end2 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == length and start > end2 then\n\t\treturn \"NO\"\n\telseif length2\
    \ == length and start < end2 then\n\t\treturn \"NO\"\n\telseif length2 == length\
    \ and start <= end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and start\
    \ > end2 then\n\t\treturn \"NO\"\n\telseif length2 == length and ", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\
    \tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 > length then\n\t\
    \tlength = length2\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\tif start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\
    \t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\
    \ \"YES\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\
    \ \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\
    \n\t\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\
    \t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\treturn\
    \ \"NO\"\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse\n\t\t\treturn \"NO\"\n\t\t\t\t\t\
    \tend\n\t\t\t\t\telse\n\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\
    \treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\treturn \"NO\"\n\t\t\tend\n\t\t\
    else\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\treturn \"NO\"\n\tend\nend", "\t\
    local start1, end1 = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1],\
    \ interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\
    \tlocal length_intersection = length1 + length2 - 2\n\tif length_intersection\
    \ % 2 == 0 then\n\t\treturn \"NO\"\n\telse\n\t\tlocal prime_numbers = prime_numbers_generator(length_intersection)\n\
    \t\tlocal prime_numbers_set = prime_numbers:to_set() -- convert to set\n\t\tlocal\
    \ prime_numbers_set_size = prime_numbers_set:size()\n\t\tif prime_numbers_set_size\
    \ == 1 then\n\t\t\treturn prime_numbers_set:is_member(start1 + start2)\n\t\telse\n\
    \t\t\treturn prime_numbers_set:is_member(start1 + start2)\n\t\tend\n\tend\nend",
  "\tlocal interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\t\
    local interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal\
    \ interval1Length = interval1End - interval1Start\n\tlocal interval2Length = interval2End\
    \ - interval2Start\n\tlocal intersectionLength = interval1Start + interval2Length\n\
    \tlocal isIntersect = interval1Start <= interval2Start and interval1End >= interval2End\n\
    \tif isIntersect then\n\t\tif interval1Length == interval2Length then\n\t\t\t\
    if interval1Start <= interval2Start and interval1End >= interval2End then\n\t\t\
    \t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\
    \t\tif interval1Length > interval2Length then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\
    \t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\telse\n\t\treturn \"NO\"\n\tend\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tlocal prime = true\n\t\tlocal prime2\
    \ = true\n\t\tlocal prime3 = true\n\t\tlocal prime4 = true\n\t\tlocal prime5 =\
    \ true\n\t\tlocal prime6 = true\n\t\tlocal prime7 = true\n\t\tlocal prime8 = true\n\
    \t\tlocal prime9 = true\n\t\tlocal prime10 = true\n\t\tlocal prime11 = true\n\t\
    \tlocal prime12 = true\n\t\tlocal prime13 = true\n\t\tlocal prime14 = true\n\t\
    \tlocal prime15 = true\n\t\tlocal prime16 = true\n\t\tlocal prime17 = true\n\t\
    \tlocal prime18 = true\n\t\tlocal prime19 = true\n\t\tlocal prime20 = true\n\t\
    \tlocal prime21 = true\n\t\tlocal prime22 = true\n\t\tlocal prime23 = true\n\t\
    \tlocal prime24 = true\n\t\tlocal prime25 = true\n\t\tlocal prime26 = true\n\t\
    \tlocal prime27 = true\n\t\tlocal prime28 = true\n\t\tlocal prime29 = true\n\t\
    \tlocal prime30 = true\n\t\tlocal prime31 = true\n\t\tlocal prime32 = true\n\t\
    \tlocal prime33 = true\n\t\tlocal prime34 = true\n\t\tlocal prime35 = true\n\t\
    \tlocal prime36 = true\n\t\tlocal prime37 = true\n\t\tlocal prime38 = true\n\t\
    \tlocal prime39 = true\n\t\tlocal prime40 = true\n\t\tlocal prime41 = true\n\t\
    \tlocal prime42 = true\n\t\tlocal prime43 = true\n\t\tlocal prime44 = true\n\t\
    \tlocal prime45 = true\n\t\tlocal prime46 = true\n\t\tlocal prime47 = true\n\t\
    \tlocal prime48 = true\n\t\tlocal prime49 = true\n\t\tlocal prime50 = true\n\t\
    \tlocal prime51 = true\n\t\tlocal prime52 = true\n\t\tlocal prime53 = true\n\t\
    \tlocal prime54 = true\n\t\tlocal prime55 = true\n\t\tlocal prime56 = true\n\t\
    \tlocal prime57 = true\n\t\tlocal prime58 = true\n\t\tlocal prime59 = true\n\t\
    \tlocal prime60 = true\n\t\tlocal prime61 = true\n\t\tlocal prime62 = true\n\t\
    \tlocal prime63 = true\n\t\tlocal prime64 = true\n\t\tlocal prime65 = true\n\t\
    \tlocal prime66 = true\n\t\tlocal prime67 = true\n\t\tlocal prime68 = true\n\t\
    \tlocal prime69 = true\n", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\t\n\tif interval1Start > interval2Start then\n\t\tinterval1Start,\
    \ interval1End = interval2Start, interval1End\n\tend\n\tif interval1End < interval2End\
    \ then\n\t\tinterval1End, interval1Start = interval2End, interval1Start\n\tend\n\
    \t\n\tif interval1Start <= interval1End then\n\t\tif interval1Start <= interval2Start\
    \ then\n\t\t\tif interval1End <= interval2End then\n\t\t\t\treturn interval1Start\
    \ <= interval2Start and interval1End <= interval2End\n\t\t\telse\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\tif interval1End\
    \ <= interval2Start then\n\t\t\tif interval1Start <= interval2End then\n\t\t\t\
    \treturn interval1Start <= interval2Start and interval1End <= interval2End\n\t\
    \t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn false\n\t\t\
    end\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\tlocal intersectionStart = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\tlocal intersectionEnd = interval1Start <=\
    \ interval2End and interval1End >= interval2Start\n\tlocal intersectionLength\
    \ = interval1End - interval1Start + 1\n\tlocal intersectionIsPrime = math.floor(math.sqrt(intersectionLength))\n\
    \tlocal intersectionIsPrimeIsPrime = math.floor(math.sqrt(intersectionIsPrime))\n\
    \tlocal intersectionIsPrimeIsNotPrime = math.ceil(math.sqrt(intersectionIsPrime))\n\
    \tlocal intersectionIsPrimeIsNotPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsNotPrimeIsNotPrime = math.ceil(math.sqrt(intersectionIsPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsPrimeIsNotPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsNotPrimeIsNotPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsNotPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsPrimeIsPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsPrimeIsPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsPrimeIsNotPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsNotPrimeIsPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsNotPrimeIsNotPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsNotPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsPrimeIsPrimeIsNotPrimeIsPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsNotPrime))\n\
    \tlocal intersectionIsPrimeIsPrimeIsNotPrimeIsNotPrimeIsNotPrime = math.ceil(math.sqrt(intersectionIsPrimeIsPrimeIs",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\
    \t\treturn \"YES\"\n\telseif length2 == length + 1 then\n\t\treturn \"YES\"\n\t\
    elseif length2 == length + 2 then\n\t\treturn \"NO\"\n\telseif length2 == length\
    \ + 3 then\n\t\treturn \"YES\"\n\telseif length2 == length + 4 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 5 then\n\t\treturn \"YES\"\n\telseif length2\
    \ == length + 6 then\n\t\treturn \"YES\"\n\telseif length2 == length + 7 then\n\
    \t\treturn \"YES\"\n\telseif length2 == length + 8 then\n\t\treturn \"YES\"\n\t\
    elseif length2 == length + 9 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 10 then\n\t\treturn \"YES\"\n\telseif length2 == length + 11 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 12 then\n\t\treturn \"YES\"\n\telseif\
    \ length2 == length + 13 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 14 then\n\t\treturn \"YES\"\n\telseif length2 == length + 15 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 16 then\n\t\treturn \"YES\"\n\telseif\
    \ length2 == length + 17 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 18 then\n\t\treturn \"YES\"\n\telseif length2 == length + 19 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 20 then\n\t\treturn \"YES\"\n\telseif\
    \ length2 == length + 21 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 22 then\n\t\treturn \"YES\"\n\telseif length2 == length + 23 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 24 then\n\t\treturn \"YES\"\n\telseif\
    \ length2 == length + 25 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 26 then\n\t\treturn \"YES\"\n\telseif length2 == length + 27 then\n\t\treturn\
    \ \"YES\"\n\telseif length2 == length + 28 then\n\t\treturn \"YES\"\n\telseif\
    \ length2 == length + 29 then\n\t\treturn \"YES\"\n\telseif length2 == length\
    \ + 30 ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif start <= end2 then\n\t\t\tif length2\
    \ == 2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\treturn \"YES\"\n\t\t\t\t\
    else\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\tif length2 % 2 == 0 then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\
    \t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\tif length2 % 2 == 1 then\n\t\t\t\t\t\t\treturn\
    \ \"YES\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\tend\n\t\t\
    \t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\
    \t\telse\n\t\t\tif length2 == 2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\t\
    return \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\
    \t\t\t\tif start <= end2 then\n\t\t\t\t\tif length2 % 2 == 0 then\n\t\t\t\t\t\t\
    return \"YES\"\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\
    \t\telse\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\tif length2 % 2 == 1 then\n\
    \t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn \"NO\"\n\t\
    \t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\
    \tend\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\
    \tlocal interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\t\
    local interval2End = interval2[2]\n\tlocal intersectionStart = interval1Start\
    \ <= interval2Start and interval1End >= interval2End\n\tlocal intersectionEnd\
    \ = interval1Start <= interval2End and interval1End >= interval2Start\n\tlocal\
    \ intersectionLength = interval1Start <= interval2End and interval1End >= interval2Start\n\
    \tlocal intersectionIsPrime = not (interval1Start <= interval2Start and interval1End\
    \ >= interval2End)\n\tlocal intersectionIsNotPrime = not (interval1Start <= interval2End\
    \ and interval1End >= interval2Start)\n\tlocal intersectionIsNotPrimeAndNotIntersection\
    \ = not (intersectionStart and intersectionEnd)\n\tlocal intersectionIsNotPrimeAndIntersection\
    \ = not (intersectionStart and not intersectionEnd)\n\tlocal intersectionIsNotPrimeAndIntersectionAndNotIntersection\
    \ = not (intersectionStart and intersectionEnd and intersectionLength)\n\tlocal\
    \ intersectionIsNotPrimeAndIntersectionAndIntersection = not (intersectionStart\
    \ and intersectionEnd and intersectionLength and intersectionIsPrime)\n\tlocal\
    \ intersectionIsNotPrimeAndIntersectionAndIntersectionAndNotIntersection = not\
    \ (intersectionStart and intersectionEnd and intersectionLength and intersectionIsNotPrime)\n\
    \tlocal intersectionIsNotPrimeAndIntersectionAndIntersectionAndIntersection =\
    \ not (intersectionStart and intersectionEnd and intersectionLength and intersectionIsPrime\
    \ and intersectionIsNotPrime)\n\tlocal intersectionIsNotPrimeAndIntersectionAndIntersectionAndIntersectionAndNotIntersection\
    \ = not (intersectionStart and intersectionEnd and intersectionLength and intersectionIsPrime\
    \ and intersectionIsNotPrime and intersectionIsNotPrimeAndNotIntersection)\n\t\
    local intersectionIsNotPrimeAndIntersectionAndIntersectionAndIntersectionAndIntersection\
    \ = not (intersectionStart and intersectionEnd and intersectionLength and intersectionIsPrime\
    \ and intersectionIsNotPrime and intersectionIsPrimeAndIntersection)\n\tlocal\
    \ intersectionIsNotPrimeAndIntersectionAndIntersectionAndIntersectionAndIntersectionAndNotIntersection\
    \ = not (intersectionStart and intersectionEnd and intersectionLength and intersectionIsPrime\
    \ and intersectionIsNotPrime and intersectionIsPrimeAndIntersection and intersectionIsNotPrimeAndNotIntersection)\n\
    \tlocal intersectionIsNotPrimeAndIntersectionAndIntersectionAndIntersectionAndInter",
  "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\t\
    local interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\t\
    local intersection_start = interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n\tlocal intersection_end = interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n\tlocal intersection_length = interval1_end\
    \ - interval1_start\n\tlocal intersection_is_prime = not (math.mod(intersection_length,\
    \ 2) == 0 and intersection_length >= 3)\n\tlocal intersection_prime_or_not = intersection_is_prime\
    \ and intersection_start or intersection_end\n\treturn intersection_prime_or_not\n\
    end", "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\
    \tlocal interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\
    \tlocal interval1_length = interval1_end - interval1_start\n\tlocal interval2_length\
    \ = interval2_end - interval2_start\n\tlocal intersection_length = interval1_end\
    \ - interval2_start\n\tif interval1_length == interval2_length then\n\t\tif interval1_start\
    \ <= interval2_start then\n\t\t\treturn interval1_start <= interval2_start and\
    \ interval1_end >= interval2_end\n\t\telse\n\t\t\treturn interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n\t\tend\n\telse\n\t\treturn interval1_length\
    \ == interval2_length\n\tend\nend", "\tlocal interval1_start = interval1[1]\n\t\
    local interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\t\
    local interval2_end = interval2[2]\n\tlocal interval1_length = interval1_end -\
    \ interval1_start\n\tlocal interval2_length = interval2_end - interval2_start\n\
    \tlocal intersection_length = interval1_end - interval2_start\n\tlocal prime_number\
    \ = false\n\tlocal prime_number_count = 0\n\tlocal prime_number_count_2 = 0\n\t\
    local prime_number_count_3 = 0\n\tlocal prime_number_count_4 = 0\n\tlocal prime_number_count_5\
    \ = 0\n\tlocal prime_number_count_6 = 0\n\tlocal prime_number_count_7 = 0\n\t\
    local prime_number_count_8 = 0\n\tlocal prime_number_count_9 = 0\n\tlocal prime_number_count_10\
    \ = 0\n\tlocal prime_number_count_11 = 0\n\tlocal prime_number_count_12 = 0\n\t\
    local prime_number_count_13 = 0\n\tlocal prime_number_count_14 = 0\n\tlocal prime_number_count_15\
    \ = 0\n\tlocal prime_number_count_16 = 0\n\tlocal prime_number_count_17 = 0\n\t\
    local prime_number_count_18 = 0\n\tlocal prime_number_count_19 = 0\n\tlocal prime_number_count_20\
    \ = 0\n\tlocal prime_number_count_21 = 0\n\tlocal prime_number_count_22 = 0\n\t\
    local prime_number_count_23 = 0\n\tlocal prime_number_count_24 = 0\n\tlocal prime_number_count_25\
    \ = 0\n\tlocal prime_number_count_26 = 0\n\tlocal prime_number_count_27 = 0\n\t\
    local prime_number_count_28 = 0\n\tlocal prime_number_count_29 = 0\n\tlocal prime_number_count_30\
    \ = 0\n\tlocal prime_number_count_31 = 0\n\tlocal prime_number_count_32 = 0\n\t\
    local prime_number_count_33 = 0\n\tlocal prime_number_count_34 = 0\n\tlocal prime_number_count_35\
    \ = 0\n\tlocal prime_number_count_36 = 0\n\tlocal prime_number_count_37 = 0\n\t\
    local prime_number_count_38 = 0\n\tlocal prime_number_count_39 = 0\n\tlocal prime_number_count_40\
    \ = 0\n\tlocal prime_number_count_41 = 0\n\tlocal prime_number_count_42 = 0\n\t\
    local prime_number_count_43 = 0\n\tlocal prime_number_count_44 = 0\n\tlocal prime_number_count_45\
    \ = 0\n\tlocal prime_number_count_46 = 0\n\tlocal prime_number_count_47 = 0\n\t\
    local prime_number_count_48 = 0\n\tlocal prime", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 > length2\
    \ then\n\t\tstart1, end1 = end1, start1\n\t\tstart2, end2 = end2, start2\n\tend\n\
    \tlocal prime = true\n\tlocal prime_length = 2\n\tlocal prime_start = start1\n\
    \tlocal prime_end = start2\n\tlocal prime_prime = true\n\tlocal prime_prime_length\
    \ = 2\n\tlocal prime_prime_start = start2\n\tlocal prime_prime_end = end1\n\t\
    local prime_prime_prime = true\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = start2\n\tlocal prime_prime_prime_end = end2\n\tlocal\
    \ prime_prime_prime_prime = true\n\tlocal prime_prime_prime_prime_length = 2\n\
    \tlocal prime_prime_prime_prime_start = end1\n\tlocal prime_prime_prime_prime_end\
    \ = end2\n\tlocal prime_prime_prime_prime_prime = true\n\tlocal prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_start = end1\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end2\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_start = end1\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end2\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_prime_start\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_prime_start = end1\n\tlocal prime_prime_prime_prime_prime_prime_prime",
  "\tlocal interval1Start, interval1End = interval1[1], interval1[2]\n\tlocal interval2Start,\
    \ interval2End = interval2[1], interval2[2]\n\tif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start >= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start >= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start >= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start >= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start >= interval2Start and interval1End <= interval2End then\n\
    \t\treturn interval1Start, interval1End\n\telseif interval1Start <= interval2Start\
    \ and interval1End >= interval2End then\n\t\treturn interval1Start, interval1End\n\
    \telseif interval1Start <= interval", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 > length2\
    \ then\n\t\tlocal temp = start1\n\t\tstart1 = start2\n\t\tstart2 = temp\n\t\t\
    end1 = end2\n\t\tend2 = end1\n\tend\n\tlocal prime = true\n\tlocal i = 2\n\twhile\
    \ prime and i <= length1 do\n\t\tif start1 + i >= start2 and start1 + i <= end2\
    \ then\n\t\t\tprime = false\n\t\tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\
    \treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\treturn \"YES\"\n\t\
    elseif length2 == length + 1 then\n\t\treturn \"YES\"\n\telseif length2 > length\
    \ + 1 then\n\t\treturn \"NO\"\n\telse\n\t\tlocal prime = true\n\t\tlocal prime2\
    \ = true\n\t\tfor i = 2, length2 do\n\t\t\tif start2 + i ~= start2 then\n\t\t\t\
    \tprime = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tfor i = 2, length do\n\
    \t\t\tif start2 + i ~= end2 then\n\t\t\t\tprime2 = false\n\t\t\t\tbreak\n\t\t\t\
    end\n\t\tend\n\t\tif prime and prime2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\
    \t\treturn \"NO\"\n\t\tend\n\tend\nend", "  -- Write your code here\n  local interval1_start\
    \ = interval1[1]\n  local interval1_end = interval1[2]\n  local interval2_start\
    \ = interval2[1]\n  local interval2_end = interval2[2]\n  if interval1_start <=\
    \ interval2_start and interval1_end >= interval2_end then\n    return true\n \
    \ elseif interval1_start <= interval2_end and interval1_end >= interval2_start\
    \ then\n    return false\n  elseif interval1_start >= interval2_start and interval1_end\
    \ <= interval2_end then\n    return false\n  elseif interval1_start >= interval2_start\
    \ and interval1_end >= interval2_end then\n    return true\n  elseif interval1_start\
    \ <= interval2_start and interval1_end <= interval2_end then\n    return true\n\
    \  else\n    return false\n  end\nend", "  local start1 = interval1[1]\n  local\
    \ end1 = interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n\
    \  local length = end1 - start1 + end2 - start2\n  local prime = true\n  for i\
    \ = 1, length do\n    if start1 + i == end1 or start2 + i == end2 then\n     \
    \ prime = false\n      break\n    end\n  end\n  if prime then\n    return \"YES\"\
    \n  else\n    return \"NO\"\n  end\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif length1 < length2 then\n\t\tlocal temp\
    \ = start1\n\t\tstart1 = start2\n\t\tstart2 = temp\n\t\ttemp = end1\n\t\tend1\
    \ = end2\n\t\tend2 = temp\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\
    \tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal\
    \ prime6", "  -- Write your code here.\n  local interval1Start = interval1[1]\n\
    \  local interval1End = interval1[2]\n  local interval2Start = interval2[1]\n\
    \  local interval2End = interval2[2]\n  if interval1Start <= interval2Start and\
    \ interval1End >= interval2End then\n    if interval1Start <= interval2End then\n\
    \      return \"YES\"\n    else\n      return \"NO\"\n    end\n  else\n    return\
    \ \"NO\"\n  end\nend", "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end\
    \ = interval1[2]\n\tlocal interval2_start = interval2[1]\n\tlocal interval2_end\
    \ = interval2[2]\n\t\n\tif interval1_start > interval2_start then\n\t\tinterval1_start,\
    \ interval1_end = interval2_start, interval2_end\n\tend\n\tif interval1_end <\
    \ interval2_end then\n\t\tinterval1_end, interval1_start = interval2_end, interval2_start\n\
    \tend\n\t\n\tif interval1_start <= interval1_end and interval2_start <= interval2_end\
    \ then\n\t\tlocal interval1_length = interval1_end - interval1_start\n\t\tlocal\
    \ interval2_length = interval2_end - interval2_start\n\t\t\n\t\tif interval1_length\
    \ == interval2_length then\n\t\t\tif interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"\
    NO\"\n\t\t\tend\n\t\telse\n\t\t\tif interval1_length == 2 then\n\t\t\t\tif interval1_start\
    \ <= interval2_start and interval1_end >= interval2_end then\n\t\t\t\t\treturn\
    \ \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\t\t\telse\n\t\t\
    \t\tif interval1_length == 3 then\n\t\t\t\t\tif interval1_start <= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\
    \telse\n\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif interval1_length\
    \ == 5 then\n\t\t\t\t\t\tif interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end then\n\t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\telse\n\t\t\t\
    \t\t\t\treturn \"NO\"\n\t\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\tif interval1_length\
    \ == 7 then\n\t\t\t\t\t\t\tif interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end then\n\t\t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\t\telse\n\t\
    \t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\
    \tif interval1_length == 11 then\n\t\t\t\t\t\t\t\tif interval1_start <= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\t\t\t\t\t\t\t\treturn \"YES\"\n\t\
    \t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\tend\n\t\t\
    \t\t\t\t\telse\n\t\t\t\t\t\t\t\tif interval1_length == 13 then\n\t\t\t\t\t\t\t\
    \t\tif interval1_start <= interval2_start and interval1_end >= interval2_end then\n\
    \t\t\t\t\t\t\t\t\t\treturn \"YES\"\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\
    \treturn \"NO\"\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\
    \tif interval1_length == 17 then\n\t\t\t\t\t\t\t\t\t\tif interval1_start <= interval2_start\
    \ and interval1_end >= interval2_end then\n\t\t\t\t\t\t\t\t\t\t\treturn \"YES\"\
    \n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\treturn \"NO\"\n\t\t\t\t\t\t\t\
    \t\t\tend\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tif interval1_length ==\
    \ 19 ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\telseif\
    \ length2 == 1 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif start <= end2 then\n\t\t\tif length2\
    \ % length == 0 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\
    \n\t\t\tend\n\t\telse\n\t\t\tif length2 % length == 0 then\n\t\t\t\treturn \"\
    NO\"\n\t\t\telse\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\tend\nend", "\t\
    local start1, end1 = interval1[1], interval1[2]\n\tlocal start2, end2 = interval2[1],\
    \ interval2[2]\n\tlocal length1, length2 = end1 - start1, end2 - start2\n\tif\
    \ length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 >\
    \ length2 then\n\t\tstart1, end1 = end1, start1\n\t\tstart2, end2 = end2, start2\n\
    \tend\n\tlocal prime = true\n\tlocal prime_length = 2\n\twhile prime and prime_length\
    \ <= length1 do\n\t\tlocal prime_start = start1 + prime_length\n\t\tlocal prime_end\
    \ = start2 + prime_length\n\t\tif prime_start > prime_end then\n\t\t\tprime =\
    \ false\n\t\telseif prime_start <= prime_end then\n\t\t\tprime_length = prime_length\
    \ + 1\n\t\telse\n\t\t\tprime = false\n\t\tend\n\tend\n\tif prime then\n\t\treturn\
    \ \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2\
    \ then\n\t\tif start1 <= start2 then\n\t\t\treturn start1 <= end2 and end2 <=\
    \ end1\n\t\telse\n\t\t\treturn start2 <= end1 and end1 <= end2\n\t\tend\n\tend\n\
    \tif length1 > length2 then\n\t\tlocal temp = start1\n\t\tstart1 = start2\n\t\t\
    start2 = temp\n\t\tend1 = end2\n\t\tend2 = end1\n\tend\n\tlocal prime1 = 1\n\t\
    local prime2 = 1\n\tlocal primeSum = 1\n\tlocal primeSum2 = 0\n\tlocal primeSum3\
    \ = 0\n\tlocal primeSum4 = 0\n\tlocal primeSum5 = 0\n\tlocal primeSum6 = 0\n\t\
    local primeSum7 = 0\n\tlocal primeSum8 = 0\n\tlocal primeSum9 = 0\n\tlocal primeSum10\
    \ = 0\n\tlocal primeSum11 = 0\n\tlocal primeSum12 = 0\n\tlocal primeSum13 = 0\n\
    \tlocal primeSum14 = 0\n\tlocal primeSum15 = 0\n\tlocal primeSum16 = 0\n\tlocal\
    \ primeSum17 = 0\n\tlocal primeSum18 = 0\n\tlocal primeSum19 = 0\n\tlocal primeSum20\
    \ = 0\n\tlocal primeSum21 = 0\n\tlocal primeSum22 = 0\n\tlocal primeSum23 = 0\n\
    \tlocal primeSum24 = 0\n\tlocal primeSum25 = 0\n\tlocal primeSum26 = 0\n\tlocal\
    \ primeSum27 = 0\n\tlocal primeSum28 = 0\n\tlocal primeSum29 = 0\n\tlocal primeSum30\
    \ = 0\n\tlocal primeSum31 = 0\n\tlocal primeSum32 = 0\n\tlocal primeSum33 = 0\n\
    \tlocal primeSum34 = 0\n\tlocal primeSum35 = 0\n\tlocal primeSum36 = 0\n\tlocal\
    \ primeSum37 = 0\n\tlocal primeSum38 = 0\n\tlocal primeSum39 = 0\n\tlocal primeSum40\
    \ = 0\n\tlocal primeSum41 = 0\n\tlocal primeSum42 = 0\n\tlocal primeSum43 = 0\n\
    \tlocal primeSum44 = 0\n\tlocal primeSum45 = 0\n\tlocal primeSum46 = 0\n\tlocal\
    \ primeSum47 = 0\n\tlocal primeSum48 = 0\n\tlocal primeSum49 = 0\n\tlocal primeSum50\
    \ = 0\n", "  local start1, end1 = interval1[1], interval1[2]\n  local start2,\
    \ end2 = interval2[1], interval2[2]\n  local result\n  if start1 <= end2 and start2\
    \ <= end1 then\n    if start1 <= start2 then\n      result = start1\n    else\n\
    \      result = start2\n    end\n  else\n    if start2 <= start1 then\n      result\
    \ = start2\n    else\n      result = start1\n    end\n  end\n  return result\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = math.abs(end -\
    \ start)\n\tlocal length2 = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\
    \treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\tif length == 1 then\n\t\t\t\
    return \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tlocal isPrime\
    \ = true\n\tlocal isPrime2 = true\n\tlocal isPrime3 = true\n\tlocal isPrime4 =\
    \ true\n\tlocal isPrime5 = true\n\tlocal isPrime6 = true\n\tlocal isPrime7 = true\n\
    \tlocal isPrime8 = true\n\tlocal isPrime9 = true\n\tlocal isPrime10 = true\n\t\
    local isPrime11 = true\n\tlocal isPrime12 = true\n\tlocal isPrime13 = true\n\t\
    local isPrime14 = true\n\tlocal isPrime15 = true\n\tlocal isPrime16 = true\n\t\
    local isPrime17 = true\n\tlocal isPrime18 = true\n\tlocal isPrime19 = true\n\t\
    local isPrime20 = true\n\tlocal isPrime21 = true\n\tlocal isPrime22 = true\n\t\
    local isPrime23 = true\n\tlocal isPrime24 = true\n\tlocal isPrime25 = true\n\t\
    local isPrime26 = true\n\tlocal isPrime27 = true\n\tlocal isPrime28 = true\n\t\
    local isPrime29 = true\n\tlocal isPrime30 = true\n\tlocal isPrime31 = true\n\t\
    local isPrime32 = true\n\tlocal isPrime33 = true\n\tlocal isPrime34 = true\n\t\
    local isPrime35 = true\n\tlocal isPrime36 = true\n\tlocal isPrime37 = true\n\t\
    local isPrime38 = true\n\tlocal isPrime39 = true\n\tlocal isPrime40 = true\n\t\
    local isPrime41 = true\n\tlocal isPrime42 = true\n\tlocal isPrime43 = true\n\t\
    local isPrime44 = true\n\tlocal isPrime45 = true\n\tlocal isPrime46 = true\n\t\
    local isPrime47 = true\n\tlocal isPrime48 = true\n\tlocal isPrime49 = true\n\t\
    local isPrime50 = true\n\tlocal isPrime51 = true\n\tlocal isPrime52 = ", "\tlocal\
    \ interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal\
    \ interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal\
    \ interval1_length = interval1_end - interval1_start\n\tlocal interval2_length\
    \ = interval2_end - interval2_start\n\tlocal intersection_length = interval1_end\
    \ - interval2_start\n\tlocal prime_number = 0\n\tlocal prime_number_count = 0\n\
    \tlocal prime_number_count_2 = 0\n\tlocal prime_number_count_3 = 0\n\tlocal prime_number_count_4\
    \ = 0\n\tlocal prime_number_count_5 = 0\n\tlocal prime_number_count_6 = 0\n\t\
    local prime_number_count_7 = 0\n\tlocal prime_number_count_8 = 0\n\tlocal prime_number_count_9\
    \ = 0\n\tlocal prime_number_count_10 = 0\n\tlocal prime_number_count_11 = 0\n\t\
    local prime_number_count_12 = 0\n\tlocal prime_number_count_13 = 0\n\tlocal prime_number_count_14\
    \ = 0\n\tlocal prime_number_count_15 = 0\n\tlocal prime_number_count_16 = 0\n\t\
    local prime_number_count_17 = 0\n\tlocal prime_number_count_18 = 0\n\tlocal prime_number_count_19\
    \ = 0\n\tlocal prime_number_count_20 = 0\n\tlocal prime_number_count_21 = 0\n\t\
    local prime_number_count_22 = 0\n\tlocal prime_number_count_23 = 0\n\tlocal prime_number_count_24\
    \ = 0\n\tlocal prime_number_count_25 = 0\n\tlocal prime_number_count_26 = 0\n\t\
    local prime_number_count_27 = 0\n\tlocal prime_number_count_28 = 0\n\tlocal prime_number_count_29\
    \ = 0\n\tlocal prime_number_count_30 = 0\n\tlocal prime_number_count_31 = 0\n\t\
    local prime_number_count_32 = 0\n\tlocal prime_number_count_33 = 0\n\tlocal prime_number_count_34\
    \ = 0\n\tlocal prime_number_count_35 = 0\n\tlocal prime_number_count_36 = 0\n\t\
    local prime_number_count_37 = 0\n\tlocal prime_number_count_38 = 0\n\tlocal prime_number_count_39\
    \ = 0\n\tlocal prime_number_count_40 = 0\n\tlocal prime_number_count_41 = 0\n\t\
    local prime_number_count_42 = 0\n\tlocal prime_number_count_43 = 0\n\tlocal prime_number_count_44\
    \ = 0\n\tlocal prime_number_count_45 = 0\n\tlocal prime_number_count_46 = 0\n\t\
    local prime_number_count_47 = 0\n\tlocal prime_number_count_48 = 0\n\tlocal prime",
  "  local start = math.min(interval1[1], interval2[1])\n  local end = math.max(interval1[2],\
    \ interval2[2])\n  local length = end - start\n  if length == 0 then\n    return\
    \ \"NO\"\n  end\n  if length == 1 then\n    return \"YES\"\n  end\n  if length\
    \ == 2 then\n    return \"YES\"\n  end\n  if length == 3 then\n    return \"YES\"\
    \n  end\n  if length == 4 then\n    return \"YES\"\n  end\n  if length == 5 then\n\
    \    return \"YES\"\n  end\n  if length == 6 then\n    return \"YES\"\n  end\n\
    \  if length == 7 then\n    return \"YES\"\n  end\n  if length == 8 then\n   \
    \ return \"YES\"\n  end\n  if length == 9 or length == 10 then\n    return \"\
    YES\"\n  end\n  if length == 11 or length == 12 or length == 13 or length == 14\
    \ or length == 15 or length == 16 or length == 17 or length == 18 or length ==\
    \ 19 or length == 20 or length == 21 or length == 22 or length == 23 or length\
    \ == 24 or length == 25 or length == 26 or length == 27 or length == 28 or length\
    \ == 29 or length == 30 or length == 31 or length == 32 or length == 33 or length\
    \ == 34 or length == 35 or length == 36 or length == 37 or length == 38 or length\
    \ == 39 or length == 40 or length == 41 or length == 42 or length == 43  or length\
    \ == 44 or length == 45 or length == 46 or length == 47 or length == 48 or length\
    \ == 49 or length == 50 or length == 51 or length == 52 or length == 53 or length\
    \ == 54 or length == 55 or length == 56 or length == 57 or length == 58 or length\
    \ == 59 or length == 60 or length == 61 or length == 62 or length == 63 or length\
    \ == 64 or length == 65 or length == 66 or length == 67 or length == 68 or length\
    \ == 69 or length == 70 or length == 71 or length == 72 or length == 73 or length\
    \ == 74 or length == 75 or length == 76 or length == 77 or length == 78 or length\
    \ == 79 or length == 80 or length == 81 or length == 82 or length == 83 or length\
    \ == 84 or length == 85 or length == 86 or length == 87 or length == 88 or length\
    \ == 89 or length == 90 or length == 91 or length == 92 or length == 93 or length\
    \ == 94  or length == 95 or length == 96 or length == 97 or length == 98 or length\
    \ == 99 or length == 100 or length == 101 or length == 102 or length == 103 or\
    \ length == 104 or length == 105 or length == 106 or length == 107 or length ==\
    \ 108 or length", "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end\
    \ = interval1[2]\n\tlocal interval2_start = interval2[1]\n\tlocal interval2_end\
    \ = interval2[2]\n\tlocal interval1_length = interval1_end - interval1_start\n\
    \tlocal interval2_length = interval2_end - interval2_start\n\tlocal interval1_prime\
    \ = interval1_length == 1 and interval1_start <= interval1_end\n\tlocal interval2_prime\
    \ = interval2_length == 1 and interval2_start <= interval2_end\n\tlocal interval1_prime_or_not_intersect\
    \ = interval1_prime or interval1_start > interval1_end\n\tlocal interval2_prime_or_not_intersect\
    \ = interval2_prime or interval2_start > interval2_end\n\tlocal interval1_not_intersect\
    \ = interval1_start > interval1_end or interval1_end < interval1_start\n\tlocal\
    \ interval2_not_intersect = interval2_start > interval2_end or interval2_end <\
    \ interval2_start\n\tlocal interval1_not_intersect_or_not_prime = interval1_not_intersect\
    \ or interval1_prime_or_not_intersect\n\tlocal interval2_not_intersect_or_not_prime\
    \ = interval2_not_intersect or interval2_prime_or_not_intersect\n\tlocal interval1_not_intersect_or_not_prime_or_not_intersect\
    \ = interval1_not_intersect_or_not_prime or interval1_prime_or_not_intersect or\
    \ interval1_not_intersect\n\tlocal interval2_not_intersect_or_not_prime_or_not_intersect\
    \ = interval2_not_intersect_or_not_prime or interval2_prime_or_not_intersect or\
    \ interval2_not_intersect\n\tlocal interval1_not_intersect_or_not_prime_or_not_intersect_or_not_prime\
    \ = interval1_not_intersect_or_not_prime_or_not_intersect or interval1_prime_or_not_intersect\
    \ or interval1_not_intersect or interval1_prime_or_not_intersect_or_not_prime\n\
    \tlocal interval2_not_intersect_or_not_prime_or_not_intersect_or_not_prime = interval2_not_intersect_or_not_prime_or_not_intersect\
    \ or interval2_prime_or_not_intersect or interval2_not_intersect or interval2_prime_or_not_intersect_or_not_prime\n\
    \tlocal interval1_not_intersect_or_not_prime_or_not_intersect_or_not_prime_or_not_intersect\
    \ = interval1_not_intersect_or_not_prime_or_not_intersect or interval1_prime_or_not_intersect\
    \ or interval1_not_intersect or interval1_prime_or_not_intersect_or_not_prime\
    \ or interval", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\t\
    local start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == 1 then\n\t\tif start1 <= start2 then\n\t\t\treturn\
    \ end1 <= end2 ? \"YES\" : \"NO\"\n\t\telse\n\t\t\treturn end2 <= end1 ? \"YES\"\
    \ : \"NO\"\n\t\tend\n\telse\n\t\tif start1 <= start2 then\n\t\t\tif end1 <= end2\
    \ then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\
    \t\telse\n\t\t\tif end2 <= end1 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\
    \t\treturn \"NO\"\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = length1\
    \ * length2\n\tif length % 2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tlocal prime\
    \ = true\n\tlocal i = 3\n\twhile i < length do\n\t\tif i % 2 == 0 then\n\t\t\t\
    prime = prime and start1 + i == end1 or start2 + i == end2\n\t\telse\n\t\t\tprime\
    \ = prime and start1 + i != end1 or start2 + i != end2\n\t\tend\n\t\ti = i + 2\n\
    \tend\n\treturn prime and \"YES\" or \"NO\"\nend", "\tlocal interval1Start = interval1[1]\n\
    \tlocal interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\t\
    local interval2End = interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\n\
    \tlocal interval2Length = interval2End - interval2Start\n\tlocal interval1IntersectionStart\
    \ = interval1Start + interval1Length / 2\n\tlocal interval1IntersectionEnd = interval1Start\
    \ + interval1Length - interval1Length / 2\n\tlocal interval2IntersectionStart\
    \ = interval2Start + interval2Length / 2\n\tlocal interval2IntersectionEnd = interval2Start\
    \ + interval2Length - interval2Length / 2\n\tlocal intersectionLength = interval1IntersectionEnd\
    \ - interval1IntersectionStart\n\tlocal intersectionIntersectionStart = interval1IntersectionStart\
    \ + intersectionLength / 2\n\tlocal intersectionIntersectionEnd = interval1IntersectionStart\
    \ + intersectionLength - intersectionLength / 2\n\tlocal intersectionIntersectionLength\
    \ = intersectionIntersectionEnd - intersectionIntersectionStart\n\tlocal intersectionIntersectionIntersectionStart\
    \ = intersectionIntersectionStart + intersectionIntersectionLength / 2\n\tlocal\
    \ intersectionIntersectionIntersectionEnd = intersectionIntersectionStart + intersectionIntersectionLength\
    \ - intersectionIntersectionLength / 2\n\tlocal intersectionIntersectionIntersectionLength\
    \ = intersectionIntersectionIntersectionEnd - intersectionIntersectionIntersectionStart\n\
    \tlocal intersectionIntersectionIntersectionIntersectionStart = intersectionIntersectionIntersectionStart\
    \ + intersectionIntersectionIntersectionLength / 2\n\tlocal intersectionIntersectionIntersectionIntersectionEnd\
    \ = intersectionIntersectionIntersectionStart + intersectionIntersectionIntersectionLength\
    \ - intersectionIntersectionIntersectionLength / 2\n\tlocal intersectionIntersectionIntersectionIntersectionLength\
    \ = intersectionIntersectionIntersectionIntersectionEnd - intersectionIntersectionIntersectionIntersectionStart\n\
    \tlocal intersectionIntersectionIntersectionIntersectionIntersectionStart = intersectionIntersectionIntersectionIntersectionStart\
    \ + intersectionIntersectionIntersectionIntersectionLength / 2\n\tlocal intersectionIntersectionIntersectionIntersectionIntersectionEnd\
    \ = intersectionIntersectionIntersectionIntersectionStart + intersectionIntersectionIntersectionIntersectionLength\
    \ - intersectionIntersectionIntersectionIntersectionLength / 2\n\tlocal intersectionIntersectionIntersectionIntersectionIntersectionLength\
    \ = intersectionIntersectionIntersectionIntersectionIntersectionEnd - intersectionIntersectionIntersectionIntersectionIntersectionStart\n\
    \tlocal intersectionIntersectionIntersectionIntersectionIntersectionIntersectionStart\
    \ = intersectionIntersectionIntersectionIntersectionIntersectionStart + intersectionIntersectionIntersectionIntersectionIntersectionLength\
    \ / 2\n\tlocal intersectionIntersectionInter", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length2 == length then\n\t\tif start <= end2 then\n\
    \t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2\
    \ == length + 1 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == length + 2 then\n\t\tif start\
    \ <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\
    \tend\n\tif length2 == length + 3 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == length\
    \ + 4 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\n\tif length2 == length + 5 then\n\t\tif start <=\
    \ end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t\
    end\n\tif length2 == length + 6 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == length\
    \ + 7 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\n\tif length2 == length + 8 then\n\t\tif start <=\
    \ end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t\
    end\n\tif length2 == length + 9 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == length\
    \ + 10 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\n\tif length2 == length + 11 then\n\t\tif start\
    \ <= end2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\
    \tend\n\tif length2 == length + 12 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 == length\
    \ + 13 then\n\t\tif start <= end2 then\n\t\t\treturn \"YES\"\n\t\telse", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 ==\
    \ 1 then\n\t\treturn \"YES\"\n\tend\n\tif length2 == 2 then\n\t\tif start <= start2\
    \ then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\t\
    local prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\t", "\tlocal start1\
    \ = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length == 1 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2\
    \ = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start1 == start2 then\n\t\treturn \"NO\"\n\tend\n\tif start1 == end2 then\n\t\
    \treturn \"YES\"\n\tend\n\tif start1 < end2 then\n\t\tstart1, end2 = end2, start1\n\
    \tend\n\tif start1 > end2 then\n\t\tstart1, end2 = end2, start1\n\tend\n\tif start1\
    \ < end2 then\n\t\tstart1, end2 = end2, start1\n\tend\n\tif start1 == end2 then\n\
    \t\treturn \"NO\"\n\tend\n\tif start1 == start2 then\n\t\treturn \"YES\"\n\tend\n\
    \tif start1 < end2 then\n\t\tstart1, end2 = end2, start1\n\tend\n\tif start1 >\
    \ end2 then\n\t\tstart1, end2 = end2, start1\n\tend\n\tif start1 < end2 then\n\
    \t\tstart1, end2 = end2, start1\n\tend\n\tif start1 == end2 then\n\t\treturn \"\
    NO\"\n\tend\n\tif start1 == start2 then\n\t\treturn \"YES\"\n\tend\n\tif start1\
    \ < end2 then\n\t\tstart1, end2 = end2, start1\n\tend\n\tif start1 > end2 then\n\
    \t\tstart1, end2 = end2, start1\n\tend\n\tif start1 < end2 then\n\t\tstart1, end2\
    \ = end2, start1\n\tend\n\tif start1 == end2 then\n\t\treturn \"NO\"\n\tend\n\t\
    if start1 == start2 then\n\t\treturn \"YES\"\n\tend\n\tif start1 < end2 then\n\
    \t\tstart1, end2 = end2, start1\n\tend\n\tif start1 > end2 then\n\t\tstart1, end2\
    \ = end2, start1\n\tend\n\tif start1 < end2 then\n\t\tstart1, end", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2\
    \ - start2)\n\tif length == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\
    \tif length == length2 then\n\t\tif start <= start2 then\n\t\t\treturn \"NO\"\n\
    \t\telse\n\t\t\treturn \"YES\"\n\t\tend\n\tend\n\tif length2 > length then\n\t\
    \tlength = length2\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal\
    \ prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\
    \tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime6", "\tlocal start1\
    \ = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length1 == length2 then\n\t\tif start1 <= start2 then\n\t\t\treturn\
    \ start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\treturn start2 <= end1 and end1\
    \ <= end2\n\t\tend\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1,\
    \ start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2\
    \ then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tlocal prime = true\n\tlocal prime1 = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n", "\t\
    local interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\t\
    local interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\t\
    local intersection_start = interval1_start < interval2_start and interval1_end\
    \ < interval2_end and interval1_start < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_end < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_end < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_end < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_end < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_end < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_start < interval1_end and interval1_end\
    \ < interval2_end and interval2_start < interval1_end and interval1_end < interval2_end\
    \ and ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = math.abs(end -\
    \ start)\n\tlocal length2 = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\
    \treturn \"NO\"\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif\
    \ length2 > length then\n\t\tlength = length2\n\tend\n\tlocal prime = true\n\t\
    local prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n",
  "  local start1 = interval1[1]\n  local end1 = interval1[2]\n  local start2 = interval2[1]\n\
    \  local end2 = interval2[2]\n  local length1 = end1 - start1\n  local length2\
    \ = end2 - start2\n  local length_intersection = length1 + length2\n  local prime_number\
    \ = 2\n  local prime_number_count = 0\n  local prime_number_end = 0\n  local prime_number_start\
    \ = 0\n  local prime_number_length = 0\n  local prime_number_length_intersection\
    \ = 0\n  local prime_number_length_intersection_end = 0\n  local prime_number_length_intersection_start\
    \ = 0\n  local prime_number_length_intersection_length = 0\n  local prime_number_length_intersection_length_intersection\
    \ = 0\n  local prime_number_length_intersection_length_intersection_end = 0\n\
    \  local prime_number_length_intersection_length_intersection_start = 0\n  local\
    \ prime_number_length_intersection_length_intersection_length = 0\n  local prime_number_length_intersection_length_intersection_end\
    \ = 0\n  local prime_number_length_intersection_length_intersection_start = 0\n\
    \  local prime_number_length_intersection_length_intersection_length = 0\n  local\
    \ prime_number_length_intersection_length_intersection_end = 0\n  local prime_number_length_intersection_length_intersection_start\
    \ = 0\n  local prime_number_length_intersection_length_intersection_length = 0\n\
    \  local prime_number_length_intersection_length_intersection_end = 0\n  local\
    \ prime_number_length_intersection_length_intersection_start = 0\n  local prime_number_length_intersection_length_intersection_length\
    \ = 0\n  local prime_number_length_intersection_length_intersection_end = 0\n\
    \  local prime_number_length_intersection_length_intersection_start = 0\n  local\
    \ prime_number_length_intersection_length_intersection_length = 0\n  local prime_number_length_intersection_length_intersection_end\
    \ = 0\n  local prime_number_length_intersection_length_intersection_start = 0\n\
    \  local prime_number_length_intersection_length_intersection_length = 0\n  local\
    \ prime_number_length_intersection_length_intersection_end = 0\n  local prime_number_length_intersection_length_intersection_start\
    \ = 0\n  local prime_number_length_intersection_length_intersection_length = 0\n\
    \  local prime_number_length_intersection_length_intersection_end = 0\n  local\
    \ prime_number_length_intersection_length_intersection_start = 0\n  local prime_number_length_intersection_length_intersection_length\
    \ = 0\n  local prime_number_length_intersection_length_intersection_end = 0\n\
    \  local prime_number_length_inter", "  -- Write your code here\n  local interval1_start\
    \ = interval1[1]\n  local interval1_end = interval1[2]\n  local interval2_start\
    \ = interval2[1]\n  local interval2_end = interval2[2]\n  local interval1_length\
    \ = interval1_end - interval1_start\n  local interval2_length = interval2_end\
    \ - interval2_start\n  local intersection_length = interval1_end - interval2_start\n\
    \  if interval1_length == interval2_length then\n    if interval1_start <= interval2_start\
    \ then\n      return \"NO\"\n    else\n      return \"YES\"\n    end\n  else\n\
    \    if intersection_length == 1 then\n      return \"NO\"\n    else\n      return\
    \ \"YES\"\n    end\n  end\nend", "  local start = interval1[1]\n  local end =\
    \ interval1[2]\n  local start2 = interval2[1]\n  local end2 = interval2[2]\n \
    \ local length = end - start\n  local length2 = end2 - start2\n  if length2 ==\
    \ 0 then\n    return length\n  elseif length2 == 1 then\n    return length >=\
    \ start and length <= end\n  else\n    return length >= start and length <= end\
    \ and length2 >= start2 and length2 <= end2\n  end\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length2 == length then\n\t\treturn \"YES\"\n\tend\n\
    \tif length2 > length then\n\t\tlocal temp = start\n\t\tstart = end\n\t\tend =\
    \ temp\n\t\ttemp = start2\n\t\tstart2 = end2\n\t\tend2 = temp\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 =\
    \ true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\t\
    local prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11\
    \ = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\
    \tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal\
    \ prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21\
    \ = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\
    \tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal\
    \ prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31\
    \ = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\
    \tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal\
    \ prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41\
    \ = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\
    \tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal\
    \ prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51\
    \ = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\
    \tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal\
    \ prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61\
    \ = true\n\tlocal prime62 = true", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length\
    \ = length1 + length2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length == 2 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 3 then\n\t\treturn \"YES\"\n\tend\n\tif length == 4 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 5 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length == 6 then\n\t\treturn \"YES\"\n\tend\n\tif length == 7 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 8 then\n\t\treturn \"YES\"\n\tend\n\tif length\
    \ == 9 or length == 10 then\n\t\treturn \"YES\"\n\tend\n\tif length == 11 or length\
    \ == 12 or length == 13 or length == 14 or length == 15 or length == 16 or length\
    \ == 17 or length == 18 or length == 19 or length == 20 or length == 21 or length\
    \ == 22 or length == 23 or length == 24 or length == 25 or length == 26 or length\
    \ == 27 or length == 28 or length == 29 or length == 30 or length == 31 or length\
    \ == 32 or length == 33 or length == 34 or length == 35 or length == 36 or length\
    \ == 37 or length == 38 or length == 39 or length == 40 or length == 41 or length\
    \ == 42 or length == 43  or length == 44 or length == 45 or length == 46 or length\
    \ == 47 or length == 48 or length == 49 or length == 50 or length == 51 or length\
    \ == 52 or length == 53 or length == 54 or length == 55 or length == 56 or length\
    \ == 57 or length == 58 or length == 59 or length == 60 or length == 61 or length\
    \ == 62 or length == 63 or length == 64 or length == 65 or length == 66 or length\
    \ == 67 or length == 68 or length == 69 or length == 70 or length == 71 or length\
    \ == 72 or length == 73 or length == 74 or length == 75 or length == 76 or length\
    \ == 77 or length == 78 or length == 79 or length == 80 or length == 81 or length\
    \ == 82 or length == 83 or length == 84 or length == 85 or length == 86 or length\
    \ == 87 or length == 88 or length == 89 or length == 90 or length == 91 or length\
    \ == 92 or length == 93 or length == 94  or length == 95 then\n\t\treturn \"",
  "  local start1 = interval1[1]\n  local end1 = interval1[2]\n  local start2 = interval2[1]\n\
    \  local end2 = interval2[2]\n  local length = end1 - start1\n  local length2\
    \ = end2 - start2\n  if length2 == 0 then\n    return length\n  end\n  if length2\
    \ == 1 then\n    return length\n  end\n  if length2 == length then\n    return\
    \ length\n  end\n  if length2 > length then\n    return length\n  end\n  if length2\
    \ < length then\n    return length\n  end\n  local prime = true\n  local prime2\
    \ = true\n  local prime3 = true\n  local prime4 = true\n  local prime5 = true\n\
    \  local prime6 = true\n  local prime7 = true\n  local prime8 = true\n  local\
    \ prime9 = true\n  local prime10 = true\n  local prime11 = true\n  local prime12\
    \ = true\n  local prime13 = true\n  local prime14 = true\n  local prime15 = true\n\
    \  local prime16 = true\n  local prime17 = true\n  local prime18 = true\n  local\
    \ prime19 = true\n  local prime20 = true\n  local prime21 = true\n  local prime22\
    \ = true\n  local prime23 = true\n  local prime24 = true\n  local prime25 = true\n\
    \  local prime26 = true\n  local prime27 = true\n  local prime28 = true\n  local\
    \ prime29 = true\n  local prime30 = true\n  local prime31 = true\n  local prime32\
    \ = true\n  local prime33 = true\n  local prime34 = true\n  local prime35 = true\n\
    \  local prime36 = true\n  local prime37 = true\n  local prime38 = true\n  local\
    \ prime39 = true\n  local prime40 = true\n  local prime41 = true\n  local prime42\
    \ = true\n  local prime43 = true\n  local prime44 = true\n  local prime45 = true\n\
    \  local prime46 = true\n  local prime47 = true\n  local prime48 = true\n  local\
    \ prime49 = true\n  local prime50 = true\n  local prime51 = true\n  local prime52\
    \ = true\n  local prime53 = true\n  local prime54 = true\n  local prime55 = true\n\
    \  local prime56 = true\n  local prime57 = true\n  local prime58 = true\n  local\
    \ prime59 = true\n  local prime60 = true\n  local prime61 = true\n  local prime62\
    \ = true\n  local prime63 = true\n  local prime64 = true\n  local prime65 = true\n\
    \  local prime66 = true", "\tlocal start1, end1 = interval1[1], interval1[2]\n\
    \tlocal start2, end2 = interval2[1], interval2[2]\n\tlocal length = end1 - start1\
    \ + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length\
    \ % 2 == 0 then\n\t\tlocal start1prime, end1prime = start1 + 1, end1 - 1\n\t\t\
    local start2prime, end2prime = start2 + 1, end2 - 1\n\t\tlocal prime1 = prime(start1prime,\
    \ end1prime)\n\t\tlocal prime2 = prime(start2prime, end2prime)\n\t\tif prime1\
    \ == prime2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\
    \telse\n\t\tlocal prime1 = prime(start1, end1)\n\t\tlocal prime2 = prime(start2,\
    \ end2)\n\t\tif prime1 == prime2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length2 == 2 then\n\t\tif start <= start2 then\n\t\t\tif end <=\
    \ end2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\t\
    end\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\n\tif length2 > 2 then\n\t\t\
    if start <= start2 then\n\t\t\tif end <= end2 then\n\t\t\t\tif length == 2 then\n\
    \t\t\t\t\treturn \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\
    \t\t\telse\n\t\t\t\tif length == 2 then\n\t\t\t\t\treturn \"NO\"\n\t\t\t\telse\n\
    \t\t\t\t\treturn \"YES\"\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tif end <= end2\
    \ then\n\t\t\t\tif length == 2 then\n\t\t\t\t\treturn \"NO\"\n\t\t\t\telse\n\t\
    \t\t\t\treturn \"YES\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif length == 2 then\n\
    \t\t\t\t\treturn \"YES\"\n\t\t\t\telse\n\t\t\t\t\treturn \"NO\"\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end =\
    \ interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\
    local length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0\
    \ then\n\t\treturn \"NO\"\n\telseif length2 == 1 then\n\t\treturn \"YES\"\n\t\
    elseif length2 == length then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\
    \tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 = end1 -\
    \ start1\n\tlocal length2 = end2 - start2\n\tlocal length_intersection = length1\
    \ + length2\n\tlocal prime_numbers = prime_numbers(length_intersection)\n\tlocal\
    \ prime_numbers_length = #prime_numbers\n\tlocal prime_numbers_length = prime_numbers_length\
    \ + 1\n\tlocal prime_numbers_length = prime_numbers_length - 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length + 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ - 1\n\tlocal prime_numbers_length = prime_numbers_length + 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length - 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ + 1\n\tlocal prime_numbers_length = prime_numbers_length - 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length + 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ - 1\n\tlocal prime_numbers_length = prime_numbers_length + 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length - 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ + 1\n\tlocal prime_numbers_length = prime_numbers_length - 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length + 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ - 1\n\tlocal prime_numbers_length = prime_numbers_length + 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length - 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ + 1\n\tlocal prime_numbers_length = prime_numbers_length - 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length + 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ - 1\n\tlocal prime_numbers_length = prime_numbers_length + 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length - 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ + 1\n\tlocal prime_numbers_length = prime_numbers_length - 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length + 1\n\tlocal prime_numbers_length = prime_numbers_length\
    \ - 1\n\tlocal prime_numbers_length = prime_numbers_length + 1\n\tlocal prime_numbers_length\
    \ = prime_numbers_length - 1\n\tlocal prime_", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length == length2 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\t\
    local prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true\n\tlocal ", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    if length % 2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tlocal prime = true\n\tlocal\
    \ i = 3\n\twhile i <= length do\n\t\tif start1 + i == end1 or start2 + i == end2\
    \ then\n\t\t\tprime = false\n\t\telse\n\t\t\tprime = prime and math.gcd(start1\
    \ + i, end1 + i) == 1 and math.gcd(start2 + i, end2 + i) == 1 and math.gcd(start1\
    \ + i, end1 + i) == 1 and math.gcd(start2 + i, end2 + i) == 1\n\t\tend\n\t\ti\
    \ = i + 2\n\tend\n\treturn prime and \"YES\" or \"NO\"\nend", "\tlocal start =\
    \ interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\t\
    return \"YES\"\n\tend\n\tif length2 == 2 then\n\t\tif length == 1 then\n\t\t\t\
    return \"YES\"\n\t\tend\n\t\tif length == 2 then\n\t\t\tif start <= start2 then\n\
    \t\t\t\treturn \"YES\"\n\t\t\tend\n\t\t\tif end >= end2 then\n\t\t\t\treturn \"\
    YES\"\n\t\t\tend\n\t\tend\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime", "  --\
    \ Write your code here\n  local interval1Start = interval1[1]\n  local interval1End\
    \ = interval1[2]\n  local interval2Start = interval2[1]\n  local interval2End\
    \ = interval2[2]\n  local interval1Length = interval1End - interval1Start\n  local\
    \ interval2Length = interval2End - interval2Start\n  local intersectionLength\
    \ = interval1Start + interval1Length + interval2Start + interval2Length\n  if\
    \ interval1Start <= interval2Start and interval1End >= interval2End then\n   \
    \ if intersectionLength == 2 or intersectionLength == 3 then\n      return \"\
    YES\"\n    else\n      return \"NO\"\n    end\n  else\n    return \"NO\"\n  end\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn \"NO\"\n\tend\n\tif start == start2 and end == end2 then\n\t\
    \treturn \"YES\"\n\tend\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal ", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif start <= start2 then\n\t\treturn \"NO\"\n\tend\n\tif start\
    \ == start2 and end == end2 then\n\t\treturn \"YES\"\n\tend\n\tlocal length =\
    \ end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"NO\"\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal ", "\tlocal interval1_start = interval1[1]\n\t\
    local interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\t\
    local interval2_end = interval2[2]\n\tlocal interval1_length = interval1_end -\
    \ interval1_start\n\tlocal interval2_length = interval2_end - interval2_start\n\
    \tlocal interval1_start_index = interval1_start + interval1_length\n\tlocal interval2_start_index\
    \ = interval2_start + interval2_length\n\tlocal interval1_end_index = interval1_start\
    \ + interval1_length\n\tlocal interval2_end_index = interval2_start + interval2_length\n\
    \tlocal interval1_start_index_next = interval1_start_index + 1\n\tlocal interval2_start_index_next\
    \ = interval2_start_index + 1\n\tlocal interval1_end_index_next = interval1_end_index\
    \ + 1\n\tlocal interval2_end_index_next = interval2_end_index + 1\n\tlocal interval1_start_index_next_next\
    \ = interval1_start_index_next + 1\n\tlocal interval2_start_index_next_next =\
    \ interval2_start_index_next + 1\n\tlocal interval1_end_index_next_next = interval1_end_index_next\
    \ + 1\n\tlocal interval2_end_index_next_next = interval2_end_index_next + 1\n\t\
    local interval1_start_index_next_next_next = interval1_start_index_next_next +\
    \ 1\n\tlocal interval2_start_index_next_next_next = interval2_start_index_next_next\
    \ + 1\n\tlocal interval1_end_index_next_next_next = interval1_end_index_next_next\
    \ + 1\n\tlocal interval2_end_index_next_next_next = interval2_end_index_next_next\
    \ + 1\n\tlocal interval1_start_index_next_next_next_next = interval1_start_index_next_next_next\
    \ + 1\n\tlocal interval2_start_index_next_next_next_next = interval2_start_index_next_next_next\
    \ + 1\n\tlocal interval1_end_index_next_next_next_next = interval1_end_index_next_next_next\
    \ + 1\n\tlocal interval2_end_index_next_next_next_next = interval2_end_index_next_next_next\
    \ + 1\n\tlocal interval1_start_index_next_next_next_next_next = interval1_start_index_next_next_next_next\
    \ + 1\n\tlocal interval2_start_index_next_next_next_next_next = interval2_start_index_next_next_next_next\
    \ + 1\n\tlocal interval1_end_index_next_next_next_next_next = interval1_end_index_next_next_next_next\
    \ + 1\n\tlocal interval2_end_index_next_next_next_next_next = interval2_end_index_next_next_next_next\
    \ + 1\n\tlocal interval1_start_index_next_next_next_next_next_next = interval1_start_index_next_next_next_next_next\
    \ + 1\n\tlocal interval2_start_index_next_next_next_next_next_next = interval2_start_index_next_next_next_next_next\
    \ + 1\n\tlocal interval1_end_index_next_next_next_next_next_next = interval1_",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn \"NO\"\n\telseif length == 1 then\n\t\treturn\
    \ \"YES\"\n\telse\n\t\tlocal prime = true\n\t\tfor i = 2, math.floor(math.sqrt(length))\
    \ + 1 do\n\t\t\tif length % i == 0 then\n\t\t\t\tprime = false\n\t\t\t\tbreak\n\
    \t\t\tend\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\t\
    return \"NO\"\n\t\tend\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal lengthIntersection\
    \ = length1 + length2\n\tif lengthIntersection == 0 then\n\t\treturn \"NO\"\n\t\
    elseif lengthIntersection == 1 then\n\t\treturn \"YES\"\n\telseif lengthIntersection\
    \ == 2 then\n\t\treturn \"YES\"\n\telseif lengthIntersection > 2 then\n\t\treturn\
    \ \"NO\"\n\telseif lengthIntersection < 2 then\n\t\treturn \"NO\"\n\telse\n\t\t\
    local prime = true\n\t\tlocal primeChecker = 2\n\t\tlocal primeChecker = primeChecker\n\
    \t\twhile prime == true do\n\t\t\tif primeChecker == lengthIntersection then\n\
    \t\t\t\tprime = false\n\t\t\telse\n\t\t\t\tprimeChecker = primeChecker + 1\n\t\
    \t\tend\n\t\tend\n\t\tif prime == true then\n\t\t\treturn \"YES\"\n\t\telse\n\t\
    \t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tif start <=\
    \ start2 then\n\t\treturn \"NO\"\n\tend\n\tif start2 <= end then\n\t\treturn \"\
    NO\"\n\tend\n\tif start == start2 and end == end2 then\n\t\treturn \"YES\"\n\t\
    end\n\tif start == start2 and end < end2 then\n\t\treturn \"NO\"\n\tend\n\tif\
    \ start < start2 and end == end2 then\n\t\treturn \"NO\"\n\tend\n\tif start <\
    \ start2 and end < end2 then\n\t\treturn \"YES\"\n\tend\nend", "\tlocal interval1Start,\
    \ interval1End = interval1[1], interval1[2]\n\tlocal interval2Start, interval2End\
    \ = interval2[1], interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\n\
    \tlocal interval2Length = interval2End - interval2Start\n\tlocal intersectionLength\
    \ = interval1Start + interval1Length - interval2Start + interval2Length\n\tif\
    \ interval1Start <= interval2Start and interval1End >= interval2End then\n\t\t\
    if interval1Start <= interval2Start and interval1End >= interval2End then\n\t\t\
    \tif interval1Start <= interval2Start and interval1End >= interval2End then\n\t\
    \t\t\t-- The intersection is empty\n\t\t\t\treturn interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\t\t\telse\n\t\t\t\t-- The intersection is\
    \ empty\n\t\t\t\treturn interval1Start <= interval2Start and interval1End < interval2End\n\
    \t\t\tend\n\t\telse\n\t\t\t-- The intersection is empty\n\t\t\treturn interval1Start\
    \ < interval2Start and interval1End >= interval2End\n\t\tend\n\telse\n\t\t-- The\
    \ intersection is empty\n\t\treturn interval1Start < interval2Start and interval1End\
    \ >= interval2End\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end\
    \ and start2 <= end2 then\n\t\tif start < start2 then\n\t\t\tstart = start2\n\t\
    \tend\n\t\tif end > end2 then\n\t\t\tend = end2\n\t\tend\n\t\tif start <= end\
    \ then\n\t\t\tif start < end then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\t\
    return \"YES\"\n\t\t\tend\n\t\telse\n\t\t\tif start > end then\n\t\t\t\treturn\
    \ \"NO\"\n\t\t\telse\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\t\tend\n\telse\n\t\t\
    if start > end then\n\t\t\treturn \"NO\"\n\t\telse\n\t\t\treturn \"YES\"\n\t\t\
    end\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 =\
    \ end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1 <= 0 or length2\
    \ <= 0 then\n\t\treturn \"NO\"\n\tend\n\tif length1 == length2 then\n\t\tif start1\
    \ <= start2 then\n\t\t\treturn start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\
    \treturn start2 <= end1 and end1 <= end2\n\t\tend\n\tend\n\tif start1 <= start2\
    \ then\n\t\tif end1 <= end2 then\n\t\t\treturn end1 <= length2 and length2 <=\
    \ length1\n\t\telse\n\t\t\treturn end2 <= length1 and length1 <= length2\n\t\t\
    end\n\telse\n\t\tif end1 <= end2 then\n\t\t\treturn end1 <= length2 and length2\
    \ <= length1\n\t\telse\n\t\t\treturn end2 <= length1 and length1 <= length2\n\t\
    \tend\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    if length == 1 then\n\t\treturn \"YES\"\n\tend\n\tif start1 < start2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif end1\
    \ > end2 then\n\t\tend1, end2 = end2, end1\n\t\tstart1, start2 = start2, start1\n\
    \tend\n\tlocal prime = true\n\tfor i = 2, length-1 do\n\t\tif start1 + i == end1\
    \ then\n\t\t\tprime = false\n\t\telseif start2 + i == end2 then\n\t\t\tprime =\
    \ false\n\t\tend\n\tend\n\tif prime then\n\t\treturn \"YES\"\n\telse\n\t\treturn\
    \ \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length2 == 1 then\n\t\tif start <= end2 then\n\t\t\treturn\
    \ \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif length % length2\
    \ == 0 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\t\
    end\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 = end1 -\
    \ start1\n\tlocal length2 = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\
    \t\treturn \"NO\"\n\tend\n\tif length1 == length2 then\n\t\tif start1 <= start2\
    \ then\n\t\t\treturn start1 <= end2 and end2 <= end1\n\t\telse\n\t\t\treturn start2\
    \ <= end1 and end1 <= end2\n\t\tend\n\tend\n\tlocal length = length1\n\tlocal\
    \ prime = true\n\tlocal i = 2\n\twhile i < length and prime do\n\t\tlocal prime2\
    \ = true\n\t\tlocal j = 2\n\t\twhile j < length and prime2 do\n\t\t\tlocal prime3\
    \ = true\n\t\t\tlocal k = 2\n\t\t\twhile k < length and prime3 do\n\t\t\t\tif\
    \ start1 + k <= start2 + j then\n\t\t\t\t\tprime3 = false\n\t\t\t\telse\n\t\t\t\
    \t\tprime2 = false\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tif prime3\
    \ then\n\t\t\t\tprime = false\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\tif prime\
    \ then\n\t\t\tprime = false\n\t\tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\
    \treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal interval1Start,\
    \ interval1End = interval1[1], interval1[2]\n\tlocal interval2Start, interval2End\
    \ = interval2[1], interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\n\
    \tlocal interval2Length = interval2End - interval2Start\n\tlocal intersectionLength\
    \ = interval1Start + interval2End - interval1End - interval2Start\n\tlocal isPrime\
    \ = true\n\tlocal primeLength = 1\n\tlocal primeStart = 0\n\tlocal primeEnd =\
    \ interval1Start + interval1Length\n\twhile primeStart <= primeEnd do\n\t\tlocal\
    \ prime = primeStart + primeLength\n\t\tlocal primeIsPrime = true\n\t\tlocal primeIsPrimeStart\
    \ = primeStart + primeLength\n\t\tlocal primeIsPrimeEnd = primeStart + primeLength\n\
    \t\tlocal primeIsPrimeLength = primeIsPrimeEnd - primeIsPrimeStart\n\t\tlocal\
    \ primeIsPrimeIsPrime = true\n\t\tlocal primeIsPrimeIsPrimeStart = primeIsPrimeStart\
    \ + primeIsPrimeLength\n\t\tlocal primeIsPrimeIsPrimeEnd = primeIsPrimeStart +\
    \ primeIsPrimeLength\n\t\tlocal primeIsPrimeIsPrimeLength = primeIsPrimeIsPrimeEnd\
    \ - primeIsPrimeIsPrimeStart\n\t\tlocal primeIsPrimeIsPrimeIsPrime = true\n\t\t\
    local primeIsPrimeIsPrimeIsPrimeStart = primeIsPrimeIsPrimeStart + primeIsPrimeIsPrimeIsPrimeLength\n\
    \t\tlocal primeIsPrimeIsPrimeIsPrimeEnd = primeIsPrimeIsPrimeStart + primeIsPrimeIsPrimeIsPrimeLength\n\
    \t\tlocal primeIsPrimeIsPrimeIsPrimeLength = primeIsPrimeIsPrimeIsPrimeEnd - primeIsPrimeIsPrimeIsPrimeStart\n\
    \t\tlocal primeIsPrimeIsPrimeIsPrimeIsPrime = true\n\t\tlocal primeIsPrimeIsPrimeIsPrimeIsPrimeStart\
    \ = primeIsPrimeIsPrimeIsPrimeStart + primeIsPrimeIsPrimeIsPrimeIsPrimeLength\n\
    \t\tlocal primeIsPrimeIsPrimeIsPrimeIsPrimeEnd = primeIsPrimeIsPrimeIsPrimeStart\
    \ + primeIsPrimeIsPrimeIsPrimeIsPrimeLength\n\t\tlocal primeIsPrimeIsPrimeIsPrimeIsPrimeLength\
    \ = primeIsPrimeIsPrimeIsPrimeIsPri", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ < length2 then\n\t\treturn \"NO\"\n\telseif length1 > length2 then\n\t\treturn\
    \ \"YES\"\n\telseif length1 == length2 then\n\t\treturn \"YES\"\n\telse\n\t\t\
    return \"NO\"\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End\
    \ = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal interval2End\
    \ = interval2[2]\n\tlocal interval1Length = interval1End - interval1Start + 1\n\
    \tlocal interval2Length = interval2End - interval2Start + 1\n\tlocal interval1Intersection\
    \ = interval1Start + interval1Length\n\tlocal interval2Intersection = interval2Start\
    \ + interval2Length\n\tif interval1Intersection > interval2Intersection then\n\
    \t\treturn interval1Intersection\n\telseif interval1Intersection < interval2Intersection\
    \ then\n\t\treturn interval2Intersection\n\telse\n\t\treturn interval1Intersection\n\
    \tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal\
    \ length2 = end2 - start2\n\tif length2 == 0 or length2 == 1 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tif length == length2 then\n\t\treturn \"YES\"\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 =\
    \ true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\t\
    local prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11\
    \ = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\
    \tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal\
    \ prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21\
    \ = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\
    \tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal\
    \ prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31\
    \ = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\
    \tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal\
    \ prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41\
    \ = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\
    \tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal\
    \ prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51\
    \ = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\
    \tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal\
    \ prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61\
    \ = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\
    \tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\t", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = math.abs(end - start)\n\tlocal length2\
    \ = math.abs(end2 - start2)\n\tif length == length2 then\n\t\treturn \"YES\"\n\
    \telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \t\n\tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif\
    \ start <= start2 and end <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start\
    \ <= start2 and end > end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2\
    \ and end <= end2 then\n\t\treturn \"NO\"\n\tend\n\t\n\tif start > start2 and\
    \ end > end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end\
    \ > end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start > start2 and end > end2\
    \ then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end <= end2 then\n\
    \t\treturn \"YES\"\n\tend\n\t\n\tif start > start2 and end <= end2 then\n\t\t\
    return \"YES\"\n\tend\n\t\n\tif start <= start2 and end > end2 then\n\t\treturn\
    \ \"YES\"\n\tend\n\t\n\tif start > start2 and end > end2 then\n\t\treturn \"YES\"\
    \n\tend\n\t\n\tif start <= start2 and end <= end2 then\n\t\treturn \"YES\"\n\t\
    end\n\t\n\tif start > start2 and end > end2 then\n\t\treturn \"YES\"\n\tend\n\t\
    \n\tif start <= start2 and end <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\t\
    if start > start2 and end > end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start\
    \ <= start2 and end <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start >\
    \ start2 and end > end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2\
    \ and end <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start > start2 and\
    \ end > end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end\
    \ <= end2 then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start > start2 and end > end2\
    \ then\n\t\treturn \"YES\"\n\tend\n\t\n\tif start <= start2 and end <= end2 then\n\
    \t\treturn \"YES\"\n\tend\n\t\n\tif start > start2 and end > end2 then\n\t\treturn\
    \ \"YES\"\n\t"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

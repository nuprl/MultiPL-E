language: lua
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  if n == 0\
    \ then\n    return {}\n  end\n  local ds = {}\n  ds[1] = 1\n  for i = 2, n do\n\
    \    ds[i] = ds[i-1] * xs[i-1]\n  end\n  return ds\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppunhg0lf.lua:24:\
    \ expected: {1, 4, 12, 20}\nactual: {1, 3, 3, 6, 24}\nstack traceback:\n\t/tmp/tmppunhg0lf.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if #xs == 0 then\n    return\
    \ {}\n  elseif #xs == 1 then\n    return { xs[1] }\n  else\n    local ds = {}\n\
    \    for i = 1, #xs do\n      ds[i] = xs[i + 1]\n    end\n    return ds\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprxu9mkgh.lua:25:\
    \ expected: {1, 4, 12, 20}\nactual: {1, 2, 4, 5}\nstack traceback:\n\t/tmp/tmprxu9mkgh.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if #xs == 0 then\n    return\
    \ {}\n  end\n  local ds = {}\n  local x = xs[1]\n  ds[1] = xs[1]\n  for i = 2,\
    \ #xs do\n    ds[i] = xs[i]\n  end\n  return ds\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4i0a2i36.lua:24:\
    \ expected: {1, 4, 12, 20}\nactual: {3, 1, 2, 4, 5}\nstack traceback:\n\t/tmp/tmp4i0a2i36.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local d = 0\n\
    \  for i = 1, #xs do\n    d = d * xs[i] + n\n    n = n * xs[i]\n  end\n  return\
    \ d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbncziske.lua:21:\
    \ expected: {1, 4, 12, 20}\nactual: 274\nstack traceback:\n\t/tmp/tmpbncziske.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local d = 0\n\
    \  for i = 1, #xs do\n    d = d * xs[i] + n\n    n = n * xs[i]\n  end\n  return\
    \ d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbncziske.lua:21:\
    \ expected: {1, 4, 12, 20}\nactual: 274\nstack traceback:\n\t/tmp/tmpbncziske.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs\n  if n == 0\
    \ then\n    return {}\n  end\n  local ds = {}\n  ds[1] = 1\n  for i = 2, n do\n\
    \    ds[i] = ds[i-1] * xs[i-1]\n  end\n  return ds\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppunhg0lf.lua:24:\
    \ expected: {1, 4, 12, 20}\nactual: {1, 3, 3, 6, 24}\nstack traceback:\n\t/tmp/tmppunhg0lf.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local d = 0\n\
    \  for i = 1, #xs do\n    local p = xs[i]\n    local q = xs[n]\n    local r =\
    \ p * q\n    local s = p + q\n    local t = r - s\n    local u = 1 / t\n    d\
    \ = d + u * u\n    n = n + 1\n  end\n  return d\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpan992t81.lua:27:\
    \ expected: {1, 4, 12, 20}\nactual: #Inf\nstack traceback:\n\t/tmp/tmpan992t81.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if xs == nil then\n    return\
    \ nil\n  end\n  local n = #xs\n  if n == 0 then\n    return nil\n  end\n  local\
    \ d\n  if xs[1] == 0 then\n    d = {xs[1]}\n  else\n    d = {}\n  end\n  for i\
    \ = 2, n do\n    local dd = {}\n    for j = 1, i do\n      table.insert(dd, xs[j]\
    \ * d[j])\n    end\n    table.insert(d, dd)\n  end\n  return d\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgnwl7lzh.lua:25:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpgnwl7lzh.lua:25: in local 'candidate'\n\t/tmp/tmpgnwl7lzh.lua:35: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local dxs =\
    \ { xs[1] }\n  for i = 2, #xs do\n    local x = xs[i]\n    local dy = dxs[n]\n\
    \    dy = dy or 1\n    local dy_dx = x * dy\n    dxs[i] = dy_dx\n    n = n + 1\n\
    \  end\n  return dxs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq6mlvz1a.lua:25:\
    \ expected: {1, 4, 12, 20}\nactual: {3, 3, 6, 24, 120}\nstack traceback:\n\t/tmp/tmpq6mlvz1a.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if xs == nil then return nil\
    \ end\n  local n = #xs - 1\n  local result = {}\n  for i = 1, n do\n    local\
    \ x = xs[i]\n    local d = 1\n    for j = 1, n do\n      if j == i then\n    \
    \    continue\n      end\n      d = d * xs[j]\n    end\n    result[#result + 1]\
    \ = d / x\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7kba5_j7.lua:18: syntax error near ''end''

    '
  stdout: ''
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs - 1\n  local\
    \ d = 0\n  for i = 1, n do\n    local x = xs[i]\n    local p = xs[i + 1]\n   \
    \ d = d * x + p\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu7kgpqtd.lua:22:\
    \ expected: {1, 4, 12, 20}\nactual: 45\nstack traceback:\n\t/tmp/tmpu7kgpqtd.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local d = 0\n\
    \  for i = 1, #xs do\n    local x = xs[i]\n    local p = n * x\n    n = n + 2\n\
    \    d = d + p\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4byy_z00.lua:23:\
    \ expected: {1, 4, 12, 20}\nactual: 89\nstack traceback:\n\t/tmp/tmp4byy_z00.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = #xs - 1\n  local\
    \ result = {}\n  for i = 1, n do\n    local x = xs[i]\n    local d = 1\n    for\
    \ j = 1, n do\n      if j == i then\n        continue\n      end\n      d = d\
    \ * xs[j]\n    end\n    result[#result + 1] = d / x\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
    \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp88a1l4zv.lua:17: syntax error near ''end''

    '
  stdout: ''
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local d = 0\n\
    \  for i = 1, #xs do\n    local x = xs[i]\n    local p = n * x\n    n = n - 1\n\
    \    d = d + p\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmcne7bwt.lua:23:\
    \ expected: {1, 4, 12, 20}\nactual: -22\nstack traceback:\n\t/tmp/tmpmcne7bwt.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local n = 1\n  local result\
    \ = {}\n  for i = 1, #xs do\n    local x = xs[i]\n    local d = x\n    for j =\
    \ 1, n do\n      d = d * x\n    end\n    result[#result + 1] = d / n\n    n =\
    \ n + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv7y94bry.lua:26:\
    \ expected: {1, 4, 12, 20}\nactual: {9, 0.5, 5.3333333333333, 256, 3125}\nstack\
    \ traceback:\n\t/tmp/tmpv7y94bry.lua:26: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if #xs == 0 then\n    return\
    \ {}\n  end\n  local n = #xs - 1\n  local d = {}\n  for i = 1, n do\n    local\
    \ x = xs[i]\n    local y = xs[i + 1]\n    d[i] = y * (x - 1)\n  end\n  return\
    \ d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7tlfuc6q.lua:25:\
    \ expected: {1, 4, 12, 20}\nactual: {2, 0, 4, 15}\nstack traceback:\n\t/tmp/tmp7tlfuc6q.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  if xs == nil then return nil\
    \ end\n  if #xs == 0 then return [] end\n  local dp = xs[1]\n  local dd = derivative(xs[2])\n\
    \  local dc = derivative(xs[3])\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = dd[1]\n  local dc = dc[1]\n  local dd = dd[1]\n  local dc = dc[1]\n  local\
    \ dd = \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n\
    \    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpagn9zpis.lua:10: unexpected symbol near ''[''

    '
  stdout: ''
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local d = 0\n  for i = 1, #xs\
    \ do\n    d = d * xs[i]\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = derivative\n    lu.assertEquals(candidate({3,\
    \ 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2,\
    \ 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
    \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprua3ewog.lua:19:\
    \ expected: {1, 4, 12, 20}\nactual: 0\nstack traceback:\n\t/tmp/tmprua3ewog.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local d = 0\n  local n = #xs\n\
    \  for i = 1, n do\n    local p = xs[i]\n    local q = xs[i + 1]\n    d = d *\
    \ p + q\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}),\
    \ {1, 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbus7zs7z.lua:14:\
    \ attempt to perform arithmetic on a nil value (local 'q')\nstack traceback:\n\
    \t/tmp/tmpbus7zs7z.lua:14: in local 'candidate'\n\t/tmp/tmpbus7zs7z.lua:22: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x +\
    \ xs[2] * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n\
    -- >>> derivative([3, 1, 2, 4, 5])\n-- [1, 4, 12, 20]\n-- >>> derivative([1, 2,\
    \ 3])\n-- [2, 6]\nlocal function derivative(xs)\n  local d = 0\n  for i = 1, #xs\
    \ do\n    local x = xs[i]\n    local xp = xs[i + 1]\n    d = d * x + xp\n  end\n\
    \  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = derivative\n    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1,\
    \ 4, 12, 20})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3,\
    \ 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})\n\
    \    lu.assertEquals(candidate({1}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkz1w1c2r.lua:13:\
    \ attempt to perform arithmetic on a nil value (local 'xp')\nstack traceback:\n\
    \t/tmp/tmpkz1w1c2r.lua:13: in local 'candidate'\n\t/tmp/tmpkz1w1c2r.lua:21: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"

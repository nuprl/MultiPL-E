language: lua
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph_ou90ba.lua:24:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmph_ou90ba.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(string.sub(s,i,i)) -- ASCII code\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpagag7pdw.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpagag7pdw.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo02i_y46.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpo02i_y46.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpo02i_y46.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Write your solution here\n  local sum\
    \ = 0\n  for i = 1, #s do\n    sum = sum + string.byte(s,i)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb7g5w4p0.lua:24:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpb7g5w4p0.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Write your code here\n  local sum = 0\n\
    \  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpunk6m4xg.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpunk6m4xg.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpunk6m4xg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk3r0kiwz.lua:20:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpk3r0kiwz.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i)-32)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp4xxdker.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpp4xxdker.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpp4xxdker.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i)-32)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp4xxdker.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpp4xxdker.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpp4xxdker.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Write your solution here\n  local sum\
    \ = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsdnf9cf0.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpsdnf9cf0.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpsdnf9cf0.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo02i_y46.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpo02i_y46.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpo02i_y46.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i)-64)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz_vcs9mz.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpz_vcs9mz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpz_vcs9mz.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i) + string.byte(s,i+1))\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprxpijjek.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmprxpijjek.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmprxpijjek.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i) + string.byte(s,i+1))\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprxpijjek.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmprxpijjek.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmprxpijjek.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo02i_y46.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpo02i_y46.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpo02i_y46.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i)-32)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp4xxdker.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpp4xxdker.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpp4xxdker.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Write your code here\n  local sum = 0\n\
    \  for i = 1, #s do\n    sum = sum + string.char(string.byte(s,i))\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxw1c0gr0.lua:15:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpxw1c0gr0.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpxw1c0gr0.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.byte(s,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvg0t8mnh.lua:23:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvg0t8mnh.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i)-32)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp4xxdker.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpp4xxdker.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpp4xxdker.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk3r0kiwz.lua:20:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpk3r0kiwz.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.char(string.byte(s,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo02i_y46.lua:14:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpo02i_y46.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpo02i_y46.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwn3k0nm.lua:14:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpvwn3k0nm.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpvwn3k0nm.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  -- Your code here\n  local sum = 0\n  for\
    \ i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp606rdepc.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp606rdepc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp606rdepc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794926
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- digitSum(\"\
    \") => 0\n-- digitSum(\"abAB\") => 131\n-- digitSum(\"abcCd\") => 67\n-- digitSum(\"\
    helloE\") => 69\n-- digitSum(\"woArBld\") => 131\n-- digitSum(\"aAaaaXa\") =>\
    \ 153\nlocal function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum\
    \ = sum + string.sub(s,i,i)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppsol75ku.lua:14:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmppsol75ku.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmppsol75ku.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"

language: lua
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjwe_cfv.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphjwe_cfv.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphjwe_cfv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if score ~= 0 and guess ~= 0 then\n      diff = math.abs(score - guess)\n\
    \    end\n    results[i] = diff\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local result =\
    \ 0\n    if score ~= nil and guess ~= nil then\n      result = math.abs(score\
    \ - guess)\n    end\n    results[i] = result\n  end\n  return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  return scores\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == 0\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guess do\n     \
    \   if guesses[i] == scores[i] then\n            correct = correct + 1\n     \
    \   end\n    end\n    local results = {}\n    for i = 1, #guess do\n        results[i]\
    \ = abs(guesses[i] - scores[i])\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprzqihn68.lua:26:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmprzqihn68.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmprzqihn68.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    local score =\
    \ 0\n    local index = 0\n    for i = 1, #game do\n        if game[i] == guess[i]\
    \ then\n            score = score + 1\n        else\n            index = index\
    \ + 1\n            results[index] = score\n            score = 0\n        end\n\
    \    end\n    results[index] = score\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy_71rgti.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {4, 0}\nstack traceback:\n\t/tmp/tmpy_71rgti.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    local scores\
    \ = {}\n    local i = 0\n    local j = 0\n    local k = 0\n    local n = 0\n \
    \   local m = 0\n    local ns = 0\n    local ms = 0\n    local nm = 1\n    local\
    \ mm = 1\n    local nn = 1\n    local nm1 = 1\n    local mm1 = 1\n    local nn1\
    \ = 1\n    local nm2 = 1\n    local mm2 = 1\n    local nn2 = 1\n    local nm3\
    \ = 1\n    local mm3 = 1\n    local nn3 = 1\n    local nm4 = 1\n    local mm4\
    \ = 1\n    local nn4 = 1\n    local nm5 = 1\n    local mm5 = 1\n    local nn5\
    \ = 1\n    local nm6 = 1\n    local mm6 = 1\n    local nn6 = 1\n    local nm7\
    \ = 1\n    local mm7 = 1\n    local nn7 = 1\n    local nm8 = 1\n    local mm8\
    \ = 1\n    local nn8 = 1\n    local nm9 = 1\n    local mm9 = 1\n    local nn9\
    \ = 1\n    local nm10 = 1\n    local mm10 = 1\n    local nn10 = 1\n    local nm11\
    \ = 1\n    local mm11 = 1\n    local nn11 = 1\n    local nm12 = 1\n    local mm12\
    \ = 1\n    local nn12 = 1\n    local nm13 = 1\n    local mm13 = 1\n    local nn13\
    \ = 1\n    local nm14 = 1\n    local mm14 = 1\n    local nn14 = 1\n    local nm15\
    \ = 1\n    local mm15 = 1\n    local nn15 = 1\n    local nm16 = 1\n    local mm16\
    \ = 1\n    local nn16 = 1\n    local nm17 = 1\n    local mm17 = 1\n    local nn17\
    \ = 1\n    local nm18 = 1\n    local mm18 = 1\n    local nn18 = 1\n    local nm19\
    \ = 1\n    local mm19 = 1\n    local nn19 = 1\n    local nm20 = 1\n    local mm20\
    \ = 1\n    local nn20 = 1\n    local nm21 = 1\n    local mm21 = 1\n    local nn21\
    \ = 1\n    local nm22 = 1\n    local mm22 = 1\n    local nn22 = 1\n    local nm23\
    \ = 1\n    local mm23 = 1\n    local nn23 = 1\n    local nm24 = 1\n    local mm24\
    \ = 1\n    local nn24 = 1\n    local nm25 = 1\n    local mm25 = 1\n    local nn25\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpk1ior4ay.lua:109: ''end'' expected (to close ''function''
    at line 11) near <eof>

    '
  stdout: ''
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    local results = {}\n\
    \    for i = 1, #guess do\n        local difference = scores[i] - guess[i]\n \
    \       if difference ~= 0 then\n            results[i] = difference\n       \
    \ else\n            results[i] = 0\n        end\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu47cjuq5.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-1, -2, -3, -4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmpu47cjuq5.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local diff = scores[i] - guess[i]\n        if diff <\
    \ 0 then\n            diff = diff * -1\n        end\n        results[i] = diff\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp93e8pol_.lua:33:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp93e8pol_.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local results = {}\n    for i = 1, #guess do\n    \
    \    local score = 0\n        for j = 1, #scores do\n            if guesses[i]\
    \ == scores[j] then\n                score = score + 1\n            end\n    \
    \    end\n        if score == #scores then\n            results[i] = 0\n     \
    \   else\n            results[i] = abs(guesses[i] - scores[j])\n        end\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy7i0n79.lua:29:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpdy7i0n79.lua:29: in local 'candidate'\n\t/tmp/tmpdy7i0n79.lua:38: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = guess - score\n        if diff > 0 then\n            results[i] = diff\n\
    \        elseif diff < 0 then\n            results[i] = -diff\n        else\n\
    \            results[i] = 0\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    local difference =\
    \ abs(guess[i] - score)\n    if difference > 0 then\n      results[i] = difference\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv_9uqd_u.lua:20:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpv_9uqd_u.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpv_9uqd_u.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4m8rk9cb.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4m8rk9cb.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4m8rk9cb.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = abs(game[i] - guess[i])\n    end\n    return scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpab_hb5ha.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpab_hb5ha.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpab_hb5ha.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        elseif guess == 0 then\n\
    \            results[i] = score\n        else\n            results[i] = abs(score\
    \ - guess)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2my26zki.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp2my26zki.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp2my26zki.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdwamn8gv.lua:32:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 1, 2, 3, 1, 2}\nstack traceback:\n\
    \t/tmp/tmpdwamn8gv.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiz841so4.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpiz841so4.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpiz841so4.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local scores = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guess[i]\n    local diff = abs(guess\
    \ - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n      results[i]\
    \ = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg0h5xyc3.lua:20:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpg0h5xyc3.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpg0h5xyc3.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if diff > results[i]\
    \ then\n            results[i] = diff\n        end\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ektistc.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp1ektistc.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp1ektistc.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score < 0 then\n      score = -score\n    end\n    local\
    \ diff = abs(score - guess[i])\n    if diff ~= 0 then\n      results[i] = diff\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80x8nixx.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80x8nixx.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmp80x8nixx.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local correct = 0\n\
    \  for i = 1, #game do\n    local score = game[i]\n    local guess = guess[i]\n\
    \    local diff = abs(guess - score)\n    if diff == 0 then\n      correct = correct\
    \ + 1\n    else\n      results[i] = diff\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfwbjpq5w.lua:17:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpfwbjpq5w.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpfwbjpq5w.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  local i = 0\n  local j = 0\n  local score = 0\n  local guess = 0\n  local maxScore\
    \ = 0\n  local maxGuess = 0\n  local maxScoreIndex = 0\n  local maxGuessIndex\
    \ = 0\n  local maxScoreDiff = 0\n  local maxGuessDiff = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiff\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzgzh4erg.lua:86: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score < 0 then\n      score = -score\n    end\n    local\
    \ diff = abs(guess[i] - score)\n    if diff > 0 then\n      results[i] = diff\n\
    \    else\n      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptau6bbf8.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmptau6bbf8.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmptau6bbf8.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local score = scores[i]\n        if score > 0 then\n\
    \            results[i] = 0\n        else\n            results[i] = abs(score\
    \ - guess[i])\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk25w9bmt.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpk25w9bmt.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmpk25w9bmt.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9tzl5wg4.lua:40:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 1, 2, 3, 1, 2}\nstack traceback:\n\
    \t/tmp/tmp9tzl5wg4.lua:40: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guess do\n     \
    \   local score = scores[i]\n        local guess = guesses[i]\n        if guess\
    \ == score then\n            correct = correct + 1\n        else\n           \
    \ local diff = abs(guess - score)\n            local max = -1\n            for\
    \ j = 1, #guess do\n                if guess[j] > score then\n               \
    \     max = j\n                end\n            end\n            local maxScore\
    \ = scores[max]\n            if diff > max then\n                diff = diff -\
    \ max\n            else\n                diff = diff - maxScore\n            end\n\
    \            scores[i] = score\n            guesses[i] = guess\n        end\n\
    \    end\n    return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4ir9g17z.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4ir9g17z.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmp4ir9g17z.lua:48: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guesses\
    \ do\n    local score = scores[guesses[i]]\n    if score == 0 then\n      results[i]\
    \ = 0\n    else\n      results[i] = math.abs(score - guesses[i])\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp91qbcw8u.lua:26:\
    \ attempt to perform arithmetic on a nil value (local 'score')\nstack traceback:\n\
    \t/tmp/tmp91qbcw8u.lua:26: in local 'candidate'\n\t/tmp/tmp91qbcw8u.lua:35: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if diff > results[i]\
    \ then\n            results[i] = diff\n        end\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ektistc.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp1ektistc.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp1ektistc.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4m8rk9cb.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4m8rk9cb.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4m8rk9cb.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps5dooput.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmps5dooput.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmps5dooput.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4m8rk9cb.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4m8rk9cb.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4m8rk9cb.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local difference\
    \ = abs(guess - score)\n    if guess == score then\n      results[i] = 0\n   \
    \ else\n      results[i] = difference\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp63xm0_25.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp63xm0_25.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp63xm0_25.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local i = 0\n    local j = 0\n    local k = 0\n    local score = 0\n\
    \    local guess = 0\n    local maxScore = 0\n    local maxGuess = 0\n    local\
    \ maxScoreIndex = 0\n    local maxGuessIndex = 0\n    local maxScoreDiff = 0\n\
    \    local maxGuessDiff = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    while i < #game and j < #guess do\n        if game[i] == guess[j] then\n\
    \            score = score + 1\n            guesses[k] = guess\n            k\
    \ = k + 1\n        else\n            score = score - 1\n            guesses[k]\
    \ = game[i]\n            k = k + 1\n        end\n        i = i + 1\n        j\
    \ = j + 1\n    end\n    if k > 0 then\n        maxScore = score\n        maxGuess\
    \ = guesses[k - 1]\n        maxScoreIndex = i\n        maxGuessIndex = j\n   \
    \     maxScoreDiff = maxScore - score\n        maxGuessDiff = maxGuess - guesses[k\
    \ - 1]\n        maxScoreDiffIndex = i\n        maxGuessDiffIndex = j\n    end\n\
    \    local results = {}\n    for i = 1, k do\n        if maxScoreDiff == 0 then\n\
    \            results[i] = maxScoreIndex\n        else\n            results[i]\
    \ = maxScoreIndex - maxScoreDiffIndex\n        end\n    end\n    for i = 1, k\
    \ do\n        if maxGuessDiff == 0 then\n            results[#results + i] = maxGuessIndex\n\
    \        else\n            results[#results + i] = maxGuessIndex - maxGuessDiffIndex\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2xji29es.lua:27:\
    \ attempt to get length of a number value (local 'guess')\nstack traceback:\n\t\
    /tmp/tmp2xji29es.lua:27: in local 'candidate'\n\t/tmp/tmp2xji29es.lua:71: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score < 0 then\n      score = -score\n    end\n    results[i]\
    \ = score\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfrx54kqg.lua:33:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {2, 4, 6, 8, 7, 1}\nstack traceback:\n\
    \t/tmp/tmpfrx54kqg.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #scores do\n        local diff = scores[i] - scores[i-1]\n        if diff\
    \ < 0 then\n            diff = -diff\n        end\n        results[i] = diff\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp_fvxh50.lua:21:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpp_fvxh50.lua:21: in local 'candidate'\n\t/tmp/tmpp_fvxh50.lua:33: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    local correct = 0\n\
    \    for i = 1, #guess do\n        if scores[i] == 0 then\n            correct\
    \ = correct + 1\n        end\n    end\n    local results = {}\n    for i = 1,\
    \ #guess do\n        results[i] = abs(scores[i] - guess[i])\n    end\n    return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb38sjr6n.lua:24:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpb38sjr6n.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmpb38sjr6n.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    elseif diff\
    \ < 0 then\n      results[i] = -diff\n    else\n      results[i] = 0\n    end\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = abs(guess - score)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqq61wgkm.lua:19:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpqq61wgkm.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpqq61wgkm.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = game[i] - guess[i]\n        if diff > 0 then\n    \
    \        results[i] = diff\n        else\n            results[i] = -diff\n   \
    \     end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local score = 0\n    local guess = 0\n    local i = 0\n    local j\
    \ = 0\n    local k = 0\n    local l = 0\n    local m = 0\n    local n = 0\n  \
    \  local o = 0\n    local p = 0\n    local q = 0\n    local r = 0\n    local s\
    \ = 0\n    local t = 0\n    local u = 0\n    local v = 0\n    local w = 0\n  \
    \  local x = 0\n    local y = 0\n    local z = 0\n    local a = 0\n    local b\
    \ = 0\n    local c = 0\n    local d = 0\n    local e = 0\n    local f = 0\n  \
    \  local g = 0\n    local h = 0\n    local i = 0\n    local j = 0\n    local k\
    \ = 0\n    local l = 0\n    local m = 0\n    local n = 0\n    local o = 0\n  \
    \  local p = 0\n    local q = 0\n    local r = 0\n    local s = 0\n    local t\
    \ = 0\n    local u = 0\n    local v = 0\n    local w = 0\n    local x = 0\n  \
    \  local y = 0\n    local z = 0\n    local a = 0\n    local b = 0\n    local c\
    \ = 0\n    local d = 0\n    local e = 0\n    local f = 0\n    local g = 0\n  \
    \  local h = 0\n    local i = 0\n    local j = 0\n    local k = 0\n    local l\
    \ = 0\n    local m = 0\n    local n = 0\n    local o = 0\n    local p = 0\n  \
    \  local q = 0\n    local r = 0\n    local s = 0\n    local t = 0\n    local u\
    \ = 0\n    local v = 0\n    local w = 0\n    local x = 0\n    local y = 0\n  \
    \  local z = 0\n    local a = 0\n    local b = 0\n    local c = 0\n    local d\
    \ = 0\n    local e = 0\n    local f = 0\n    local g = 0\n    local h = 0\n  \
    \  local i = 0\n    local j = 0\n    local k = 0\n    local l = 0\n    local m\
    \ = 0\n    local n = 0\n    local o = 0\n    local p = 0\n    local q = 0\n  \
    \  local r = 0\n    local s = 0\n    local t = 0\n    local u = 0\n    local v\
    \ = 0\n    local w = 0\n    local x = 0\n    local y = 0\n    local z = 0\n  \
    \  local a = 0\n    local b = 0\n    local c = 0\n    local d = 0\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjxl56_wn.lua:126: ''end'' expected (to close ''function''
    at line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local scores = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n\
    \    local diff = abs(guess[i] - scores[i])\n    if guess[i] == scores[i] then\n\
    \      results[i] = 0\n    else\n      results[i] = diff\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rstnp3e.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp0rstnp3e.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp0rstnp3e.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local diff = guess\
    \ - score\n    if diff > 0 then\n      results[i] = diff\n    else\n      results[i]\
    \ = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = math.abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps5dooput.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmps5dooput.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmps5dooput.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  local correct = 0\n\
    \  local score = 0\n  for i = 1, #game do\n    local score = game[i]\n    if guess[i]\
    \ == score then\n      correct = correct + 1\n    end\n    scores[i] = score\n\
    \  end\n  local results = {}\n  for i = 1, #guess do\n    local score = scores[i]\n\
    \    if guess[i] == score then\n      results[i] = 0\n    else\n      results[i]\
    \ = abs(guess[i] - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpswfieokj.lua:28:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpswfieokj.lua:28:\
    \ in local 'candidate'\n\t/tmp/tmpswfieokj.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdlpcw7r_.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpdlpcw7r_.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpdlpcw7r_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4m8rk9cb.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4m8rk9cb.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4m8rk9cb.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4m8rk9cb.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp4m8rk9cb.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4m8rk9cb.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local diff = abs(game[i] - guess[i])\n    if game[i] == guess[i] then\n\
    \      results[i] = 0\n    else\n      results[i] = diff\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9pvyxfff.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp9pvyxfff.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp9pvyxfff.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    local results = {}\n\
    \    for i = 1, #guess do\n        local diff = scores[i] - guess[i]\n       \
    \ if diff > 0 then\n            results[i] = diff\n        else\n            results[i]\
    \ = -diff\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7p7z8cmw.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmp7p7z8cmw.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score > 0 then\n      results[i] = score\n    else\n   \
    \   results[i] = abs(score - guess[i])\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptxf3bhlv.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmptxf3bhlv.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmptxf3bhlv.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local i = 0\n  local\
    \ j = 0\n  local score = 0\n  local maxScore = 0\n  local maxGuess = 0\n  local\
    \ maxScoreIndex = 0\n  local maxGuessIndex = 0\n  local maxScoreDiff = 0\n  local\
    \ maxGuessDiff = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex =\
    \ 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex\
    \ = 0\n  local maxScoreDiffIndex = 0\n  local maxGuessDiffIndex = 0\n  local maxScoreDiffIndex\
    \ = 0\n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0got_cik.lua:86: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if score ~= 0 then\n      diff = math.abs(guess - score)\n    end\n \
    \   results[i] = diff\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local diff = scores[i] - guess[i]\n        if diff >\
    \ 0 then\n            results[i] = diff\n        else\n            results[i]\
    \ = -diff\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5zbktvl.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp_5zbktvl.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjwe_cfv.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphjwe_cfv.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphjwe_cfv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = 0\n        for j = 1, #game do\n            if game[j]\
    \ == guess[i] then\n                score = score + 1\n            end\n     \
    \   end\n        results[i] = score\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvgm4r4r7.lua:28:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {2, 1, 1, 1, 1, 0}\nstack traceback:\n\
    \t/tmp/tmpvgm4r4r7.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #scores do\n        local diff = scores[i] - scores[i-1]\n        if diff\
    \ ~= 0 then\n            results[i] = diff\n        else\n            results[i]\
    \ = 0\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6hx8kzga.lua:21:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmp6hx8kzga.lua:21: in local 'candidate'\n\t/tmp/tmp6hx8kzga.lua:34: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = abs(game[i] - guess[i])\n    end\n    return scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpab_hb5ha.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpab_hb5ha.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpab_hb5ha.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = guess - score\n        if diff > 0 then\n            results[i] = diff\n\
    \        elseif diff < 0 then\n            results[i] = -diff\n        else\n\
    \            results[i] = 0\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff\n        if score == guess then\n            diff = 0\n        else\n \
    \           diff = math.abs(score - guess)\n        end\n        results[i] =\
    \ diff\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = abs(game[i] - guess[i])\n    end\n    return scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpab_hb5ha.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpab_hb5ha.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpab_hb5ha.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      table.insert(results, diff)\n   \
    \ else\n      table.insert(results, -diff)\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local result =\
    \ math.abs(guess - score)\n    if result == 0 then\n      results[i] = 0\n   \
    \ else\n      results[i] = result\n    end\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9tzl5wg4.lua:40:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 1, 2, 3, 1, 2}\nstack traceback:\n\
    \t/tmp/tmp9tzl5wg4.lua:40: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = 0\n        if score ~= guess then\n            diff = abs(score - guess)\n\
    \        end\n        results[i] = diff\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptcgqw65k.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmptcgqw65k.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmptcgqw65k.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local diff = abs(game[i] - guess[i])\n    if diff == 0 then\n      results[i]\
    \ = 0\n    else\n      results[i] = diff\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpti57rs51.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpti57rs51.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpti57rs51.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9tzl5wg4.lua:40:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 1, 2, 3, 1, 2}\nstack traceback:\n\
    \t/tmp/tmp9tzl5wg4.lua:40: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local i = 0\n    local j = 0\n    local k = 0\n    local score = 0\n\
    \    local guess = 0\n    local diff = 0\n    local max = 0\n    local min = 0\n\
    \    local maxScore = 0\n    local minScore = 0\n    local maxGuess = 0\n    local\
    \ minGuess = 0\n    local maxDiff = 0\n    local minDiff = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\
    \ = 0\n    local maxDiffIndex = 0\n    local minDiffIndex = 0\n    local maxScoreIndex\
    \ = 0\n    local minScoreIndex = 0\n    local maxGuessIndex = 0\n    local minGuessIndex\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsj7e7w5w.lua:96: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    local index =\
    \ 1\n    for i = 1, #game do\n        local score = game[i]\n        local guess\
    \ = guess[i]\n        if score == 0 then\n            results[index] = 0\n   \
    \     else\n            results[index] = math.abs(guess - score)\n        end\n\
    \        index = index + 1\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    local i = 0\n\
    \    for _, score in ipairs(game) do\n        local guess = guess[i]\n       \
    \ if score == guess then\n            results[i] = 0\n        else\n         \
    \   results[i] = math.abs(score - guess)\n        end\n        i = i + 1\n   \
    \ end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe0hdd7ap.lua:19:\
    \ attempt to perform arithmetic on a nil value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpe0hdd7ap.lua:19: in local 'candidate'\n\t/tmp/tmpe0hdd7ap.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guess do\n     \
    \   if guesses[i] == scores[i] then\n            correct = correct + 1\n     \
    \   end\n    end\n    local diffs = {}\n    for i = 1, #guess do\n        diffs[i]\
    \ = abs(guesses[i] - scores[i])\n    end\n    return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp45_nu8ei.lua:26:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp45_nu8ei.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmp45_nu8ei.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local index = 1\n\
    \  local score = 0\n  local diff = 0\n  local maxScore = game[#game]\n  local\
    \ maxGuess = guess[#guess]\n  local maxDiff = maxScore - maxGuess\n  local maxIndex\
    \ = 0\n  local maxScoreIndex = 0\n  for i = 1, #game do\n    if game[i] == maxScore\
    \ then\n      index = i\n      score = game[i]\n      diff = maxScore - score\n\
    \      break\n    end\n  end\n  for i = 1, #guess do\n    if guess[i] == maxGuess\
    \ then\n      index = i\n      score = guess[i]\n      diff = maxGuess - score\n\
    \      break\n    end\n  end\n  if index == #game then\n    results[#results+1]\
    \ = 0\n  elseif index == #guess then\n    results[#results+1] = diff\n  else\n\
    \    results[#results+1] = diff / maxDiff\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6rghc9e6.lua:50:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0}\nstack traceback:\n\t/tmp/tmp6rghc9e6.lua:50:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i] - guess[i]\n  end\n  local results = {}\n  for i = 1,\
    \ #guess do\n    local diff = scores[i] - guess[i]\n    if diff ~= 0 then\n  \
    \    results[i] = diff\n    else\n      results[i] = 0\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpog9lkn55.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-1, -2, -3, -4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmpog9lkn55.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    local scores\
    \ = {}\n    local i = 0\n    local j = 0\n    local k = 0\n    local n = 0\n \
    \   local m = 0\n    local l = 0\n    local ns = #game\n    local gs = #guess\n\
    \    while i < ns and j < gs do\n        if game[i] == guess[j] then\n       \
    \     scores[i] = scores[i] + 1\n            j = j + 1\n        else\n       \
    \     scores[i] = scores[i]\n            scores[j] = scores[j] - abs(game[i] -\
    \ guess[j])\n            i = i + 1\n            j = j + 1\n        end\n    end\n\
    \    while i < ns do\n        scores[i] = scores[i]\n        i = i + 1\n    end\n\
    \    while j < gs do\n        scores[j] = scores[j] - abs(game[j] - guess[k])\n\
    \        j = j + 1\n        k = k + 1\n    end\n    for i = 1, #scores do\n  \
    \      if scores[i] > 0 then\n            results[i] = scores[i]\n        else\n\
    \            results[i] = abs(scores[i] - scores[i + 1])\n        end\n    end\n\
    \    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80y5ot5x.lua:24:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmp80y5ot5x.lua:24: in local 'candidate'\n\t/tmp/tmp80y5ot5x.lua:55: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i] = guess[i]\n \
    \ end\n  local results = {}\n  for i = 1, #guess do\n    local score = 0\n   \
    \ for j = 1, #scores do\n      if guesses[j] == scores[j] then\n        score\
    \ = score + 1\n      end\n    end\n    if score == #scores then\n      results[i]\
    \ = 0\n    else\n      results[i] = abs(guesses[i] - scores[i])\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpygc8ulj2.lua:29:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpygc8ulj2.lua:29:\
    \ in local 'candidate'\n\t/tmp/tmpygc8ulj2.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = game[i] - guess[i]\n        if diff > 0 then\n    \
    \        results[i] = diff\n        else\n            results[i] = -diff\n   \
    \     end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i] = guess[i]\n \
    \ end\n  local correct = 0\n  for i = 1, #guess do\n    if guesses[i] == scores[i]\
    \ then\n      correct = correct + 1\n    end\n  end\n  local results = {}\n  for\
    \ i = 1, #guess do\n    results[i] = abs(guesses[i] - scores[i])\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcl42h23n.lua:26:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpcl42h23n.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmpcl42h23n.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_f3fr1qo.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_f3fr1qo.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_f3fr1qo.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    local results = {}\n\
    \    for i = 1, #guess do\n        local diff = scores[i] - guess[i]\n       \
    \ if diff > 0 then\n            results[i] = diff\n        else\n            results[i]\
    \ = -diff\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7p7z8cmw.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmp7p7z8cmw.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local correct = 0\n\
    \  for i = 1, #game do\n    local score = game[i]\n    local guess = guess[i]\n\
    \    if score == guess then\n      correct = correct + 1\n    else\n      local\
    \ diff = abs(score - guess)\n      results[i] = diff\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvqjv812b.lua:20:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpvqjv812b.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpvqjv812b.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local diffs = {}\n    local i = 0\n    local j = 0\n    local k =\
    \ 0\n    local score = 0\n    local guess = 0\n    local diff = 0\n    local gameLen\
    \ = #game\n    local guessLen = #guess\n    local diffLen = #diffs\n    local\
    \ gameScore = 0\n    local guessScore = 0\n    local diffScore = 0\n    local\
    \ gameGuess = 0\n    local guessGuess = 0\n    local diffGuess = 0\n    local\
    \ gameDiff = 0\n    local guessDiff = 0\n    local diffDiff = 0\n    local gameScoreDiff\
    \ = 0\n    local guessScoreDiff = 0\n    local diffScoreDiff = 0\n    local gameGuessDiff\
    \ = 0\n    local guessGuessDiff = 0\n    local diffGuessDiff = 0\n    local gameDiffDiff\
    \ = 0\n    local guessDiffDiff = 0\n    local diffDiffDiff = 0\n    local gameScoreDiffDiff\
    \ = 0\n    local guessScoreDiffDiff = 0\n    local diffScoreDiffDiff = 0\n   \
    \ local gameGuessDiffDiff = 0\n    local guessGuessDiffDiff = 0\n    local diffGuessDiffDiff\
    \ = 0\n    local gameDiffDiffDiff = 0\n    local guessDiffDiffDiff = 0\n    local\
    \ diffDiffDiff = 0\n    local gameScoreDiffDiffDiff = 0\n    local guessScoreDiffDiffDiff\
    \ = 0\n    local diffScoreDiffDiff = 0\n    local gameGuessDiffDiff = 0\n    local\
    \ guessGuessDiffDiff = 0\n    local diffGuessDiffDiff = 0\n    local gameDiffDiffDiff\
    \ = 0\n    local guessDiffDiffDiff = 0\n    local diffDiffDiff = 0\n    local\
    \ gameScoreDiffDiffDiff = 0\n    local guessScoreDiffDiffDiff = 0\n    local diffScoreDiffDiff\
    \ = 0\n    local gameGuessDiffDiffDiff = 0\n    local guessGuessDiffDiff = 0\n\
    \    local diffGuessDiffDiff = 0\n    local gameDiffDiffDiff = 0\n    local guessDiffDiffDiff\
    \ = 0\n    local diffDiffDiff = 0\n    local gameScoreDiffDiffDiff = 0\n    local\
    \ guessScoreDiffDiffDiff = 0\n    local diffScoreDiffDiff = 0\n    local gameGuessDiffDiff\
    \ = 0\n    local guessGuessDiffDiff = 0\n    local diffGuessDiffDiff = 0\n   \
    \ local gameDiffDiffDiff = 0\n    local guessDiffDiffDiff = 0\n    local diffDiffDiff\
    \ = 0\n    local gameScoreDiffDiffDiff = 0\n    local guessScoreDiffDiffDiff\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppzkv2fr1.lua:90: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = math.abs(score - guess[i])\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuyip30am.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpuyip30am.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if guess == score then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzoazaa9.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpyzoazaa9.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpyzoazaa9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = math.abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] - guess[i]\n    end\n    return scores\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guess do\n     \
    \   if guesses[i] == scores[i] then\n            correct = correct + 1\n     \
    \   end\n    end\n    local diffs = {}\n    for i = 1, #guess do\n        diffs[i]\
    \ = abs(guesses[i] - scores[i])\n    end\n    return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp45_nu8ei.lua:26:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp45_nu8ei.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmp45_nu8ei.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local diff = guess\
    \ - score\n    if diff > 0 then\n      results[i] = diff\n    else\n      results[i]\
    \ = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local diff = abs(guess[i] - game[i])\n    if game[i] == guess[i] then\n\
    \      results[i] = 0\n    else\n      results[i] = diff\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmirwpd7a.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpmirwpd7a.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpmirwpd7a.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z2cmk5x.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_z2cmk5x.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_z2cmk5x.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #scores do\n    local\
    \ difference = scores[i] - guess[i]\n    if difference ~= 0 then\n      results[i]\
    \ = difference\n    else\n      results[i] = 0\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxgkhv_iw.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpxgkhv_iw.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = abs(guess - score)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoog_xk3i.lua:19:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoog_xk3i.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpoog_xk3i.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    results[i]\
    \ = abs(scores[i] - guess[i])\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsysh7oia.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpsysh7oia.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpsysh7oia.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = math.abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjwe_cfv.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphjwe_cfv.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphjwe_cfv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = math.abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local diff = {}\n    for i =\
    \ 1, #scores do\n        diff[i] = abs(scores[i] - guess[i])\n    end\n    return\
    \ diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkzfe6fgg.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpkzfe6fgg.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpkzfe6fgg.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if guess == score then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzoazaa9.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpyzoazaa9.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpyzoazaa9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if diff == 0 then\n\
    \            results[i] = 0\n        else\n            results[i] = diff\n   \
    \     end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmputyzo4c8.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmputyzo4c8.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmputyzo4c8.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i] - guess[i]\n  end\n  local correct = 0\n  for i = 1,\
    \ #guess do\n    if scores[i] == 0 then\n      correct = correct + 1\n    end\n\
    \  end\n  local results = {}\n  for i = 1, #guess do\n    results[i] = scores[i]\
    \ - guess[i]\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyd8hbon.lua:32:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-1, -2, -3, -4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmpfyd8hbon.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = abs(guess[i] - score)\n   \
    \ end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47jx9fde.lua:31:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp47jx9fde.lua:31:\
    \ in local 'candidate'\n\t/tmp/tmp47jx9fde.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i] - guess[i]\n  end\n  local correct = 0\n  for i = 1,\
    \ #guess do\n    if scores[i] == 0 then\n      correct = correct + 1\n    end\n\
    \  end\n  local diff = {}\n  for i = 1, #guess do\n    diff[i] = abs(scores[i]\
    \ - guess[i])\n  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpti_maq5y.lua:24:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpti_maq5y.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmpti_maq5y.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = abs(guess[i] - score)\n   \
    \ end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47jx9fde.lua:31:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp47jx9fde.lua:31:\
    \ in local 'candidate'\n\t/tmp/tmp47jx9fde.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = game[i] - guess[i]\n        if diff > 0 then\n    \
    \        results[i] = diff\n        else\n            results[i] = -diff\n   \
    \     end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = abs(game[i] - guess[i])\n    end\n    return scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpab_hb5ha.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpab_hb5ha.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpab_hb5ha.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjwe_cfv.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphjwe_cfv.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphjwe_cfv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if score ~= nil then\n      diff = math.abs(score - guess)\n    end\n\
    \    results[i] = diff\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #scores do\n        local diff = scores[i] - scores[i]\n        if diff\
    \ > 0 then\n            results[i] = diff\n        else\n            results[i]\
    \ = -diff\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4gozj90o.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, 0, 0}\nstack traceback:\n\
    \t/tmp/tmp4gozj90o.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guesses do\n   \
    \     if guesses[i] == scores[i] then\n            correct = correct + 1\n   \
    \     end\n    end\n    local results = {}\n    for i = 1, #guesses do\n     \
    \   results[i] = abs(guesses[i] - scores[i])\n    end\n    return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5kufd77j.lua:26:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp5kufd77j.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmp5kufd77j.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeobqoblc.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpeobqoblc.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpeobqoblc.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local score = 0\n\
    \  for i = 1, #game do\n    local diff = abs(game[i] - guess[i])\n    if diff\
    \ > score then\n      score = diff\n    end\n    results[i] = diff\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl1tek6gd.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpl1tek6gd.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpl1tek6gd.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z2cmk5x.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_z2cmk5x.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_z2cmk5x.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    local correct = {}\n\
    \    for i = 1, #guess do\n        if scores[i] == 0 then\n            correct[i]\
    \ = 0\n        else\n            correct[i] = abs(scores[i] - guess[i])\n    \
    \    end\n    end\n    return correct\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzb91qrfz.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpzb91qrfz.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpzb91qrfz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local diff = {}\n    for i =\
    \ 1, #scores do\n        diff[i] = scores[i] - guess[i]\n    end\n    return diff\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz77o4fu2.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpz77o4fu2.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if score ~= 0 then\n      diff = math.abs(score - guess)\n    end\n \
    \   results[i] = diff\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local difference = scores[i] - guess[i]\n        if\
    \ difference ~= 0 then\n            results[i] = difference\n        else\n  \
    \          results[i] = 0\n        end\n    end\n    return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpey5fr8pj.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpey5fr8pj.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local diff = abs(game[i] - guess[i])\n    if game[i] == guess[i] then\n\
    \      results[i] = 0\n    else\n      results[i] = diff\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9pvyxfff.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp9pvyxfff.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp9pvyxfff.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z2cmk5x.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_z2cmk5x.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_z2cmk5x.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z2cmk5x.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_z2cmk5x.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_z2cmk5x.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = 0\n        if score ~= 0 then\n            diff = math.abs(score - guess)\n\
    \        end\n        results[i] = diff\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local i = 0\n    local j = 0\n    local k = 0\n    local score = 0\n\
    \    local guess = 0\n    local maxScore = 0\n    local maxGuess = 0\n    local\
    \ maxScoreIndex = 0\n    local maxGuessIndex = 0\n    local maxScoreDiff = 0\n\
    \    local maxGuessDiff = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local\
    \ maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex\
    \ = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local\
    \ maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local\
    \ maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex\
    \ = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local\
    \ maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local\
    \ maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex\
    \ = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local\
    \ maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local\
    \ maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex\
    \ = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local\
    \ maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex\
    \ = 0\n    local maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local\
    \ maxScoreDiffIndex = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex\
    \ = 0\n    local maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    local\
    \ maxGuessDiffIndex = 0\n    local maxScoreDiffIndex = 0\n    \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4v5pttq2.lua:87: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local i = 0\n  local\
    \ j = 0\n  local score = 0\n  local diff = 0\n  local maxScore = game[1]\n  local\
    \ maxGuess = guess[1]\n  local maxDiff = 0\n  local maxScoreIndex = 1\n  local\
    \ maxGuessIndex = 1\n  local maxDiffIndex = 1\n  local maxScoreIndex2 = 1\n  local\
    \ maxGuessIndex2 = 1\n  local maxDiffIndex2 = 1\n  local maxScoreIndex3 = 1\n\
    \  local maxGuessIndex3 = 1\n  local maxDiffIndex3 = 1\n  local maxScoreIndex4\
    \ = 1\n  local maxGuessIndex4 = 1\n  local maxDiffIndex4 = 1\n  local maxScoreIndex5\
    \ = 1\n  local maxGuessIndex5 = 1\n  local maxDiffIndex5 = 1\n  local maxScoreIndex6\
    \ = 1\n  local maxGuessIndex6 = 1\n  local maxDiffIndex6 = 1\n  local maxScoreIndex7\
    \ = 1\n  local maxGuessIndex7 = 1\n  local maxDiffIndex7 = 1\n  local maxScoreIndex8\
    \ = 1\n  local maxGuessIndex8 = 1\n  local maxDiffIndex8 = 1\n  local maxScoreIndex9\
    \ = 1\n  local maxGuessIndex9 = 1\n  local maxDiffIndex9 = 1\n  local maxScoreIndex10\
    \ = 1\n  local maxGuessIndex10 = 1\n  local maxDiffIndex10 = 1\n  local maxScoreIndex11\
    \ = 1\n  local maxGuessIndex11 = 1\n  local maxDiffIndex11 = 1\n  local maxScoreIndex12\
    \ = 1\n  local maxGuessIndex12 = 1\n  local maxDiffIndex12 = 1\n  local maxScoreIndex13\
    \ = 1\n  local maxGuessIndex13 = 1\n  local maxDiffIndex13 = 1\n  local maxScoreIndex14\
    \ = 1\n  local maxGuessIndex14 = 1\n  local maxDiffIndex14 = 1\n  local maxScoreIndex15\
    \ = 1\n  local maxGuessIndex15 = 1\n  local maxDiffIndex15 = 1\n  local maxScoreIndex16\
    \ = 1\n  local maxGuessIndex16 = 1\n  local maxDiffIndex16 = 1\n  local maxScoreIndex17\
    \ = 1\n  local maxGuessIndex17 = 1\n  local maxDiffIndex17 = 1\n  local maxScoreIndex18\
    \ = 1\n  local maxGuessIndex18 = 1\n  local maxDiffIndex18 = 1\n  local maxScoreIndex19\
    \ = 1\n  local maxGuessIndex19 = 1\n  \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpexuydzl5.lua:87: ''end'' expected (to close ''function'' at
    line 11) near <eof>

    '
  stdout: ''
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ math.abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n   \
    \ else\n      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local i = 0\n    local j = 0\n    local score = 0\n    local guess\
    \ = 0\n    local diff = 0\n    local maxScore = #game\n    local maxGuess = #guess\n\
    \    local maxDiff = #game\n    for i = 1, maxScore do\n        score = game[i]\n\
    \        guess = guess[i]\n        if score == 0 then\n            diff = guess\n\
    \        else\n            diff = abs(score - guess)\n        end\n        scores[i]\
    \ = score\n        guesses[i] = guess\n        if diff > maxDiff then\n      \
    \      maxDiff = diff\n        end\n    end\n    for i = 1, maxGuess do\n    \
    \    guess = guesses[i]\n        if guess == 0 then\n            diff = guess\n\
    \        else\n            diff = abs(guess - score)\n        end\n        scores[i]\
    \ = score\n        guesses[i] = guess\n        if diff > maxDiff then\n      \
    \      maxDiff = diff\n        end\n    end\n    return scores\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpazago8si.lua:20:\
    \ attempt to get length of a number value (local 'guess')\nstack traceback:\n\t\
    /tmp/tmpazago8si.lua:20: in local 'candidate'\n\t/tmp/tmpazago8si.lua:55: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiz841so4.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpiz841so4.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpiz841so4.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    local correct = 0\n    for i = 1, #game do\n        scores[i] = game[i]\n\
    \        guesses[i] = guess[i]\n    end\n    for i = 1, #guess do\n        local\
    \ score = scores[i]\n        local guess = guesses[i]\n        if guess == score\
    \ then\n            correct = correct + 1\n        else\n            local diff\
    \ = abs(guess - score)\n            if diff > 0 then\n                correct\
    \ = correct + 1\n            end\n        end\n    end\n    return correct, scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfspv41wp.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpfspv41wp.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmpfspv41wp.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = 0\n        if score ~= 0 then\n            diff = math.abs(score - guess)\n\
    \        end\n        results[i] = diff\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = math.abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp80hsffid.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp80hsffid.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp80hsffid.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i] - guess[i]\n    end\n    return scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  local i = 0\n  local\
    \ j = 0\n  while i < #game and j < #guess do\n    if game[i] == guess[j] then\n\
    \      results[i] = 0\n      j = j + 1\n    else\n      results[i] = abs(game[i]\
    \ - guess[j])\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxxu_1qmn.lua:20:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpxxu_1qmn.lua:20: in local 'candidate'\n\t/tmp/tmpxxu_1qmn.lua:31: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i] - guess[i]\n  end\n  local correct = {}\n  for i = 1,\
    \ #guess do\n    correct[i] = abs(scores[i] - guess[i])\n  end\n  return correct\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz4o30l4a.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpz4o30l4a.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpz4o30l4a.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        elseif guess == 0 then\n\
    \            results[i] = score\n        else\n            results[i] = abs(score\
    \ - guess)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2my26zki.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp2my26zki.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp2my26zki.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdwamn8gv.lua:32:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 1, 2, 3, 1, 2}\nstack traceback:\n\
    \t/tmp/tmpdwamn8gv.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] - guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #scores do\n        if scores[i] == 0 then\n            results[i] = 0\n\
    \        else\n            results[i] = abs(scores[i] - guess[i])\n        end\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbuxmfcxs.lua:24:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpbuxmfcxs.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmpbuxmfcxs.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if guess == score then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp45pzmzxf.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp45pzmzxf.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp45pzmzxf.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjwe_cfv.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphjwe_cfv.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphjwe_cfv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = abs(guess[i] - score)\n   \
    \ end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47jx9fde.lua:31:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp47jx9fde.lua:31:\
    \ in local 'candidate'\n\t/tmp/tmp47jx9fde.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local difference\
    \ = abs(guess - score)\n    if difference > 0 then\n      results[i] = difference\n\
    \    else\n      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphb5utmzt.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphb5utmzt.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphb5utmzt.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    local correct\
    \ = 0\n    for i = 1, #game do\n        local score = game[i]\n        if guess[i]\
    \ == score then\n            correct = correct + 1\n        else\n           \
    \ scores[i] = abs(guess[i] - score)\n        end\n    end\n    return scores\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj_kl65l7.lua:19:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpj_kl65l7.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpj_kl65l7.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = abs(game[i] - guess[i])\n        if game[i] == guess[i]\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp44pjntsz.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp44pjntsz.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp44pjntsz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if guess == score then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzoazaa9.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpyzoazaa9.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpyzoazaa9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local score = scores[i]\n        if score == 0 then\n\
    \            results[i] = 0\n        else\n            results[i] = abs(score\
    \ - guess[i])\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5mt5hqnd.lua:25:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp5mt5hqnd.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmp5mt5hqnd.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoyhwiny0.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpoyhwiny0.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoyhwiny0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff == 0 then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z2cmk5x.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp_z2cmk5x.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp_z2cmk5x.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score > 0 then\n      local diff = abs(score - guess[i])\n\
    \      results[i] = diff\n    else\n      results[i] = 0\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5coembkx.lua:23:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp5coembkx.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmp5coembkx.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797356
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659797356

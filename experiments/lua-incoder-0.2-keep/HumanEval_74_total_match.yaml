name: HumanEval_74_total_match
language: lua
prompt: "-- Write a function that accepts two lists of strings and returns the list\
  \ that has \n-- total number of chars in the all strings of the list less than the\
  \ other list.\n-- if the two lists have the same number of chars, return the first\
  \ list.\n-- Examples\n-- total_match([], []) \u279E []\n-- total_match(['hi', 'admin'],\
  \ ['hI', 'Hi']) \u279E ['hI', 'Hi']\n-- total_match(['hi', 'admin'], ['hi', 'hi',\
  \ 'admin', 'project']) \u279E ['hi', 'admin']\n-- total_match(['hi', 'admin'], ['hI',\
  \ 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n-- total_match(['4'], ['1', '2', '3',\
  \ '4', '5']) \u279E ['4']\nlocal function total_match(lst1, lst2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n\
  \    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi',\
  \ 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'},\
  \ {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI',\
  \ 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}),\
  \ {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2\
    \ then\n        return lst1\n    end\n    local lst3 = {}\n    for i = 1, len1\
    \ do\n        local j = 1\n        while j < len2 do\n            if lst1[i] >\
    \ lst2[j] then\n                lst3[#lst3 + 1] = lst1[i]\n                i =\
    \ i + 1\n                break\n            else\n                j = j + 1\n\
    \            end\n        end\n    end\n    return lst3\nend", "    local len1\
    \ = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i = 1, len1 do\n\
    \        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len = len\
    \ + lst2[i]\n    end\n    if len == len1 then\n        return lst1\n    elseif\
    \ len == len2 then\n        return lst2\n    else\n        return lst1\n    end\n\
    end", "  local total_len = 0\n  for _, v in ipairs(lst1) do\n    total_len = total_len\
    \ + #v\n  end\n  for _, v in ipairs(lst2) do\n    total_len = total_len + #v\n\
    \  end\n  if total_len == 0 then\n    return lst1\n  else\n    return lst2\n \
    \ end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local count\
    \ = 0\n    for i = 1, len1 do\n        if lst1[i] ~= lst2[i] then\n          \
    \  count = count + 1\n        end\n    end\n    if len1 == len2 then\n       \
    \ return lst1\n    end\n    return lst1\nend", "    local count = 0\n    for _,\
    \ v in pairs(lst1) do\n        if v ~= lst2[1] then\n            count = count\
    \ + 1\n        end\n    end\n    return lst1[1] if count == lst1[1] else lst1\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    local total = 0\n \
    \   for i = 1, len1 do\n        total = total + lst1[i]\n    end\n    for i =\
    \ 1, len2 do\n        total = total + lst2[i]\n    end\n    if len1 == len2 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i = 1, len1\
    \ do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len\
    \ = len + lst2[i]\n    end\n    if len == len1 then\n        return lst1\n   \
    \ elseif len == len2 then\n        return lst2\n    else\n        return lst1\n\
    \    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2\
    \ then\n    return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local count = 0\n    for i = 1, len1 do\n        count = count + #lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        count = count + #lst2[i]\n    end\n\
    \    if len1 == len2 then\n        return lst1\n    elseif len1 > len2 then\n\
    \        local temp = lst1\n        lst1 = lst2\n        lst2 = temp\n    end\n\
    \    local temp = {}\n    for i = 1, len1 do\n        table.insert(temp, lst1[i])\n\
    \    end\n    for i = 1, len2 do\n        table.insert(temp, lst2[i])\n    end\n\
    \    return temp\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1\
    \ == len2 then\n    return lst1\n  elseif len1 < len2 then\n    return lst2\n\
    \  else\n    local i = 1\n    local j = 1\n    local total = 0\n    while i <\
    \ len1 and j < len2 do\n      if lst1[i] < lst2[j] then\n        total = total\
    \ + 1\n        i = i + 1\n      else\n        total = total + 1\n        j = j\
    \ + 1\n      end\n    end\n    if i == len1 then\n      return lst2\n    elseif\
    \ j == len2 then\n      return lst1\n    else\n      return lst1\n    end\n  end\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  local count = 0\n  for i\
    \ = 1, len1 do\n    count = count + #lst1[i]\n  end\n  for i = 1, len2 do\n  \
    \  count = count + #lst2[i]\n  end\n  if len1 == len2 then\n    return lst1\n\
    \  else\n    return lst1\n  end\nend", "    local len1 = #lst1\n    local len2\
    \ = #lst2\n    local len = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n    end\n    if\
    \ len == len1 then\n        return lst1\n    elseif len == len2 then\n       \
    \ return lst2\n    else\n        return lst1\n    end\nend", "    local len1 =\
    \ #lst1\n    local len2 = #lst2\n    local len1 = 0\n    local len2 = 0\n    local\
    \ i = 0\n    local j = 0\n    local total = 0\n    while i < len1 and j < len2\
    \ do\n        if lst1[i] < lst2[j] then\n            total = total + 1\n     \
    \       i = i + 1\n        else\n            total = total + 1\n            j\
    \ = j + 1\n        end\n    end\n    if i == len1 then\n        return lst1\n\
    \    elseif j == len2 then\n        return lst2\n    else\n        return lst1\n\
    \    end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local len\
    \ = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n    end\n    for i\
    \ = 1, len2 do\n        len = len + lst2[i]\n    end\n    if len == len1 then\n\
    \        return lst1\n    elseif len == len2 then\n        return lst2\n    else\n\
    \        return nil\n    end\nend", "    local len1 = #lst1\n    local len2 =\
    \ #lst2\n    local len3 = len1 + len2\n    local lst3 = {}\n    for i = 1, len3\
    \ do\n        lst3[i] = 0\n    end\n    for i = 1, len1 do\n        lst3[lst1[i]]\
    \ = lst3[lst1[i]] + 1\n    end\n    for i = 1, len2 do\n        lst3[lst2[i]]\
    \ = lst3[lst2[i]] + 1\n    end\n    for i = 1, len3 do\n        if lst3[i] < len2\
    \ then\n            return lst1\n        end\n    end\n    return lst2\nend",
  "    local len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i =\
    \ 1, len1 do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n \
    \       len = len + lst2[i]\n    end\n    if len == len1 then\n        return\
    \ lst1\n    elseif len == len2 then\n        return lst2\n    else\n        return\
    \ nil\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 ==\
    \ len2 then\n    return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local total = 0\n    for i = 1, len1 do\n        total = total + string.len(lst1[i])\n\
    \    end\n    for i = 1, len2 do\n        total = total + string.len(lst2[i])\n\
    \    end\n    if total == len1 then\n        return lst1\n    elseif total ==\
    \ len2 then\n        return lst2\n    else\n        return lst1\n    end\nend",
  "    local len1, len2 = #lst1, #lst2\n    local i, j, k\n    local total = 0\n \
    \   for i = 1, len1 do\n        local len = 0\n        for j = 1, len2 do\n  \
    \          if lst1[i] ~= lst2[j] then\n                len = len + 1\n       \
    \     end\n        end\n        if len > 0 then\n            total = total + 1\n\
    \        end\n    end\n    if len1 == len2 then\n        return lst1\n    end\n\
    \    for i = 1, len1 do\n        local len = 0\n        for j = 1, len2 do\n \
    \           if lst1[i] ~= lst2[j] then\n                len = len + 1\n      \
    \      end\n        end\n        if len > 0 then\n            total = total +\
    \ 1\n        end\n    end\n    return lst1\nend", "    local len1 = #lst1\n  \
    \  local len2 = #lst2\n    local len\n    if len1 == len2 then\n        len =\
    \ len1\n    else\n        len = len1\n    end\n    local i = 1\n    local j =\
    \ 1\n    local total = 0\n    while i <= len and j <= len2 do\n        if lst1[i]\
    \ < lst2[j] then\n            total = total + 1\n            i = i + 1\n     \
    \   else\n            total = total + 1\n            j = j + 1\n        end\n\
    \    end\n    if i == len then\n        return lst1\n    elseif j == len2 then\n\
    \        return lst2\n    else\n        return lst1\n    end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local len = 0\n  local i = 1\n  while i < len1\
    \ do\n    len = len + lst1[i]\n    i = i + 1\n  end\n  i = 1\n  while i < len2\
    \ do\n    len = len + lst2[i]\n    i = i + 1\n  end\n  if len == len1 then\n \
    \   return lst1\n  elseif len == len2 then\n    return lst2\n  else\n    return\
    \ nil\n  end\nend", "  local count = 0\n  for _, v in ipairs(lst1) do\n    count\
    \ = count + #v\n  end\n  for _, v in ipairs(lst2) do\n    count = count + #v\n\
    \  end\n  if count == #lst1 then\n    return lst1\n  elseif count == #lst2 then\n\
    \    return lst2\n  else\n    return nil\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local total_len = 0\n  for i = 1, len1 do\n    total_len\
    \ = total_len + #lst1[i]\n  end\n  for i = 1, len2 do\n    total_len = total_len\
    \ + #lst2[i]\n  end\n  if total_len == len1 then\n    return lst1\n  elseif total_len\
    \ == len2 then\n    return lst2\n  else\n    local total_len = 0\n    for i =\
    \ 1, len1 do\n      total_len = total_len + #lst1[i]\n    end\n    for i = 1,\
    \ len2 do\n      total_len = total_len + #lst2[i]\n    end\n    local lst3 = {}\n\
    \    for i = 1, total_len do\n      lst3[i] = lst1[i]\n    end\n    for i = 1,\
    \ total_len do\n      lst3[i] = lst2[i]\n    end\n    return lst3\n  end\nend",
  "  local len1 = #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n\
    \  local i = 0\n  local j = 0\n  while i < len1 and j < len2 do\n    if lst1[i]\
    \ < lst2[j] then\n      len1 = len1 + 1\n      i = i + 1\n    else\n      len2\
    \ = len2 + 1\n      j = j + 1\n    end\n  end\n  if len1 == len2 then\n    return\
    \ lst1\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2\
    \ = #lst2\n  if len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n\
    \    return lst2\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n    if lst1[i]\
    \ ~= lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1 == len2\
    \ then\n    return lst1\n  else\n    return lst1\n  end\nend", "    local len1\
    \ = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n        return lst1\n\
    \    end\n    local count = 0\n    for i = 1, len1 do\n        if lst1[i] < lst2[i]\
    \ then\n            count = count + 1\n        end\n    end\n    if count == len1\
    \ then\n        return lst1\n    end\n    count = 0\n    for i = 1, len2 do\n\
    \        if lst2[i] < lst1[i] then\n            count = count + 1\n        end\n\
    \    end\n    if count == len2 then\n        return lst2\n    end\n    return\
    \ nil\nend", "  local len1, len2 = #lst1, #lst2\n  if len1 == len2 then\n    return\
    \ lst1\n  else\n    local total = 0\n    for i = 1, len1 do\n      total = total\
    \ + string.len(lst1[i])\n    end\n    for i = 1, len2 do\n      total = total\
    \ + string.len(lst2[i])\n    end\n    if total == len1 then\n      return lst1\n\
    \    else\n      return lst2\n    end\n  end\nend", "    local len1 = #lst1\n\
    \    local len2 = #lst2\n    local len = 0\n    for i = 1, len1 do\n        len\
    \ = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n\
    \    end\n    if len == len1 then\n        return lst1\n    elseif len == len2\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", " \
    \ local len1 = #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n\
    \  for i = 1, len1 do\n    len1 = len1 + lst1[i]:len()\n  end\n  for i = 1, len2\
    \ do\n    len2 = len2 + lst2[i]:len()\n  end\n  if len1 == len2 then\n    return\
    \ lst1\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2\
    \ = #lst2\n  local total = 0\n  for i = 1, len1 do\n    total = total + lst1[i]\n\
    \  end\n  for i = 1, len2 do\n    total = total + lst2[i]\n  end\n  if len1 ==\
    \ len2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n   \
    \ if lst1[i] < lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1\
    \ == len2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n  for i = 1, len1 do\n\
    \    len = len + lst1[i]\n  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n\
    \  end\n  if len == len1 then\n    return lst1\n  elseif len == len2 then\n  \
    \  return lst2\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len\n  if len1 == len2 then\n    len = len1\n \
    \ else\n    len = len1\n    for i = 1, len2 do\n      if lst1[i] > lst2[i] then\n\
    \        len = len - 1\n      end\n    end\n  end\n  local result = {}\n  for\
    \ i = 1, len do\n    table.insert(result, lst1[i])\n  end\n  return result\nend",
  "  local len1 = #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n\
    \  local i = 0\n  local j = 0\n  local result = []\n  while i < len1 and j < len2\
    \ do\n    if lst1[i] < lst2[j] then\n      len1 = len1 + 1\n      i = i + 1\n\
    \    else\n      len2 = len2 + 1\n      j = j + 1\n    end\n  end\n  if len1 ==\
    \ len2 then\n    for i = 1, len1 do\n      table.insert(result, lst1[i])\n   \
    \ end\n  else\n    for i = 1, len1 do\n      table.insert(result, lst1[i])\n \
    \   end\n    for i = 1, len2 do\n      table.insert(result, lst2[i])\n    end\n\
    \  end\n  return result\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local len1 = 0\n    local len2 = 0\n    local i = 0\n    local j = 0\n  \
    \  local result = []\n    \n    while i < len1 and j < len2 do\n        if lst1[i]\
    \ < lst2[j] then\n            len1 = len1 + 1\n        else\n            len2\
    \ = len2 + 1\n        end\n        i = i + 1\n        j = j + 1\n    end\n   \
    \ \n    if len1 == len2 then\n        for i = 1, len1 do\n            result[#result\
    \ + 1] = lst1[i]\n        end\n    else\n        for i = 1, len1 do\n        \
    \    result[#result + 1] = lst1[i]\n        end\n        for i = 1, len2 do\n\
    \            result[#result + 1] = lst2[i]\n        end\n    end\n    \n    return\
    \ result\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n\
    \  local i = 0\n  while i < len1 do\n    len = len + lst1[i]\n    i = i + 1\n\
    \  end\n  i = 0\n  while i < len2 do\n    len = len + lst2[i]\n    i = i + 1\n\
    \  end\n  if len == len1 then\n    return lst1\n  elseif len == len2 then\n  \
    \  return lst2\n  else\n    return nil\n  end\nend", "  local len1 = #lst1\n \
    \ local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  local i = 0\n  local\
    \ j = 0\n  local total = 0\n  while i < len1 and j < len2 do\n    if lst1[i] <\
    \ lst2[j] then\n      total = total + 1\n      i = i + 1\n    elseif lst1[i] >\
    \ lst2[j] then\n      total = total + 1\n      j = j + 1\n    else\n      i =\
    \ i + 1\n      j = j + 1\n    end\n  end\n  if len1 == len2 then\n    return lst1\n\
    \  elseif len1 > len2 then\n    return lst2\n  else\n    return lst1\n  end\n\
    end", "    local num_chars = 0\n    for _, v in pairs(lst1) do\n        num_chars\
    \ = num_chars + #v\n    end\n    for _, v in pairs(lst2) do\n        num_chars\
    \ = num_chars + #v\n    end\n    if num_chars == #lst1 then\n        return lst1\n\
    \    elseif num_chars == #lst2 then\n        return lst2\n    else\n        return\
    \ nil\n    end\nend", "  local num_chars = 0\n  for _, str1 in ipairs(lst1) do\n\
    \    for _, str2 in ipairs(lst2) do\n      num_chars = num_chars + #str1\n   \
    \ end\n  end\n  if #lst1 == #lst2 then\n    return lst1\n  else\n    return lst2\n\
    \  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local i = 0\n\
    \    local j = 0\n    local total = 0\n    while i < len1 and j < len2 do\n  \
    \      if lst1[i] < lst2[j] then\n            total = total + 1\n            i\
    \ = i + 1\n        else\n            total = total + 1\n            j = j + 1\n\
    \        end\n    end\n    if len1 == len2 then\n        return lst1\n    else\n\
    \        return lst1\n    end\nend", "    local len1 = #lst1\n    local len2 =\
    \ #lst2\n    if len1 == len2 then\n        for i = 1, len1 do\n            if\
    \ lst1[i] > lst2[i] then\n                return lst1\n            end\n     \
    \   end\n        return lst2\n    end\n    local len3 = len1 + len2 - 1\n    local\
    \ lst3 = {}\n    for i = 1, len3 do\n        lst3[i] = 0\n    end\n    for i =\
    \ 1, len1 do\n        lst3[i] = lst3[i] + lst1[i]\n    end\n    for i = 1, len2\
    \ do\n        lst3[i + len1] = 0\n    end\n    for i = 1, len3 do\n        lst3[i\
    \ + len1] = lst3[i + len1] + lst2[i]\n    end\n    return lst3\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n    return lst1\n\
    \  elseif len1 > len2 then\n    return lst2\n  else\n    return lst1\n  end\n\
    end", "   local num_chars = 0\n   for _, v in pairs(lst1) do\n      num_chars\
    \ = num_chars + #v\n   end\n   for _, v in pairs(lst2) do\n      num_chars = num_chars\
    \ + #v\n   end\n   if num_chars == #lst1 then\n      return lst1\n   else\n  \
    \    return lst2\n   end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local len = 0\n  \n  for i = 1, len1 do\n    len = len + lst1[i]\n  end\n \
    \ for i = 1, len2 do\n    len = len + lst2[i]\n  end\n  \n  if len == len1 then\n\
    \    return lst1\n  elseif len == len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len\
    \ = 0\n  for i = 1, len1 do\n    len = len + lst1[i]\n  end\n  for i = 1, len2\
    \ do\n    len = len + lst2[i]\n  end\n  if len == len1 then\n    return lst1\n\
    \  elseif len == len2 then\n    return lst2\n  else\n    return lst1\n  end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n   \
    \ for i = 1, len1 do\n        len = len + lst1[i]\n    end\n    for i = 1, len2\
    \ do\n        len = len + lst2[i]\n    end\n    if len == len1 then\n        return\
    \ lst1\n    elseif len == len2 then\n        return lst2\n    else\n        local\
    \ lst3 = {}\n        for i = 1, len1 do\n            lst3[i] = lst1[i]\n     \
    \   end\n        for i = 1, len2 do\n            lst3[len1 + i] = lst2[i]\n  \
    \      end\n        return lst3\n    end\nend", "  local len1 = #lst1\n  local\
    \ len2 = #lst2\n  local len\n  if len1 == len2 then\n    return lst1\n  elseif\
    \ len1 > len2 then\n    len = len1\n  else\n    len = len2\n  end\n  local total\
    \ = 0\n  for i = 1, len do\n    total = total + #lst1[i]\n  end\n  for i = 1,\
    \ len do\n    total = total + #lst2[i]\n  end\n  if total == len then\n    return\
    \ lst1\n  else\n    return lst2\n  end\nend", "  local len1 = #lst1\n  local len2\
    \ = #lst2\n  local len = 0\n  for i = 1, len1 do\n    len = len + lst1[i]\n  end\n\
    \  for i = 1, len2 do\n    len = len + lst2[i]\n  end\n  if len == len1 then\n\
    \    return lst1\n  elseif len == len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local len1, len2 = #lst1, #lst2\n  if len1 == len2 then\n\
    \    return lst1\n  elseif len1 < len2 then\n    local temp = lst1\n    lst1 =\
    \ lst2\n    lst2 = temp\n  end\n  local total = 0\n  for i = 1, len1 do\n    total\
    \ = total + lst1[i]:len()\n  end\n  for i = 1, len2 do\n    total = total + lst2[i]:len()\n\
    \  end\n  return lst1\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local\
    \ total = 0\n  for i = 1, len1 do\n    total = total + #lst1[i]\n  end\n  for\
    \ i = 1, len2 do\n    total = total + #lst2[i]\n  end\n  if len1 == len2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  for i = 1, len1 do\n\
    \    len1 = len1 + 1\n  end\n  for i = 1, len2 do\n    len2 = len2 + 1\n  end\n\
    \  if len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend",
  "  local len1 = #lst1\n  local len2 = #lst2\n  local len1max = len1 -- The max length\
    \ of lst1\n  local len2max = len2 -- The max length of lst2\n  local len1min =\
    \ len1 -- The min length of lst1\n  local len2min = len2 -- The min length of\
    \ lst2\n  local len1diff = len1 -- The difference between len1 and len1max\n \
    \ local len2diff = len2 -- The difference between len2 and len2max\n  local len1sum\
    \ = 0\n  local len2sum = 0\n  local len1maxsum = 0\n  local len2maxsum = 0\n \
    \ local len1minsum = 0\n  local len2minsum = 0\n  local len1diffsum = 0\n  local\
    \ len2diffsum = 0\n  local len1sum2 = 0\n  local len2sum2 = 0\n  local len1maxsum2\
    \ = 0\n  local len2maxsum2 = 0\n  local len1minsum2 = 0\n  local len2minsum2 =\
    \ 0\n  local len1diffsum2 = 0\n  local len2diffsum2 = 0\n  local len1sum3 = 0\n\
    \  local len2sum3 = 0\n  local len1maxsum3 = 0\n  local len2maxsum3 = 0\n  local\
    \ len1minsum3 = 0\n  local len2minsum3 = 0\n  local len1diffsum3 = 0\n  local\
    \ len2diffsum3 = 0\n  local len1sum4 = 0\n  local len2sum4 = 0\n  local len1maxsum4\
    \ = 0\n  local len2maxsum4 = 0\n  local len1minsum4 = 0\n  local len2minsum4 =\
    \ 0\n  local len1diffsum4 = 0\n  local len2diffsum4 = 0\n  local len1sum5 = 0\n\
    \  local len2sum5 = 0\n  local len1maxsum5 = 0\n  local len2maxsum5 = 0\n  local\
    \ len1minsum5 = 0\n  local len2minsum5 = 0\n  local len1diffsum5 = 0\n  local\
    \ len2diffsum5 = 0\n  local len1sum6 = 0\n  local len2sum6 = 0\n  local len1maxsum6\
    \ = 0\n  local len2maxsum6 = 0\n  local len1minsum6 = 0\n  local len2minsum6 =\
    \ 0\n  local len1diffsum6 = 0\n  local len", "    local len1 = #lst1\n    local\
    \ len2 = #lst2\n    local len = 0\n    for i = 1, len1 do\n        len = len +\
    \ lst1[i]\n    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n    end\n\
    \    if len == len1 then\n        return lst1\n    elseif len == len2 then\n \
    \       return lst2\n    else\n        return lst1\n    end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n    return lst1\n  end\n\
    \  local total = 0\n  for i = 1, len1 do\n    total = total + lst1[i]:len() \n\
    \  end\n  for i = 1, len2 do\n    total = total + lst2[i]:len() \n  end\n  if\
    \ total == len1 then\n    return lst1\n  elseif total == len2 then\n    return\
    \ lst2\n  else\n    return nil\n  end\nend", "   local len1 = #lst1\n   local\
    \ len2 = #lst2\n   if len1 == len2 then\n      local i = 1\n      while i < len1\
    \ do\n         if lst1[i] > lst2[i] then\n            lst2 = lst2..lst1[i]\n \
    \           len2 = len2 - 1\n         else\n            lst1 = lst1..lst2[i]\n\
    \            len1 = len1 - 1\n         end\n         i = i + 1\n      end\n  \
    \ end\n   return lst1\nend", "  local num_chars = 0\n  for _, str1 in pairs(lst1)\
    \ do\n    for _, str2 in pairs(lst2) do\n      num_chars = num_chars + #str1\n\
    \    end\n  end\n  if #lst1 == #lst2 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local count\
    \ = 0\n  for i = 1, len1 do\n    if lst1[i] ~= lst2[i] then\n      count = count\
    \ + 1\n    end\n  end\n  if len1 == len2 then\n    return lst1\n  else\n    return\
    \ lst1\n  end\nend", "  local total = 0\n  for _, str1 in ipairs(lst1) do\n  \
    \  for _, str2 in ipairs(lst2) do\n      total = total + #str1\n    end\n  end\n\
    \  if total == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "  local len1 = #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1\
    \ do\n    total = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total\
    \ + lst2[i]\n  end\n  if total == len1 then\n    return lst1\n  elseif total ==\
    \ len2 then\n    return lst2\n  else\n    return nil\n  end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local total_len = 0\n  for i = 1, len1 do\n\
    \    total_len = total_len + lst1[i]:len()\n  end\n  for i = 1, len2 do\n    total_len\
    \ = total_len + lst2[i]:len()\n  end\n  if total_len == len1 then\n    return\
    \ lst1\n  elseif total_len == len2 then\n    return lst2\n  else\n    return lst1\n\
    \  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n \
    \ for i = 1, len1 do\n    len = len + lst1[i]\n  end\n  for i = 1, len2 do\n \
    \   len = len + lst2[i]\n  end\n  if len == len1 then\n    return lst1\n  elseif\
    \ len == len2 then\n    return lst2\n  else\n    return lst1\n  end\nend", " \
    \   local len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i =\
    \ 1, len1 do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n \
    \       len = len + lst2[i]\n    end\n    if len == len1 then\n        return\
    \ lst1\n    elseif len == len2 then\n        return lst2\n    else\n        return\
    \ lst1\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1\
    \ == len2 then\n    return lst1\n  elseif len1 > len2 then\n    return lst2\n\
    \  else\n    local lst3 = {}\n    for i = 1, len1 do\n      if lst1[i] < lst2[i]\
    \ then\n        lst3[#lst3+1] = lst1[i]\n      else\n        lst3[#lst3+1] = lst2[i]\n\
    \      end\n    end\n    return lst3\n  end\nend", "  local len1 = #lst1\n  local\
    \ len2 = #lst2\n  if len1 == len2 then\n    return lst1\n  elseif len1 < len2\
    \ then\n    return lst2\n  else\n    local len3 = len1 + 1\n    local lst3 = {}\n\
    \    for i = 1, len3 do\n      lst3[i] = lst1[i]\n    end\n    for i = 1, len2\
    \ do\n      lst3[len1 + i] = lst2[i]\n    end\n    return lst3\n  end\nend", " \
    \   local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n   \
    \     for i = 1, len1 do\n            if lst1[i] > lst2[i] then\n            \
    \    return lst1\n            else\n                return lst2\n            end\n\
    \        end\n    else\n        return lst1\n    end\nend", "    local len1 =\
    \ #lst1\n    local len2 = #lst2\n    local len1 = 0\n    local len2 = 0\n    for\
    \ i = 1, len1 do\n        len1 = len1 + lst1[i]\n    end\n    for i = 1, len2\
    \ do\n        len2 = len2 + lst2[i]\n    end\n    if len1 == len2 then\n     \
    \   return lst1\n    end\n    if len1 > len2 then\n        local temp = lst1\n\
    \        lst1 = lst2\n        lst2 = temp\n    end\n    local results = {}\n \
    \   for i = 1, len1 do\n        local found = false\n        for j = 1, len2 do\n\
    \            if lst1[i] < lst2[j] then\n                found = true\n       \
    \         break\n            end\n        end\n        if found then\n       \
    \     table.insert(results, lst1[i])\n        end\n    end\n    return results\n\
    end", "   local len1 = #lst1\n   local len2 = #lst2\n   if len1 == len2 then\n\
    \      return lst1\n   else\n      return lst1\n   end\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1 do\n    total\
    \ = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total + lst2[i]\n\
    \  end\n  if len1 == len2 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    local total_len = 0\n\
    \    for i = 1, len1 do\n        total_len = total_len + lst1[i]\n    end\n  \
    \  for i = 1, len2 do\n        total_len = total_len + lst2[i]\n    end\n    if\
    \ total_len == len1 then\n        return lst1\n    elseif total_len == len2 then\n\
    \        return lst2\n    else\n        return lst1\n    end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n   \
    \ if lst1[i] < lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1\
    \ == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n        for\
    \ i = 1, len1 do\n            if lst1[i] > lst2[i] then\n                return\
    \ lst1\n            end\n        end\n        return lst2\n    end\n    if len1\
    \ > len2 then\n        return total_match(lst2, lst1)\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "  local len1, len2 = #lst1, #lst2\n  local i, j, k\n  local total\
    \ = 0\n  for i = 1, len1 do\n    local j = 0\n    for j = 1, len2 do\n      if\
    \ lst1[i] > lst2[j] then\n        break\n      else\n        total = total + 1\n\
    \      end\n    end\n  end\n  if len1 == len2 then\n    return lst1\n  else\n\
    \    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n \
    \ local total = 0\n  for i = 1, len1 do\n    total = total + #lst1[i]\n  end\n\
    \  for i = 1, len2 do\n    total = total + #lst2[i]\n  end\n  if len1 == len2\
    \ then\n    return lst1\n  else\n    return lst1\n  end\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local count = 0\n  \n  for i = 1, len1 do\n \
    \   if lst1[i] < lst2[i] then\n      count = count + 1\n    end\n  end\n  \n \
    \ if len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend",
  "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n    return\
    \ lst1\n  end\n  local total = 0\n  for i = 1, len1 do\n    total = total + string.len(lst1[i])\n\
    \  end\n  for i = 1, len2 do\n    total = total + string.len(lst2[i])\n  end\n\
    \  if total > len1 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "    local len1 = #lst1\n    local len2 = #lst2\n    local total_len = 0\n    for\
    \ i = 1, len1 do\n        total_len = total_len + #lst1[i]\n    end\n    for i\
    \ = 1, len2 do\n        total_len = total_len + #lst2[i]\n    end\n    if total_len\
    \ == len1 then\n        return lst1\n    elseif total_len == len2 then\n     \
    \   return lst2\n    else\n        local lst3 = {}\n        for i = 1, len1 do\n\
    \            lst3[i] = lst1[i]\n        end\n        for i = 1, len2 do\n    \
    \        lst3[i] = lst2[i]\n        end\n        return lst3\n    end\nend", " \
    \   local len1, len2 = #lst1, #lst2\n    if len1 == len2 then\n        for i =\
    \ 1, len1 do\n            if lst1[i] < lst2[i] then\n                return lst1\n\
    \            end\n        end\n        return lst1\n    end\n    if len1 < len2\
    \ then\n        for i = 1, len2 do\n            if lst2[i] < lst1[i] then\n  \
    \              return lst2\n            end\n        end\n        return lst2\n\
    \    end\n    for i = 1, len1 do\n        if lst1[i] < lst2[i] then\n        \
    \    return lst1\n        end\n    end\n    return lst2\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local len = 0\n  for i = 1, len1 do\n    len\
    \ = len + lst1[i]\n  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n  end\n\
    \  if len == len1 then\n    return lst1\n  elseif len == len2 then\n    return\
    \ lst2\n  else\n    return nil\n  end\nend", "  local len1 = #lst1\n  local len2\
    \ = #lst2\n  local len = 0\n  \n  for i = 1, len1 do\n    len = len + lst1[i]\n\
    \  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n  end\n  \n  if len ==\
    \ len1 then\n    return lst1\n  elseif len == len2 then\n    return lst2\n  else\n\
    \    return nil\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local len3 = len1 + len2\n    local lst3 = {}\n    for i = 1, len3 do\n \
    \       local count = 0\n        for j = 1, len1 do\n            if lst1[j] ==\
    \ lst2[i] then\n                count = count + 1\n            end\n        end\n\
    \        if count == len2 then\n            table.insert(lst3, lst1[i])\n    \
    \    end\n    end\n    return lst3\nend", "    local len1 = #lst1\n    local len2\
    \ = #lst2\n    local len = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n    end\n    if\
    \ len == len1 then\n        return lst1\n    elseif len == len2 then\n       \
    \ return lst2\n    else\n        return lst1\n    end\nend", "   local len1 =\
    \ #lst1\n   local len2 = #lst2\n   if len1 == len2 then\n      return lst1\n \
    \  elseif len1 > len2 then\n      return lst1\n   else\n      return lst2\n  \
    \ end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local len =\
    \ 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n    end\n    for i =\
    \ 1, len2 do\n        len = len + lst2[i]\n    end\n    if len == len1 then\n\
    \        return lst1\n    elseif len == len2 then\n        return lst2\n    else\n\
    \        return lst1\n    end\nend", "    local num_chars = 0\n    for _, v in\
    \ pairs(lst1) do\n        num_chars = num_chars + #v\n    end\n    for _, v in\
    \ pairs(lst2) do\n        num_chars = num_chars + #v\n    end\n    if num_chars\
    \ == 0 then\n        return lst1\n    else\n        return lst2\n    end\nend",
  "    local len1 = #lst1\n    local len2 = #lst2\n    local len1 = 0\n    local len2\
    \ = 0\n    local i = 0\n    local j = 0\n    local total = 0\n    while i < len1\
    \ and j < len2 do\n        if lst1[i] > lst2[j] then\n            total = total\
    \ + 1\n            i = i + 1\n        elseif lst1[i] < lst2[j] then\n        \
    \    total = total + 1\n            j = j + 1\n        else\n            total\
    \ = total + 1\n            i = i + 1\n            j = j + 1\n        end\n   \
    \ end\n    if len1 == len2 then\n        return lst1\n    elseif len1 > len2 then\n\
    \        return lst2\n    else\n        return lst1\n    end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local total = 0\n    for i = 1, len1\
    \ do\n        total = total + lst1[i]\n    end\n    for i = 1, len2 do\n     \
    \   total = total + lst2[i]\n    end\n    if len1 == len2 then\n        return\
    \ lst1\n    else\n        return lst1\n    end\nend", "    local len1 = #lst1\n\
    \    local len2 = #lst2\n    if len1 == len2 then\n        for i = 1, len1 do\n\
    \            if lst1[i] < lst2[i] then\n                return lst1\n        \
    \    else\n                return lst2\n            end\n        end\n    else\n\
    \        return lst1\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local total = 0\n  for i = 1, len1 do\n    total = total + lst1[i]:len() \n\
    \  end\n  for i = 1, len2 do\n    total = total + lst2[i]:len() \n  end\n  if\
    \ len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend", " \
    \ local len1 = #lst1\n  local len2 = #lst2\n  local len1max = len1 -- The max\
    \ length of lst1\n  local len2max = len2 -- The max length of lst2\n  local len1min\
    \ = len1 -- The min length of lst1\n  local len2min = len2 -- The min length of\
    \ lst2\n  local len1sum = 0 -- The sum of all lengths of lst1\n  local len2sum\
    \ = 0 -- The sum of all lengths of lst2\n  local len1count = 0 -- The count of\
    \ chars in lst1\n  local len2count = 0 -- The count of chars in lst2\n  local\
    \ len1sum2 = 0 -- The sum of all lengths of lst1 with lst2\n  local len2sum2 =\
    \ 0 -- The sum of all lengths of lst2 with lst1\n  local len1sum2count = 0 --\
    \ The count of chars in lst1 with lst2\n  local len2sum2count = 0 -- The count\
    \ of chars in lst2 with lst1\n  local len1sum2sum = 0 -- The sum of all lengths\
    \ of lst1 with lst2 with lst1\n  local len2sum2sum = 0 -- The sum of all lengths\
    \ of lst2 with lst1 with lst2\n  local len1sum2sumcount = 0 -- The count of chars\
    \ in lst1 with lst2 with lst1\n  local len2sum2sumcount = 0 -- The count of chars\
    \ in lst2 with lst1 with lst2\n  local len1sum2sumsum = 0 -- The sum of all lengths\
    \ of lst1 with lst2 with lst1 with lst2\n  local len2sum2sumsum = 0 -- The sum\
    \ of all lengths of lst2 with lst1 with lst2 with lst1\n  local len1sum2sumsumcount\
    \ = 0 -- The count of chars in lst1 with lst2 with lst1 with lst2\n  local len2sum2sumsumcount\
    \ = 0 -- The count of chars in lst2 with lst1 with lst2 with lst1\n  local len1sum2sumsumsum\
    \ = 0 -- The sum of all lengths of lst1 with lst2 with lst1 with lst2 with lst1\n\
    \  local len2sum2sumsum = 0 -- The sum of all lengths of lst2 with lst1 with lst2\
    \ with lst1 with lst2\n  local len1sum2sumsumcount = 0 -- The count of chars in\
    \ lst1 with lst2 with lst1 with lst2 with lst1\n  local len2sum2", "  local num_chars\
    \ = 0\n  for _, v in ipairs(lst1) do\n    num_chars = num_chars + #v\n  end\n\
    \  for _, v in ipairs(lst2) do\n    num_chars = num_chars + #v\n  end\n  if num_chars\
    \ == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local\
    \ num_chars = 0\n    for _, v in ipairs(lst1) do\n        num_chars = num_chars\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        num_chars = num_chars\
    \ + #v\n    end\n    if num_chars == 0 then\n        return lst1\n    else\n \
    \       return lst2\n    end\nend", "    local len1 = #lst1\n    local len2 =\
    \ #lst2\n    local len = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n    end\n    if\
    \ len == len1 then\n        return lst1\n    elseif len == len2 then\n       \
    \ return lst2\n    else\n        return lst1\n    end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len3 = len1 + len2\n  local lst3 = {}\n  for i\
    \ = 1, len3 do\n    lst3[i] = 0\n  end\n  for i = 1, len1 do\n    lst3[#lst3 +\
    \ 1] = lst1[i]\n  end\n  for i = 1, len2 do\n    lst3[#lst3 + len1 + 1] = lst2[i]\n\
    \  end\n  local len4 = #lst3\n  local len5 = len1 + len2\n  for i = 1, len4 do\n\
    \    lst3[i] = lst3[i] + lst3[len4 + i]\n  end\n  for i = 1, len5 do\n    lst3[i]\
    \ = lst3[i] + lst3[len5 + i]\n  end\n  return lst3\nend", "    local num_chars\
    \ = 0\n    for _, v in pairs(lst1) do\n        num_chars = num_chars + #v\n  \
    \  end\n    for _, v in pairs(lst2) do\n        num_chars = num_chars + #v\n \
    \   end\n    if num_chars == 0 then\n        return lst1\n    elseif num_chars\
    \ == #lst1 then\n        return lst2\n    else\n        return lst1\n    end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    local len3 = len1 +\
    \ len2\n    local lst3 = {}\n    for i = 1, len3 do\n        local char = lst1[i]\n\
    \        local char2 = lst2[i]\n        if char == char2 then\n            lst3[#lst3\
    \ + 1] = char\n        end\n    end\n    if len1 == len2 then\n        return\
    \ lst3\n    end\n    return nil\nend", "    local len1 = #lst1\n    local len2\
    \ = #lst2\n    local count = 0\n    for i = 1, len1 do\n        if lst1[i] < lst2[i]\
    \ then\n            count = count + 1\n        end\n    end\n    if len1 == len2\
    \ then\n        return lst1\n    end\n    for i = 1, len2 do\n        if lst2[i]\
    \ < lst1[i] then\n            count = count + 1\n        end\n    end\n    if\
    \ count == len1 then\n        return lst1\n    end\n    return lst2\nend", " \
    \   local len1 = #lst1\n    local len2 = #lst2\n    local total = 0\n    for i\
    \ = 1, len1 do\n        total = total + lst1[i]:len() \n    end\n    for i = 1,\
    \ len2 do\n        total = total + lst2[i]:len() \n    end\n    if total == len1\
    \ then\n        return lst1\n    elseif total == len2 then\n        return lst2\n\
    \    else\n        return nil\n    end\nend", "   local len1 = #lst1\n   local\
    \ len2 = #lst2\n   if len1 == len2 then\n      return lst1\n   elseif len1 < len2\
    \ then\n      return lst2\n   else\n      return lst1\n   end\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  local\
    \ i = 0\n  local j = 0\n  while i < len1 and j < len2 do\n    if lst1[i] < lst2[j]\
    \ then\n      len1 = len1 + 1\n      i = i + 1\n    elseif lst1[i] > lst2[j] then\n\
    \      len2 = len2 + 1\n      j = j + 1\n    else\n      i = i + 1\n      j =\
    \ j + 1\n    end\n  end\n  if len1 == len2 then\n    return lst1\n  else\n   \
    \ return lst2\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local\
    \ len = 0\n  for i = 1, len1 do\n    len = len + lst1[i]\n  end\n  for i = 1,\
    \ len2 do\n    len = len + lst2[i]\n  end\n  if len == len1 then\n    return lst1\n\
    \  elseif len == len2 then\n    return lst2\n  else\n    return nil\n  end\nend",
  "   local len1 = #lst1\n   local len2 = #lst2\n   if len1 == len2 then\n      return\
    \ lst1\n   elseif len1 > len2 then\n      return lst2\n   else\n      return lst1\n\
    \   end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len\n  if\
    \ len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n    len = len1\n\
    \  else\n    len = len2\n  end\n  local total = 0\n  for i = 1, len do\n    total\
    \ = total + lst1[i]:len() + lst2[i]:len()\n  end\n  return lst1\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i = 1, len1\
    \ do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len\
    \ = len + lst2[i]\n    end\n    if len == len1 then\n        return lst1\n   \
    \ elseif len == len2 then\n        return lst2\n    else\n        local lst3 =\
    \ {}\n        for i = 1, len1 do\n            lst3[i] = lst1[i]\n        end\n\
    \        for i = 1, len2 do\n            lst3[i] = lst2[i]\n        end\n    \
    \    return lst3\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  if len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n    local\
    \ tmp = lst1\n    lst1 = lst2\n    lst2 = tmp\n  end\n  local ans = {}\n  for\
    \ i = 1, len1 do\n    local found = false\n    for j = 1, len2 do\n      if lst1[i]\
    \ < lst2[j] then\n        found = true\n        break\n      end\n    end\n  \
    \  if not found then\n      table.insert(ans, lst1[i])\n    end\n  end\n  return\
    \ ans\nend", "  local num_chars = 0\n  for _, v in ipairs(lst1) do\n    num_chars\
    \ = num_chars + #v\n  end\n  for _, v in ipairs(lst2) do\n    num_chars = num_chars\
    \ + #v\n  end\n  if num_chars == 0 then\n    return lst1\n  else\n    return lst2\n\
    \  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n\
    \    return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local count = 0\n  for _, v in ipairs(lst1) do\n    if\
    \ v ~= lst2[1] then\n      count = count + 1\n    end\n  end\n  if count == #lst1\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local i = 1\n  local j = 1\n  local total = 0\n\
    \  while i <= len1 and j <= len2 do\n    if lst1[i] > lst2[j] then\n      total\
    \ = total + 1\n      i = i + 1\n    elseif lst1[i] < lst2[j] then\n      total\
    \ = total + 1\n      j = j + 1\n    else\n      i = i + 1\n      j = j + 1\n \
    \   end\n  end\n  if i == len1 then\n    return lst1\n  elseif j == len2 then\n\
    \    return lst2\n  else\n    return lst1\n  end\nend", "    local total = 0\n\
    \    for _, v in ipairs(lst1) do\n        total = total + #v\n    end\n    for\
    \ _, v in ipairs(lst2) do\n        total = total + #v\n    end\n    if total ==\
    \ 0 then\n        return lst1\n    else\n        return lst2\n    end\nend", " \
    \ local len1 = #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1\
    \ do\n    total = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total\
    \ + lst2[i]\n  end\n  if len1 == len2 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "  local len1, len2 = #lst1, #lst2\n  if len1 == len2 then\n\
    \    return lst1\n  end\n  local lst3 = {}\n  for i = 1, len1 do\n    local found\
    \ = false\n    for j = 1, len2 do\n      if lst1[i] > lst2[j] then\n        found\
    \ = true\n        break\n      end\n    end\n    if not found then\n      table.insert(lst3,\
    \ lst1[i])\n    end\n  end\n  return lst3\nend", "    local total_chars = 0\n\
    \    for _, str1 in ipairs(lst1) do\n        for _, str2 in ipairs(lst2) do\n\
    \            total_chars = total_chars + #str1\n        end\n    end\n    if total_chars\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "   if #lst1 == 0 then\n      return lst2\n   elseif #lst2 == 0 then\n \
    \     return lst1\n   elseif #lst1 > #lst2 then\n      return lst1\n   elseif\
    \ #lst2 > #lst1 then\n      return lst2\n   else\n      local i = 1\n      local\
    \ j = 1\n      local k = 1\n      local total = 0\n      while i <= #lst1 and\
    \ j <= #lst2 do\n         if lst1[i] < lst2[j] then\n            total = total\
    \ + 1\n            i = i + 1\n         else\n            total = total + 1\n \
    \           j = j + 1\n         end\n      end\n      if i == #lst1 then\n   \
    \      return lst2\n      elseif j == #lst2 then\n         return lst1\n     \
    \ else\n         return lst1\n      end\n   end\nend", "   local len1 = #lst1\n\
    \   local len2 = #lst2\n   if len1 == len2 then\n      local i = 1\n      while\
    \ i < len1 do\n         if lst1[i] > lst2[i] then\n            lst1, lst2 = lst2,\
    \ lst1\n         end\n         i = i + 1\n      end\n   end\n   return lst1\n\
    end", "    local total = 0\n    for _, v in ipairs(lst1) do\n        total = total\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        total = total + #v\n\
    \    end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1\
    \ == len2 then\n    return lst1\n  elseif len1 > len2 then\n    return lst2\n\
    \  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  if len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n    local\
    \ temp = lst1\n    lst1 = lst2\n    lst2 = temp\n  end\n  local results = {}\n\
    \  for i = 1, len1 do\n    local found = false\n    for j = 1, len2 do\n     \
    \ if lst1[i] > lst2[j] then\n        found = true\n        break\n      end\n\
    \    end\n    if found then\n      table.insert(results, lst1[i])\n    end\n \
    \ end\n  return results\nend", "  local count = 0\n  for _, v in ipairs(lst1)\
    \ do\n    count = count + #v\n  end\n  for _, v in ipairs(lst2) do\n    count\
    \ = count + #v\n  end\n  if count == #lst1 then\n    return lst1\n  elseif count\
    \ == #lst2 then\n    return lst2\n  else\n    return nil\n  end\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n\
    \    if lst1[i] < lst2[i] then\n      count = count + 1\n    end\n  end\n  if\
    \ len1 == len2 then\n    return lst1\n  else\n    return lst2\n  end\nend", " \
    \  local len1 = #lst1\n   local len2 = #lst2\n   if len1 == len2 then\n      return\
    \ lst1\n   elseif len1 > len2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local num_chars = 0\n    for _, v in pairs(lst1) do\n    \
    \    num_chars = num_chars + #v\n    end\n    for _, v in pairs(lst2) do\n   \
    \     num_chars = num_chars + #v\n    end\n    if num_chars == 0 then\n      \
    \  return lst1\n    end\n    if num_chars == #lst1 then\n        return lst2\n\
    \    end\n    local num_chars_lst1 = #lst1\n    local num_chars_lst2 = #lst2\n\
    \    local num_chars_lst3 = num_chars_lst1 + num_chars_lst2\n    local num_chars_lst4\
    \ = num_chars_lst1 + num_chars_lst2 + num_chars_lst3\n    local num_chars_lst5\
    \ = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4\n    local\
    \ num_chars_lst6 = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4\
    \ + num_chars_lst5\n    local num_chars_lst7 = num_chars_lst1 + num_chars_lst2\
    \ + num_chars_lst3 + num_chars_lst4 + num_chars_lst5 + num_chars_lst6\n    local\
    \ num_chars_lst8 = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4\
    \ + num_chars_lst5 + num_chars_lst6 + num_chars_lst7\n    local num_chars_lst9\
    \ = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4 + num_chars_lst5\
    \ + num_chars_lst6 + num_chars_lst7 + num_chars_lst8\n    local num_chars_lst10\
    \ = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4 + num_chars_lst5\
    \ + num_chars_lst6 + num_chars_lst7 + num_chars_lst8 + num_chars_lst9\n    local\
    \ num_chars_lst11 = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4\
    \ + num_chars_lst5 + num_chars_lst6 + num_chars_lst7 + num_chars_lst8 + num_chars_lst9\
    \ + num_chars_lst10\n    local num_chars_lst12 = num_chars_lst1 + num_chars_lst2\
    \ + num_chars_lst3 + num_chars_lst4 + num_chars_lst5 + num_chars_lst6 + num_chars_lst7\
    \ + num_chars_lst8 + num_chars_lst9 + num_chars_lst10 + num_chars_lst11\n    local\
    \ num_chars_lst13 = num_chars_lst1 + num_chars_lst2 + num_chars_lst3 + num_chars_lst4\
    \ + num_chars_lst5 + num_chars_lst6 + num_chars_lst7 + num_chars_lst8 + num_chars_lst9\
    \ + num_chars_lst10 + num_chars_lst11 + num_chars_lst12\n    local num_chars_lst14",
  "  local len1 = #lst1\n  local len2 = #lst2\n  local count = 0\n  \n  for i = 1,\
    \ len1 do\n    if lst1[i] ~= lst2[i] then\n      count = count + 1\n    end\n\
    \  end\n  \n  if len1 == len2 then\n    return lst1\n  else\n    return lst1\n\
    \  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local result\n\
    \    if len1 == len2 then\n        result = lst1\n    else\n        result = lst1\n\
    \    end\n    for i = 1, len1 do\n        if lst1[i] > lst2[i] then\n        \
    \    lst2 = lst2\n            len2 = len1\n        end\n    end\n    for i = 1,\
    \ len2 do\n        if lst2[i] > lst1[i] then\n            lst1 = lst1\n      \
    \      len1 = len2\n        end\n    end\n    if len1 == len2 then\n        result\
    \ = lst1\n    end\n    return result\nend", "  local len1 = #lst1\n  local len2\
    \ = #lst2\n  if len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n\
    \    return lst2\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  local i = 0\n  local\
    \ j = 0\n  while i < len1 and j < len2 do\n    if lst1[i] < lst2[j] then\n   \
    \   len1 = len1 + 1\n    else\n      len2 = len2 + 1\n    end\n    i = i + 1\n\
    \    j = j + 1\n  end\n  if len1 == len2 then\n    return lst1\n  else\n    return\
    \ lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local\
    \ len1 = 0\n    local len2 = 0\n    local i = 0\n    local j = 0\n    local total\
    \ = 0\n    while i < len1 and j < len2 do\n        if lst1[i] < lst2[j] then\n\
    \            total = total + 1\n            i = i + 1\n        else\n        \
    \    total = total + 1\n            j = j + 1\n        end\n    end\n    if len1\
    \ == len2 then\n        return lst1\n    elseif len1 > len2 then\n        return\
    \ lst2\n    else\n        return lst1\n    end\nend", "   local total = 0\n  \
    \ for _, v in pairs(lst1) do\n      total = total + #v\n   end\n   for _, v in\
    \ pairs(lst2) do\n      total = total + #v\n   end\n   if total == #lst1 then\n\
    \      return lst1\n   else\n      return lst2\n   end\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  local i =\
    \ 0\n  local j = 0\n  local result = []\n  while i < len1 and j < len2 do\n  \
    \  if lst1[i] < lst2[j] then\n      len1 = len1 + 1\n      i = i + 1\n    else\n\
    \      len2 = len2 + 1\n      j = j + 1\n    end\n  end\n  if len1 == len2 then\n\
    \    for i = 1, len1 do\n      table.insert(result, lst1[i])\n    end\n  else\n\
    \    for i = 1, len1 do\n      table.insert(result, lst1[i])\n    end\n  end\n\
    \  return result\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local count\
    \ = 0\n  for i = 1, len1 do\n    if lst1[i] ~= lst2[i] then\n      count = count\
    \ + 1\n    end\n  end\n  if len1 == len2 then\n    return lst1\n  else\n    return\
    \ lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local\
    \ count = 0\n    for i = 1, len1 do\n        if lst1[i] ~= lst2[i] then\n    \
    \        count = count + 1\n        end\n    end\n    if len1 == len2 then\n \
    \       return lst1\n    end\n    return lst1\nend", "  local len1 = #lst1\n \
    \ local len2 = #lst2\n  if len1 == len2 then\n    return lst1\n  end\n  local\
    \ lst3 = {}\n  for i = 1, len1 do\n    if lst1[i] < lst2[i] then\n      lst3[#lst3\
    \ + 1] = lst1[i]\n    end\n  end\n  return lst3\nend", "    local len1 = #lst1\n\
    \    local len2 = #lst2\n    local len\n    if len1 == len2 then\n        len\
    \ = len1\n    else\n        len = len1\n        for i = 1, len2 do\n         \
    \   if lst1[i] > lst2[i] then\n                len = len\n            else\n \
    \               len = len - 1\n            end\n        end\n    end\n    local\
    \ result = {}\n    for i = 1, len do\n        result[i] = lst1[i]\n    end\n \
    \   return result\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local\
    \ total_len = 0\n  \n  for i = 1, len1 do\n    local len = 0\n    for j = 1, len2\
    \ do\n      if lst1[i] ~= lst2[j] then\n        len = len + 1\n      end\n   \
    \ end\n    total_len = total_len + len\n  end\n  \n  if total_len == len1 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len = 0\n  for i = 1, len1 do\n    len = len +\
    \ lst1[i]\n  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n  end\n  if len\
    \ == len1 then\n    return lst1\n  elseif len == len2 then\n    return lst2\n\
    \  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local len1_min = math.min(len1, len2)\n  local len2_min = math.min(len1, len2)\n\
    \  local len1_max = math.max(len1, len2)\n  local len2_max = math.max(len1, len2)\n\
    \  local total_len = 0\n  for i = 1, len1_min do\n    total_len = total_len +\
    \ lst1[i]\n  end\n  for i = 1, len2_min do\n    total_len = total_len + lst2[i]\n\
    \  end\n  for i = 1, len1_max do\n    total_len = total_len + lst1[i]\n  end\n\
    \  for i = 1, len2_max do\n    total_len = total_len + lst2[i]\n  end\n  if total_len\
    \ == len1_min + len2_min then\n    return lst1\n  elseif total_len == len1_max\
    \ + len2_max then\n    return lst2\n  else\n    return lst1\n  end\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n  for i = 1, len1 do\n\
    \    len = len + lst1[i]\n  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n\
    \  end\n  if len == len1 then\n    return lst1\n  elseif len == len2 then\n  \
    \  return lst2\n  else\n    return lst1\n  end\nend", "    local total_len = 0\n\
    \    for _, v in pairs(lst1) do\n        total_len = total_len + #v\n    end\n\
    \    for _, v in pairs(lst2) do\n        total_len = total_len + #v\n    end\n\
    \    if total_len == 0 then\n        return lst1\n    else\n        return lst1\n\
    \    end\nend", "   local len1 = #lst1\n   local len2 = #lst2\n   if len1 == len2\
    \ then\n      return lst1\n   elseif len1 > len2 then\n      return lst2\n   else\n\
    \      return lst1\n   end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local i = 0\n  local j = 0\n  local ans = {}\n  while i < len1 and j < len2\
    \ do\n    if lst1[i] > lst2[j] then\n      ans[#ans + 1] = lst1[i]\n      i =\
    \ i + 1\n    elseif lst1[i] < lst2[j] then\n      ans[#ans + 1] = lst2[j]\n  \
    \    j = j + 1\n    else\n      i = i + 1\n      j = j + 1\n    end\n  end\n \
    \ if i == len1 then\n    for i = 1, len2 do\n      ans[#ans + 1] = lst2[i]\n \
    \   end\n  elseif j == len2 then\n    for j = 1, len1 do\n      ans[#ans + 1]\
    \ = lst1[j]\n    end\n  else\n    for i = 1, len1 do\n      for j = 1, len2 do\n\
    \        if lst1[i] > lst2[j] then\n          ans[#ans + 1] = lst1[i]\n      \
    \    i = i + 1\n        elseif lst1[i] < lst2[j] then\n          ans[#ans + 1]\
    \ = lst2[j]\n          j = j + 1\n        else\n          i = i + 1\n        \
    \  j = j + 1\n        end\n      end\n    end\n  end\n  return ans\nend", "  local\
    \ len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n    return lst1\n\
    \  end\n  local results = {}\n  for i = 1, len1 do\n    local found = false\n\
    \    for j = 1, len2 do\n      if lst1[i] < lst2[j] then\n        found = true\n\
    \        break\n      end\n    end\n    if not found then\n      table.insert(results,\
    \ lst1[i])\n    end\n  end\n  return results\nend", "  local len1 = #lst1\n  local\
    \ len2 = #lst2\n  local len3 = len1 + len2\n  local lst3 = {}\n  for i = 1, len3\
    \ do\n    local str1 = lst1[i]\n    local str2 = lst2[i]\n    local len1 = #str1\n\
    \    local len2 = #str2\n    if len1 > len2 then\n      lst3[i] = str1\n    elseif\
    \ len1 < len2 then\n      lst3[i] = str2\n    else\n      lst3[i] = str1 .. str2\n\
    \    end\n  end\n  return lst3\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local len1 = 0\n  local len2 = 0\n  for i = 1, len1 do\n    len1 = len1 + lst1[i]:len()\n\
    \  end\n  for i = 1, len2 do\n    len2 = len2 + lst2[i]:len()\n  end\n  if len1\
    \ == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend", "  local\
    \ len1, len2 = #lst1, #lst2\n  local count = 0\n  for i = 1, len1 do\n    if lst1[i]\
    \ < lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1 == len2 then\n\
    \    return lst1\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local len = 0\n  for i = 1, len1 do\n    len = len +\
    \ lst1[i]\n  end\n  for i = 1, len2 do\n    len = len + lst2[i]\n  end\n  if len\
    \ == len1 then\n    return lst1\n  elseif len == len2 then\n    return lst2\n\
    \  else\n    return nil\n  end\nend", "    local len1 = #lst1\n    local len2\
    \ = #lst2\n    local len = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        len = len + lst2[i]\n    end\n    if\
    \ len == len1 then\n        return lst1\n    elseif len == len2 then\n       \
    \ return lst2\n    else\n        return lst1\n    end\nend", "  local count =\
    \ 0\n  for _, v in pairs(lst1) do\n    if lst2[v] then\n      count = count +\
    \ 1\n    end\n  end\n  return lst1\nend", "   local len1 = #lst1\n   local len2\
    \ = #lst2\n   if len1 == len2 then\n      local i = 1\n      while i <= len1 do\n\
    \         if lst1[i] > lst2[i] then\n            len1 = len1 - 1\n         else\n\
    \            len2 = len2 - 1\n         end\n         i = i + 1\n      end\n  \
    \ end\n   return lst1\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local\
    \ len1 = 0\n  local len2 = 0\n  for i = 1, len1 do\n    len1 = len1 + lst1[i]\n\
    \  end\n  for i = 1, len2 do\n    len2 = len2 + lst2[i]\n  end\n  if len1 == len2\
    \ then\n    return lst1\n  else\n    return nil\n  end\nend", "    local len1\
    \ = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i = 1, len1 do\n\
    \        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len = len\
    \ + lst2[i]\n    end\n    if len == len1 then\n        return lst1\n    elseif\
    \ len == len2 then\n        return lst2\n    else\n        return lst1\n    end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n\
    \        return lst1\n    end\n    local total_len = 0\n    for i = 1, len1 do\n\
    \        total_len = total_len + #lst1[i]\n    end\n    for i = 1, len2 do\n \
    \       total_len = total_len + #lst2[i]\n    end\n    if total_len == len1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i = 1, len1\
    \ do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n        len\
    \ = len + lst2[i]\n    end\n    if len == len1 then\n        return lst1\n   \
    \ elseif len == len2 then\n        return lst2\n    else\n        return lst1\n\
    \    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2\
    \ then\n    return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n \
    \ local count = 0\n  for i = 1, len1 do\n    if lst1[i] < lst2[i] then\n     \
    \ count = count + 1\n    end\n  end\n  if len1 == len2 then\n    return lst1\n\
    \  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  local len1 = 0\n  local len2 = 0\n  local i = 0\n  local j = 0\n  local result\
    \ = []\n  while i < len1 and j < len2 do\n    if lst1[i] < lst2[j] then\n    \
    \  len1 = len1 + 1\n      i = i + 1\n    else\n      len2 = len2 + 1\n      j\
    \ = j + 1\n    end\n  end\n  if len1 == len2 then\n    for i = 1, len1 do\n  \
    \    table.insert(result, lst1[i])\n    end\n  else\n    for i = 1, len1 do\n\
    \      table.insert(result, lst1[i])\n    end\n  end\n  return result\nend", " \
    \   local len1 = #lst1\n    local len2 = #lst2\n    local len = 0\n    for i =\
    \ 1, len1 do\n        len = len + lst1[i]\n    end\n    for i = 1, len2 do\n \
    \       len = len + lst2[i]\n    end\n    if len == len1 then\n        return\
    \ lst1\n    elseif len == len2 then\n        return lst2\n    else\n        return\
    \ lst1\n    end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local\
    \ len = 0\n    local i = 0\n    while i < len1 do\n        len = len + lst1[i]\n\
    \        i = i + 1\n    end\n    i = 0\n    while i < len2 do\n        len = len\
    \ + lst2[i]\n        i = i + 1\n    end\n    if len == len1 then\n        return\
    \ lst1\n    elseif len == len2 then\n        return lst2\n    else\n        return\
    \ lst1\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local i\
    \ = 0\n  local j = 0\n  local total = 0\n  while i < len1 and j < len2 do\n  \
    \  if lst1[i] < lst2[j] then\n      total = total + 1\n      i = i + 1\n    else\n\
    \      total = total + 1\n      j = j + 1\n    end\n  end\n  if i == len1 then\n\
    \    return lst1\n  elseif j == len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 ==\
    \ len2 then\n    return lst1\n  elseif len1 < len2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local total = 0\n    for i = 1, len1 do\n        total = total + #lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        total = total + #lst2[i]\n    end\n\
    \    if total == len1 then\n        return lst1\n    elseif total == len2 then\n\
    \        return lst2\n    else\n        return lst1\n    end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local len1 = 0\n    local len2 = 0\n\
    \    for i = 1, len1 do\n        len1 = len1 + lst1[i]\n    end\n    for i = 1,\
    \ len2 do\n        len2 = len2 + lst2[i]\n    end\n    if len1 == len2 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1 do\n   \
    \ total = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total + lst2[i]\n\
    \  end\n  if len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  local len3 = len1 + len2\n\
    \  local len4 = len1 + len2\n  local len5 = len1 + len2\n  local len6 = len1 +\
    \ len2\n  local len7 = len1 + len2\n  local len8 = len1 + len2\n  local len9 =\
    \ len1 + len2\n  local len10 = len1 + len2\n  local len11 = len1 + len2\n  local\
    \ len12 = len1 + len2\n  local len13 = len1 + len2\n  local len14 = len1 + len2\n\
    \  local len15 = len1 + len2\n  local len16 = len1 + len2\n  local len17 = len1\
    \ + len2\n  local len18 = len1 + len2\n  local len19 = len1 + len2\n  local len20\
    \ = len1 + len2\n  local len21 = len1 + len2\n  local len22 = len1 + len2\n  local\
    \ len23 = len1 + len2\n  local len24 = len1 + len2\n  local len25 = len1 + len2\n\
    \  local len26 = len1 + len2\n  local len27 = len1 + len2\n  local len28 = len1\
    \ + len2\n  local len29 = len1 + len2\n  local len30 = len1 + len2\n  local len31\
    \ = len1 + len2\n  local len32 = len1 + len2\n  local len33 = len1 + len2\n  local\
    \ len34 = len1 + len2\n  local len35 = len1 + len2\n  local len36 = len1 + len2\n\
    \  local len37 = len1 + len2\n  local len38 = len1 + len2\n  local len39 = len1\
    \ + len2\n  local len40 = len1 + len2\n  local len41 = len1 + len2\n  local len42\
    \ = len1 + len2\n  local len43 = len1 + len2\n  local len44 = len1 + len2\n  local\
    \ len45 = len1 + len2\n  local len46 = len1 + len2\n  local len47 = len1 + len2\n\
    \  local len48 = len1 + len2\n  local len49 = len1 + len2\n  local len50 = len1\
    \ + len2\n  local len51 = len1 + len2\n  local len52 = len1 + len2\n  local len53\
    \ = len", "  local len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n  for\
    \ i = 1, len1 do\n    len = len + lst1[i]\n  end\n  for i = 1, len2 do\n    len\
    \ = len + lst2[i]\n  end\n  if len == len1 then\n    return lst1\n  elseif len\
    \ == len2 then\n    return lst2\n  else\n    return nil\n  end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n        for\
    \ i = 1, len1 do\n            if lst1[i] > lst2[i] then\n                return\
    \ lst1\n            end\n        end\n        return lst2\n    end\n    if len1\
    \ > len2 then\n        for i = 1, len2 do\n            if lst2[i] > lst1[i] then\n\
    \                return lst2\n            end\n        end\n        return lst1\n\
    \    end\n    for i = 1, len1 do\n        if lst1[i] > lst2[i] then\n        \
    \    return lst1\n        end\n    end\n    return lst2\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local len1 = 0\n  local len2 = 0\n  local i =\
    \ 0\n  local j = 0\n  local count = 0\n  while i < len1 and j < len2 do\n    if\
    \ lst1[i] < lst2[j] then\n      count = count + 1\n      i = i + 1\n    else\n\
    \      count = count + 1\n      j = j + 1\n    end\n  end\n  if i == len1 then\n\
    \    return lst1\n  elseif j == len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local\
    \ count = 0\n    for i = 1, len1 do\n        if lst1[i] < lst2[i] then\n     \
    \       count = count + 1\n        end\n    end\n    if len1 == len2 then\n  \
    \      return lst1\n    end\n    for i = 1, len2 do\n        if lst2[i] < lst1[i]\
    \ then\n            count = count + 1\n        end\n    end\n    return lst1\n\
    end", "    local num_chars = 0\n    for _, v in ipairs(lst1) do\n        num_chars\
    \ = num_chars + #v\n    end\n    for _, v in ipairs(lst2) do\n        num_chars\
    \ = num_chars + #v\n    end\n    if num_chars == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "  local total = 0\n  for _, v\
    \ in ipairs(lst1) do\n    total = total + #v\n  end\n  for _, v in ipairs(lst2)\
    \ do\n    total = total + #v\n  end\n  if total == #lst1 then\n    return lst1\n\
    \  elseif total == #lst2 then\n    return lst2\n  else\n    return nil\n  end\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n  \
    \  return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len1\
    \ = 0\n  local len2 = 0\n  for i = 1, len1 do\n    len1 = len1 + lst1[i]:len()\n\
    \  end\n  for i = 1, len2 do\n    len2 = len2 + lst2[i]:len()\n  end\n  if len1\
    \ == len2 then\n    return lst1\n  else\n    return lst1\n  end\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n        for\
    \ i = 1, len1 do\n            if lst1[i] < lst2[i] then\n                return\
    \ lst1\n            end\n        end\n        return lst1\n    end\n    if len1\
    \ > len2 then\n        for i = 1, len2 do\n            if lst2[i] < lst1[i] then\n\
    \                return lst2\n            end\n        end\n        return lst2\n\
    \    end\n    for i = 1, len1 do\n        if lst1[i] > lst2[i] then\n        \
    \    return lst1\n        end\n    end\n    return lst2\nend", "  local len1 =\
    \ #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1 do\n    total\
    \ = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total + lst2[i]\n\
    \  end\n  if total == len1 then\n    return lst1\n  elseif total == len2 then\n\
    \    return lst2\n  else\n    return nil\n  end\nend", "  local num_chars = 0\n\
    \  for _, v in pairs(lst1) do\n    num_chars = num_chars + #v\n  end\n  for _,\
    \ v in pairs(lst2) do\n    num_chars = num_chars + #v\n  end\n  if num_chars ==\
    \ 0 then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local len1\
    \ = #lst1\n  local len2 = #lst2\n  local total = 0\n  for i = 1, len1 do\n   \
    \ total = total + lst1[i]\n  end\n  for i = 1, len2 do\n    total = total + lst2[i]\n\
    \  end\n  if len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n  \
    \  return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "   local len1 = #lst1\n   local len2 = #lst2\n   if len1\
    \ == len2 then\n      local i = 1\n      while i < len1 do\n         if lst1[i]\
    \ > lst2[i] then\n            len1 = len1 - 1\n         else\n            len2\
    \ = len2 - 1\n         end\n         i = i + 1\n      end\n      return lst1\n\
    \   elseif len1 > len2 then\n      local i = 1\n      while i < len1 do\n    \
    \     if lst1[i] > lst2[i] then\n            len1 = len1 - 1\n         else\n\
    \            len2 = len2 - 1\n         end\n         i = i + 1\n      end\n  \
    \    return lst2\n   else\n      local i = 1\n      while i < len1 do\n      \
    \   if lst1[i] > lst2[i] then\n            len1 = len1 - 1\n         else\n  \
    \          len2 = len2 - 1\n         end\n         i = i + 1\n      end\n    \
    \  return lst1\n   end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n\
    \    local total = 0\n    for i = 1, len1 do\n        total = total + lst1[i]\n\
    \    end\n    for i = 1, len2 do\n        total = total + lst2[i]\n    end\n \
    \   if len1 == len2 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    local len\
    \ = 0\n    for i = 1, len1 do\n        len = len + lst1[i]\n    end\n    for i\
    \ = 1, len2 do\n        len = len + lst2[i]\n    end\n    if len == len1 then\n\
    \        return lst1\n    elseif len == len2 then\n        return lst2\n    else\n\
    \        return lst1\n    end\nend", "  local num_chars = 0\n  for _, v in pairs(lst1)\
    \ do\n    num_chars = num_chars + #v\n  end\n  for _, v in pairs(lst2) do\n  \
    \  num_chars = num_chars + #v\n  end\n  if num_chars == #lst1 then\n    return\
    \ lst1\n  else\n    return lst2\n  end\nend", "   local len1 = #lst1\n   local\
    \ len2 = #lst2\n   if len1 == len2 then\n      return lst1\n   elseif len1 < len2\
    \ then\n      return lst2\n   else\n      return lst1\n   end\nend", "  local\
    \ total = 0\n  for _, v in ipairs(lst1) do\n    total = total + #v\n  end\n  for\
    \ _, v in ipairs(lst2) do\n    total = total + #v\n  end\n  if total == #lst1\
    \ then\n    return lst1\n  elseif total == #lst2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "    local num_chars = 0\n    for _, v in pairs(lst1)\
    \ do\n        num_chars = num_chars + #v\n    end\n    for _, v in pairs(lst2)\
    \ do\n        num_chars = num_chars + #v\n    end\n    if num_chars == #lst1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ count = 0\n    for _, v in ipairs(lst1) do\n        count = count + #v\n   \
    \ end\n    for _, v in ipairs(lst2) do\n        count = count + #v\n    end\n\
    \    if count == #lst1 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 ==\
    \ len2 then\n        for i = 1, len1 do\n            if lst1[i] < lst2[i] then\n\
    \                return lst1\n            end\n        end\n        return lst1\n\
    \    end\n    if len1 > len2 then\n        for i = 1, len2 do\n            if\
    \ lst2[i] < lst1[i] then\n                return lst2\n            end\n     \
    \   end\n        return lst2\n    end\n    for i = 1, len1 do\n        if lst1[i]\
    \ > lst2[i] then\n            return lst1\n        end\n    end\n    return lst2\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  local total = 0\n  for i\
    \ = 1, len1 do\n    total = total + lst1[i]:len() \n  end\n  for i = 1, len2 do\n\
    \    total = total + lst2[i]:len() \n  end\n  if total == len1 then\n    return\
    \ lst1\n  elseif total == len2 then\n    return lst2\n  else\n    return lst1\n\
    \  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2 then\n\
    \    return lst1\n  elseif len1 > len2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len\n\
    \  if len1 == len2 then\n    len = len1\n  else\n    len = len1\n    for i = 1,\
    \ len2 do\n      if lst1[i] > lst2[i] then\n        len = len\n        break\n\
    \      end\n    end\n  end\n  \n  local lst3 = {}\n  for i = 1, len do\n    lst3[i]\
    \ = lst1[i]\n  end\n  \n  for i = 1, len2 do\n    lst3[len] = lst2[i]\n  end\n\
    \  \n  return lst3\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local\
    \ len1 = 0\n  local len2 = 0\n  local i = 0\n  local j = 0\n  while i < len1 and\
    \ j < len2 do\n    if lst1[i] < lst2[j] then\n      len1 = len1 + 1\n      i =\
    \ i + 1\n    else\n      len2 = len2 + 1\n      j = j + 1\n    end\n  end\n  if\
    \ len1 == len2 then\n    return lst1\n  else\n    return lst2\n  end\nend", " \
    \  local count = 0\n   for _, v in pairs(lst1) do\n      count = count + #v\n\
    \   end\n   for _, v in pairs(lst2) do\n      count = count + #v\n   end\n   if\
    \ count == #lst1 then\n      return lst1\n   elseif count == #lst2 then\n    \
    \  return lst2\n   else\n      return nil\n   end\nend", "    local count = 0\n\
    \    for _, v in pairs(lst1) do\n        if v < lst2[1] then\n            count\
    \ = count + 1\n        end\n    end\n    if count == #lst1 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n    if lst1[i]\
    \ < lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1 == len2 then\n\
    \    return lst1\n  else\n    return lst1\n  end\nend", "  local len1 = #lst1\n\
    \  local len2 = #lst2\n  local count = 0\n  for i = 1, len1 do\n    if lst1[i]\
    \ < lst2[i] then\n      count = count + 1\n    end\n  end\n  if len1 == len2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "    local len1 = #lst1\n\
    \    local len2 = #lst2\n    local len1 = 0\n    local len2 = 0\n    local i =\
    \ 0\n    local j = 0\n    local total = 0\n    while i < len1 and j < len2 do\n\
    \        if lst1[i] < lst2[j] then\n            total = total + 1\n          \
    \  i = i + 1\n        else\n            total = total + 1\n            j = j +\
    \ 1\n        end\n    end\n    if len1 == len2 then\n        return lst1\n   \
    \ end\n    if len1 < len2 then\n        return lst1\n    end\n    return lst2\n\
    end", "  local len1 = #lst1\n  local len2 = #lst2\n  local count = 0\n  for i\
    \ = 1, len1 do\n    if lst1[i] > lst2[i] then\n      count = count + 1\n    end\n\
    \  end\n  if len1 == len2 then\n    return lst1\n  else\n    return lst1\n  end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n\
    \        for i = 1, len1 do\n            if lst1[i] < lst2[i] then\n         \
    \       return lst1\n            end\n        end\n        return lst1\n    end\n\
    \    if len1 > len2 then\n        for i = 1, len2 do\n            if lst1[i] <\
    \ lst2[i] then\n                return lst2\n            end\n        end\n  \
    \      return lst2\n    end\n    for i = 1, len1 do\n        if lst1[i] > lst2[i]\
    \ then\n            return lst1\n        end\n    end\n    return lst2\nend",
  "  local total = 0\n  for _, v in ipairs(lst1) do\n    total = total + #v\n  end\n\
    \  for _, v in ipairs(lst2) do\n    total = total + #v\n  end\n  if total == #lst1\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local len1\
    \ = #lst1\n    local len2 = #lst2\n    local count = 0\n    for i = 1, len1 do\n\
    \        if lst1[i] < lst2[i] then\n            count = count + 1\n        end\n\
    \    end\n    if len1 == len2 then\n        return lst1\n    end\n    if len1\
    \ < len2 then\n        for i = 1, len2 do\n            if lst2[i] < lst1[i] then\n\
    \                count = count + 1\n            end\n        end\n    end\n  \
    \  return lst1\nend", "   local len1 = #lst1\n   local len2 = #lst2\n   if len1\
    \ == len2 then\n      local lst3 = {}\n      for i = 1, len1 do\n         local\
    \ char = lst1[i]\n         if lst2[i] ~= char then\n            lst3[#lst3+1]\
    \ = char\n         end\n      end\n      return lst3\n   else\n      return lst1\n\
    \   end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  local len = 0\n\
    \  local i = 0\n  while i < len1 do\n    len = len + lst1[i]\n    i = i + 1\n\
    \  end\n  i = 0\n  while i < len2 do\n    len = len + lst2[i]\n    i = i + 1\n\
    \  end\n  if len == len1 then\n    return lst1\n  elseif len == len2 then\n  \
    \  return lst2\n  else\n    local j = 0\n    local k = 0\n    local m = 0\n  \
    \  local n = 0\n    local o = 0\n    local p = 0\n    local q = 0\n    local r\
    \ = 0\n    local s = 0\n    local t = 0\n    local u = 0\n    local v = 0\n  \
    \  local w = 0\n    local x = 0\n    local y = 0\n    local z = 0\n    local a\
    \ = 0\n    local b = 0\n    local c = 0\n    local d = 0\n    local e = 0\n  \
    \  local f = 0\n    local g = 0\n    local h = 0\n    local i = 0\n    local j\
    \ = 0\n    local k = 0\n    local l = 0\n    local m = 0\n    local n = 0\n  \
    \  local o = 0\n    local p = 0\n    local q = 0\n    local r = 0\n    local s\
    \ = 0\n    local t = 0\n    local u = 0\n    local v = 0\n    local w = 0\n  \
    \  local x = 0\n    local y = 0\n    local z = 0\n    local a = 0\n    local b\
    \ = 0\n    local c = 0\n    local d = 0\n    local e = 0\n    local f = 0\n  \
    \  local g = 0\n    local h = 0\n    local i = 0\n    local j = 0\n    local k\
    \ = 0\n    local l = 0\n    local m = 0\n    local n = 0\n    local o = 0\n  \
    \  local p = 0\n    local q = 0\n    local r = 0\n    local s = 0\n    local t\
    \ = 0\n    local u = 0\n    local v = 0\n    local w = 0\n    local x = 0\n  \
    \  local y = 0\n    local z = 0\n    local a = 0\n    local b = 0\n    local c\
    \ = 0\n    local d = 0\n    local e = 0\n    local f = 0\n    local g = 0\n  \
    \  local h = 0\n    local i = 0\n    local j = 0\n    local k = 0\n    local l\
    \ = 0\n    local m = 0\n    local n = 0\n    local o = 0\n    local p = 0\n  \
    \  "]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

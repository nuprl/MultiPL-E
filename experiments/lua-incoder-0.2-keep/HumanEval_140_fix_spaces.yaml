name: HumanEval_140_fix_spaces
language: lua
prompt: "-- Given a string text, replace all spaces in it with underscores, \n-- and\
  \ if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
  \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"Example\
  \ 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\n-- fix_spaces(\"\
  \ Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
  \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
  \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
  \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
  \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local spaces = text:gsub(\"%S\", \" \")\n  if spaces ~= \"\" then\n\
    \    spaces = spaces:gsub(\"%S\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if spaces ~=\
    \ text then\n    return spaces\n  else\n    return text:gsub(\"%S+\", \"_\")\n\
    \  end\nend", "  local spaces = text:gsub(\"%S+\", \" \")\n  if spaces ~= text\
    \ then\n    spaces = spaces:gsub(\"%S+\", \"_\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%", "  local spaces\
    \ = text:gsub(\"%S+\", \" \")\n  if spaces ~= \"\" then\n    spaces = spaces:gsub(\"\
    %S+\", \" \")\n    if spaces ~= \"\" then\n      spaces = spaces:gsub(\"%S+\"\
    , \"_\")\n    end\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces ~= text then\n\
    \    return spaces:gsub(\"%S+\", \"_\")\n  end\n  return text\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return \"_\"..s2\n    end)\n  end)\n  local spaces_count = spaces:gsub(\"\
    %S+\", \"\")\n  if spaces_count > 2 then\n    spaces = spaces:gsub(\"%S+\", function\
    \ (s)\n      return \"_\"..s\n    end)\n  end\n  return spaces\nend", "  text\
    \ = text:gsub(\"%S+\", function(s) return s:gsub(\"%S+\", function(s2) return\
    \ s2:gsub(\"%S+\", \"_\") end)end)\n  text = text:gsub(\"%S+$\", function(s) return\
    \ s:gsub(\"%S+$\", function(s2) return s2:gsub(\"%S+$\", \"_\") end)end)\n  return\
    \ text\nend", "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"\
    %S+\", function (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n\
    \  if spaces ~= text then\n    return spaces\n  else\n    return text:gsub(\"\
    %S+\", function (s)\n      return s:gsub(\"%S+\", function (s2)\n        return\
    \ s2:gsub(\"%S+\", \"-\")\n      end)\n    end)\n  end\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n\
    \      return \"_\"..s2\n    end)\n  end)\n  if spaces:gsub(\"%S+\", \"%S\") >\
    \ 2 then\n    spaces = spaces:gsub(\"%S+\", \"%S-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"\
    %S+\", function (s2)\n      return \"_\" .. s2\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):", "  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\"\
    , \"_\") end)\n  if spaces:gsub(\"%S+\", \"_\") ~= spaces then\n    return text:gsub(\"\
    %S+\", \"_\")\n  else\n    return text\n  end\nend", "  text = text:gsub(\"%S+\"\
    , function(s) return s:gsub(\"%S+\", \"_\") end)\n  text = text:gsub(\"%S+$\"\
    , function(s) return s:gsub(\"%S+\", \"_\") end)\n  return text\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (t)\n      return \"_\"..t\n    end)\n  end)\n  if spaces:gsub(\"%S+\", \"%S\"\
    ) > 2 then\n    spaces = spaces:gsub(\"%S+\", \"%S-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"%S\", \" \")\n  if spaces ~= \"\" then\n \
    \   spaces = spaces:gsub(\"%S+\", \" \")\n    if spaces ~= \"\" then\n      spaces\
    \ = spaces:gsub(\"%S{2,}\", \" \")\n    end\n  end\n  return spaces\nend", " \
    \ text = text:gsub(\"[%z\\1-\\3]\", function(c) return c:lower() end)\n  text\
    \ = text:gsub(\"[%z\\1-\\3]\", function(c) return c:upper() end)\n  text = text:gsub(\"\
    [%z\\1-\\3]\", function(c) return c:sub(1,1) end)\n  text = text:gsub(\"[%z\\\
    1-\\3]\", function(c) return c:sub(2,2) end)\n  return text\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces\
    \ ~= text then\n    return spaces:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", \"-\") end)\n  else\n    return text\n  end\nend", "  local spaces = text:gsub(\"\
    %S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return \"\
    _\"..s2\n    end)\n  end)\n  if spaces:gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"\
    ):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):", "  local spaces\
    \ = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces\
    \ ~= text then\n    return text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\"\
    , \"_\") end)\n  else\n    return text\n  end\nend", "  text = text:gsub(\"%S+\"\
    , function(s) return s:gsub(\"%S+\", \"_\") end)\n  text = text:gsub(\"%S+$\"\
    , function(s) return s:gsub(\"%S+\", \"_\") end)\n  return text\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

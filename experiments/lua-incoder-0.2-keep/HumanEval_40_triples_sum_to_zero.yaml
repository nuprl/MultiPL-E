name: HumanEval_40_triples_sum_to_zero
language: lua
prompt: "-- triples_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are three distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\n-- >>> triples_sum_to_zero([1, 3, 5, 0])\n-- False\n-- >>> triples_sum_to_zero([1,\
  \ 3, -2, 1])\n-- True\n-- >>> triples_sum_to_zero([1, 2, 3, 7])\n-- False\n-- >>>\
  \ triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n-- True\n-- >>> triples_sum_to_zero([1])\n\
  -- False\nlocal function triples_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triples_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -1}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({1, 2, 5, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 9, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -100}), false)\n    lu.assertEquals(candidate({100, 3, 5, -100}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = 1, #l do\n    sum = sum + l[i]\n    if sum\
    \ > 0 then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ n = 0\n  local m = #l\n  while n > 0 and m < #l do\n    n = n - l[n]\n    m\
    \ = m - l[m]\n  end\n  return n == 0 and m == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local num_triples\
    \ = 0\n  local num_zeros = 0\n  for i = 1, #l do\n    local triple = l[i]\n  \
    \  local zeros = triple.zeros - triple.sum\n    if zeros == 0 then\n      num_triples\
    \ = num_triples + 1\n    elseif zeros > 0 then\n      num_zeros = num_zeros +\
    \ 1\n    end\n  end\n  return (num_triples == 3) and (num_zeros == 0)\nend", " \
    \ local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local n =\
    \ 0\n  for i = 1, #l do\n    n = n + l[i]\n  end\n  return n == 0\nend", "  local\
    \ n = 0\n  local m = #l\n  while n > 0 do\n    local n2 = m + n\n    local n3\
    \ = m + n2 + 1\n    local n4 = m + n3 + 1\n    local n5 = m + n4 + 1\n    local\
    \ n6 = m + n5 + 1\n    local n7 = m + n6 + 1\n    local n8 = m + n7 + 1\n    local\
    \ n9 = m + n8 + 1\n    local n10 = m + n9 + 1\n    local n11 = m + n10 + 1\n \
    \   local n12 = m + n11 + 1\n    local n13 = m + n12 + 1\n    local n14 = m +\
    \ n13 + 1\n    local n15 = m + n14 + 1\n    local n16 = m + n15 + 1\n    local\
    \ n17 = m + n16 + 1\n    local n18 = m + n17 + 1\n    local n19 = m + n18 + 1\n\
    \    local n20 = m + n19 + 1\n    local n21 = m + n20 + 1\n    local n22 = m +\
    \ n21\n    local n23 = m + n22 + 1\n    local n24 = m + n23 + 1\n    local n25\
    \ = m + n24 + 1\n    local n26 = m + n25 + 1\n    local n27 = m + n26 + 1\n  \
    \  local n28 = m + n27 + 1\n    local n29 = m + n28 + 1\n    local n30 = m + n29\
    \ + 1\n    local n31 = m + n30 + 1\n    local n32 = m + n31 + 1\n    local n33\
    \ = m + n32 + 1\n    local n34 = m + n33 + 1\n    local n35 = m + n34 + 1\n  \
    \  local n36 = m + n35 + 1\n    local n37 = m + n36 + 1\n    local n38 = m + n37\
    \ + 1\n    local n39 = m + n38 + 1\n    local n40 = m + n39 + 1\n    local n41\
    \ = m + n40 + 1\n    local n42 = m + n41 + 1\n    local n43 = m + n42 + 1\n  \
    \  local n44 = m + n43 + 1\n    local n45 = m + n44 + 1\n    local n46 = m + n45\
    \ + 1\n    local n47 = m + n46 + 1\n    local n48 = m + n47 + 1\n    local n49\
    \ = m + n48 + 1\n    local n50 = m + n49 + 1\n    local n51 = m + n50 + 1\n  \
    \  local n52 = m + n5", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local num_triples = 0\n\
    \  local num_zeros = 0\n  for i = 1, #l do\n    local triple = l[i]\n    local\
    \ zeros = 0\n    for j = 1, #triple do\n      if triple[j] == 0 then\n       \
    \ zeros = zeros + 1\n      end\n    end\n    if zeros == 3 then\n      num_triples\
    \ = num_triples + 1\n    end\n    if zeros == 0 then\n      num_zeros = num_zeros\
    \ + 1\n    end\n  end\n  return (num_triples == 3) and (num_zeros == 0)\nend",
  "  local n = 0\n  local s = nil\n  for _, v in pairs(l) do\n    local t = v\n  \
    \  if t > 0 then\n      n = n + t\n      s = s or t\n    end\n  end\n  return\
    \ n == 3\nend", "  local n = 0\n  local s = l[1]\n  for i = 2, #l do\n    n =\
    \ n + s[i]\n    if n == 0 then\n      return true\n    end\n  end\n  return false\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n    if sum\
    \ > 0 then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local n = 0\n  local\
    \ s = nil\n  for i = 1, #l do\n    local e = l[i]\n    if e ~= nil then\n    \
    \  n = n + e\n      if n == 0 then\n        s = i\n      end\n    end\n  end\n\
    \  return s == nil\nend", "  local n = 0\n  local s = nil\n  for i = 1, #l do\n\
    \    n = n + l[i]\n    if n == 0 then\n      s = i\n      break\n    end\n  end\n\
    \  return s == nil\nend", "  local s = #l\n  local i = 0\n  while i < s do\n \
    \   local j = i + 1\n    while j < s do\n      local k = j + 1\n      while k\
    \ < s do\n        local sum = l[i] + l[j] + l[k]\n        if sum == 0 then\n \
    \         return true\n        end\n        k = k + 1\n      end\n      j = j\
    \ + 1\n    end\n    i = i + 1\n  end\n  return false\nend", "  local sum = 0\n\
    \  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

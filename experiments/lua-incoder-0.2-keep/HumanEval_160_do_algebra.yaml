name: HumanEval_160_do_algebra
language: lua
prompt: "-- Given two lists operator, and operand. The first list has basic algebra\
  \ operations, and \n-- the second list is a list of integers. Use the two given\
  \ lists to build the algebric \n-- expression and return the evaluation of this\
  \ expression.\n-- The basic algebra operations:\n-- Addition ( + ) \n-- Subtraction\
  \ ( - ) \n-- Multiplication ( * ) \n-- Floor division ( // ) \n-- Exponentiation\
  \ ( ** ) \n-- Example:\n-- operator['+', '*', '-']\n-- array = [2, 3, 4, 5]\n--\
  \ result = 2 + 3 * 4 - 5\n-- => result = 9\n-- Note:\n-- The length of operator\
  \ list is equal to the length of operand list minus one.\n-- Operand is a list of\
  \ of non-negative integers.\n-- Operator list has at least one operator, and operand\
  \ list has at least two operands.\nlocal function do_algebra(operator, operand)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = do_algebra\n\
  \    lu.assertEquals(candidate({'**', '*', '+'}, {2, 3, 4, 5}), 37)\n    lu.assertEquals(candidate({'+',\
  \ '*', '-'}, {2, 3, 4, 5}), 9)\n    lu.assertEquals(candidate({'//', '*'}, {7, 3,\
  \ 4}), 8)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = operand[1]\n  for i = 2, #operand do\n    result =\
    \ operator[operator](result, operand[i])\n  end\n  return result\nend", "\tlocal\
    \ result = 0\n\tlocal index = 1\n\twhile index < #operator do\n\t\tlocal operator\
    \ = operator[index]\n\t\tlocal operand = operand[index]\n\t\tif operator == '+'\
    \ then\n\t\t\tresult = result + operand\n\t\telseif operator == '-' then\n\t\t\
    \tresult = result - operand\n\t\telseif operator == '*' then\n\t\t\tresult = result\
    \ * operand\n\t\telseif operator == '/' then\n\t\t\tresult = result // operand\n\
    \t\telseif operator == '**' then\n\t\t\tresult = result ** operand\n\t\telse\n\
    \t\t\tassert(false, \"Unknown operator: \" .. operator)\n\t\tend\n\t\tindex =\
    \ index + 1\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[operand[i-1]](result, operand[i])\n  end\n  return result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\
    \tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\t\
    local r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal\
    \ w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b\
    \ = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g =\
    \ 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\
    \tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\t\
    local r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal\
    \ w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b\
    \ = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g =\
    \ 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\
    \tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\t\
    local r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal\
    \ w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b\
    \ = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g =\
    \ 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\
    \tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\t\
    local r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal\
    \ w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b\
    \ = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g =\
    \ 0\n", "\tlocal result = 0\n\tlocal operator_count = #operator\n\tlocal operand_count\
    \ = #operand\n\tlocal i = 1\n\twhile i <= operand_count do\n\t\tlocal operand\
    \ = operand[i]\n\t\tlocal operator = operator[i]\n\t\tlocal operator_symbol =\
    \ operator:sub(1, 1)\n\t\tlocal operator_symbol_count = #operator_symbol\n\t\t\
    local operator_symbol_i = 0\n\t\twhile operator_symbol_i <= operator_symbol_count\
    \ do\n\t\t\tlocal operator_symbol = operator_symbol[operator_symbol_i]\n\t\t\t\
    local operator_symbol_count = #operator_symbol\n\t\t\tlocal operator_symbol_i\
    \ = 0\n\t\t\twhile operator_symbol_i <= operator_symbol_count do\n\t\t\t\tlocal\
    \ operator_symbol = operator_symbol[operator_symbol_i]\n\t\t\t\tlocal operator_symbol_count\
    \ = #operator_symbol\n\t\t\t\tlocal operator_symbol_i = 0\n\t\t\t\twhile operator_symbol_i\
    \ <= operator_symbol_count do\n\t\t\t\t\tlocal operator_symbol = operator_symbol[operator_symbol_i]\n\
    \t\t\t\t\tlocal operator_symbol_count = #operator_symbol\n\t\t\t\t\tlocal operator_symbol_i\
    \ = 0\n\t\t\t\t\twhile operator_symbol_i <= operator_symbol_count do\n\t\t\t\t\
    \t\tlocal operator_symbol = operator_symbol[operator_symbol_i]\n\t\t\t\t\t\tlocal\
    \ operator_symbol_count = #operator_symbol\n\t\t\t\t\t\tlocal operator_symbol_i\
    \ = 0\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tresult = result + (operand\
    \ - operator) * operator_symbol\n\t\ti = i + 1\n\tend\n\treturn result\nend",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[result]\n    result = operator[result]\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\n\
    \  end\n  return result\nend", "  local result = 0\n  for i = 1, #operator do\n\
    \    result = result + operand[#operand-i] * operator[i]\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tlocal i = 1\n\twhile i < #operand do\n\t\
    \tresult = operator[operand[i]](result, operand[i+1])\n\t\ti = i + 2\n\tend\n\t\
    return result\nend", "\tlocal result = 0\n\tlocal operator_count = #operator\n\
    \tlocal operand_count = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\
    \tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\t\
    local q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal\
    \ v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a\
    \ = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f =\
    \ 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\
    \tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\t\
    local q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal\
    \ v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a\
    \ = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f =\
    \ 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\
    \tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\t\
    local q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal\
    \ v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a\
    \ = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f =\
    \ 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\
    \tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\t\
    local q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal\
    \ v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a\
    \ = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "  local result = 0\n  local operator_count = #operator\n\
    \  local operand_count = #operand\n  local operator_stack = {}\n  local operand_stack\
    \ = {}\n  local operator_stack_size = #operator_stack\n  local operand_stack_size\
    \ = #operand_stack\n  local operator_stack_index = 0\n  local operand_stack_index\
    \ = 0\n  local operator_index = 0\n  local operand_index = 0\n  local operator_stack_value\n\
    \  local operand_stack_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n  local operator\n  local operand\n  local operator_value\n\
    \  local operand_value\n", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tlocal op = operator[i]\n\
    \t\tlocal operand2 = operand[i]\n\t\tif op == '+' then\n\t\t\tresult = result\
    \ + operand2\n\t\telseif op == '-' then\n\t\t\tresult = result - operand2\n\t\t\
    elseif op == '*' then\n\t\t\tresult = result * operand2\n\t\telseif op == '/'\
    \ then\n\t\t\tresult = result // operand2\n\t\telseif op == '**' then\n\t\t\t\
    result = result ** operand2\n\t\tend\n\tend\n\treturn result\nend", "\tlocal result\
    \ = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tlocal op = operator[i]\n\t\tlocal operand2 = operand[i]\n\
    \t\tlocal operand3 = operand2\n\t\tif op == '+' then\n\t\t\tresult = result +\
    \ operand2\n\t\telseif op == '-' then\n\t\t\tresult = result - operand2\n\t\t\
    elseif op == '*' then\n\t\t\tresult = result * operand2\n\t\telseif op == '/'\
    \ then\n\t\t\tresult = result // operand2\n\t\telseif op == '**' then\n\t\t\t\
    result = result ** operand2\n\t\tend\n\tend\n\treturn result\nend", "\tlocal result\
    \ = operand[1]\n\tfor i = 2, #operand do\n\t\tlocal op = operator[i]\n\t\tlocal\
    \ operand2 = operand[i]\n\t\tresult = op * result + operand2\n\tend\n\treturn\
    \ result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "\tlocal result = 0\n\tlocal index = 1\n\twhile index\
    \ <= #operator do\n\t\tresult = result + operand[index - 1] * operator[index]\n\
    \t\tindex = index + 1\n\tend\n\treturn result\nend", "  local result = 0\n  local\
    \ index = 1\n  local length = #operand\n  while index < length do\n    local operator\
    \ = operator[index]\n    local operand = operand[index]\n    local value = operand\n\
    \    if operator == '+' then\n      value = value + operand\n    elseif operator\
    \ == '-' then\n      value = value - operand\n    elseif operator == '*' then\n\
    \      value = value * operand\n    elseif operator == '/' then\n      value =\
    \ value // operand\n    elseif operator == '**' then\n      value = value ^ operand\n\
    \    end\n    result = value\n    index = index + 1\n  end\n  return result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = 0\n  for i = 1, #operand\
    \ do\n    local operand1 = operand[i]\n    local operand2 = operand[i - 1]\n \
    \   local operator1 = operator[i]\n    local operator2 = operator[i - 1]\n   \
    \ local operation = operator1 * operand1 + operator2 * operand2\n    if operation\
    \ > result then\n      result = operation\n    end\n  end\n  return result\nend",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[result]\n  end\n  return result\nend", "    local\
    \ result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = 0\n  local operator_count\
    \ = #operator\n  local operand_count = #operand\n  for i = 1, operand_count do\n\
    \    local operand = operand[i]\n    local operator = operator[i]\n    if operator\
    \ == '+' then\n      result = result + operand\n    elseif operator == '-' then\n\
    \      result = result - operand\n    elseif operator == '*' then\n      result\
    \ = result * operand\n    elseif operator == '/' then\n      result = result /\
    \ operand\n    elseif operator == '//' then\n      result = result // operand\n\
    \    elseif operator == '**' then\n      result = result ** operand\n    end\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\
    \t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "\tlocal result = operand[1]\n\
    \tfor i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\
    \tend\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "  local result = 0\n  for i = 1, #operator do\n    result = result + operand[i-1]\
    \ * operator[i]\n  end\n  return result\nend", "  local result = 0\n  for i =\
    \ 1, #operator do\n    local op = operator[i]\n    local operand1 = operand[i]\n\
    \    local operand2 = operand[i + 1]\n    if op == '+' then\n      result = result\
    \ + operand1\n    elseif op == '-' then\n      result = result - operand1\n  \
    \  elseif op == '*' then\n      result = result * operand1\n    elseif op == '/'\
    \ then\n      result = result / operand1\n    elseif op == '//' then\n      result\
    \ = result // operand1\n    elseif op == '**' then\n      result = result ** operand1\n\
    \    end\n  end\n  return result\nend", "  local result = operand[1]\n  for i\
    \ = 2, #operand do\n    result = operator[operand[i-1]](result, operand[i])\n\
    \  end\n  return result\nend", "\tlocal result = nil\n\tlocal operator_count =\
    \ #operator\n\tlocal operand_count = #operand\n\tlocal operator_stack = {}\n\t\
    local operand_stack = {}\n\tlocal operator_stack_size = #operator_stack\n\tlocal\
    \ operand_stack_size = #operand_stack\n\tlocal operator_stack_index = 1\n\tlocal\
    \ operand_stack_index = 1\n\tlocal operator_stack_value = operator[operator_stack_index]\n\
    \tlocal operand_stack_value = operand[operand_stack_index]\n\twhile operator_stack_index\
    \ <= operator_stack_size and operand_stack_index <= operand_stack_size do\n\t\t\
    local operator = operator[operator_stack_index]\n\t\tlocal operand = operand[operand_stack_index]\n\
    \t\tlocal operator_stack_value = operator[operator_stack_index]\n\t\tlocal operand_stack_value\
    \ = operand[operand_stack_index]\n\t\tlocal operator_stack_value = operator[operator_stack_index]\n\
    \t\tlocal operand_stack_value = operand[operand_stack_index]\n\t\tlocal operator_stack_value\
    \ = operator[operator_stack_index]\n\t\tlocal operand_stack_value = operand[operand_stack_index]\n\
    \t\tif operator == '+' then\n\t\t\tresult = result + operand_stack_value\n\t\t\
    elseif operator == '-' then\n\t\t\tresult = result - operand_stack_value\n\t\t\
    elseif operator == '*' then\n\t\t\tresult = result * operand_stack_value\n\t\t\
    elseif operator == '/' then\n\t\t\tresult = result / operand_stack_value\n\t\t\
    elseif operator == '//' then\n\t\t\tresult = result // operand_stack_value\n\t\
    \telseif operator == '**' then\n\t\t\tresult = result ** operand_stack_value\n\
    \t\tend\n\t\toperator_stack_index = operator_stack_index + 1\n\t\toperand_stack_index\
    \ = operand_stack_index + 1\n\tend\n\treturn result\nend", "    local result =\
    \ 0\n    for i = 1, #operand do\n        local op = operator[i]\n        local\
    \ operand1 = operand[i]\n        local operand2 = operand[i + 1]\n        local\
    \ result1 = op == '+' and operand1 or operand1\n        local result2 = op ==\
    \ '-' and operand1 or operand2\n        local result3 = op == '*' and operand1\
    \ * operand2 or operand1 * operand2\n        local result4 = op == '/' and operand1\
    \ ~= 0 and operand2 ~= 0 and operand1 / operand2 or operand1 // operand2\n   \
    \     local result5 = op == '**' and operand1 ~= 0 and operand2 ~= 0 and operand1\
    \ ^ operand2 or operand1 ^ operand2\n        result = result + result1 + result2\
    \ + result3 + result4 + result5\n    end\n    return result\nend", "\tlocal result\
    \ = 0\n\tlocal index = 1\n\twhile index <= #operator do\n\t\tlocal operation =\
    \ operator[index]\n\t\tlocal operand1 = operand[index-1]\n\t\tlocal operand2 =\
    \ operand[index]\n\t\tlocal result = result + (operation == '+' and operand1 or\
    \ operand2)\n\t\tindex = index + 1\n\tend\n\treturn result\nend", "\tlocal result\
    \ = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "    local result = operand[1]\n    for i =\
    \ 2, #operand do\n        result = operator[operator](result, operand[i])\n  \
    \  end\n    return result\nend", "\tlocal result = nil\n\tlocal length = #operand\n\
    \tlocal i = 0\n\t\n\twhile i < length do\n\t\tlocal op = operator[i]\n\t\tlocal\
    \ a = operand[i]\n\t\t\n\t\tif op == \"+\" then\n\t\t\tresult = result + a\n\t\
    \telseif op == \"-\" then\n\t\t\tresult = result - a\n\t\telseif op == \"*\" then\n\
    \t\t\tresult = result * a\n\t\telseif op == \"/\" then\n\t\t\tresult = result\
    \ // a\n\t\telseif op == \"**\" then\n\t\t\tresult = result ** a\n\t\tend\n\t\t\
    \n\t\ti = i + 1\n\tend\n\t\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "\tlocal result = operand[1]\n\tfor i = 2,\
    \ #operand do\n\t\tlocal op = operator[i]\n\t\tresult = op * result + operand[i]\n\
    \tend\n\treturn result\nend", "  local result = 0\n  for i = 1, #operator do\n\
    \    result = result + operand[i] * operator[i]\n  end\n  return result\nend",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "\tlocal result = nil\n\tlocal\
    \ operator_count = #operator\n\tlocal operand_count = #operand\n\t\n\tif operator_count\
    \ ~= operand_count then\n\t\terror(\"Operator list has \" .. operator_count ..\
    \ \" operators, operand list has \" .. operand_count .. \" operands\")\n\tend\n\
    \t\n\tlocal i = 0\n\t\n\twhile i < operator_count do\n\t\tlocal operator = operator[i]\n\
    \t\tlocal operand = operand[i]\n\t\t\n\t\tlocal operation = operator\n\t\t\n\t\
    \tif i == 0 then\n\t\t\toperation = operation .. operand\n\t\telse\n\t\t\toperation\
    \ = operation .. \" \" .. operand\n\t\tend\n\t\t\n\t\tresult = math.fmod(result,\
    \ math.fmod(operation, 1))\n\t\t\n\t\ti = i + 1\n\tend\n\t\n\treturn result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\
    \ .. operand[i]\n  end\n  return result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\tlocal E =\
    \ 0\n\tlocal F = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal J = 0\n\
    \tlocal K = 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O = 0\n\t\
    local P = 0\n\tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal\
    \ U = 0\n\tlocal V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z\
    \ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal\
    \ AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal\
    \ AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal\
    \ AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal\
    \ AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal\
    \ AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal\
    \ AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal\
    \ AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal\
    \ AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal\
    \ AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal\
    \ AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal\
    \ AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal ", "  local result = 0\n  for\
    \ i = 1, #operator do\n    result = result + operand[#operand] * operator[i]\n\
    \  end\n  return result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = operand[1]\n\t\
    local i = 2\n\twhile i < #operand do\n\t\tlocal op = operator[i]\n\t\tlocal operand2\
    \ = operand[i]\n\t\tlocal operand3 = operand[i + 1]\n\t\tlocal operand4 = operand[i\
    \ + 2]\n\t\tlocal operand5 = operand[i + 3]\n\t\tlocal operand6 = operand[i +\
    \ 4]\n\t\tlocal operand7 = operand[i + 5]\n\t\tlocal operand8 = operand[i + 6]\n\
    \t\tlocal operand9 = operand[i + 7]\n\t\tlocal operand10 = operand[i + 8]\n\t\t\
    local operand11 = operand[i + 9]\n\t\tlocal operand12 = operand[i + 10]\n\t\t\
    local operand13 = operand[i + 11]\n\t\tlocal operand14 = operand[i + 12]\n\t\t\
    local operand15 = operand[i + 13]\n\t\tlocal operand16 = operand[i + 14]\n\t\t\
    local operand17 = operand[i + 15]\n\t\tlocal operand18 = operand[i + 16]\n\t\t\
    local operand19 = operand[i + 17]\n\t\tlocal operand20 = operand[i + 18]\n\t\t\
    local operand21 = operand[i + 19]\n\t\tlocal operand22 = operand[i + 20]\n\t\t\
    local operand23 = operand[i + 21]\n\t\tlocal operand24 = operand[i + 22]\n\t\t\
    local operand25 = operand[i + 23]\n\t\tlocal operand26 = operand[i + 24]\n\t\t\
    local operand27 = operand[i + 25]\n\t\tlocal operand28 = operand[i + 26]\n\t\t\
    local operand29 = operand[i + 27]\n\t\tlocal operand30 = operand[i + 28]\n\t\t\
    local operand31 = operand[i + 29]\n\t\tlocal operand32 = operand[i + 30]\n\t\t\
    local operand33 = operand[i + 31]\n\t\tlocal operand34 = operand[i + 32]\n\t\t\
    local operand35 = operand[i + 33]\n\t\tlocal operand36 = operand[i + 34]\n\t\t\
    local operand37 = operand[i + 35]\n\t\tlocal operand38 = operand[i + 36]\n\t\t\
    local operand39 = operand[i + 37]\n\t\tlocal operand40 = operand[i + 38]\n\t\t\
    local operand41 = operand[i + 39]\n\t\tlocal operand42 = operand[i + 40]\n\t\t\
    local operand43 = operand[i + 41]\n\t\tlocal operand44 = operand[i + 42]\n\t\t\
    local operand45 = operand[i + 43]\n\t\tlocal operand46 = operand[i + 44]\n\t\t\
    local operand47 = operand[i + 45]\n\t\tlocal operand48 = operand[i + 46]\n\t\t\
    local operand49 = operand[i + 47]\n\t\tlocal operand50 = operand[i + 48]\n\t\t\
    local operand51 = operand[i + 49]\n\t\tlocal operand52 = operand[i + 50]\n\t\t\
    local ", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tlocal op\
    \ = operator[i]\n\t\tlocal operand2 = operand[i]\n\t\tif op == '+' then\n\t\t\t\
    result = result + operand2\n\t\telseif op == '-' then\n\t\t\tresult = result -\
    \ operand2\n\t\telseif op == '*' then\n\t\t\tresult = result * operand2\n\t\t\
    elseif op == '/' then\n\t\t\tresult = result // operand2\n\t\telseif op == '**'\
    \ then\n\t\t\tresult = result ** operand2\n\t\tend\n\tend\n\treturn result\nend",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 1\n\twhile i <= length\
    \ do\n\t\tlocal operator1 = operator[i]\n\t\tlocal operand1 = operand[i]\n\t\t\
    local operator2 = operator[i - 1]\n\t\tlocal operand2 = operand[i - 1]\n\t\tlocal\
    \ operator3 = operator[i + 1]\n\t\tlocal operand3 = operand[i + 1]\n\t\tlocal\
    \ operator4 = operator[i + 2]\n\t\tlocal operand4 = operand[i + 2]\n\t\tlocal\
    \ operator5 = operator[i + 3]\n\t\tlocal operand5 = operand[i + 3]\n\t\tlocal\
    \ operator6 = operator[i + 4]\n\t\tlocal operand6 = operand[i + 4]\n\t\tlocal\
    \ operator7 = operator[i + 5]\n\t\tlocal operand7 = operand[i + 5]\n\t\tlocal\
    \ operator8 = operator[i + 6]\n\t\tlocal operand8 = operand[i + 6]\n\t\tlocal\
    \ operator9 = operator[i + 7]\n\t\tlocal operand9 = operand[i + 7]\n\t\tlocal\
    \ operator10 = operator[i + 8]\n\t\tlocal operand10 = operand[i + 8]\n\t\tlocal\
    \ operator11 = operator[i + 9]\n\t\tlocal operand11 = operand[i + 9]\n\t\tlocal\
    \ operator12 = operator[i + 10]\n\t\tlocal operand12 = operand[i + 10]\n\t\tlocal\
    \ operator13 = operator[i + 11]\n\t\tlocal operand13 = operand[i + 11]\n\t\tlocal\
    \ operator14 = operator[i + 12]\n\t\tlocal operand14 = operand[i + 12]\n\t\tlocal\
    \ operator15 = operator[i + 13]\n\t\tlocal operand15 = operand[i + 13]\n\t\tlocal\
    \ operator16 = operator[i + 14]\n\t\tlocal operand16 = operand[i + 14]\n\t\tlocal\
    \ operator17 = operator[i + 15]\n\t\tlocal operand17 = operand[i + 15]\n\t\tlocal\
    \ operator18 = operator[i + 16]\n\t\tlocal operand18 = operand[i + 16]\n\t\tlocal\
    \ operator19 = operator[i + 17]\n\t\tlocal operand19 = operand[i + 17]\n\t\tlocal\
    \ operator20 = operator[i + 18]\n\t\tlocal operand20 = operand[i + 18]\n\t\tlocal\
    \ operator21 = operator[i + 19]\n\t\tlocal operand21 = operand[i + 19]\n\t\tlocal\
    \ operator22 = operator[i + 20]\n\t\tlocal operand22 = operand[i + 20]\n\t\tlocal\
    \ operator23 = operator[i + 21]\n\t\tlocal operand23 = operand[i + 21]\n\t\tlocal\
    \ operator24 = operator[i + 22]\n\t\tlocal operand24 = operand[i + 22]\n\t\tlocal\
    \ operator25 = operator[i + 23]\n\t\tlocal operand25 = operand[i + 23]\n\t\tlocal\
    \ operator26 = operator[i + 24]\n\t\tlocal operand26 = operand[i + 24]\n\t\tlocal\
    \ operator27 = operator[i + 25]\n\t\tlocal operand27 = operand[i + 25]\n\t\tlocal ",
  "\tlocal result = 0\n\tlocal length = #operand\n\tlocal index = 1\n\tlocal operator_index\
    \ = 1\n\tlocal operator = operator[operator_index]\n\twhile index < length do\n\
    \t\tresult = result + operand[index] * operator\n\t\tindex = index + 1\n\t\toperator_index\
    \ = operator_index + 1\n\t\toperator = operator[operator_index]\n\tend\n\treturn\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[operand[i-1]](result, operand[i])\n  end\n  return result\nend",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\n\
    \  end\n  return result\nend", "\tlocal result = 0\n\tlocal i = 1\n\twhile i <=\
    \ #operator do\n\t\tresult = result + operand[i-1] * operator[i]\n\t\ti = i +\
    \ 1\n\tend\n\treturn result\nend", "  local result = 0\n  for i = 1, #operator\
    \ do\n    result = result + operand[#operand-i] * operator[i]\n  end\n  return\
    \ result\nend", "  local result = 0\n  local i = 0\n  local j = 0\n  while i <\
    \ #operator and j < #operand do\n    local op = operator[i]\n    local operand1\
    \ = operand[j]\n    local operand2 = operand[j + 1]\n    local op1 = op\n    local\
    \ op2 = op\n    local op3 = op\n    local op4 = op\n    local op5 = op\n    local\
    \ op6 = op\n    local op7 = op\n    local op8 = op\n    local op9 = op\n    local\
    \ op10 = op\n    local op11 = op\n    local op12 = op\n    local op13 = op\n \
    \   local op14 = op\n    local op15 = op\n    local op16 = op\n    local op17\
    \ = op\n    local op18 = op\n    local op19 = op\n    local op20 = op\n    local\
    \ op21 = op\n    local op22 = op\n    local op23 = op\n    local op24 = op\n \
    \   local op25 = op\n    local op26 = op\n    local op27 = op\n    local op28\
    \ = op\n    local op29 = op\n    local op30 = op\n    local op31 = op\n    local\
    \ op32 = op\n    local op33 = op\n    local op34 = op\n    local op35 = op\n \
    \   local op36 = op\n    local op37 = op\n    local op38 = op\n    local op39\
    \ = op\n    local op40 = op\n    local op41 = op\n    local op42 = op\n    local\
    \ op43 = op\n    local op44 = op\n    local op45 = op\n    local op46 = op\n \
    \   local op47 = op\n    local op48 = op\n    local op49 = op\n    local op50\
    \ = op\n    local op51 = op\n    local op52 = op\n    local op53 = op\n    local\
    \ op54 = op\n    local op55 = op\n    local op56 = op\n    local op57 = op\n \
    \   local op58 = op\n    local op59 = op\n    local op60 = op\n    local op61\
    \ = op\n    local op62 = op\n    local op63 = op\n    local op64 = op\n    local\
    \ op65 = op\n    local op66 = op\n    local op67 = op\n    local op68 = op\n \
    \   local ", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tlocal i = 2\n\twhile i < #operand do\n\t\tlocal op\
    \ = operator[i]\n\t\tlocal operand2 = operand[i]\n\t\tif op == \"+\" then\n\t\t\
    \tresult = result + operand2\n\t\telseif op == \"-\" then\n\t\t\tresult = result\
    \ - operand2\n\t\telseif op == \"*\" then\n\t\t\tresult = result * operand2\n\t\
    \telseif op == \"/\" then\n\t\t\tresult = result // operand2\n\t\telseif op ==\
    \ \"**\" then\n\t\t\tresult = result ** operand2\n\t\tend\n\t\ti = i + 1\n\tend\n\
    \treturn result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\
    \t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n", "    local result = 0\n    for i = 1, #operand do\n        local\
    \ operand1 = operand[i]\n        local operand2 = operand[i - 1]\n        local\
    \ operator1 = operator[i]\n        local operator2 = operator[i - 1]\n       \
    \ local operator3 = operator[i - 2]\n        local operator4 = operator[i - 3]\n\
    \        local operator5 = operator[i - 4]\n        local operator6 = operator[i\
    \ - 5]\n        local operator7 = operator[i - 6]\n        local operator8 = operator[i\
    \ - 7]\n        local operator9 = operator[i - 8]\n        local operator10 =\
    \ operator[i - 9]\n        local operator11 = operator[i - 10]\n        local\
    \ operator12 = operator[i - 11]\n        local operator13 = operator[i - 12]\n\
    \        local operator14 = operator[i - 13]\n        local operator15 = operator[i\
    \ - 14]\n        local operator16 = operator[i - 15]\n        local operator17\
    \ = operator[i - 16]\n        local operator18 = operator[i - 17]\n        local\
    \ operator19 = operator[i - 18]\n        local operator20 = operator[i - 19]\n\
    \        local operator21 = operator[i - 20]\n        local operator22 = operator[i\
    \ - 21]\n        local operator23 = operator[i - 22]\n        local operator24\
    \ = operator[i - 23]\n        local operator25 = operator[i - 24]\n        local\
    \ operator26 = operator[i - 25]\n        local operator27 = operator[i - 26]\n\
    \        local operator28 = operator[i - 27]\n        local operator29 = operator[i\
    \ - 28]\n        local operator30 = operator[i - 29]\n        local operator31\
    \ = operator[i - 30]\n        local operator32 = operator[i - 31]\n        local\
    \ operator33 = operator[i - 32]\n        local operator34 = operator[i - 33]\n\
    \        local operator35 = operator[i - 34]\n        local operator36 = operator[i\
    \ - 35]\n        local operator37 = operator[i - 36]\n        local operator38\
    \ = operator[i - 37]\n        local operator39 = operator[i - 38]\n        local\
    \ operator40 = operator[i - 39]\n        local operator41 = operator[i - 40]\n\
    \        local operator42 = operator[i - 41]\n        local operator43 = operator[i\
    \ - 42]\n        local operator44 = operator[i - 43]\n        local operator45\
    \ = operator[i - 44]\n        local operator46 = operator[i - 45]\n        local\
    \ operator47 = ", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\t\
    local op = operator[i]\n\t\tlocal operand2 = operand[i]\n\t\tresult = op * result\
    \ + operand2\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "    local result = 0\n    for i = 1, #operator do\n \
    \       result = result + operand[#operand] * operator[i]\n    end\n    return\
    \ result\nend", "  local result = 0\n  local i = 0\n  while i < #operator do\n\
    \    local op = operator[i]\n    local j = i + 1\n    while j < #operator do\n\
    \      local op_2 = operator[j]\n      local op_1 = operator[i - 1] -- The previous\
    \ operator\n      local op_3 = operator[j + 1] -- The next operator\n      local\
    \ op_4 = operator[i - 2] -- The previous operator\n      local op_5 = operator[j\
    \ + 2] -- The next operator\n      local op_6 = operator[i - 3] -- The previous\
    \ operator\n      local op_7 = operator[j + 3] -- The next operator\n      local\
    \ op_8 = operator[i - 4] -- The previous operator\n      local op_9 = operator[j\
    \ + 4] -- The next operator\n      local op_10 = operator[i - 5] -- The previous\
    \ operator\n      local op_11 = operator[j + 5] -- The next operator\n      local\
    \ op_12 = operator[i - 6] -- The previous operator\n      local op_13 = operator[j\
    \ + 6] -- The next operator\n      local op_14 = operator[i - 7] -- The previous\
    \ operator\n      local op_15 = operator[j + 7] -- The next operator\n      local\
    \ op_16 = operator[i - 8] -- The previous operator\n      local op_17 = operator[j\
    \ + 8] -- The next operator\n      local op_18 = operator[i - 9] -- The previous\
    \ operator\n      local op_19 = operator[j + 9] -- The next operator\n      local\
    \ op_20 = operator[i - 10] -- The previous operator\n      local op_21 = operator[j\
    \ + 10] -- The next operator\n      local op_22 = operator[i - 11] -- The previous\
    \ operator\n      local op_23 = operator[j + 11] -- The next operator\n      local\
    \ op_24 = operator[i - 12] -- The previous operator\n      local op_25 = operator[j\
    \ + 12] -- The next operator\n      local op_26 = operator[i - 13] -- The previous\
    \ operator\n      local op_27 = operator[j + 13] -- The next operator\n      local\
    \ op_28 = operator[i - 14] -- The previous operator\n      local op_29 = operator[j\
    \ + 14] -- The next operator\n      local op_30 = operator[i - 15] -- The previous\
    \ operator\n      local op_31 = operator[j + 15] -- The next operator\n      local\
    \ op_32 = operator[i - 16] -- The previous operator\n      local op_33 = operator[j\
    \ + 16] -- The next operator\n      local op_34 = operator[i - 17", "\tlocal result\
    \ = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "\tlocal result = operand[1]\n\tfor i = 2,\
    \ #operand do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\t\
    return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\
    \tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\nend",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "    local result = operand[1]\n    for i =\
    \ 2, #operand do\n        result = operator[operator](result, operand[i])\n  \
    \  end\n    return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tlocal op = operator[i]\n\t\tlocal operand2 = operand[i]\n\t\tresult\
    \ = op * result + operand2\n\tend\n\treturn result\nend", "\tlocal result = 0\n\
    \tlocal index = 1\n\tlocal length = #operand\n\twhile index < length do\n\t\t\
    local operand1 = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\t\t\
    local operator1 = operator[index]\n\t\tlocal operator2 = operator[index + 1]\n\
    \t\tlocal result = operand1 + operand2\n\t\tindex = index + 2\n\t\tif operator1\
    \ ~= operator2 then\n\t\t\tresult = operator1 .. result\n\t\tend\n\tend\n\treturn\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[operator](result, operand[i])\n  end\n  return result\nend", "  local\
    \ result = 0\n  for i = 1, #operator do\n    local op = operator[i]\n    local\
    \ operand1 = operand[i]\n    local operand2 = operand[i + 1]\n    if op == \"\
    +\" then\n      result = result + operand1\n    elseif op == \"-\" then\n    \
    \  result = result - operand1\n    elseif op == \"*\" then\n      result = result\
    \ * operand1\n    elseif op == \"/\" then\n      result = result / operand1\n\
    \    elseif op == \"//\" then\n      result = result // operand1\n    elseif op\
    \ == \"**\" then\n      result = result ** operand1\n    end\n  end\n  return\
    \ result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "    local result = 0\n    for i = 1, #operand do\n        result = result\
    \ + operand[i] * operator[i]\n    end\n    return result\nend", "\tlocal result\
    \ = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tlocal op = operator[i]\n\t\tlocal operand2 = operand[i]\n\t\tresult\
    \ = op * result + operand2\n\tend\n\treturn result\nend", "\tlocal result = nil\n\
    \tlocal length = #operand\n\tlocal i = 1\n\twhile i < length do\n\t\tlocal op\
    \ = operator[i]\n\t\tlocal a = operand[i-1]\n\t\tlocal b = operand[i]\n\t\tif\
    \ op == \"+\" then\n\t\t\tresult = a + b\n\t\telseif op == \"-\" then\n\t\t\t\
    result = a - b\n\t\telseif op == \"*\" then\n\t\t\tresult = a * b\n\t\telseif\
    \ op == \"/\" then\n\t\t\tresult = a / b\n\t\telseif op == \"//\" then\n\t\t\t\
    result = a // b\n\t\telseif op == \"**\" then\n\t\t\tresult = a ** b\n\t\tend\n\
    \t\ti = i + 1\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tlocal op = operator[i]\n\
    \t\tlocal operand2 = operand[i]\n\t\tresult = op * result + operand2\n\tend\n\t\
    return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\
    \tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\nend",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operand[i-1]](result, operand[i])\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = 0\n\tlocal i =\
    \ 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\
    \tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\t\
    local t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal\
    \ y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d\
    \ = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i =\
    \ 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\
    \tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\t\
    local t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal\
    \ y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d\
    \ = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i =\
    \ 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\
    \tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\t\
    local t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal\
    \ y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d\
    \ = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i =\
    \ 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\
    \tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\t\
    local t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal\
    \ y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d\
    \ = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "  local result = 0\n  local index = 1\n  while index <= #operand do\n    local\
    \ operator1 = operator[1]\n    local operator2 = operator[2]\n    local operand1\
    \ = operand[index]\n    local operand2 = operand[index + 1]\n    local result\
    \ = result + (operator1 == operator2 and operand1 or operator1 * operand1)\n \
    \   index = index + 2\n  end\n  return result\nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "    local result = 0\n    for i = 1, #operand do\n        result = result\
    \ + operand[i] * operator[i]\n    end\n    return result\nend", "  local result\
    \ = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "    local result = operand[1]\n    for i = 2, #operand\
    \ do\n        result = operator[operator](result, operand[i])\n    end\n    return\
    \ result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tlocal op = operator[i]\n\t\tresult = op * result +\
    \ operand[i]\n\tend\n\treturn result\nend", "\tlocal result = 0\n\tlocal i = 0\n\
    \twhile i < #operator do\n\t\tresult = result + (operand[i] * operator[i])\n\t\
    \ti = i + 1\n\tend\n\treturn result\nend", "    local result = 0\n    for i =\
    \ 1, #operator do\n        local op = operator[i]\n        local operand1 = operand[i]\n\
    \        local operand2 = operand[i + 1]\n        if op == \"+\" then\n      \
    \      result = result + operand1\n        elseif op == \"-\" then\n         \
    \   result = result - operand1\n        elseif op == \"*\" then\n            result\
    \ = result * operand1\n        elseif op == \"//\" then\n            result =\
    \ result // operand1\n        elseif op == \"**\" then\n            result = result\
    \ ^ operand1\n        end\n    end\n    return result\nend", "    local result\
    \ = 0\n    for i = 1, #operator do\n        result = result + operand[#operand]\
    \ * operator[i]\n    end\n    return result\nend", "\tlocal result = operand[1]\n\
    \tfor i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\
    \tend\n\treturn result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = 0\n  local i =\
    \ 1\n  while i <= #operator do\n    local op = operator[i]\n    local operand1\
    \ = operand[i-1]\n    local operand2 = operand[i]\n    local result1 = op == \"\
    +\" ? operand1 + operand2 : op == \"-\" ? operand1 - operand2 : op == \"*\" ?\
    \ operand1 * operand2 : op == \"/\" ? operand1 // operand2 : op == \"**\" ? operand1\
    \ ** operand2 : nil\n    if result1 ~= nil then\n      result = result1\n    end\n\
    \    i = i + 1\n  end\n  return result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\tlocal E =\
    \ 0\n\tlocal F = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal J = 0\n\
    \tlocal K = 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O = 0\n\t\
    local P = 0\n\tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal\
    \ U = 0\n\tlocal V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z\
    \ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal\
    \ AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal\
    \ AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal\
    \ AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal\
    \ AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal\
    \ AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal\
    \ AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal\
    \ AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal\
    \ AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal\
    \ AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal\
    \ AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal\
    \ AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal ", "\tlocal result = operand[1]\n\
    \tlocal i = 2\n\twhile i < #operand do\n\t\tlocal op = operator[i]\n\t\tlocal\
    \ operand2 = operand[i]\n\t\tlocal operand3 = operand[i + 1]\n\t\tlocal operand4\
    \ = operand[i + 2]\n\t\tlocal operand5 = operand[i + 3]\n\t\tlocal operand6 =\
    \ operand[i + 4]\n\t\tlocal operand7 = operand[i + 5]\n\t\tlocal operand8 = operand[i\
    \ + 6]\n\t\tlocal operand9 = operand[i + 7]\n\t\tlocal operand10 = operand[i +\
    \ 8]\n\t\tlocal operand11 = operand[i + 9]\n\t\tlocal operand12 = operand[i +\
    \ 10]\n\t\tlocal operand13 = operand[i + 11]\n\t\tlocal operand14 = operand[i\
    \ + 12]\n\t\tlocal operand15 = operand[i + 13]\n\t\tlocal operand16 = operand[i\
    \ + 14]\n\t\tlocal operand17 = operand[i + 15]\n\t\tlocal operand18 = operand[i\
    \ + 16]\n\t\tlocal operand19 = operand[i + 17]\n\t\tlocal operand20 = operand[i\
    \ + 18]\n\t\tlocal operand21 = operand[i + 19]\n\t\tlocal operand22 = operand[i\
    \ + 20]\n\t\tlocal operand23 = operand[i + 21]\n\t\tlocal operand24 = operand[i\
    \ + 22]\n\t\tlocal operand25 = operand[i + 23]\n\t\tlocal operand26 = operand[i\
    \ + 24]\n\t\tlocal operand27 = operand[i + 25]\n\t\tlocal operand28 = operand[i\
    \ + 26]\n\t\tlocal operand29 = operand[i + 27]\n\t\tlocal operand30 = operand[i\
    \ + 28]\n\t\tlocal operand31 = operand[i + 29]\n\t\tlocal operand32 = operand[i\
    \ + 30]\n\t\tlocal operand33 = operand[i + 31]\n\t\tlocal operand34 = operand[i\
    \ + 32]\n\t\tlocal operand35 = operand[i + 33]\n\t\tlocal operand36 = operand[i\
    \ + 34]\n\t\tlocal operand37 = operand[i + 35]\n\t\tlocal operand38 = operand[i\
    \ + 36]\n\t\tlocal operand39 = operand[i + 37]\n\t\tlocal operand40 = operand[i\
    \ + 38]\n\t\tlocal operand41 = operand[i + 39]\n\t\tlocal operand42 = operand[i\
    \ + 40]\n\t\tlocal operand43 = operand[i + 41]\n\t\tlocal operand44 = operand[i\
    \ + 42]\n\t\tlocal operand45 = operand[i + 43]\n\t\tlocal operand46 = operand[i\
    \ + 44]\n\t\tlocal operand47 = operand[i + 45]\n\t\tlocal operand48 = operand[i\
    \ + 46]\n\t\tlocal operand49 = operand[i + 47]\n\t\tlocal operand50 = operand[i\
    \ + 48]\n\t\tlocal operand51 = operand[i + 49]\n\t\tlocal operand52 = operand[i\
    \ + 50]\n\t\tlocal ", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\
    \t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = 0\n\tlocal op1\
    \ = operator[1]\n\tlocal op2 = operator[2]\n\tlocal op3 = operator[3]\n\tlocal\
    \ op4 = operator[4]\n\tlocal op5 = operator[5]\n\tlocal op6 = operator[6]\n\t\
    local op7 = operator[7]\n\tlocal op8 = operator[8]\n\tlocal op9 = operator[9]\n\
    \tlocal op10 = operator[10]\n\tlocal op11 = operator[11]\n\tlocal op12 = operator[12]\n\
    \tlocal op13 = operator[13]\n\tlocal op14 = operator[14]\n\tlocal op15 = operator[15]\n\
    \tlocal op16 = operator[16]\n\tlocal op17 = operator[17]\n\tlocal op18 = operator[18]\n\
    \tlocal op19 = operator[19]\n\tlocal op20 = operator[20]\n\tlocal op21 = operator[21]\n\
    \tlocal op22 = operator[22]\n\tlocal op23 = operator[23]\n\tlocal op24 = operator[24]\n\
    \tlocal op25 = operator[25]\n\tlocal op26 = operator[26]\n\tlocal op27 = operator[27]\n\
    \tlocal op28 = operator[28]\n\tlocal op29 = operator[29]\n\tlocal op30 = operator[30]\n\
    \tlocal op31 = operator[31]\n\tlocal op32 = operator[32]\n\tlocal op33 = operator[33]\n\
    \tlocal op34 = operator[34]\n\tlocal op35 = operator[35]\n\tlocal op36 = operator[36]\n\
    \tlocal op37 = operator[37]\n\tlocal op38 = operator[38]\n\tlocal op39 = operator[39]\n\
    \tlocal op40 = operator[40]\n\tlocal op41 = operator[41]\n\tlocal op42 = operator[42]\n\
    \tlocal op43 = operator[43]\n\tlocal op44 = operator[44]\n\tlocal op45 = operator[45]\n\
    \tlocal op46 = operator[46]\n\tlocal op47 = operator[47]\n\tlocal op48 = operator[48]\n\
    \tlocal op49 = operator[49]\n\tlocal op50 = operator[50]\n\tlocal op51 = operator[51]\n\
    \tlocal op52 = operator[52]\n\tlocal op53 = operator[53]\n\tlocal op54 = operator[54]\n\
    \tlocal op55", "  local result = 0\n  for i = 1, #operand do\n    result = result\
    \ + operand[i] * operator[i]\n  end\n  return result\nend", "  local result =\
    \ 0\n  for i = 1, #operand do\n    local operand1 = operand[i]\n    local operand2\
    \ = operand[i - 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i\
    \ - 1]\n    local operation = operator1 * operand1 + operator2 * operand2\n  \
    \  result = result + operation\n  end\n  return result\nend", "    local result\
    \ = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "\tlocal result = operand[1]\n\
    \tfor i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\
    \tend\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[result] .. operand[i]\n  end\n  return result\nend",
  "\tlocal result = nil\n\tlocal operator_count = #operator\n\tlocal operand_count\
    \ = #operand\n\t\n\tif operator_count ~= operand_count then\n\t\terror(\"Operator\
    \ list has \" .. operator_count .. \" operators, operand list has \" .. operand_count\
    \ .. \" operands\")\n\tend\n\t\n\tlocal operator_stack = {}\n\tlocal operand_stack\
    \ = {}\n\t\n\tlocal operator_stack_count = 0\n\tlocal operand_stack_count = 0\n\
    \t\n\tlocal operator_stack_index = 0\n\tlocal operand_stack_index = 0\n\t\n\t\
    local operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\t\n\tlocal\
    \ operator_stack_pointer = nil\n\tlocal operand_stack_pointer = nil\n\t\n\tlocal\
    \ operator_stack_pointer_pointer = nil\n\tlocal operand_stack_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer = nil\n\tlocal operand_stack_pointer_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer = nil\n\t\
    local operand_stack_pointer_pointer_pointer_pointer = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operand_stack_pointer_pointer_pointer_pointer_pointer = nil\n\
    \t\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer = nil\n\
    \tlocal operand_stack_pointer_pointer_pointer_pointer_pointer_pointer = nil\n\t\
    \n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operand_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operand_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operand_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operand_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\t\n\tlocal operator_stack_pointer_pointer_pointer_pointer", "  local\
    \ result = 0\n  for i = 1, #operator do\n    result = result + operand[i] * operator[i]\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = 0\n  local i =\
    \ 1\n  while i <= #operator do\n    local op = operator[i]\n    local operand1\
    \ = operand[i-1]\n    local operand2 = operand[i]\n    if op == \"+\" then\n \
    \     result = result + operand1\n    elseif op == \"-\" then\n      result =\
    \ result - operand1\n    elseif op == \"*\" then\n      result = result * operand1\n\
    \    elseif op == \"/\" then\n      result = result / operand1\n    elseif op\
    \ == \"//\" then\n      result = result // operand1\n    elseif op == \"**\" then\n\
    \      result = result ** operand1\n    end\n    i = i + 1\n  end\n  return result\n\
    end", "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "  local\
    \ result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = 0\n  local i =\
    \ 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n\
    \  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n \
    \ local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local\
    \ y = 0\n  local z = 0\n  local A = 0\n  local B = 0\n  local C = 0\n  local D\
    \ = 0\n  local E = 0\n  local F = 0\n  local G = 0\n  local H = 0\n  local I =\
    \ 0\n  local J = 0\n  local K = 0\n  local L = 0\n  local M = 0\n  local N = 0\n\
    \  local O = 0\n  local P = 0\n  local Q = 0\n  local R = 0\n  local S = 0\n \
    \ local T = 0\n  local U = 0\n  local V = 0\n  local W = 0\n  local X = 0\n  local\
    \ Y = 0\n  local Z = 0\n  local AA = 0\n  local AB = 0\n  local AC = 0\n  local\
    \ AD = 0\n  local AE = 0\n  local AF = 0\n  local AG = 0\n  local AH = 0\n  local\
    \ AI = 0\n  local AJ = 0\n  local AK = 0\n  local AL = 0\n  local AM = 0\n  local\
    \ AN = 0\n  local AO = 0\n  local AP = 0\n  local AQ = 0\n  local AR = 0\n  local\
    \ AS = 0\n  local AT = 0\n  local AU = 0\n  local AV = 0\n  local AW = 0\n  local\
    \ AX = 0\n  local AY = 0\n  local AZ = 0\n  local AA = 0\n  local AB = 0\n  local\
    \ AC = 0\n  local AD = 0\n  local AE = 0\n  local AF = 0\n  local AG = 0\n  local\
    \ AH = 0\n  local AI = 0\n  local AJ = 0\n  local AK = 0\n  local AL = 0\n  local\
    \ AM = 0\n  local AN = 0\n  local AO = 0\n  local AP = 0\n  local AQ = 0\n  local\
    \ AR = 0\n  local AS = 0\n  local AT = 0\n  local AU = 0\n  local AV = 0\n  local\
    \ AW = 0\n  local AX = 0\n  local AY = 0\n  local AZ = 0\n  local AA = 0\n  local\
    \ AB = 0\n  local AC = 0\n  local AD = 0\n  local AE = 0\n  local ", "  local\
    \ result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "    local result = operand[1]\n    for i = 2, #operand do\n \
    \       result = operator[operator](result, operand[i])\n    end\n    return result\n\
    end", "    local result = operand[1]\n    for i = 2, #operand do\n        result\
    \ = operator[operator](result, operand[i])\n    end\n    return result\nend",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = 0\n\tlocal op_index\
    \ = 1\n\tlocal op_index2 = 1\n\tlocal op_index3 = 1\n\tlocal op_index4 = 1\n\t\
    local op_index5 = 1\n\tlocal op_index6 = 1\n\tlocal op_index7 = 1\n\tlocal op_index8\
    \ = 1\n\tlocal op_index9 = 1\n\tlocal op_index10 = 1\n\tlocal op_index11 = 1\n\
    \tlocal op_index12 = 1\n\tlocal op_index13 = 1\n\tlocal op_index14 = 1\n\tlocal\
    \ op_index15 = 1\n\tlocal op_index16 = 1\n\tlocal op_index17 = 1\n\tlocal op_index18\
    \ = 1\n\tlocal op_index19 = 1\n\tlocal op_index20 = 1\n\tlocal op_index21 = 1\n\
    \tlocal op_index22 = 1\n\tlocal op_index23 = 1\n\tlocal op_index24 = 1\n\tlocal\
    \ op_index25 = 1\n\tlocal op_index26 = 1\n\tlocal op_index27 = 1\n\tlocal op_index28\
    \ = 1\n\tlocal op_index29 = 1\n\tlocal op_index30 = 1\n\tlocal op_index31 = 1\n\
    \tlocal op_index32 = 1\n\tlocal op_index33 = 1\n\tlocal op_index34 = 1\n\tlocal\
    \ op_index35 = 1\n\tlocal op_index36 = 1\n\tlocal op_index37 = 1\n\tlocal op_index38\
    \ = 1\n\tlocal op_index39 = 1\n\tlocal op_index40 = 1\n\tlocal op_index41 = 1\n\
    \tlocal op_index42 = 1\n\tlocal op_index43 = 1\n\tlocal op_index44 = 1\n\tlocal\
    \ op_index45 = 1\n\tlocal op_index46 = 1\n\tlocal op_index47 = 1\n\tlocal op_index48\
    \ = 1\n\tlocal op_index49 = 1\n\tlocal op_index50 = 1\n\tlocal op_index51 = 1\n\
    \tlocal op_index52 = 1\n\tlocal op_index53 = 1\n\tlocal op_index54 = 1\n\tlocal\
    \ op_index55 = 1\n\tlocal op_index56 = 1\n\tlocal op_index57 = 1\n\tlocal op_index58\
    \ = 1\n\tlocal op_index59 = 1\n\tlocal op_index60 = 1\n\tlocal op_index61 = 1\n\
    \tlocal op_index62 = 1\n\tlocal op_index63 = 1\n\tlocal op_index64 = 1\n\tlocal\
    \ op_index65 = 1\n\tlocal op_index66 = 1\n\tlocal op_index67 = 1\n\tlocal op_index68\
    \ = 1\n\tlocal op_index69 = 1\n\tlocal op_index70 = 1\n\tlocal op_index7", " \
    \ local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = 0\n  local index\
    \ = 1\n  while index < #operator do\n    local operator = operator[index]\n  \
    \  local operand = operand[index]\n    if operator == '+' then\n      result =\
    \ result + operand\n    elseif operator == '-' then\n      result = result - operand\n\
    \    elseif operator == '*' then\n      result = result * operand\n    elseif\
    \ operator == '/' then\n      result = result // operand\n    elseif operator\
    \ == '**' then\n      result = result ** operand\n    end\n    index = index +\
    \ 1\n  end\n  return result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "\tlocal result = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\tlocal E = 0\n\tlocal F\
    \ = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal J = 0\n\tlocal K =\
    \ 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O = 0\n\tlocal P = 0\n\
    \tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal U = 0\n\t\
    local V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z = 0\n\tlocal\
    \ AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal\
    \ AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal AJ = 0\n\tlocal\
    \ AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal AO = 0\n\tlocal\
    \ AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal AT = 0\n\tlocal\
    \ AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal AY = 0\n\tlocal\
    \ AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal\
    \ AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal\
    \ AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal\
    \ AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal\
    \ AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal\
    \ AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal\
    \ AD = 0\n\tlocal AE = 0\n\tlocal ", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "\tlocal result = 0\n\tlocal index = 1\n\twhile index <= #operator\
    \ do\n\t\tlocal operation = operator[index]\n\t\tlocal operand1 = operand[index]\n\
    \t\tlocal operand2 = operand[index + 1]\n\t\tresult = result + (operand1 ~= nil\
    \ and operand1 or 0) + (operand2 ~= nil and operand2 or 0)\n\t\tindex = index\
    \ + 1\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult\
    \ = operator[operator](result, operand[i])\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tlocal op = operator[i]\n\
    \t\tlocal operand2 = operand[i]\n\t\tif op == '+' then\n\t\t\tresult = result\
    \ + operand2\n\t\telseif op == '-' then\n\t\t\tresult = result - operand2\n\t\t\
    elseif op == '*' then\n\t\t\tresult = result * operand2\n\t\telseif op == '/'\
    \ then\n\t\t\tresult = result // operand2\n\t\telseif op == '**' then\n\t\t\t\
    result = result ** operand2\n\t\tend\n\tend\n\treturn result\nend", "  local result\
    \ = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operator](result, operand[i])\n  end\n\
    \  return result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "  local result = 0\n  local i = 1\n  while i < #operator do\n    local\
    \ op = operator[i]\n    local operand1 = operand[i]\n    local operand2 = operand[i\
    \ + 1]\n    local result = result + (op == \"+\" ? operand1 + operand2 : op ==\
    \ \"-\" ? operand1 - operand2 : op == \"*\" ? operand1 * operand2 : op == \"/\"\
    \ ? operand1 // operand2 : op == \"**\" ? operand1 ** operand2 : 0)\n    i = i\
    \ + 2\n  end\n  return result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "    local result = 0\n    local i = 1\n    local length = #operand\n\
    \    while i <= length do\n        local operand1 = operand[i]\n        local\
    \ operand2 = operand[i-1]\n        local operator1 = operator[i]\n        local\
    \ operator2 = operator[i-1]\n        local result = result + (operand1 * operand2)\n\
    \        i = i + 1\n    end\n    return result \nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand\
    \ do\n\t\tlocal op = operator[i]\n\t\tresult = op * result + operand[i]\n\tend\n\
    \treturn result\nend", "\tlocal result = 0\n\tlocal index = 1\n\twhile index <=\
    \ #operator do\n\t\tlocal op = operator[index]\n\t\tlocal operand1 = operand[index\
    \ - 1]\n\t\tlocal operand2 = operand[index]\n\t\tif op == '+' then\n\t\t\tresult\
    \ = result + operand1\n\t\telseif op == '-' then\n\t\t\tresult = result - operand1\n\
    \t\telseif op == '*' then\n\t\t\tresult = result * operand1\n\t\telseif op ==\
    \ '/' then\n\t\t\tresult = result / operand1\n\t\telseif op == '//' then\n\t\t\
    \tresult = result // operand1\n\t\telseif op == '**' then\n\t\t\tresult = result\
    \ ** operand1\n\t\tend\n\t\tindex = index + 1\n\tend\n\treturn result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "\tlocal result = operand[1]\n\t\
    for i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\t\
    end\n\treturn result\nend", "    local result = operand[1]\n    for i = 2, #operand\
    \ do\n        result = operator[operator](result, operand[i])\n    end\n    return\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[operator](result, operand[i])\n  end\n  return result\nend", "\t\
    local result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[result]\n  end\n  return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_95_check_dict_case
language: lua
prompt: "-- Given a dictionary, return True if all keys are strings in lower \n--\
  \ case or all keys are strings in upper case, else return False.\n-- The function\
  \ should return False is the given dictionary is empty.\n-- Examples:\n-- check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n-- check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n-- check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n-- check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n--\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  local function check_dict_case(dict)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_dict_case\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['b'] = 'banana'}), true)\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['A'] = 'banana', ['B'] = 'banana'}),\
  \ false)\n    lu.assertEquals(candidate({['p'] = 'pineapple', ['5'] = 'banana',\
  \ ['a'] = 'apple'}), false)\n    lu.assertEquals(candidate({['Name'] = 'John', ['Age']\
  \ = '36', ['City'] = 'Houston'}), false)\n    lu.assertEquals(candidate({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'}), true)\n    lu.assertEquals(candidate({['fruit'] =\
  \ 'Orange', ['taste'] = 'Sweet'}), true)\n    lu.assertEquals(candidate({}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n    if k:lower()\
    \ ~= k:upper() then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "    local result = true\n    for k,v in pairs(dict) do\n    \
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n            result =\
    \ false\n            break\n        end\n    end\n    return result\nend", " \
    \   local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' then\n            result = false\n            break\n        end\n\
    \        if type(k) ~= 'string' then\n            result = false\n           \
    \ break\n        end\n        if tostring(k) ~= tostring(v) then\n           \
    \ result = false\n            break\n        end\n    end\n    return result\n\
    end", "    local result = true\n    for key, value in pairs(dict) do\n       \
    \ if type(key) ~= 'string' or type(key) ~= 'string' then\n            result =\
    \ false\n            break\n        end\n    end\n    return result\nend", " \
    \   local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            result = false\n            break\n        end\n\
    \        if type(k) ~= \"string\" then\n            result = false\n         \
    \   break\n        end\n        if string.lower(k) ~= k then\n            result\
    \ = false\n            break\n        end\n        if string.upper(k) ~= k then\n\
    \            result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "    local result = true\n    for k,v in pairs(dict) do\n    \
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n            result =\
    \ false\n            break\n        end\n    end\n    return result\nend", " \
    \   local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ \"string\" then\n            result = false\n            break\n        end\n\
    \        if type(k) ~= \"string\" then\n            result = false\n         \
    \   break\n        end\n        if string.lower(k) ~= k then\n            result\
    \ = false\n            break\n        end\n        if string.upper(k) ~= k then\n\
    \            result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "  local result = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n    if type(v)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "    local result = true\n    for key, value in pairs(dict) do\n\
    \        if type(key) ~= \"string\" then\n            result = false\n       \
    \     break\n        end\n        if type(key) ~= \"string\" then\n          \
    \  result = false\n            break\n        end\n        if key:lower() ~= key:upper()\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "    local result = true\n    for k,v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            result = false\n    \
    \        break\n        end\n        if type(k) ~= \"string\" then\n         \
    \   result = false\n            break\n        end\n        if k:lower() ~= k:upper()\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= \"string\" then\n      result = false\n      break\n    end\n\
    \    if type(k) ~= \"string\" then\n      result = false\n      break\n    end\n\
    \    if k:lower() ~= k:upper() then\n      result = false\n      break\n    end\n\
    \  end\n  return result\nend", "  local ok, err = pcall(function()\n    local\
    \ ok, err = pcall(function()\n      local ok, err = pcall(function()\n       \
    \ local ok, err = pcall(function()\n          local ok, err = pcall(function()\n\
    \            local ok, err = pcall(function()\n              local ok, err = pcall(function()\n\
    \                local ok, err = pcall(function()\n                  return pcall(function()\n\
    \                    local ok, err = pcall(function()\n                      return\
    \ pcall(function()\n                        local ok, err = pcall(function()\n\
    \                          return pcall(function()\n                         \
    \   local ok, err = pcall(function()\n                              return pcall(function()\n\
    \                                return pcall(function()\n                   \
    \               local ok, err = pcall(function()\n                           \
    \         return pcall(function()\n                                      return\
    \ pcall(function()\n                                        local ok, err = pcall(function()\n\
    \                                          return pcall(function()\n         \
    \                                   local ok, err = pcall(function()\n       \
    \                                     return pcall(function()\n              \
    \                                return pcall(function()\n                   \
    \                             local ok, err = pcall(function()\n             \
    \                                     return pcall(function()\n              \
    \                                      local ok, err = pcall(function()\n    \
    \                                                  return pcall(function()\n \
    \                                                       local ok, err = pcall(function()\n\
    \                                                          return pcall(function()\n\
    \                                                            local ok, err = pcall(function()\n\
    \                                                              return pcall(function()\n\
    \                                                                return pcall(function()\n\
    \                                                                  local ok, err\
    \ = pcall(function()\n                                                       \
    \             return pcall(function()\n                                      \
    \                                return pcall(function()\n                   \
    \                                                     local ok, err = pcall(function()\n\
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                   return pcall(function()\n                                \
    \                                              return pcall(function()\n     \
    \                                                                           return\
    \ pcall(function()\n                                                         \
    \                         return pcall(function()\n                          \
    \                                                          return pcall(function()\n\
    \                                                                            \
    \          return pcall(function()\n                                         \
    \                                               return pcall(function()\n    \
    \                                                                            \
    \          local ok, err = pcall(function()\n                                \
    \                                                          return pcall(function()\n\
    \                                                                            \
    \                return pcall(function()\n                                   \
    \                                                           local ok, err = pcall(function()\n\
    \                                                                            \
    \                  return pcall(function()\n                                 \
    \                                                               return pcall(function()\n\
    \                                                                            \
    \                      local ok, err = pcall(function()\n                    \
    \                                                                            \
    \  return pcall(function()\n                                                 \
    \                                                   return pcall(function()\n\
    \                                                                            \
    \                          return pcall(function()\n                         \
    \                                                                            \
    \ local ok, err = pcall(function()\n                                         \
    \                                                               return pcall(function()\n\
    \                                                                            \
    \                              local ok, err = pcall(function()\n            \
    \                                                                            \
    \                return pcall(function()\n                                   \
    \                                                                       local\
    \ ok, err = pcall(function()\n                                               \
    \                                                         return pcall(function()\n\
    \                                                                            \
    \                              local ok, err = pcall(function()\n            \
    \                                                                            \
    \                return pcall(function()\n                                   \
    \                                                                       local\
    \ ok, err = pcall(function()\n                                               \
    \                                                         return pcall(function()\n\
    \                                                                            \
    \                              local ok, err = pcall(function()\n            \
    \                                                                            \
    \                return ", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for k, v in pairs(dict) do\n      table.insert(keys,\
    \ k)\n   end\n   for i = 1, #keys do\n      local k = keys[i]\n      if type(k)\
    \ ~= \"string\" then\n         return false\n      end\n      local lower = k:lower()\n\
    \      local upper = k:upper()\n      if lower ~= upper then\n         return\
    \ false\n      end\n   end\n   return true\nend", "    local result = true\n \
    \   for key, value in pairs(dict) do\n        if type(key) ~= 'string' then\n\
    \            result = false\n            break\n        end\n        if type(key)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \        if key:lower() ~= key:upper() then\n            result = false\n    \
    \        break\n        end\n    end\n    return result\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n   \
    \   result = false\n      break\n    end\n    if type(k) ~= \"string\" then\n\
    \      result = false\n      break\n    end\n    if k:lower() ~= k:upper() then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \ local ok, err = pcall(function()\n    local ok, err = pcall(function()\n   \
    \   local ok, err = pcall(function()\n        local ok, err = pcall(function()\n\
    \          local ok, err = pcall(function()\n            local ok, err = pcall(function()\n\
    \              local ok, err = pcall(function()\n                local ok, err\
    \ = pcall(function()\n                  local ok, err = pcall(function()\n   \
    \                 local ok, err = pcall(function()\n                      local\
    \ ok, err = pcall(function()\n                        local ok, err = pcall(function()\n\
    \                          local ok, err = pcall(function()\n                \
    \            local ok, err = pcall(function()\n                              local\
    \ ok, err = pcall(function()\n                                local ok, err =\
    \ pcall(function()\n                                  local ok, err = pcall(function()\n\
    \                                    local ok, err = pcall(function()\n      \
    \                                local ok, err = pcall(function()\n          \
    \                              local ok, err = pcall(function()\n            \
    \                              local ok, err = pcall(function()\n            \
    \                                local ok, err = pcall(function()\n          \
    \                                    local ok, err = pcall(function()\n      \
    \                                          local ok, err = pcall(function()\n\
    \                                                  local ok, err = pcall(function()\n\
    \                                                    local ok, err = pcall(function()\n\
    \                                                      local ok, err = pcall(function()\n\
    \                                                        local ok, err = pcall(function()\n\
    \                                                          local ok, err = pcall(function()\n\
    \                                                            local ok, err = pcall(function()\n\
    \                                                              local ok, err =\
    \ pcall(function()\n                                                         \
    \       local ok, err = pcall(function()\n                                   \
    \                               local ok, err = pcall(function()\n           \
    \                                                         local ok, err = pcall(function()\n\
    \                                                                      local ok,\
    \ err = pcall(function()\n                                                   \
    \                     local ok, err = pcall(function()\n                     \
    \                                                     local ok, err = pcall(function()\n\
    \                                                                            local\
    \ ok, err = pcall(function()\n                                               \
    \                               local ok, err = pcall(function()\n           \
    \                                                                     local ok,\
    \ err = pcall(function()\n                                                   \
    \                               local ok, err = pcall(function()\n           \
    \                                                                         local\
    \ ok, err = pcall(function()\n                                               \
    \                                       local ok, err = pcall(function()\n   \
    \                                                                            \
    \         local ok, err = pcall(function()\n                                 \
    \                                                         local ok, err = pcall(function()\n\
    \                                                                            \
    \                local ok, err = pcall(function()\n                          \
    \                                                                    local ok,\
    \ err = pcall(function()\n                                                   \
    \                                             local ok, err = pcall(function()\n\
    \                                                                            \
    \                      local ok, err = pcall(function()\n                    \
    \                                                                            \
    \    local ok, err = pcall(function()\n                                      \
    \                                                                local ok, err\
    \ = pcall(function()\n                                                       \
    \                                                 local ok, err = pcall(function()\n\
    \                                                                            \
    \                              local ok, err = pcall(function()\n            \
    \                                                                            \
    \                    local ok, err = pcall(function()\n                      \
    \                                                                            \
    \            local ok, ", "  local result = true\n  for k, v in pairs(dict) do\n\
    \    if type(k) ~= \"string\" then\n      result = false\n    end\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n    end\n  end\n  return result\n\
    end", "    local result = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n            result = false\n      \
    \  end\n    end\n    return result\nend", "  local result = true\n  for k,v in\
    \ pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n   \
    \   result = false\n    end\n  end\n  return result\nend", "  local result = true\n\
    \  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result\
    \ = false\n    end\n  end\n  return result\nend", "  local result = true\n  for\
    \ k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for k, v in pairs(dict) do\n      table.insert(keys,\
    \ k)\n   end\n   table.sort(keys)\n   for _, k in ipairs(keys) do\n      if type(k)\
    \ ~= \"string\" then\n         return false\n      end\n   end\n   return true\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"\
    string\" then\n      result = false\n    end\n  end\n  return result\nend", " \
    \   local ok, err = pcall(function()\n        for k, v in pairs(dict) do\n   \
    \         if type(k) ~= 'string' or type(v) ~= 'string' then\n               \
    \ return false\n            end\n        end\n        return true\n    end)\n\
    \    if ok then\n        return true\n    else\n        return false\n    end\n\
    end", "    local result = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n            result = false\n      \
    \  end\n    end\n    return result\nend", "  local result = true\n  for k,v in\
    \ pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n  \
    \  end\n    if type(v) ~= \"string\" then\n      result = false\n    end\n  end\n\
    \  return result\nend", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "    local result = true\n    for k,v\
    \ in pairs(dict) do\n        if type(k) ~= \"string\" then\n            result\
    \ = false\n            break\n        end\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if k:lower()\
    \ ~= k then\n            result = false\n            break\n        end\n    \
    \    if k:upper() ~= k then\n            result = false\n            break\n \
    \       end\n    end\n    return result\nend", "  local result = true\n  for k,\
    \ v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n    if type(v) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n  end\n  return result\nend", "    local result = true\n\
    \    for key, value in pairs(dict) do\n        if type(key) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(key)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if key:lower() ~= key:upper() then\n            result = false\n    \
    \        break\n        end\n    end\n    return result\nend", "  local ok, err\
    \ = pcall(function()\n    for k,v in pairs(dict) do\n      if type(k) ~= \"string\"\
    \ then\n        return false\n      end\n      if type(k) ~= \"string\" then\n\
    \        return false\n      end\n      if k:lower() ~= k:upper() then\n     \
    \   return false\n      end\n    end\n    return true\n  end)\n  if ok then\n\
    \    return true\n  end\n  return false\nend", "   if #dict == 0 then\n      return\
    \ false\n   end\n   local is_upper = false\n   local is_lower = false\n   for\
    \ k,v in pairs(dict) do\n      if type(k) ~= 'string' then\n         return false\n\
    \      end\n      if type(v) ~= 'string' then\n         return false\n      end\n\
    \      if k:lower() == v:lower() then\n         is_upper = true\n      else\n\
    \         is_lower = true\n      end\n   end\n   return is_upper and is_lower\n\
    end", "  local ok, err = pcall(function()\n    local ok, err = pcall(function()\n\
    \      local ok, err = pcall(function()\n        local ok, err = pcall(function()\n\
    \          local ok, err = pcall(function()\n            local ok, err = pcall(function()\n\
    \              local ok, err = pcall(function()\n                local ok, err\
    \ = pcall(function()\n                  local ok, err = pcall(function()\n   \
    \                 local ok, err = pcall(function()\n                      local\
    \ ok, err = pcall(function()\n                        local ok, err = pcall(function()\n\
    \                          local ok, err = pcall(function()\n                \
    \            local ok, err = pcall(function()\n                              local\
    \ ok, err = pcall(function()\n                                local ok, err =\
    \ pcall(function()\n                                  local ok, err = pcall(function()\n\
    \                                    local ok, err = pcall(function()\n      \
    \                                local ok, err = pcall(function()\n          \
    \                              local ok, err = pcall(function()\n            \
    \                              local ok, err = pcall(function()\n            \
    \                                local ok, err = pcall(function()\n          \
    \                                    local ok, err = pcall(function()\n      \
    \                                          local ok, err = pcall(function()\n\
    \                                                  local ok, err = pcall(function()\n\
    \                                                    local ok, err = pcall(function()\n\
    \                                                      local ok, err = pcall(function()\n\
    \                                                        local ok, err = pcall(function()\n\
    \                                                          local ok, err = pcall(function()\n\
    \                                                            local ok, err = pcall(function()\n\
    \                                                              local ok, err =\
    \ pcall(function()\n                                                         \
    \       local ok, err = pcall(function()\n                                   \
    \                               local ok, err = pcall(function()\n           \
    \                                                         local ok, err = pcall(function()\n\
    \                                                                      local ok,\
    \ err = pcall(function()\n                                                   \
    \                     local ok, err = pcall(function()\n                     \
    \                                                     local ok, err = pcall(function()\n\
    \                                                                            local\
    \ ok, err = pcall(function()\n                                               \
    \                               local ok, err = pcall(function()\n           \
    \                                                                     local ok,\
    \ err = pcall(function()\n                                                   \
    \                               local ok, err = pcall(function()\n           \
    \                                                                         local\
    \ ok, err = pcall(function()\n                                               \
    \                                       local ok, err = pcall(function()\n   \
    \                                                                            \
    \         local ok, err = pcall(function()\n                                 \
    \                                                         local ok, err = pcall(function()\n\
    \                                                                            \
    \                local ok, err = pcall(function()\n                          \
    \                                                                    local ok,\
    \ err = pcall(function()\n                                                   \
    \                                             local ok, err = pcall(function()\n\
    \                                                                            \
    \                      local ok, err = pcall(function()\n                    \
    \                                                                            \
    \    local ok, err = pcall(function()\n                                      \
    \                                                                local ok, err\
    \ = pcall(function()\n                                                       \
    \                                                 local ok, err = pcall(function()\n\
    \                                                                            \
    \                              local ok, err = pcall(function()\n            \
    \                                                                            \
    \                    local ok, err = pcall(function()\n                      \
    \                                                                            \
    \            local ok, ", "  local ok, err = pcall(function()\n    for k, v in\
    \ pairs(dict) do\n      if type(k) ~= 'string' then\n        return false\n  \
    \    end\n      if type(v) ~= 'string' then\n        return false\n      end\n\
    \    end\n    return true\n  end)\n  return ok and err == nil\nend", "  local\
    \ result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' then\n\
    \      result = false\n      break\n    end\n    if type(v) ~= 'string' then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \ local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n      result = false\n    end\n  end\n  return\
    \ result\nend", "   if #dict == 0 then\n      return false\n   end\n   local is_upper\
    \ = true\n   for k,v in pairs(dict) do\n      if type(k) ~= 'string' then\n  \
    \       return false\n      end\n      if type(v) ~= 'string' then\n         return\
    \ false\n      end\n      if k:lower() ~= v:lower() then\n         is_upper =\
    \ false\n      end\n   end\n   return is_upper\nend", "  local result = true\n\
    \  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string'\
    \ then\n      result = false\n    end\n  end\n  return result\nend", "  local\
    \ result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "   if dict == nil then\n      return false\n   end\n   for k, v in pairs(dict)\
    \ do\n      if type(k) ~= 'string' then\n         return false\n      end\n  \
    \    if type(v) ~= 'string' then\n         return false\n      end\n   end\n \
    \  return true\nend", "    local result = true\n    for k,v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            result = false\n         \
    \   break\n        end\n        if type(k) ~= \"string\" then\n            result\
    \ = false\n            break\n        end\n        if k:lower() ~= k:upper() then\n\
    \            result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n    end\n  end\n  return result\n\
    end", "    local result = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n            result = false\n      \
    \      break\n        end\n    end\n    return result\nend", "  local result =\
    \ true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~=\
    \ 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "   if #dict == 0 then\n      return false\n   end\n   local keys = {}\n   for k,\
    \ v in pairs(dict) do\n      table.insert(keys, k)\n   end\n   for i = 1, #keys\
    \ do\n      local k = keys[i]\n      local v = dict[k]\n      if type(k) ~= \"\
    string\" then\n         return false\n      end\n      if type(v) ~= \"string\"\
    \ then\n         return false\n      end\n      if k:lower() == v:lower() then\n\
    \         return true\n      end\n      if k:upper() == v:upper() then\n     \
    \    return true\n      end\n   end\n   return false\nend", "    local result\
    \ = true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string' then\n\
    \            result = false\n            break\n        end\n        if type(k)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \        if k == tolower(k) or k == toupper(k) then\n            result = false\n\
    \            break\n        end\n    end\n    return result\nend", "    local\
    \ result = true\n    for key, value in pairs(dict) do\n        if type(value)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \    end\n    return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   for k,v in pairs(dict) do\n      if type(k) ~= 'string' then\n   \
    \      return false\n      end\n      if type(v) ~= 'string' then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local result = true\n  for\
    \ k,v in pairs(dict) do\n    if type(k) ~= 'string' then\n      result = false\n\
    \    end\n    if type(v) ~= 'string' then\n      result = false\n    end\n  end\n\
    \  return result\nend", "    local result = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) ~= \"string\" then\n            result = false\n  \
    \          break\n        end\n        if type(key) ~= \"string\" then\n     \
    \       result = false\n            break\n        end\n        if key:lower()\
    \ ~= key:upper() then\n            result = false\n            break\n       \
    \ end\n    end\n    return result\nend", "   if #dict == 0 then\n      return\
    \ false\n   end\n   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys,\
    \ key)\n   end\n   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if\
    \ type(key) ~= \"string\" then\n         return false\n      end\n   end\n   return\
    \ true\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n      result = false\n    end\n  end\n\
    \  return result\nend", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "  local ok, err = pcall(function()\n\
    \    local result = {}\n    for k, v in pairs(dict) do\n      result[k] = tostring(k)\
    \ or tostring(v)\n    end\n    return result == dict \n  end)\n  return ok, err\n\
    end", "    local ok, err = pcall(function()\n        local keys = {}\n       \
    \ for k,v in pairs(dict) do\n            if type(k) ~= \"string\" then\n     \
    \           return false\n            end\n            if type(v) ~= \"string\"\
    \ then\n                return false\n            end\n            keys[#keys\
    \ + 1] = k\n        end\n        return #keys == #dict:len() and #keys == #dict:len()\
    \ and #keys == #dict:len()\n    end)\n    return ok and err == nil\nend", "  \
    \ if dict == nil then\n      return false\n   end\n   for k, v in pairs(dict)\
    \ do\n      if type(k) ~= 'string' then\n         return false\n      end\n  \
    \    if type(v) ~= 'string' then\n         return false\n      end\n   end\n \
    \  return true\nend", "   if dict == nil then\n      return false\n   end\n  \
    \ local keys = table.keys(dict)\n   if #keys == 0 then\n      return false\n \
    \  end\n   for _, key in ipairs(keys) do\n      if type(key) ~= 'string' then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n   \
    \   result = false\n      break\n    end\n    if type(k) ~= \"string\" or k:lower()\
    \ ~= k:upper() then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "   if #dict == 0 then\n      return false\n   end\n   local is_upper\
    \ = true\n   for k,v in pairs(dict) do\n      if type(k) ~= 'string' then\n  \
    \       return false\n      end\n      if type(v) ~= 'string' then\n         return\
    \ false\n      end\n      if k:lower() ~= v:lower() then\n         is_upper =\
    \ false\n      end\n   end\n   return is_upper\nend", "   if #dict == 0 then\n\
    \      return false\n   end\n   for k, v in pairs(dict) do\n      if type(k) ~=\
    \ 'string' or type(v) ~= 'string' then\n         return false\n      end\n   end\n\
    \   return true\nend", "  local result = true\n  for k,v in pairs(dict) do\n \
    \   if type(k) ~= \"string\" then\n      result = false\n    end\n  end\n  return\
    \ result\nend", "   if #dict == 0 then\n      return false\n   end\n   local is_upper\
    \ = false\n   local is_lower = false\n   for k,v in pairs(dict) do\n      if type(k)\
    \ ~= \"string\" then\n         return false\n      end\n      if type(v) ~= \"\
    string\" then\n         return false\n      end\n      if k:lower() == v:lower()\
    \ then\n         is_upper = true\n      elseif k:upper() == v:upper() then\n \
    \        is_lower = true\n      else\n         return false\n      end\n   end\n\
    \   return is_upper and is_lower\nend", "    local result = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) ~= 'string' or k:lower() ~= k then\n \
    \           result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "   if dict == nil then\n      return false\n   end\n   local\
    \ is_upper = false\n   for k,v in pairs(dict) do\n      if type(k) ~= 'string'\
    \ then\n         return false\n      end\n      if type(v) ~= 'string' then\n\
    \         return false\n      end\n      if k:lower() == v:lower() then\n    \
    \     is_upper = true\n      else\n         return false\n      end\n   end\n\
    \   return is_upper\nend", "    local result = true\n    for k,v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            result = false\n    \
    \        break\n        end\n        if type(k) ~= \"string\" then\n         \
    \   result = false\n            break\n        end\n        if string.lower(k)\
    \ ~= k then\n            result = false\n            break\n        end\n    \
    \    if string.upper(k) ~= k then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "    local ok, err = pcall(function()\n\
    \        local keys = {}\n        for k,v in pairs(dict) do\n            table.insert(keys,\
    \ k)\n        end\n        table.sort(keys)\n        for _, k in ipairs(keys)\
    \ do\n            if type(k) ~= \"string\" then\n                return false\n\
    \            end\n        end\n        return true\n    end)\n    if ok then\n\
    \        return true\n    else\n        return false\n    end\nend", "    local\
    \ result = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\"\
    \ then\n            result = false\n            break\n        end\n        if\
    \ type(k) ~= \"string\" then\n            result = false\n            break\n\
    \        end\n        if string.lower(k) ~= k then\n            result = false\n\
    \            break\n        end\n        if string.upper(k) ~= k then\n      \
    \      result = false\n            break\n        end\n    end\n    return result\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ then\n      result = false\n    end\n  end\n  return result\nend", "    local\
    \ result = true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n            result = false\n        end\n    end\n\
    \    return result\nend", "   if #dict == 0 then\n      return false\n   end\n\
    \   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys, key)\n\
    \   end\n   for i = 1, #keys do\n      local key = keys[i]\n      if type(key)\
    \ ~= \"string\" then\n         return false\n      end\n      if key:lower() ==\
    \ key then\n         return true\n      end\n      if key:upper() == key then\n\
    \         return true\n      end\n   end\n   return false\nend", "    local result\
    \ = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(k)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if k:lower() ~= k:upper() then\n            result = false\n        \
    \    break\n        end\n    end\n    return result\nend", "   if #dict == 0 then\n\
    \      return false\n   end\n   local keys = table.sort(dict)\n   for _, key in\
    \ ipairs(keys) do\n      if type(key) ~= 'string' then\n         return false\n\
    \      end\n   end\n   return true\nend", "    local result = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   result = false\n            break\n        end\n        if type(key) ~= \"\
    string\" then\n            result = false\n            break\n        end\n  \
    \      if key:lower() ~= key:upper() then\n            result = false\n      \
    \      break\n        end\n    end\n    return result\nend", "  local result =\
    \ true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~=\
    \ 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "   if #dict == 0 then\n      return false\n   end\n   for k, v in pairs(dict) do\n\
    \      if type(k) ~= 'string' or type(v) ~= 'string' then\n         return false\n\
    \      end\n   end\n   return true\nend", "   if #dict == 0 then\n      return\
    \ false\n   end\n   local keys = {}\n   for k, v in pairs(dict) do\n      table.insert(keys,\
    \ k)\n   end\n   for _, k in ipairs(keys) do\n      if type(k) ~= 'string' then\n\
    \         return false\n      end\n   end\n   for _, k in ipairs(keys) do\n  \
    \    if type(k) ~= 'string' then\n         return false\n      end\n   end\n \
    \  return true\nend", "   if #dict == 0 then\n      return false\n   end\n   local\
    \ keys = table.sort(dict)\n   for _, key in ipairs(keys) do\n      if not key:match(\"\
    ^%a\") then\n         return false\n      end\n   end\n   return true\nend", " \
    \   local result = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' then\n            result = false\n            break\n        end\n\
    \        if type(k) ~= 'string' or k:lower() ~= k then\n            result = false\n\
    \            break\n        end\n    end\n    return result\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n   \
    \   result = false\n    end\n    if type(k) ~= \"string\" then\n      result =\
    \ false\n    end\n  end\n  return result\nend", "   if #dict == 0 then\n     \
    \ return false\n   end\n   for k, v in pairs(dict) do\n      if type(k) ~= \"\
    string\" then\n         return false\n      end\n      if type(v) ~= \"string\"\
    \ then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n\
    \      result = false\n    end\n    if type(k) ~= \"string\" then\n      result\
    \ = false\n    end\n  end\n  return result\nend", "  local result = true\n  for\
    \ k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n\
    \    end\n    if type(v) ~= \"string\" then\n      result = false\n    end\n \
    \ end\n  return result\nend", "    local result = true\n    for key, value in\
    \ pairs(dict) do\n        if type(key) ~= \"string\" then\n            result\
    \ = false\n            break\n        end\n        if type(key) ~= \"string\"\
    \ then\n            result = false\n            break\n        end\n        if\
    \ key:lower() ~= key:upper() then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "  local result = true\n  for\
    \ k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n\
    \      result = false\n    end\n  end\n  return result\nend", "   if #dict ==\
    \ 0 then\n      return false\n   end\n   local keys = {}\n   for k, v in pairs(dict)\
    \ do\n      table.insert(keys, k)\n   end\n   for i = 1, #keys do\n      local\
    \ k = keys[i]\n      if type(k) ~= \"string\" then\n         return false\n  \
    \    end\n      if k:sub(1, 1) ~= k:sub(1, 1) then\n         return false\n  \
    \    end\n   end\n   return true\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = table.keys(dict)\n   for _, key in ipairs(keys) do\n\
    \      if type(key) ~= 'string' then\n         return false\n      end\n     \
    \ if key:lower() ~= key then\n         return false\n      end\n      if key:upper()\
    \ ~= key then\n         return false\n      end\n   end\n   return true\nend",
  "   if #dict == 0 then\n      return false\n   end\n   for key, value in pairs(dict)\
    \ do\n      if type(value) ~= 'string' then\n         return false\n      end\n\
    \      if string.lower(key) ~= key then\n         return false\n      end\n  \
    \    if string.upper(key) ~= key then\n         return false\n      end\n   end\n\
    \   return true\nend", "    local result = true\n    for k,v in pairs(dict) do\n\
    \        if type(k) ~= 'string' or type(v) ~= 'string' then\n            result\
    \ = false\n            break\n        end\n    end\n    return result\nend", " \
    \   local ok, err = pcall(function()\n        for k,v in pairs(dict) do\n    \
    \        if type(k) ~= \"string\" then\n                return false\n       \
    \     end\n        end\n        return true\n    end)\n    return ok and err ==\
    \ nil\nend", "    local result = true\n    for k,v in pairs(dict) do\n       \
    \ if type(k) ~= 'string' then\n            result = false\n            break\n\
    \        end\n        if type(k) ~= 'string' then\n            result = false\n\
    \            break\n        end\n        if string.lower(k) ~= k then\n      \
    \      result = false\n            break\n        end\n        if string.upper(k)\
    \ ~= k then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "   if dict == nil then\n      return false\n   end\n\
    \   local is_upper = false\n   local is_lower = false\n   for key, value in pairs(dict)\
    \ do\n      if type(value) == \"string\" then\n         if is_upper then\n   \
    \         return false\n         end\n         if is_lower then\n            return\
    \ false\n         end\n         if key:lower() == value:lower() then\n       \
    \     is_upper = true\n         else\n            is_lower = true\n         end\n\
    \      else\n         return false\n      end\n   end\n   return true\nend", " \
    \ local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\"\
    \ then\n      result = false\n    end\n    if type(k) ~= \"string\" then\n   \
    \   result = false\n    end\n  end\n  return result\nend", "  local ok, err =\
    \ pcall(function()\n    local result = {}\n    for k, v in pairs(dict) do\n  \
    \    result[k] = tostring(k) .. tostring(v)\n    end\n    return result == table.concat(dict)\n\
    \  end)\n  if ok then\n    return true\n  else\n    ngx.log(ngx.ERR, \"check_dict_case:\
    \ \" .. err)\n    return false\n  end\nend", "   if #dict == 0 then\n      return\
    \ false\n   end\n   local keys = {}\n   for key, value in pairs(dict) do\n   \
    \   if type(value) == \"string\" then\n         table.insert(keys, key)\n    \
    \  end\n   end\n   if #keys == 0 then\n      return false\n   end\n   for _, key\
    \ in pairs(keys) do\n      if key:upper() == key then\n         return false\n\
    \      end\n   end\n   return true\nend", "  local result = true\n  for k,v in\
    \ pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n   \
    \   result = false\n    end\n  end\n  return result\nend", "    local ok, err\
    \ = pcall(function()\n        for k, v in pairs(dict) do\n            if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n                return false\n    \
    \        end\n        end\n        return true\n    end)\n    if ok then\n   \
    \     return true\n    else\n        return false\n    end\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~=\
    \ 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "    local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "    local result = true\n   \
    \ for key, value in pairs(dict) do\n        if type(key) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(key)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if key:lower() ~= key then\n            result = false\n            break\n\
    \        end\n        if key:upper() ~= key then\n            result = false\n\
    \            break\n        end\n    end\n    return result\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~=\
    \ 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "    local result = true\n    for key, value in pairs(dict) do\n        if type(key)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \        if type(key) ~= 'string' then\n            result = false\n         \
    \   break\n        end\n        if key:lower() ~= key:upper() then\n         \
    \   result = false\n            break\n        end\n    end\n    return result\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"\
    string\" then\n      result = false\n      break\n    end\n    if type(k) ~= \"\
    string\" then\n      result = false\n      break\n    end\n    if k ~= string.lower(k)\
    \ or k ~= string.upper(k) then\n      result = false\n      break\n    end\n \
    \ end\n  return result\nend", "   if #dict == 0 then\n      return false\n   end\n\
    \   local is_upper = true\n   for k, v in pairs(dict) do\n      if type(k) ~=\
    \ \"string\" then\n         return false\n      end\n      if type(v) ~= \"string\"\
    \ then\n         return false\n      end\n      if k:lower() ~= v:lower() then\n\
    \         is_upper = false\n      end\n   end\n   return is_upper\nend", "  local\
    \ result = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n\
    \      result = false\n    end\n  end\n  return result\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n   \
    \   result = false\n    end\n  end\n  return result\nend", "    local result =\
    \ true\n    for k, v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(k)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if k:lower() ~= k:upper() then\n            result = false\n        \
    \    break\n        end\n    end\n    return result\nend", "  local result = true\n\
    \  for k,v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string'\
    \ then\n      result = false\n    end\n  end\n  return result\nend", "   if #dict\
    \ == 0 then\n      return false\n   end\n   for key, value in pairs(dict) do\n\
    \      if type(value) == \"string\" then\n         if string.lower(key) == key\
    \ then\n            return true\n         elseif string.upper(key) == key then\n\
    \            return true\n         end\n      end\n   end\n   return false\nend",
  "    local is_upper = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' then\n            is_upper = false\n            break\n        end\n\
    \    end\n    return is_upper\nend", "    local result = true\n    for k,v in\
    \ pairs(dict) do\n        if type(k) ~= \"string\" then\n            result =\
    \ false\n            break\n        end\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(v)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \    end\n    return result\nend", "    local result = true\n    for key, value\
    \ in pairs(dict) do\n        if type(key) ~= \"string\" then\n            result\
    \ = false\n            break\n        end\n        if type(key) ~= \"string\"\
    \ then\n            result = false\n            break\n        end\n        if\
    \ key:lower() ~= key:upper() then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "    local result = true\n   \
    \ for k,v in pairs(dict) do\n        if type(k) ~= 'string' or type(v) ~= 'string'\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "  local ok, err = pcall(function()\n    local ok, err\
    \ = pcall(function()\n      local ok, err = pcall(function()\n        local ok,\
    \ err = pcall(function()\n          local ok, err = pcall(function()\n       \
    \     local ok, err = pcall(function()\n              local ok, err = pcall(function()\n\
    \                local ok, err = pcall(function()\n                  local ok,\
    \ err = pcall(function()\n                    local ok, err = pcall(function()\n\
    \                      return pcall(function()\n                        local\
    \ ok, err = pcall(function()\n                          local ok, err = pcall(function()\n\
    \                            local ok, err = pcall(function()\n              \
    \                local ok, err = pcall(function()\n                          \
    \      return pcall(function()\n                                  local ok, err\
    \ = pcall(function()\n                                    return pcall(function()\n\
    \                                      return pcall(function()\n             \
    \                           return pcall(function()\n                        \
    \                  return pcall(function()\n                                 \
    \           return pcall(function()\n                                        \
    \      return pcall(function()\n                                             \
    \   return pcall(function()\n                                                \
    \  return pcall(function()\n                                                 \
    \   return pcall(function()\n                                                \
    \      return pcall(function()\n                                             \
    \           return pcall(function()\n                                        \
    \                  return pcall(function()\n                                 \
    \                           return pcall(function()\n                        \
    \                                      return pcall(function()\n             \
    \                                                   return pcall(function()\n\
    \                                                                  return pcall(function()\n\
    \                                                                    return pcall(function()\n\
    \                                                                      return\
    \ pcall(function()\n                                                         \
    \               return pcall(function()\n                                    \
    \                                  return pcall(function()\n                 \
    \                                                       return pcall(function()\n\
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                 return pcall(function()\n                                  \
    \                                          return pcall(function()\n         \
    \                                                                     return pcall(function()\n\
    \                                                                            \
    \    return pcall(function()\n                                               \
    \                                   return pcall(function()\n                \
    \                                                                    return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return pcall(function()\n          \
    \                                                                          return\
    \ pcall(function()\n                                                         \
    \                           return pcall(function()\n                        \
    \                                                            return pcall(function()\n\
    \                                                                            \
    \        return pcall(function()\n                                           \
    \                                         return p", "    local result = true\n\
    \    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n      \
    \      result = false\n            break\n        end\n        if type(v) ~= \"\
    string\" then\n            result = false\n            break\n        end\n  \
    \  end\n    return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   for k, v in pairs(dict) do\n      if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n         return false\n      end\n      if k:lower() == v:lower()\
    \ then\n         return true\n      end\n      if k:upper() == v:upper() then\n\
    \         return true\n      end\n   end\n   return false\nend", "   if #dict\
    \ == 0 then\n      return false\n   end\n   local is_upper = false\n   for k,v\
    \ in pairs(dict) do\n      if type(k) ~= 'string' then\n         return false\n\
    \      end\n      if type(v) ~= 'string' then\n         return false\n      end\n\
    \      if k:lower() == v:lower() then\n         is_upper = true\n      elseif\
    \ k:upper() == v:upper() then\n         is_upper = true\n      end\n   end\n \
    \  return is_upper\nend", "   if #dict == 0 then\n      return false\n   end\n\
    \   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys, key)\n\
    \   end\n   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if type(key)\
    \ ~= \"string\" then\n         return false\n      end\n   end\n   return true\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ then\n      result = false\n    end\n    if type(v) ~= 'string' then\n     \
    \ result = false\n    end\n  end\n  return result\nend", "    local result = true\n\
    \    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n      \
    \      result = false\n            break\n        end\n        if type(k) ~= \"\
    string\" then\n            result = false\n            break\n        end\n  \
    \      if type(k) ~= \"string\" then\n            result = false\n           \
    \ break\n        end\n    end\n    return result\nend", "    local result = true\n\
    \    for key, value in pairs(dict) do\n        if type(key) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(key)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if key:lower() ~= key:upper() then\n            result = false\n    \
    \        break\n        end\n    end\n    return result\nend", "    local result\
    \ = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(k)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if k == tostring(k) then\n            result = false\n            break\n\
    \        end\n        if k == tostring(k) then\n            result = false\n \
    \           break\n        end\n    end\n    return result\nend", "  local result\
    \ = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n  \
    \    result = false\n      break\n    end\n    if type(v) ~= \"string\" then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \  if dict == nil then\n      return false\n   end\n   for k, v in pairs(dict)\
    \ do\n      if type(k) ~= 'string' then\n         return false\n      end\n  \
    \    if type(v) ~= 'string' then\n         return false\n      end\n   end\n \
    \  return true\nend", "  local ok, result = pcall(function()\n    local keys =\
    \ {}\n    for k, v in pairs(dict) do\n      table.insert(keys, k)\n    end\n \
    \   table.sort(keys)\n    for _, k in ipairs(keys) do\n      if not k:match(\"\
    ^[%a][%A]*$\") then\n        return false\n      end\n    end\n    return true\n\
    \  end)\n  return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys,\
    \ key)\n   end\n   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if\
    \ type(key) == \"string\" then\n         if string.lower(key) == key then\n  \
    \          return true\n         end\n      else\n         if string.upper(key)\
    \ == key then\n            return true\n         end\n      end\n   end\n   return\
    \ false\nend", "    local is_upper = true -- True if all keys are in upper case\n\
    \    local is_lower = true -- True if all keys are in lower case\n    for k,v\
    \ in pairs(dict) do\n        if type(k) ~= 'string' then\n            is_upper\
    \ = false\n        elseif k:lower() == k then\n            is_lower = true\n \
    \       else\n            is_upper = false\n        end\n    end\n    return is_upper\
    \ and is_lower\nend", "    local result = true\n    for k,v in pairs(dict) do\n\
    \        if type(k) ~= \"string\" then\n            result = false\n         \
    \   break\n        end\n        if type(k) ~= \"string\" then\n            result\
    \ = false\n            break\n        end\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n      result = false\n    end\n  end\n\
    \  return result\nend", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys,\
    \ key)\n   end\n   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if\
    \ type(key) ~= 'string' then\n         return false\n      end\n   end\n   return\
    \ true\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' then\n      result = false\n    end\n    if type(v) ~= 'string'\
    \ then\n      result = false\n    end\n  end\n  return result\nend", "   if dict\
    \ == nil then\n      return false\n   end\n   for k, v in pairs(dict) do\n   \
    \   if type(k) ~= 'string' then\n         return false\n      end\n      if type(v)\
    \ ~= 'string' then\n         return false\n      end\n   end\n   return true\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"\
    string\" then\n      result = false\n    end\n  end\n  return result\nend", " \
    \ local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n      result = false\n    end\n  end\n  return\
    \ result\nend", "  local ok, result = pcall(function()\n    local keys = table.keys(dict)\n\
    \    for _, key in ipairs(keys) do\n      if not type(key) == \"string\" then\n\
    \        return false\n      end\n    end\n    return true\n  end)\n  return ok\
    \ and result\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if\
    \ type(k) ~= \"string\" then\n      result = false\n    end\n    if type(k) ~=\
    \ \"string\" then\n      result = false\n    end\n  end\n  return result\nend",
  "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n      result = false\n    end\n  end\n  return\
    \ result\nend", "    local result = true\n    for k,v in pairs(dict) do\n    \
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n            result =\
    \ false\n            break\n        end\n    end\n    return result\nend", " \
    \   local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' or type(v) ~= 'string' then\n            result = false\n         \
    \   break\n        end\n    end\n    return result\nend", "    local ok, err =\
    \ pcall(function()\n        local keys = {}\n        for k,v in pairs(dict) do\n\
    \            table.insert(keys, k)\n        end\n        table.sort(keys)\n  \
    \      for k,v in pairs(keys) do\n            if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n                return false\n            end\n        end\n\
    \        return true\n    end)\n    return ok, err\nend", "    local result =\
    \ true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \    end\n    return result\nend", "    local ok, err = pcall(function()\n   \
    \     for k, v in pairs(dict) do\n            if type(k) ~= \"string\" then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end)\n    if ok then\n        return true\n    else\n        return false\n\
    \    end\nend", "  local ok, err = pcall(function()\n    local result = {}\n \
    \   for k, v in pairs(dict) do\n      result[k] = tostring(k) .. tostring(tostring(v))\n\
    \    end\n    return table.concat(result, \"\\n\") == table.concat(dict, \"\"\
    )\n  end)\n  return ok, err\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   for k, v in pairs(dict) do\n      if type(k) ~= 'string' then\n  \
    \       return false\n      end\n      if type(v) ~= 'string' then\n         return\
    \ false\n      end\n   end\n   return true\nend", "   if dict == nil then\n  \
    \    return false\n   end\n   local keys = dict:keys()\n   for _, key in ipairs(keys)\
    \ do\n      if type(key) ~= 'string' then\n         return false\n      end\n\
    \   end\n   return true\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for key in pairs(dict) do\n      table.insert(keys,\
    \ key)\n   end\n   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if\
    \ type(key) ~= \"string\" then\n         return false\n      end\n   end\n   return\
    \ true\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n      result = false\n    end\n  end\n\
    \  return result\nend", "    local result = true\n    for k,v in pairs(dict) do\n\
    \        if type(k) ~= 'string' or type(v) ~= 'string' then\n            result\
    \ = false\n            break\n        end\n    end\n    return result\nend", " \
    \   local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' or type(v) ~= 'string' then\n            result = false\n        end\n\
    \    end\n    return result\nend", "   if #dict == 0 then\n      return false\n\
    \   end\n   local keys = {}\n   for k, v in pairs(dict) do\n      table.insert(keys,\
    \ k)\n   end\n   for _, k in ipairs(keys) do\n      local v = dict[k]\n      if\
    \ type(k) == \"string\" then\n         if type(v) == \"string\" then\n       \
    \     if k:lower() == v:lower() then\n               return true\n           \
    \ end\n         else\n            return false\n         end\n      else\n   \
    \      if type(v) == \"string\" then\n            if k:upper() == v:upper() then\n\
    \               return true\n            end\n         else\n            return\
    \ false\n         end\n      end\n   end\n   return false\nend", "    local result\
    \ = true\n    for key, value in pairs(dict) do\n        if type(key) ~= 'string'\
    \ or type(key) ~= 'string' then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "   if #dict == 0 then\n     \
    \ return false\n   end\n   local is_upper = true\n   for k, v in pairs(dict) do\n\
    \      if type(k) ~= \"string\" then\n         return false\n      end\n     \
    \ if type(v) ~= \"string\" then\n         return false\n      end\n      if k:lower()\
    \ ~= v:lower() then\n         is_upper = false\n      end\n   end\n   return is_upper\n\
    end", "   if #dict == 0 then\n      return false\n   end\n   local keys = table.keys(dict)\n\
    \   for _, key in ipairs(keys) do\n      if type(key) ~= \"string\" then\n   \
    \      return false\n      end\n   end\n   for _, key in ipairs(keys) do\n   \
    \   if type(key) ~= \"string\" then\n         return false\n      end\n   end\n\
    \   return true\nend", "  local result = true\n  for k, v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or k:lower() ~= k then\n      result = false\n   \
    \ end\n  end\n  return result\nend", "   if dict == nil then\n      return false\n\
    \   end\n   local result = true\n   for key, value in pairs(dict) do\n      if\
    \ type(value) ~= \"string\" then\n         result = false\n      end\n   end\n\
    \   return result\nend", "   if #dict == 0 then\n      return false\n   end\n\
    \   local is_upper = true\n   for k,v in pairs(dict) do\n      if type(k) ~= 'string'\
    \ then\n         return false\n      end\n      if type(v) ~= 'string' then\n\
    \         return false\n      end\n      if k:lower() ~= v:lower() then\n    \
    \     is_upper = false\n      end\n   end\n   return is_upper\nend", "  local\
    \ result = true\n  for k, v in pairs(dict) do\n    if type(k) ~= \"string\" then\n\
    \      result = false\n      break\n    end\n    if type(v) ~= \"string\" then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \   local result = true\n    for key, value in pairs(dict) do\n        if type(key)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if type(key) ~= \"string\" then\n            result = false\n       \
    \     break\n        end\n        if key:lower() ~= key:upper() then\n       \
    \     result = false\n            break\n        end\n    end\n    return result\n\
    end", "    local result = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \        if type(v) ~= 'string' then\n            result = false\n           \
    \ break\n        end\n    end\n    return result\nend", "  local result = true\n\
    \  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result\
    \ = false\n      break\n    end\n    if type(k) ~= \"string\" then\n      result\
    \ = false\n      break\n    end\n    if k:lower() ~= k:upper() then\n      result\
    \ = false\n      break\n    end\n  end\n  return result\nend", "   if #dict ==\
    \ 0 then\n      return false\n   end\n   local keys = {}\n   for key, value in\
    \ pairs(dict) do\n      if type(value) == \"string\" then\n         table.insert(keys,\
    \ key)\n      end\n   end\n   if #keys == 0 then\n      return false\n   end\n\
    \   for _, key in pairs(keys) do\n      if type(key) ~= \"string\" then\n    \
    \     return false\n      end\n   end\n   return true\nend", "  local result =\
    \ true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n     \
    \ result = false\n      break\n    end\n    if type(k) ~= \"string\" then\n  \
    \    result = false\n      break\n    end\n    if k:lower() ~= k:upper() then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \   local is_upper = true\n    local is_lower = true\n    for k,v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            is_upper = false\n  \
    \      end\n        if type(k) ~= \"string\" then\n            is_lower = false\n\
    \        end\n    end\n    return is_upper and is_lower\nend", "  local result\
    \ = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string' then\n     \
    \ result = false\n      break\n    end\n    if type(k) ~= 'string' or k:upper()\
    \ ~= k then\n      result = false\n      break\n    end\n  end\n  return result\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ then\n      result = false\n      break\n    end\n    if type(v) ~= 'string'\
    \ then\n      result = false\n      break\n    end\n  end\n  return result\nend",
  "    local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n            result = false\n            break\n\
    \        end\n    end\n    return result\nend", "  local result = true\n  for\
    \ k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n    if type(k) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n    if k:lower() ~= k:upper() then\n      result = false\n\
    \      break\n    end\n  end\n  return result\nend", "    local result = true\n\
    \    for k,v in pairs(dict) do\n        if type(k) ~= 'string' then\n        \
    \    result = false\n            break\n        end\n        if type(k) ~= 'string'\
    \ then\n            result = false\n            break\n        end\n        if\
    \ type(k) ~= 'string' then\n            result = false\n            break\n  \
    \      end\n    end\n    return result\nend", "  local result = true\n  for k,v\
    \ in pairs(dict) do\n    if type(k) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n    if type(k) ~= \"string\" then\n      result = false\n\
    \      break\n    end\n    if k ~= string.lower(k) or k ~= string.upper(k) then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \   local result = true\n    for key, value in pairs(dict) do\n        if type(key)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if type(key) ~= \"string\" then\n            result = false\n       \
    \     break\n        end\n        if key:lower() ~= key:upper() then\n       \
    \     result = false\n            break\n        end\n    end\n    return result\n\
    end", "    local result = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n            result = false\n      \
    \      break\n        end\n    end\n    return result\nend", "    local result\
    \ = true\n    for k,v in pairs(dict) do\n        if type(k) ~= \"string\" then\n\
    \            result = false\n            break\n        end\n        if type(v)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \    end\n    return result\nend", "    local result = true\n    for k,v in pairs(dict)\
    \ do\n        if type(k) ~= 'string' or type(v) ~= 'string' then\n           \
    \ result = false\n        end\n    end\n    return result\nend", "    local ok,\
    \ err = pcall(function()\n        local ok, err = pcall(function()\n         \
    \   for k, v in pairs(dict) do\n                if type(k) ~= 'string' or k:lower()\
    \ ~= k then\n                    return false\n                end\n         \
    \   end\n            return true\n        end)\n    end)\n    return ok and err\
    \ == nil\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n    if type(k)\
    \ ~= \"string\" then\n      result = false\n      break\n    end\n    if k:lower()\
    \ ~= k:upper() then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "   if #dict == 0 then\n      return false\n   end\n   local keys\
    \ = table.sort(dict)\n   for _, key in ipairs(keys) do\n      if type(key) ~=\
    \ 'string' then\n         return false\n      end\n   end\n   return true\nend",
  "   if dict == nil then\n      return false\n   end\n   for k, v in pairs(dict)\
    \ do\n      if type(k) ~= 'string' then\n         return false\n      end\n  \
    \    if type(v) ~= 'string' then\n         return false\n      end\n   end\n \
    \  return true\nend", "   if #dict == 0 then\n      return false\n   end\n   local\
    \ keys = {}\n   for key in pairs(dict) do\n      table.insert(keys, key)\n   end\n\
    \   table.sort(keys)\n   for _, key in ipairs(keys) do\n      if type(key) ~=\
    \ 'string' then\n         return false\n      end\n   end\n   return true\nend",
  "    local result = true\n    for k,v in pairs(dict) do\n        if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n            result = false\n        end\n    end\n\
    \    return result\nend", "    local ok, err = pcall(function()\n        for k,v\
    \ in pairs(dict) do\n            if type(k) ~= \"string\" then\n             \
    \   return false\n            end\n        end\n        return true\n    end)\n\
    \    if ok then\n        return true\n    else\n        return false\n    end\n\
    end", "    local result = true\n    for k,v in pairs(dict) do\n        if type(k)\
    \ ~= \"string\" then\n            result = false\n            break\n        end\n\
    \        if type(k) ~= \"string\" then\n            result = false\n         \
    \   break\n        end\n        if string.lower(k) ~= k then\n            result\
    \ = false\n            break\n        end\n        if string.upper(k) ~= k then\n\
    \            result = false\n            break\n        end\n    end\n    return\
    \ result\nend", "    local result = true\n    for key, value in pairs(dict) do\n\
    \        if type(key) ~= \"string\" then\n            result = false\n       \
    \     break\n        end\n        if type(key) ~= \"string\" then\n          \
    \  result = false\n            break\n        end\n        if key:lower() ~= key:upper()\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "    local result = true\n    for k,v in pairs(dict)\
    \ do\n        if type(k) ~= 'string' or type(v) ~= 'string' then\n           \
    \ result = false\n            break\n        end\n    end\n    return result\n\
    end", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k) ~= 'string'\
    \ or type(v) ~= 'string' then\n      result = false\n    end\n  end\n  return\
    \ result\nend", "  local result = true\n  for k,v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' or type(v) ~= 'string' then\n      result = false\n    end\n  end\n\
    \  return result\nend", "    local result = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= \"string\" then\n            result = false\n    \
    \        break\n        end\n        if type(k) ~= \"string\" then\n         \
    \   result = false\n            break\n        end\n        if k:lower() ~= k:upper()\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "  local result = true\n  for k,v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or type(v) ~= 'string' then\n      result = false\n\
    \    end\n  end\n  return result\nend", "    local result = true\n    for key,\
    \ value in pairs(dict) do\n        if type(key) ~= \"string\" then\n         \
    \   result = false\n            break\n        end\n        if type(key) ~= \"\
    string\" then\n            result = false\n            break\n        end\n  \
    \      if key:lower() ~= key:upper() then\n            result = false\n      \
    \      break\n        end\n    end\n    return result\nend", "  local result =\
    \ true\n  for k,v in pairs(dict) do\n    if type(k) ~= \"string\" then\n     \
    \ result = false\n    end\n  end\n  return result\nend", "  local ok, err = pcall(function()\n\
    \    local keys = {}\n    for k, v in pairs(dict) do\n      table.insert(keys,\
    \ k)\n    end\n    table.sort(keys)\n    for _, k in ipairs(keys) do\n      if\
    \ k:byte(1) == string.byte(k:lower(), 'a') then\n        return true\n      elseif\
    \ k:byte(1) == string.byte(k:upper(), 'A') then\n        return true\n      end\n\
    \    end\n    return false\n  end)\n  if ok then\n    return true\n  else\n  \
    \  return false, err\n  end\nend", "  local result = true\n  for k,v in pairs(dict)\
    \ do\n    if type(k) ~= \"string\" then\n      result = false\n    end\n  end\n\
    \  return result\nend", "    local result = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) ~= \"string\" then\n            result = false\n  \
    \          break\n        end\n        if type(key) ~= \"string\" then\n     \
    \       result = false\n            break\n        end\n        if key:lower()\
    \ ~= key:upper() then\n            result = false\n            break\n       \
    \ end\n    end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

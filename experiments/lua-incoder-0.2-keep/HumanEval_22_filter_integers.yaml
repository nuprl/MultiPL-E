name: HumanEval_22_filter_integers
language: lua
prompt: "-- Filter given list of any python values only for integers\n-- >>> filter_integers(['a',\
  \ 3.14, 5])\n-- [5]\n-- >>> filter_integers([1, 2, 3, 'abc', {}, []])\n-- [1, 2,\
  \ 3]\nlocal function filter_integers(values)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = filter_integers\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({4, {}, {},\
  \ 23.2, 9, 'adasd'}), {4, 9})\n    lu.assertEquals(candidate({3, 'c', 3, 3, 'a',\
  \ 'b'}), {3, 3, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local results = {}\n  for _, value in ipairs(values) do\n    if type(value)\
    \ ~= 'number' then\n      table.insert(results, value)\n    end\n  end\n  return\
    \ results\nend", "  local results = {}\n  for _, value in ipairs(values) do\n\
    \    if type(value) == 'number' then\n      table.insert(results, value)\n   \
    \ end\n  end\n  return results\nend", "  local results = {}\n  for _, value in\
    \ pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) == 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) == 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in pairs(values) do\n    if type(value) ~= 'number' then\n      table.insert(results,\
    \ value)\n    end\n  end\n  return results\nend", "  local results = {}\n  for\
    \ _, value in ipairs(values) do\n    if type(value) == 'number' and math.floor(value)\
    \ == value then\n      table.insert(results, value)\n    end\n  end\n  return\
    \ results\nend", "  local results = {}\n  for _, value in pairs(values) do\n \
    \   if type(value) ~= 'number' then\n      table.insert(results, value)\n    end\n\
    \  end\n  return results\nend", "  local results = {}\n  for _, value in ipairs(values)\
    \ do\n    if type(value) ~= 'number' then\n      table.insert(results, value)\n\
    \    end\n  end\n  return results\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

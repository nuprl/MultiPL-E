name: HumanEval_58_common
language: lua
prompt: "-- Return sorted unique common elements for two lists.\n-- >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n-- [1, 5, 653]\n-- >>> common([5,\
  \ 3, 2, 8], [3, 2])\n-- [2, 3]\nlocal function common(l1, l2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
  \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}),\
  \ {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2, 3})\n \
  \   lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4,\
  \ 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common =\
    \ {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n\
    \        table.insert(common, l1[i1])\n        i1 = i1 + 1\n      else\n     \
    \   j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n  return common\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n\
    \  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n\
    \        table.insert(common, l1[i1])\n        i1 = i1 + 1\n        break\n  \
    \    elseif l1[i1] < l2[j1] then\n        j2 = j2 + 1\n      else\n        i1\
    \ = i1 + 1\n      end\n    end\n    while j1 <= j2 do\n      table.insert(common,\
    \ l2[j1])\n      j1 = j1 + 1\n    end\n    while i1 <= i2 do\n      table.insert(common,\
    \ l1[i1])\n      i1 = i1 + 1\n    end\n  end\n  return common\nend", "  local\
    \ i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1\
    \ = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n \
    \     j2 = j2 + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n    \
    \  j2 = j2 + 1\n    end\n  end\n  return l1[i1]\nend", "  local common = {}\n\
    \  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 ==\
    \ v2 then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        break\n      elseif j1 > j2 then\n        break\n      end\n      j1\
    \ = j1 + 1\n    end\n    j2 = j2 + 1\n  end\n  return common\nend", "  local i1,\
    \ i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2\
    \ do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        i1 = i1 + 1\n        break\n      elseif l1[i1] < l2[j1] then\n\
    \        j2 = j2 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n  \
    \  j1 = j1 + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v\
    \ in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n  \
    \      table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2\
    \ = l2[j1]\n    if e1 == e2 then\n      common[e1] = common[e1] or 1\n      j1\
    \ = j1 + 1\n    elseif common[e1] > common[e2] then\n      common[e2] = common[e2]\
    \ + 1\n    else\n      common[e1] = common[e1] + 1\n    end\n    i1 = i1 + 1\n\
    \  end\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    common[l1[i1]] = common[l1[i1]]\
    \ or 1\n    i1 = i1 + 1\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        j1 = j1 + 1\n\
    \      else\n        j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \     break\n      elseif l1[i1] < l2[j1] then\n        j2 = j2 + 1\n      else\n\
    \        i1 = i1 + 1\n      end\n    end\n    while j1 <= j2 do\n      table.insert(common,\
    \ l2[j1])\n      j2 = j2 + 1\n    end\n    while i1 <= i2 do\n      table.insert(common,\
    \ l1[i1])\n      i1 = i1 + 1\n    end\n  end\n  return common\nend", "  local\
    \ i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <=\
    \ i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        i1 = i1 + 1\n        break\n      end\n      j1 = j1 + 1\n\
    \    end\n    j1 = 1\n    i1 = i1 + 1\n  end\n  return common\nend", "  local\
    \ common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n \
    \     if v == v2 then\n        table.insert(common, v)\n      end\n    end\n \
    \ end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n\
    \    table.insert(l3, v)\n  end\n  for _, v in ipairs(l2) do\n    table.insert(l3,\
    \ v)\n  end\n  table.sort(l3)\n  local l4 = {}\n  for _, v in ipairs(l3) do\n\
    \    table.insert(l4, v)\n  end\n  return l4\nend", "  local common = {}\n  for\
    \ _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n\
    \        table.insert(common, v1)\n      end\n    end\n  end\n  return common\n\
    end", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    if l3[v] then return\
    \ end\n    l3[v] = true\n  end\n  for _, v in ipairs(l2) do\n    if not l3[v]\
    \ then return end\n  end\n  return l1\nend", "  local common = {}\n  for _, v1\
    \ in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n \
    \       table.insert(common, v1)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n  \
    \  elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n\
    \  end\n  return l1[i1]\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[j1]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j1 = j1 + 1\n  \
    \  elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j1 = j1 + 1\n    end\n\
    \  end\n  return l1[j1]\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local\
    \ e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      common[e1] =\
    \ common[e1] + 1\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif common[e1]\
    \ > common[e2] then\n      common[e2] = common[e2] + 1\n      j2 = j2 + 1\n  \
    \  else\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n    end\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n\
    \    local e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      i1\
    \ = i1 + 1\n      j2 = j2 + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n  \
    \  else\n      j2 = j2 + 1\n    end\n  end\n  return l1[i1]\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n   \
    \ for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        break\n      elseif l1[i1] < l2[j1] then\n        j2 = j2 + 1\n     \
    \ else\n        i1 = i1 + 1\n      end\n    end\n    while j1 <= j2 do\n     \
    \ table.insert(common, l2[j1])\n      j2 = j2 + 1\n    end\n    while i1 <= i2\
    \ do\n      table.insert(common, l1[i1])\n      i1 = i1 + 1\n    end\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \     break\n      end\n      j1 = j1 + 1\n    end\n    i1 = i1 + 1\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n   \
    \ for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[j1]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j1 = j1 + 1\n  \
    \  elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j1 = j1 + 1\n    end\n\
    \  end\n  return l1[j1]\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n  \
    \  i2 = i2 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2\
    \ do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n \
    \       i1 = i1 + 1\n        j1 = j1 + 1\n      elseif l1[i1] > l2[j1] then\n\
    \        j1 = j1 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n  \
    \  j2 = j2 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2\
    \ do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n \
    \       i1 = i1 + 1\n        break\n      elseif l1[i1] < l2[j1] then\n      \
    \  j2 = j2 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n    j1 =\
    \ j1 + 1\n  end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1)\
    \ do\n    if l3[v] then return nil end\n    l3[v] = true\n  end\n  for _, v in\
    \ ipairs(l2) do\n    if not l3[v] then return nil end\n  end\n  return l3\nend",
  "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while\
    \ i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n       \
    \ table.insert(common, l1[i1])\n        i1 = i1 + 1\n      else\n        j2 =\
    \ j2 + 1\n      end\n    end\n    j1 = j1 + 1\n  end\n  return common\nend", " \
    \ local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1,\
    \ #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n \
    \   local e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2\
    \ + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n\
    \    end\n  end\n  return l1[i1]\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1)\
    \ do\n    if l3[v] then return nil end\n    l3[v] = true\n  end\n  for _, v in\
    \ ipairs(l2) do\n    if l3[v] then return nil end\n    l3[v] = true\n  end\n \
    \ return l3\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for\
    \ _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    table.insert(l3, v)\n\
    \  end\n  for _, v in ipairs(l2) do\n    table.insert(l3, v)\n  end\n  return\
    \ table.sort(l3)\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i = 1\n  while i <= #l1 do\n    local found = false\n    for j = 1, #l2\
    \ do\n      if l1[i] == l2[j] then\n        table.insert(common, l2[j])\n    \
    \    found = true\n        break\n      end\n    end\n    if not found then\n\
    \      table.insert(common, l1[i])\n    end\n    i = i + 1\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local l3 = {}\n  for\
    \ _, v in ipairs(l1) do\n    table.insert(l3, v)\n  end\n  for _, v in ipairs(l2)\
    \ do\n    table.insert(l3, v)\n  end\n  table.sort(l3)\n  local l4 = {}\n  for\
    \ _, v in ipairs(l3) do\n    table.insert(l4, v)\n  end\n  return l4\nend", " \
    \ local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local\
    \ e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n\
    \      j2 = j2 + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n   \
    \   j2 = j2 + 1\n    end\n  end\n  return l1[i1]\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[i2]\n    if e1 == e2 then\n      common[e1] = common[e1] or 1\n    \
    \  common[e1] = common[e1] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif\
    \ common[e1] > common[e2] then\n      common[e2] = common[e2] + 1\n    else\n\
    \      common[e1] = common[e1] + 1\n    end\n  end\n  return common\nend", " \
    \ local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n      end\n      j2 =\
    \ j2\n    end\n    j1 = j1 + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[i2]\n    if e1 == e2 then\n      common[e1] = common[e1] or\
    \ 1\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n \
    \     common[e2] = common[e2] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif\
    \ common[e1] > common[e2] then\n      common[e1] = common[e1] or 1\n      common[e2]\
    \ = common[e2] or 1\n      common[e1] = common[e1] + 1\n      common[e2] = common[e2]\
    \ + 1\n    elseif common[e1] < common[e2] then\n      common[e1] = common[e1]\
    \ or 1\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n\
    \      common[e2] = common[e2] + 1\n    end\n  end\n  return common\nend", " \
    \ local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n\
    \    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        l3[#l3 + 1] =\
    \ v\n      end\n    end\n  end\n  return l3\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local\
    \ e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      common[e1] =\
    \ common[e1] or 1\n      j2 = j2 + 1\n    elseif common[e1] > common[e2] then\n\
    \      common[e2] = common[e2] + 1\n    else\n      common[e1] = common[e1] +\
    \ 1\n    end\n    i1 = i1 + 1\n  end\n  return common\nend", "  local i1, i2 =\
    \ 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[i2]\n\
    \    if e1 == e2 then\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif e1 < e2\
    \ then\n      i1 = i1 + 1\n    else\n      i2 = i2 + 1\n    end\n  end\n  return\
    \ l1\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2\
    \ do\n    local i3 = i1\n    local j3 = j2\n    while j1 <= j2 do\n      local\
    \ i4 = i3\n      local j4 = j3\n      while i4 <= i2 do\n        local i5 = i4\n\
    \        local j5 = j4\n        while j5 <= j2 do\n          local i6 = i5\n \
    \         local j6 = j5\n          while i6 <= i2 do\n            local i7 = i6\n\
    \            local j7 = j6\n            while i7 <= i2 do\n              local\
    \ i8 = i7\n              local j8 = j7\n              while i8 <= i2 do\n    \
    \            local i9 = i8\n                local j9 = j8\n                while\
    \ i9 <= i2 do\n                  local i10 = i9\n                  local j10 =\
    \ j9\n                  while i10 <= i2 do\n                    local i11 = i10\n\
    \                    local j11 = j10\n                    while i11 <= i2 do\n\
    \                      local i12 = i11\n                      local j12 = j11\n\
    \                      while i12 <= i2 do\n                        local i13 =\
    \ i12\n                        local j13 = j12\n                        while\
    \ i13 <= i2 do\n                          local i14 = i13\n                  \
    \        local j14 = j13\n                          while i14 <= i2 do\n     \
    \                       local i15 = i14\n                            local j15\
    \ = j14\n                            while i15 <= i2 do\n                    \
    \          local i16 = i15\n                              local j16 = j15\n  \
    \                            while i16 <= i2 do\n                            \
    \    local i17 = i16\n                                local j17 = j16\n      \
    \                          while i17 <= i2 do\n                              \
    \    local i18 = i17\n                                  local j18 = j17\n    \
    \                              while i18 <= i2 do\n                          \
    \          local i19 = i18\n                                    local j19 = j18\n\
    \                                    while i19 <= i2 do\n                    \
    \                  local i20 = i19\n                                      local\
    \ j20 = j19\n                                      while i20 <= i2 do\n      \
    \                                  local i21 = i20\n                         \
    \               local j21 = j20\n                                        while\
    \ i21 <= i2 do\n                                          local i22 = i21\n  \
    \                                        local j22 = j21\n                   \
    \                       while i22 <= i2 do\n                                 \
    \           local i23 = i22\n                                            local\
    \ j23 = j", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common\
    \ = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n  \
    \  if e1 == e2 then\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n  \
    \    j2 = j2 + 1\n    elseif common[e1] > common[e2] then\n      common[e2] =\
    \ common[e2] + 1\n      j2 = j2 + 1\n    else\n      common[e1] = common[e1] +\
    \ 1\n      i1 = i1 + 1\n    end\n  end\n  return common\nend", "  local common\
    \ = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[i2]\n    if e1 == e2 then\n      common[e1] = common[e1] or\
    \ 1\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n \
    \     common[e2] = common[e2] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif\
    \ common[e1] > common[e2] then\n      common[e1] = common[e1] or 1\n      common[e2]\
    \ = common[e2] or 1\n      common[e1] = common[e1] + 1\n      common[e2] = common[e2]\
    \ + 1\n      i1 = i1 + 1\n    elseif common[e1] < common[e2] then\n      common[e1]\
    \ = common[e1] or 1\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1]\
    \ + 1\n      common[e2] = common[e2] + 1\n      i2 = i2 + 1\n    end\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \     j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n    i2\
    \ = i2 + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v in\
    \ ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n     \
    \   table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while\
    \ i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n       \
    \ table.insert(common, l1[i1])\n        i1 = i1 + 1\n        j1 = j1 + 1\n   \
    \   else\n        j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n  return\
    \ common\nend", "  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 =\
    \ l1[i1]\n    local e2 = l2[i2]\n    if e1 == e2 then\n      i1 = i1 + 1\n   \
    \   i2 = i2 + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      i2\
    \ = i2 + 1\n    end\n  end\n  return l1\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[j1]\n    if e1 == e2 then\n      common[e1] = common[e1] +\
    \ 1\n      i1 = i1 + 1\n      j1 = j1 + 1\n    elseif common[e1] > common[e2]\
    \ then\n      common[e2] = common[e2] + 1\n      j2 = j2 + 1\n    else\n     \
    \ common[e1] = common[e1] + 1\n      i1 = i1 + 1\n    end\n  end\n  return common\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n\
    \  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j1]\n    if e1\
    \ == e2 then\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n      j1 =\
    \ j1 + 1\n    elseif common[e1] > common[e2] then\n      common[e2] = common[e2]\
    \ + 1\n      j2 = j2 + 1\n    else\n      common[e1] = common[e1] + 1\n      i1\
    \ = i1 + 1\n    end\n  end\n  if i1 > i2 then\n    for i = i2, i1, -1 do\n   \
    \   common[i] = common[i - 1] + 1\n    end\n  end\n  if j1 > j2 then\n    for\
    \ j = j2, j1, -1 do\n      common[j] = common[j - 1] + 1\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while\
    \ j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n\
    \        i1 = i1 + 1\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n \
    \     end\n    end\n    i2 = i2 + 1\n  end\n  return common\nend", "  local i1,\
    \ i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2\
    \ do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        i1 = i1 + 1\n        break\n      elseif l1[i1] < l2[j1] then\n\
    \        j2 = j2 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n  \
    \  while j1 <= j2 do\n      table.insert(common, l1[i1])\n      i1 = i1 + 1\n\
    \    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1,\
    \ j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n\
    \    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif e1 < e2\
    \ then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n  end\n  return\
    \ l1[i1]\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while\
    \ j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n\
    \        i1 = i1 + 1\n        break\n      end\n      j1 = j1 + 1\n    end\n \
    \   j1 = 1\n    i1 = i1 + 1\n  end\n  return common\nend", "  local i1, i2 = 1,\
    \ #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n   \
    \ while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n \
    \   end\n    i1 = i1 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local\
    \ e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      common[e1] =\
    \ common[e1] + 1\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif common[e1]\
    \ > common[e2] then\n      common[e2] = common[e2] + 1\n      j2 = j2 + 1\n  \
    \  else\n      i1 = i1 + 1\n    end\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  local i = 1\n  while i <= #l1 and\
    \ i <= #l2 do\n    if l1[i] == l2[i] then\n      table.insert(common, l1[i])\n\
    \      i = i + 1\n    elseif l1[i] > l2[i] then\n      table.insert(common, l2[i])\n\
    \      i = i + 1\n    else\n      table.insert(common, l1[i])\n      i = i + 1\n\
    \    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1,\
    \ j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n\
    \    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif e1 < e2\
    \ then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n  end\n  return\
    \ l1[i1]\nend", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common, v1)\n\
    \      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while\
    \ j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n\
    \      end\n      j2 = j2 + 1\n    end\n    j1 = j1 + 1\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n  \
    \  i2 = i2 + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v\
    \ in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n  \
    \      table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n  \
    \  i2 = i2 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 =\
    \ l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif\
    \ e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n  end\n\
    \  return l1[i1]\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n\
    \    if e1 == e2 then\n      common[#common+1] = e1\n      i1, j2 = i1 + 1, j2\
    \ + 1\n    elseif e1 < e2 then\n      i1, j2 = i1 + 1, j2\n    else\n      j1,\
    \ i2 = j1 + 1, i2\n    end\n  end\n  return common\nend", "  local i1, i2 = 1,\
    \ #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n   \
    \ local e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n      common[e1]\
    \ = common[e1] or 1\n      common[e1] = common[e1] + 1\n      j2 = j2 + 1\n  \
    \  elseif common[e1] > common[e2] then\n      common[e2] = common[e2] + 1\n  \
    \  else\n      common[e1] = common[e1] + 1\n    end\n    i1 = i1 + 1\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \   else\n        j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n  return\
    \ common\nend", "  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 =\
    \ l1[i1]\n    local e2 = l2[i2]\n    if e1 == e2 then\n      i1 = i1 + 1\n   \
    \   i2 = i2 + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      i2\
    \ = i2 + 1\n    end\n  end\n  return l1\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2\
    \ do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n \
    \     end\n      j2 = j2 + 1\n    end\n    j1 = j1 + 1\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local l3 = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        l3[#l3 + 1] = v\n      end\n    end\n  end\n  return l3\nend", "  local\
    \ i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <=\
    \ i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n      end\n      j2 = j2 + 1\n    end\n    i2 = i2 + 1\n    j1 = j1\
    \ + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[j2]\n    common[e1] = common[e1] or e2\n    i1, i2 = i1 + 1,\
    \ i2 + 1\n    j1, j2 = j1 + 1, j2 + 1\n  end\n  return common\nend", "  local\
    \ i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <=\
    \ i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        i1 = i1 + 1\n        break\n      elseif j1 > j2 then\n   \
    \     break\n      end\n      j1 = j1 + 1\n    end\n    j2 = j2 + 1\n  end\n \
    \ return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n      end\n      j2 = j2\
    \ + 1\n    end\n    j1 = j1 + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n   \
    \ for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1,\
    \ #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n \
    \   local e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2\
    \ + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n\
    \    end\n  end\n  return l1[i1]\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local l3 = {}\n  for\
    \ _, v in ipairs(l1) do\n    table.insert(l3, v)\n  end\n  for _, v in ipairs(l2)\
    \ do\n    table.insert(l3, v)\n  end\n  table.sort(l3)\n  local l4 = {}\n  for\
    \ _, v in ipairs(l3) do\n    table.insert(l4, v)\n  end\n  return l4\nend", " \
    \ local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while\
    \ i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n       \
    \ table.insert(common, l1[i1])\n        i1 = i1 + 1\n        j1 = j1 + 1\n   \
    \   elseif l1[i1] < l2[j1] then\n        j1 = j1 + 1\n      else\n        i1 =\
    \ i1 + 1\n      end\n    end\n    j2 = j1 + 1\n  end\n  return common\nend", " \
    \ local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while\
    \ i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1 == e2 then\n\
    \      common[e1] = common[e1] + 1\n      j2 = j2 + 1\n    elseif common[e1] >\
    \ common[e2] then\n      common[e2] = common[e2] + 1\n      j1 = j1 + 1\n    else\n\
    \      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n      j2 = j2 + 1\n   \
    \ end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[j1]\n    if e1 == e2 then\n      common[e1] = common[e1] +\
    \ 1\n      i1 = i1 + 1\n      j1 = j1 + 1\n    elseif common[e1] > common[e2]\
    \ then\n      common[e2] = common[e2] + 1\n      j2 = j2 + 1\n    else\n     \
    \ common[e1] = common[e1] + 1\n      i1 = i1 + 1\n    end\n  end\n  if i1 > i2\
    \ then\n    for i = i2, i1, -1 do\n      common[i] = common[i - 1] + 1\n    end\n\
    \  end\n  if j1 > j2 then\n    for j = j2, j1, -1 do\n      common[j] = common[j\
    \ - 1] + 1\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while\
    \ j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n\
    \        i1 = i1 + 1\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n \
    \     end\n    end\n    i2 = i2 + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \     j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n    i2\
    \ = i2 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1,\
    \ j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n\
    \    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif e1 < e2\
    \ then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n  end\n  return\
    \ l1[i1]\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    if l3[v] then\
    \ return false end\n    l3[v] = true\n  end\n  for _, v in ipairs(l2) do\n   \
    \ if l3[v] then return false end\n    l3[v] = true\n  end\n  return l3\nend",
  "  local l3 = {}\n  for _, v in ipairs(l1) do\n    table.insert(l3, v)\n  end\n\
    \  for _, v in ipairs(l2) do\n    table.insert(l3, v)\n  end\n  return table.sort(l3)\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n\
    \    table.insert(l3, v)\n  end\n  for _, v in ipairs(l2) do\n    table.insert(l3,\
    \ v)\n  end\n  return table.sort(l3)\nend", "  local common = {}\n  for _, v1\
    \ in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v1 == v2 then\n   \
    \     table.insert(common, v1)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2\
    \ = l2[j2]\n    common[e1] = common[e1] or {}\n    common[e1][e2] = common[e1][e2]\
    \ or 1\n    i1 = i1 + 1\n    j2 = j2 + 1\n  end\n  return common\nend", "  local\
    \ i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <=\
    \ i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common,\
    \ l1[i1])\n        i1 = i1 + 1\n        break\n      elseif l1[i1] < l2[j1] then\n\
    \        j2 = j2 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n  \
    \  while j1 <= j2 do\n      table.insert(common, l2[j1])\n      j1 = j1 + 1\n\
    \    end\n    while i1 <= i2 do\n      table.insert(common, l1[i1])\n      i1\
    \ = i1 + 1\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1\
    \ == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n    elseif e1 < e2 then\n\
    \      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n  end\n  return l1[i1]\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n\
    \  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n\
    \        table.insert(common, l1[i1])\n        i1 = i1 + 1\n        break\n  \
    \    elseif l1[i1] < l2[j1] then\n        j2 = j2 + 1\n      else\n        i1\
    \ = i1 + 1\n      end\n    end\n    j1 = j1 + 1\n  end\n  return common\nend",
  "  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[i2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      i2 = i2 + 1\n  \
    \  elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      i2 = i2 + 1\n    end\n\
    \  end\n  return l1\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j1]\n    if e1\
    \ == e2 then\n      i1 = i1 + 1\n      j1 = j1 + 1\n    elseif e1 < e2 then\n\
    \      i1 = i1 + 1\n    else\n      j1 = j1 + 1\n    end\n  end\n  return l1[i1]\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n\
    \  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1] then\n\
    \        table.insert(common, l1[i1])\n        j1 = j1 + 1\n      else\n     \
    \   j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    table.insert(l3, v)\n\
    \  end\n  for _, v in ipairs(l2) do\n    table.insert(l3, v)\n  end\n  return\
    \ table.sort(l3)\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    for\
    \ _, v2 in ipairs(l2) do\n      l3[(v >= v2) and v or nil] = true\n    end\n \
    \ end\n  return table.sort(l3)\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[j2]\n    if e1 == e2 then\n      common[#common+1] = e1\n \
    \     i1, j2 = i1 + 1, j2 + 1\n    elseif e1 < e2 then\n      i1, j2 = i1 + 1,\
    \ j2\n    else\n      j1, i2 = j1 + 1, i2\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    local e1 = l1[i1]\n\
    \    local e2 = l2[j2]\n    common[e1] = common[e1] or e2\n    if common[e1] ==\
    \ e2 then\n      j2 = j2 + 1\n    else\n      i1 = i1 + 1\n      j1 = j2 + 1\n\
    \    end\n  end\n  return common\nend", "  local common = {}\n  local i1, i2 =\
    \ 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[i2]\n\
    \    if e1 == e2 then\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n\
    \      i2 = i2 + 1\n    elseif common[e1] > common[e2] then\n      common[e2]\
    \ = common[e2] + 1\n    else\n      common[e1] = common[e1] + 1\n      i1 = i1\
    \ + 1\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2\
    \ do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n \
    \       j1 = j1 + 1\n      else\n        break\n      end\n    end\n    j1 = j1\
    \ + 1\n    i1 = i1 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while\
    \ j1 <= j2 do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n\
    \        i1 = i1 + 1\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n \
    \     end\n    end\n    i2 = i2 + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v1 == v2 then\n        table.insert(common, v1)\n      end\n    end\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local\
    \ common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] ==\
    \ l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n   \
    \     j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n    i2\
    \ = i2 + 1\n  end\n  return common\nend", "  local common = {}\n  local i = 1\n\
    \  while i <= #l1 do\n    local j = 1\n    while j <= #l2 do\n      if l1[i] ==\
    \ l2[j] then\n        table.insert(common, l1[i])\n        i = i + 1\n       \
    \ break\n      else\n        j = j + 1\n      end\n    end\n    i = i + 1\n  end\n\
    \  return common\nend", "  local common = {}\n  local i1\n  local i2\n  for i1\
    \ = 1, #l1 do\n    for i2 = 1, #l2 do\n      if l1[i1] == l2[i2] then\n      \
    \  table.insert(common, l1[i1])\n        break\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n\
    \        table.insert(common, v1)\n      end\n    end\n  end\n  return common\n\
    end", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common = {}\n\
    \  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j2]\n    if e1\
    \ == e2 then\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n      j2 =\
    \ j2 + 1\n    elseif common[e1] > common[e2] then\n      common[e2] = common[e2]\
    \ + 1\n      j2 = j2 + 1\n    else\n      i1 = i1 + 1\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common, v1)\n\
    \      end\n    end\n  end\n  return common\nend", "  local l3 = {}\n  for _,\
    \ v in ipairs(l1) do\n    if l3[v] == nil then\n      l3[v] = true\n      table.insert(l2,\
    \ v)\n    end\n  end\n  return l2\nend", "  local common = {}\n  local i = 1\n\
    \  while i <= #l1 do\n    local j = 1\n    while j <= #l2 do\n      if l1[i] ==\
    \ l2[j] then\n        table.insert(common, i)\n      end\n      j = j + 1\n  \
    \  end\n    i = i + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2 + 1\n  \
    \  elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n    end\n\
    \  end\n  return l1[i1]\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local l1 = l1 or {}\n\
    \  local l2 = l2 or {}\n  local common = {}\n  local i1, i2 = 1, #l1\n  while\
    \ i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[i2]\n    if e1 == e2 then\n\
    \      common[#common+1] = e1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif\
    \ e1 < e2 then\n      i1 = i1 + 1\n    else\n      i2 = i2 + 1\n    end\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[i2]\n    if e1\
    \ == e2 then\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif e1 < e2 then\n\
    \      i2 = i2 + 1\n    else\n      i1 = i1 + 1\n    end\n  end\n  return l1\n\
    end", "  local common = {}\n  for _, v1 in pairs(l1) do\n    for _, v2 in pairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n\
    \      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n      \
    \  i1 = i1 + 1\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n\
    \    end\n    i2 = i2 + 1\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n   \
    \ local e1 = l1[i1]\n    local e2 = l2[i2]\n    if e1 == e2 then\n      common[e1]\
    \ = common[e1] or 1\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1]\
    \ + 1\n      common[e2] = common[e2] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n\
    \    elseif common[e1] > common[e2] then\n      common[e1] = common[e1] or 1\n\
    \      common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n     \
    \ i1 = i1 + 1\n    elseif common[e2] > common[e1] then\n      common[e1] = common[e1]\
    \ or 1\n      common[e2] = common[e2] or 1\n      common[e2] = common[e2] + 1\n\
    \      i2 = i2 + 1\n    else\n      i1 = i1 + 1\n      i2 = i2 + 1\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1]\
    \ == l2[j1] then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n\
    \        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n  \
    \  i1 = i1 + 1\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local\
    \ j1, j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2\
    \ do\n      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n \
    \       i1 = i1 + 1\n        break\n      elseif l1[i1] < l2[j1] then\n      \
    \  j2 = j2 + 1\n      else\n        i1 = i1 + 1\n      end\n    end\n    while\
    \ j1 <= j2 do\n      table.insert(common, l2[j1])\n      j2 = j2 + 1\n    end\n\
    \    while i1 <= i2 do\n      table.insert(common, l1[i1])\n      i1 = i1 + 1\n\
    \    end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1,\
    \ j2 = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n\
    \      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n      \
    \  i1 = i1 + 1\n        j1 = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n\
    \    end\n    i2 = i2 + 1\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local i3 = i1 + 1\n \
    \   while i3 <= i2 do\n      if l1[i1] == l2[i3] then\n        return l1[i1]\n\
    \      elseif l1[i3] ~= l2[i3] then\n        return nil\n      end\n      i3 =\
    \ i3 + 1\n    end\n    i1 = i1 + 1\n  end\n  return nil\nend", "  local i1, i2\
    \ = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local ii = l1[i1]\n\
    \    local jj = l2[j1]\n    if ii ~= jj then\n      local k = i1\n      while\
    \ k > 0 do\n        if l1[k] == ii then\n          l1[--k] = nil\n          break\n\
    \        end\n      end\n      local k = j1\n      while k > 0 do\n        if\
    \ l2[k] == jj then\n          l2[--k] = nil\n          break\n        end\n  \
    \    end\n    end\n    i1 = i1 + 1\n    j1 = j1 + 1\n  end\n  return l1\nend",
  "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2\
    \ = 1, #l2\n  local common = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n\
    \      if l1[i1] == l2[j1] then\n        table.insert(common, l1[i1])\n      \
    \  i1 = i1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n    j1 =\
    \ j1 + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local i1, i2 = 1,\
    \ #l1\n  local j1, j2 = 1, #l2\n  while i1 <= i2 do\n    local e1 = l1[i1]\n \
    \   local e2 = l2[j2]\n    if e1 == e2 then\n      i1 = i1 + 1\n      j2 = j2\
    \ + 1\n    elseif e1 < e2 then\n      i1 = i1 + 1\n    else\n      j2 = j2 + 1\n\
    \    end\n  end\n  return l1[i1]\nend", "  local common = {}\n  local i1, i2 =\
    \ 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[i2]\n\
    \    if e1 == e2 then\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n\
    \      i2 = i2 + 1\n    elseif common[e1] > common[e2] then\n      common[e2]\
    \ = common[e2] + 1\n    else\n      common[e1] = common[e1]\n      i1 = i1 + 1\n\
    \      i2 = i2 + 1\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 ==\
    \ v2 then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  local common\
    \ = {}\n  while i1 <= i2 do\n    while j1 <= j2 do\n      if l1[i1] == l2[j1]\
    \ then\n        table.insert(common, l1[i1])\n        i1 = i1 + 1\n        j1\
    \ = j1 + 1\n      else\n        j2 = j2 + 1\n      end\n    end\n    i2 = i2 +\
    \ 1\n  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[i2]\n    if e1 == e2 then\n      common[e1] = common[e1] or 1\n    \
    \  common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n      common[e2]\
    \ = common[e2] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif common[e1]\
    \ > common[e2] then\n      common[e1] = common[e1] or 1\n      common[e2] = common[e2]\
    \ or 1\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n    elseif common[e1]\
    \ < common[e2] then\n      common[e2] = common[e2] or 1\n      common[e1] = common[e1]\
    \ or 1\n      common[e2] = common[e2] + 1\n      i2 = i2 + 1\n    end\n  end\n\
    \  return common\nend", "  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local\
    \ e1 = l1[i1]\n    local e2 = l2[i2]\n    if e1 == e2 then break end\n    if e1\
    \ < e2 then i1 = i1 + 1 else i2 = i2 + 1 end\n  end\n  return l1[i1]\nend", " \
    \ local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n\
    \  while i1 <= i2 do\n    local i3 = i1\n    local j3 = j1\n    while j1 <= j2\
    \ do\n      if l1[i3] == l2[j3] then\n        i1, i2 = i3, i3 + 1\n        j1,\
    \ j2 = j3, j3 + 1\n      else\n        break\n      end\n    end\n    if i1 >\
    \ i3 then\n      j1, j2 = j2, j2 + 1\n    end\n  end\n  return l1[j1]\nend", " \
    \ local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  local i = 1\n  while\
    \ i <= #l1 and i <= #l2 do\n    if l1[i] == l2[i] then\n      table.insert(common,\
    \ l1[i])\n      i = i + 1\n    else\n      i = i + 1\n    end\n  end\n  return\
    \ common\nend", "  local i1, i2 = 1, #l1\n  local j1, j2 = 1, #l2\n  while i1\
    \ <= i2 do\n    local e1 = l1[i1]\n    local e2 = l2[j1]\n    if e1 == e2 then\n\
    \      i1 = i1 + 1\n      j1 = j1 + 1\n    elseif e1 < e2 then\n      i1 = i1\
    \ + 1\n    else\n      j1 = j1 + 1\n    end\n  end\n  return l1[j1]\nend", " \
    \ local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_120_maximum
language: lua
prompt: "-- Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n-- of length k with the maximum k numbers in arr.\n-- Example 1:\n-- Input:\
  \ arr = [-3, -4, 5], k = 3\n-- Output: [-4, -3, 5]\n-- Example 2:\n-- Input: arr\
  \ = [4, -4, 4], k = 2\n-- Output: [4, 4]\n-- Example 3:\n-- Input: arr = [-3, 2,\
  \ 1, 2, -1, -2, 1], k = 1\n-- Output: [2]\n-- Note:\n-- 1. The length of the array\
  \ will be in the range of [1, 1000].\n-- 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n-- 3. 0 <= k <= len(arr)\nlocal function maximum(arr,\
  \ k)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = maximum\n\
  \    lu.assertEquals(candidate({-3, -4, 5}, 3), {-4, -3, 5})\n    lu.assertEquals(candidate({4,\
  \ -4, 4}, 2), {4, 4})\n    lu.assertEquals(candidate({-3, 2, 1, 2, -1, -2, 1}, 1),\
  \ {2})\n    lu.assertEquals(candidate({123, -123, 20, 0, 1, 2, -3}, 3), {2, 20,\
  \ 123})\n    lu.assertEquals(candidate({-123, 20, 0, 1, 2, -3}, 4), {0, 1, 2, 20})\n\
  \    lu.assertEquals(candidate({5, 15, 0, 3, -13, -8, 0}, 7), {-13, -8, 0, 0, 3,\
  \ 5, 15})\n    lu.assertEquals(candidate({-1, 0, 2, 5, 3, -10}, 2), {3, 5})\n  \
  \  lu.assertEquals(candidate({1, 0, 5, -7}, 1), {5})\n    lu.assertEquals(candidate({4,\
  \ -4}, 2), {-4, 4})\n    lu.assertEquals(candidate({-10, 10}, 2), {-10, 10})\n \
  \   lu.assertEquals(candidate({1, 2, 3, -23, 243, -400, 0}, 0), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local maxArr\n    local maxIndex\n    local maxVal\n    local maxCount\n\
    \    local maxCountIndex\n    local maxCountVal\n    local maxCountIndexArr\n\
    \    local maxCountValArr\n    local maxCountIndexArrIndex\n    local maxCountValArrIndex\n\
    \    local maxCountIndexArrIndexArr\n    local maxCountValArrIndexArr\n    local\
    \ maxCountIndexArrIndexArrIndex\n    local maxCountValArrIndexArrIndex\n    local\
    \ maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountValArrIndexArrIndexArr\n\
    \    local maxCountIndexArrIndexArrIndexArr\n    local maxCountVal", "  -- Base\
    \ case\n  if k == 1 then\n    return arr\n  end\n  -- Get the max number in the\
    \ first k elements\n  local max_num = arr[1]\n  -- Get the max number in the remaining\
    \ elements\n  for i = 2, k do\n    if arr[i] > max_num then\n      max_num = arr[i]\n\
    \    end\n  end\n  -- Return the max number in the first k elements\n  return\
    \ arr[1:k+1]\nend", "  local max_arr = {}\n  local max_count = 0\n  for i = 1,\
    \ k do\n    if max_count == 0 then\n      max_count = arr[i]\n      max_arr[i]\
    \ = max_count\n    elseif max_count < arr[i] then\n      max_count = arr[i]\n\
    \      max_arr[i] = max_count\n    end\n  end\n  return max_arr\nend", "  -- Write\
    \ your code here\n  local max_arr = {}\n  local max_count = 0\n  for i = 1, k\
    \ do\n    local max_value = arr[1]\n    for j = 2, #arr do\n      if arr[j] >\
    \ max_value then\n        max_value = arr[j]\n      end\n    end\n    max_arr[i]\
    \ = max_value\n    max_count = max_count + 1\n  end\n  return max_arr\nend", " \
    \   local result = {}\n    local max = 0\n    local index = 0\n    for i = 1,\
    \ k do\n        if arr[i] > max then\n            max = arr[i]\n            index\
    \ = i\n        end\n    end\n    result[index] = max\n    for i = k + 1, #arr\
    \ do\n        if arr[i] > max then\n            max = arr[i]\n        end\n  \
    \  end\n    return result\nend", "  -- Write your code here\n  local max_arr =\
    \ {}\n  local max_count = 0\n  for i = 1, k do\n    max_count = max_count + 1\n\
    \  end\n  for i = 1, k do\n    if max_count > #max_arr then\n      max_arr = max_arr\
    \ .. arr[i]\n    else\n      if arr[i] > max_arr[1] then\n        max_arr[1] =\
    \ arr[i]\n      else\n        max_arr[2] = arr[i]\n      end\n    end\n  end\n\
    \  return max_arr\nend", "    local max_arr = {}\n    local max_count = 0\n  \
    \  for i = 1, k do\n        local max_val = -1000\n        for j = 1, #arr do\n\
    \            if arr[j] > max_val then\n                max_val = arr[j]\n    \
    \        end\n        end\n        max_arr[i] = max_val\n        if max_count\
    \ < i then\n            max_count = i\n        end\n    end\n    return max_arr\n\
    end", "  -- Write your code here\n  local max = {}\n  local i = 1\n  while i <=\
    \ k do\n    local max_element = arr[i]\n    for j = i + 1, k do\n      if arr[j]\
    \ > max_element then\n        max_element = arr[j]\n      end\n    end\n    table.insert(max,\
    \ max_element)\n    i = i + 1\n  end\n  return max\nend", "  -- Write your code\
    \ here\n  local max_arr = {}\n  local max_idx = {}\n  for i = 1, k do\n    max_arr[i]\
    \ = arr[i]\n    max_idx[i] = i\n  end\n  for i = k + 1, #arr do\n    if arr[i]\
    \ > max_arr[k] then\n      max_arr[k] = arr[i]\n      max_idx[k] = i\n    end\n\
    \  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_count =\
    \ 0\n    for i = 1, k do\n        if max_count == 0 then\n            max_count\
    \ = arr[i]\n        elseif arr[i] > max_count then\n            max_count = arr[i]\n\
    \        end\n    end\n    max_arr[1] = max_count\n    for i = 2, k do\n     \
    \   if arr[i] > max_count then\n            max_count = arr[i]\n        end\n\
    \        max_arr[i] = max_count\n    end\n    return max_arr\nend", "  -- Base\
    \ case\n  if k == 1 then\n    return arr\n  end", "    local max_arr = {}\n  \
    \  local max_idx = 1\n    for i = 1, k do\n        max_idx = i\n        for j\
    \ = 1, k do\n            if arr[j] > arr[max_idx] then\n                max_idx\
    \ = j\n            end\n        end\n        max_arr[max_idx] = arr[max_idx]\n\
    \    end\n    return max_arr\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ == 1 then\n            max_arr[i] = arr[i]\n        else\n            if arr[i]\
    \ > max_arr[i] then\n                max_arr[i] = arr[i]\n            end\n  \
    \      end\n    end\n    return max_arr\nend", "    local max_arr = {}\n    local\
    \ max_count = 0\n    for i = 1, k do\n        if arr[i] > max_arr[i] then\n  \
    \          max_arr[i] = arr[i]\n            max_count = i\n        end\n    end\n\
    \    for i = k + 1, #arr do\n        if arr[i] > max_arr[i] then\n           \
    \ max_arr[i] = arr[i]\n            max_count = i\n        end\n    end\n    return\
    \ max_arr\nend", "  -- Base case: if the array is empty, return an empty list\n\
    \  if k == 0 then\n    return {}\n  end", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end", "    local max_arr = {}\n    local max_count = 0\n  \
    \  for i = 1, k do\n        local max_val = -1000\n        for j = 1, #arr do\n\
    \            if arr[j] > max_val then\n                max_val = arr[j]\n    \
    \        end\n        end\n        max_arr[i] = max_val\n        max_count = max_count\
    \ + 1\n    end\n    return max_arr\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        max_arr[i]\
    \ = 0\n    end\n    for i = 1, #arr do\n        max_count = max_count + 1\n  \
    \      if max_count > k then\n            break\n        end\n        max_arr[i]\
    \ = max_arr[i] + arr[i]\n    end\n    return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_idx = {}\n    local max_num = 0\n    for i = 1, k do\n \
    \       max_num = max_num + arr[i]\n        max_arr[i] = max_num\n        max_idx[i]\
    \ = i\n    end\n    for i = k + 1, #arr do\n        max_num = max_num - arr[i]\n\
    \        max_arr[i] = max_num\n        max_idx[i] = i\n    end\n    return max_arr\n\
    end", "    local max_arr = {}\n    local max_idx = 1\n    local max_val = arr[1]\n\
    \    for idx = 2, k do\n        if arr[idx] > max_val then\n            max_val\
    \ = arr[idx]\n            max_idx = idx\n        end\n    end\n    max_arr[max_idx]\
    \ = max_val\n    return max_arr\nend", "    local max_arr = {}\n    local max_num\
    \ = math.max(arr[1])\n    for i = 2, k do\n        if arr[i] > max_num then\n\
    \            max_num = arr[i]\n        end\n    end\n    max_arr[1] = max_num\n\
    \    for i = 2, k do\n        if arr[i] > max_num then\n            max_arr[i]\
    \ = arr[i]\n        end\n    end\n    return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_num = 0\n    for i = 1, k do\n        if arr[i] > max_num\
    \ then\n            max_num = arr[i]\n        end\n    end\n    for i = 1, k do\n\
    \        if arr[i] > max_num then\n            max_arr[i] = arr[i]\n        end\n\
    \    end\n    return max_arr\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ > #max_arr then\n            max_count = #max_arr\n        end\n        max_arr[max_count]\
    \ = arr[i]\n    end\n    return max_arr\nend", "    local max_arr = {}\n    local\
    \ max_count = 0\n    for i = 1, k do\n        max_count = max_count + 1\n    \
    \    if max_count == 1 then\n            max_arr[i] = arr[i]\n        else\n \
    \           if arr[i] > max_arr[i] then\n                max_arr[i] = arr[i]\n\
    \            end\n        end\n    end\n    return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num = math.max(max_num,\
    \ arr[i])\n    end\n    for i = 1, k do\n        max_arr[i] = max_num\n    end\n\
    \    return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n\
    \  local max_count = 0\n  for i = 1, k do\n    local max_val = -1000\n    for\
    \ j = 1, #arr do\n      if arr[j] > max_val then\n        max_val = arr[j]\n \
    \     end\n    end\n    max_arr[i] = max_val\n    max_count = max_count + 1\n\
    \  end\n  return max_arr\nend", "  local max_arr = {}\n  local max_count = 0\n\
    \  for i = 1, k do\n    max_count = max_count + 1\n    max_arr[i] = arr[i]\n \
    \ end\n  for i = k + 1, #arr do\n    if arr[i] > max_arr[k] then\n      max_arr[k]\
    \ = arr[i]\n      max_count = max_count + 1\n    end\n  end\n  return max_arr\n\
    end", "  -- Write your code here\n  local max_arr = {}\n  local max_idx = 1\n\
    \  local max_val = arr[1]\n  for i = 2, k do\n    if arr[i] > max_val then\n \
    \     max_val = arr[i]\n      max_idx = i\n    end\n  end\n  max_arr[max_idx]\
    \ = max_val\n  for i = 2, k do\n    if arr[i] > max_val then\n      max_arr[max_idx]\
    \ = arr[i]\n      max_idx = i\n    end\n  end\n  return max_arr\nend", "  -- Write\
    \ your code here.\n  local max_arr = {}\n  local max_idx = 1\n  for i = 1, k do\n\
    \    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n      max_idx = i\n\
    \    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i]\
    \ = arr[i]\n      max_idx = i\n    end\n  end\n  return max_arr\nend", "    local\
    \ max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num =\
    \ max_num or arr[i]\n        if max_num > arr[i] then\n            max_num = arr[i]\n\
    \        end\n        max_arr[i] = max_num\n    end\n    return max_arr\nend",
  "  -- Write your code here\n  local max_arr = {}\n  local max_count = 0\n  for i\
    \ = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n    \
    \  max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end", "   \
    \ local max_arr = {}\n    local max_index = 0\n    for i = 1, k do\n        max_index\
    \ = i\n        for j = 1, #arr do\n            if arr[j] > arr[max_index] then\n\
    \                max_index = j\n            end\n        end\n        max_arr[max_index]\
    \ = arr[max_index]\n    end\n    return max_arr\nend", "    local maxArr = {}\
    \ -- the max array\n    local maxIndex = 0 -- the index of max array\n    local\
    \ maxValue = arr[1]\n    for i = 2, k do\n        if arr[i] > maxValue then\n\
    \            maxValue = arr[i]\n            maxIndex = i\n        end\n    end\n\
    \    for i = 1, k do\n        maxArr[i] = arr[i]\n    end\n    maxArr[maxIndex]\
    \ = arr[k]\n    return maxArr\nend", "  local max_so_far = nil\n  local max_ending_here\
    \ = nil\n  for i = 1, k do\n    max_ending_here = max_ending_here or arr[i]\n\
    \    if max_so_far ~= nil and max_ending_here > max_so_far then\n      max_so_far\
    \ = max_ending_here\n    end\n    max_ending_here = arr[i]\n  end\n  return max_so_far\n\
    end", "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n\
    \        max_count = max_count + 1\n        if max_count == 1 then\n         \
    \   max_arr[i] = arr[i]\n        else\n            if arr[i] > max_arr[i] then\n\
    \                max_arr[i] = arr[i]\n            end\n        end\n    end\n\
    \    return max_arr\nend", "  local max_arr = {}\n  local max_idx = {}\n  local\
    \ max_val = 0\n  for i = 1, k do\n    max_val = arr[max_idx]\n    max_idx = {}\n\
    \    for j = 1, #arr do\n      if arr[j] > max_val then\n        max_val = arr[j]\n\
    \      else\n        table.insert(max_idx, j)\n      end\n    end\n    table.insert(max_arr,\
    \ max_val)\n  end\n  return max_arr\nend", "  local results = {}\n  local max\
    \ = 0\n  for i = 1, k do\n    local max = arr[1]\n    for j = 2, #arr do\n   \
    \   if arr[j] > max then\n        max = arr[j]\n      end\n    end\n    results[i]\
    \ = max\n  end\n  return results\nend", "  -- Write your code here\n  local max_arr\
    \ = {}\n  local max_index = 0\n  for i = 1, k do\n    if arr[i] > max_arr[i] then\n\
    \      max_arr[i] = arr[i]\n      max_index = i\n    end\n  end\n  for i = k +\
    \ 1, #arr do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n   \
    \   max_index = i\n    end\n  end\n  return max_arr\nend", "    local result =\
    \ {}\n    local max = 0\n    local index = 0\n    for i = 1, k do\n        if\
    \ arr[i] > max then\n            max = arr[i]\n            index = i\n       \
    \ end\n    end\n    for i = 1, k do\n        if arr[i] > max then\n          \
    \  result[index] = arr[i]\n            index = index + 1\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    local max = 0\n    for i\
    \ = 1, k do\n        local element = arr[i]\n        if element > max then\n \
    \           max = element\n        end\n    end\n    for i = 1, k do\n       \
    \ local element = arr[i]\n        if element > max then\n            result[i]\
    \ = element\n        end\n    end\n    return result\nend", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end", "    local max_arr = {}\n    local\
    \ max_count = 0\n    for i = 1, k do\n        local max_value = arr[1]\n     \
    \   for j = 2, #arr do\n            if arr[j] > max_value then\n             \
    \   max_value = arr[j]\n            end\n        end\n        max_arr[i] = max_value\n\
    \        max_count = max_count + 1\n    end\n    return max_arr\nend", "  -- Base\
    \ case\n  if k == 0 then\n    return arr\n  end", "  -- Write your code here\n\
    \  local max_arr = {}\n  local max_idx = {}\n  local max_count = 0\n  for i =\
    \ 1, k do\n    local max_val = -1000\n    for j = 1, #arr do\n      if arr[j]\
    \ > max_val then\n        max_val = arr[j]\n      end\n    end\n    max_arr[i]\
    \ = max_val\n    max_idx[i] = i\n    max_count = max_count + 1\n  end\n  for i\
    \ = 1, k do\n    if max_arr[i] ~= -1000 then\n      arr[i] = max_arr[i]\n    end\n\
    \  end\n  return max_arr, max_idx, max_count\nend", "    local max = {}\n    local\
    \ i = 0\n    local j = 0\n    local max_i = 0\n    local max_j = 0\n    local\
    \ max_value = -math.inf\n    local max_count = 0\n    local max_count = 0\n  \
    \  \n    while i < k do\n        local value = arr[i]\n        if value > max_value\
    \ then\n            max_value = value\n            max_count = i\n        end\n\
    \        i = i + 1\n    end\n    \n    while j < k do\n        local value = arr[j]\n\
    \        if value < max_value then\n            max_value = value\n          \
    \  max_count = j\n        end\n        j = j + 1\n    end\n    \n    if max_count\
    \ == k then\n        table.insert(max, max_value)\n    end\n    \n    return max\n\
    end", "  local results = {}\n  local max = 0\n  local index = 0\n  for i = 1,\
    \ k do\n    local element = arr[index]\n    if element > max then\n      max =\
    \ element\n      index = i\n    end\n  end\n  results[index] = max\n  return results\n\
    end", "  local max = {}\n  local i = 1\n  while i <= k do\n    local maxElement\
    \ = arr[1]\n    for j = 2, #arr do\n      if arr[j] > maxElement then\n      \
    \  maxElement = arr[j]\n      end\n    end\n    table.insert(max, maxElement)\n\
    \    i = i + 1\n  end\n  return max\nend", "  -- Write your code here\n  local\
    \ max_arr = {}\n  local max_index = 0\n  local max_value = arr[1]\n  for i = 2,\
    \ #arr do\n    if arr[i] > max_value then\n      max_value = arr[i]\n      max_index\
    \ = i\n    end\n  end\n  for i = 1, k do\n    max_arr[max_index] = arr[i]\n  end\n\
    \  return max_arr\nend", "  local max_arr = {}\n  local max_num = math.max(arr[1])\n\
    \  for i = 2, k do\n    if arr[i] > max_num then\n      max_num = arr[i]\n   \
    \ end\n  end\n  for i = 1, k do\n    if arr[i] > max_num then\n      max_arr[i]\
    \ = arr[i]\n    end\n  end\n  return max_arr\nend", "  -- Write your code here\n\
    \  local max = {}\n  local i = 0\n  while i < k do\n    if arr[i] > max[i] then\n\
    \      max[i] = arr[i]\n    end\n    i = i + 1\n  end\n  \n  local j = 0\n  while\
    \ j < k do\n    if arr[j] > max[j] then\n      max[j] = arr[j]\n    end\n    j\
    \ = j + 1\n  end\n  \n  return max\nend", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end", "    local max_arr = {}\n    local max_num = math.max(arr[1])\n\
    \    for i = 2, k do\n        if arr[i] > max_num then\n            max_num =\
    \ arr[i]\n        end\n    end\n    max_arr[1] = max_num\n    for i = 2, k do\n\
    \        if arr[i] > max_num then\n            max_arr[i] = arr[i]\n        end\n\
    \    end\n    return max_arr\nend", "    local max_arr = {}\n    local max_idx\
    \ = 1\n    local max_val = arr[1]\n    for idx = 2, k do\n        if arr[idx]\
    \ > max_val then\n            max_val = arr[idx]\n            max_idx = idx\n\
    \        end\n    end\n    max_arr[max_idx] = max_val\n    return max_arr\nend",
  "  -- Write your code here\n  local max_arr = {}\n  local max_index = 0\n  for i\
    \ = 1, k do\n    max_index = i\n    for j = 1, #arr do\n      if arr[j] > arr[max_index]\
    \ then\n        max_index = j\n      end\n    end\n    max_arr[max_index] = arr[max_index]\n\
    \  end\n  return max_arr\nend", "  -- Write your code here\n  local max_arr =\
    \ {}\n  local max_idx = 1\n  for i = 1, k do\n    if arr[i] > arr[max_idx] then\n\
    \      max_idx = i\n    end\n  end\n  table.insert(max_arr, arr[max_idx])\n  for\
    \ i = k + 1, #arr do\n    if arr[i] > arr[max_idx] then\n      max_idx = i\n \
    \   end\n  end\n  table.insert(max_arr, arr[max_idx])\n  return max_arr\nend",
  "  -- Write your code here\n  local max_arr = {}\n  local max_idx = {}\n  local\
    \ max_val = -math.inf\n  for i = 1, k do\n    max_idx = {}\n    max_val = -math.inf\n\
    \    for j = 1, #arr do\n      if arr[j] > max_val then\n        max_val = arr[j]\n\
    \      end\n      if arr[j] == max_val then\n        max_idx[j] = true\n     \
    \ end\n    end\n    max_arr[i] = max_val\n  end\n  return max_arr\nend", "   \
    \ local max_arr = {}\n    local max_idx = 1\n    for i = 1, k do\n        local\
    \ max_val = arr[max_idx]\n        for j = 1, #arr do\n            if arr[j] >\
    \ max_val then\n                max_val = arr[j]\n                max_idx = j\n\
    \            end\n        end\n        max_arr[max_idx] = max_val\n    end\n \
    \   return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n \
    \ local max_idx = {}\n  local max_val = -math.inf\n  for i = 1, k do\n    local\
    \ max_idx = i\n    for j = 1, #arr do\n      if arr[j] > arr[max_idx] then\n \
    \       max_idx = j\n      end\n    end\n    max_arr[i] = arr[max_idx]\n    max_idx[i]\
    \ = max_idx\n  end\n  return max_arr\nend", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end\n  -- Find the maximum element in the first k elements\n\
    \  local max_element = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element\
    \ then\n      max_element = arr[i]\n    end\n  end\n  -- Sort the remaining elements\
    \ and return the first k elements\n  local sorted_arr = table.sort(arr, function(x)\n\
    \    return x > max_element\n  end)\n  return sorted_arr\nend", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end\n  -- Find the max element in the first\
    \ k elements\n  local max_element = arr[1]\n  for i = 2, k do\n    if arr[i] >\
    \ max_element then\n      max_element = arr[i]\n    end\n  end\n  -- Find the\
    \ max element in the remaining elements\n  local max_element_rest = maximum(arr,\
    \ k - 1)\n  -- Return the max element and the max element rest\n  return max_element,\
    \ {max_element, max_element_rest}\nend", "    local max_arr = {}\n    local max_num\
    \ = 0\n    for i = 1, k do\n        max_num = max_num or arr[i]\n        if max_num\
    \ > arr[i] then\n            max_arr[i] = max_num\n        end\n    end\n    return\
    \ max_arr\nend", "    local max_arr = {}\n    local max_count = 0\n    for i =\
    \ 1, k do\n        max_count = max_count + 1\n        if max_count == 1 then\n\
    \            max_arr[i] = arr[i]\n        else\n            if arr[i] > max_arr[i]\
    \ then\n                max_arr[i] = arr[i]\n            end\n        end\n  \
    \  end\n    return max_arr\nend", "  -- Write your code here\n  local max_arr\
    \ = {}\n  local max_index = 0\n  local max_value = -math.inf\n  for i = 1, k do\n\
    \    if arr[i] > max_value then\n      max_value = arr[i]\n      max_index = i\n\
    \    end\n  end\n  max_arr[1] = arr[1]\n  for i = 2, k do\n    if arr[i] > max_value\
    \ then\n      max_arr[i] = arr[i]\n    end\n  end\n  return max_arr\nend", " \
    \   local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n       \
    \ local max_val = -1000\n        for j = 1, #arr do\n            if arr[j] > max_val\
    \ then\n                max_val = arr[j]\n            end\n        end\n     \
    \   max_arr[i] = max_val\n        max_count = max_count + 1\n    end\n    return\
    \ max_arr\nend", "    local max_arr = {}\n    local max_count = 0\n    for i =\
    \ 1, k do\n        local max_num = -1000\n        for j = 1, #arr do\n       \
    \     if arr[j] > max_num then\n                max_num = arr[j]\n           \
    \ end\n        end\n        max_arr[i] = max_num\n        if max_count < #max_arr\
    \ then\n            max_count = #max_arr\n        end\n    end\n    return max_arr\n\
    end", "  -- Base case\n  if k == 1 then\n    return arr\n  end\n  \n  -- Find\
    \ the max number in the first k elements\n  local max_element = arr[1]\n  for\
    \ i = 2, k do\n    if arr[i] > max_element then\n      max_element = arr[i]\n\
    \    end\n  end\n  \n  -- Find the max number in the remaining elements\n  local\
    \ max_element_rest = maximum(arr, k - 1)\n  \n  -- Return the max number in the\
    \ first k elements and the max number in the remaining elements\n  return max_element,\
    \ max_element_rest\nend", "  -- Write your code here\n  local max_arr = {}\n \
    \ local max_num = 0\n  for i = 1, k do\n    if arr[i] > max_num then\n      max_num\
    \ = arr[i]\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_num then\n\
    \      max_arr[i] = arr[i]\n    end\n  end\n  return max_arr\nend", "    local\
    \ max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n        max_count\
    \ = max_count + 1\n        if max_count == 1 then\n            max_arr[i] = arr[i]\n\
    \        else\n            if arr[i] > max_arr[i] then\n                max_arr[i]\
    \ = arr[i]\n            end\n        end\n    end\n    return max_arr\nend", " \
    \   local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n       \
    \ max_count = max_count + 1\n        max_arr[max_count] = arr[i]\n    end\n  \
    \  for i = k + 1, #arr do\n        if arr[i] > max_arr[max_count] then\n     \
    \       max_arr[max_count] = arr[i]\n            max_count = max_count + 1\n \
    \       end\n    end\n    return max_arr\nend", "  local max_arr = {}\n  local\
    \ max_num = 0\n  for i = 1, k do\n    max_num = math.max(max_num, arr[i])\n  end\n\
    \  for i = 1, k do\n    max_arr[i] = max_num\n  end\n  for i = k + 1, #arr do\n\
    \    max_num = math.max(max_num, arr[i])\n  end\n  return max_arr\nend", "   \
    \ local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num\
    \ = max_num > arr[i] and max_num or arr[i]\n        max_arr[i] = max_num\n   \
    \ end\n    return max_arr\nend", "  -- Base case\n  if k == 0 then\n    return\
    \ arr\n  end", "  -- Write your code here\n  local max_arr = {}\n  local max_num\
    \ = nil\n  for i = 1, k do\n    max_num = max_num or arr[i]\n    if max_num >\
    \ arr[i] then\n      max_arr[i] = max_num\n    end\n  end\n  for i = k + 1, #arr\
    \ do\n    max_arr[i] = arr[i]\n  end\n  return max_arr\nend", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end", "    local maxArr = {} -- the max array\n\
    \    local maxLen = 0 -- length of max array\n    for i = 1, k do\n        local\
    \ maxElement = arr[i]\n        for j = 1, k do\n            if arr[j] > maxElement\
    \ then\n                maxElement = arr[j]\n            end\n        end\n  \
    \      maxArr[i] = maxElement\n        maxLen = i\n    end\n    return maxArr\n\
    end", "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n\
    \        max_count = max_count + 1\n        max_arr[max_count] = arr[i]\n    end\n\
    \    for i = k + 1, #arr do\n        max_count = max_count + 1\n        max_arr[max_count]\
    \ = arr[i]\n    end\n    return max_arr\nend", "    local max_arr = {}\n    local\
    \ max_num = -math.inf\n    for i = 1, k do\n        local num = arr[i]\n     \
    \   if num > max_num then\n            max_num = num\n        end\n    end\n \
    \   for i = 1, k do\n        local num = arr[i]\n        if num > max_num then\n\
    \            max_arr[i] = num\n        end\n    end\n    return max_arr\nend",
  "  local max_arr = {}\n  local max_idx = 0\n  for i = 1, k do\n    max_idx = i\n\
    \    for j = 1, #arr do\n      if arr[j] > arr[max_idx] then\n        max_idx\
    \ = j\n      end\n    end\n    max_arr[i] = arr[max_idx]\n  end\n  return max_arr\n\
    end", "    local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n  \
    \      max_num = max_num or arr[i]\n        if max_num > arr[i] then\n       \
    \     max_arr[i] = max_num\n        end\n    end\n    for i = k + 1, #arr do\n\
    \        max_num = max_num or arr[i]\n        if max_num < arr[i] then\n     \
    \       max_arr[i] = max_num\n        end\n    end\n    return max_arr\nend",
  "  -- Write your code here\n  local max = 0\n  local max_index = 0\n  for i = 1,\
    \ k do\n    if arr[i] > max then\n      max = arr[i]\n      max_index = i\n  \
    \  end\n  end\n  local new_arr = {}\n  for i = 1, k do\n    new_arr[i] = arr[max_index]\n\
    \  end\n  return new_arr\nend", "  -- Write your code here\n  local max_arr =\
    \ {}\n  local max_count = 0\n  local max_index = 0\n  for i = 1, k do\n    if\
    \ arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n      max_count = i\n \
    \     max_index = i\n    end\n  end\n  for i = k + 1, #arr do\n    if arr[i] >\
    \ max_arr[i] then\n      max_arr[i] = arr[i]\n      max_count = i\n      max_index\
    \ = i\n    end\n  end\n  return max_arr\nend", "    local max = 0\n    local max_index\
    \ = 0\n    for i = 1, k do\n        if arr[i] > max then\n            max = arr[i]\n\
    \            max_index = i\n        end\n    end\n    return arr[max_index], max_index\n\
    end", "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n\
    \        max_count = max_count + 1\n        max_arr[i] = 0\n    end\n    for i\
    \ = 1, #arr do\n        max_count = max_count + 1\n        if max_count > k then\n\
    \            break\n        end\n        max_arr[i] = arr[i]\n    end\n    return\
    \ max_arr\nend", "  -- Base case\n  if k == 0 then\n    return arr\n  end", " \
    \   local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n       \
    \ max_count = max_count + 1\n        if max_count == 1 then\n            max_arr[i]\
    \ = arr[i]\n        else\n            if arr[i] > max_arr[i] then\n          \
    \      max_arr[i] = arr[i]\n            end\n        end\n    end\n    return\
    \ max_arr\nend", "    local max_arr = {}\n    local max_count = 0\n    for i =\
    \ 1, k do\n        local max_num = -1000\n        for j = 1, #arr do\n       \
    \     if arr[j] > max_num then\n                max_num = arr[j]\n           \
    \ end\n        end\n        max_arr[i] = max_num\n        if max_count < #max_arr\
    \ then\n            max_count = #max_arr\n        end\n    end\n    return max_arr\n\
    end", "  local max_arr = {}\n  local max_count = 0\n  for i = 1, k do\n    max_count\
    \ = max_count + 1\n    max_arr[i] = arr[i]\n  end\n  for i = 1, k do\n    if max_arr[i]\
    \ > max_arr[i + 1] then\n      max_arr[i + 1] = max_arr[i]\n    end\n  end\n \
    \ return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i]\
    \ = arr[i]\n      max_count = i\n    end\n  end\n  for i = k + 1, #arr do\n  \
    \  if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n      max_count = i\n\
    \    end\n  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_num\
    \ = nil\n    for i = 1, k do\n        max_num = nil\n        for j = 1, #arr do\n\
    \            if arr[j] > max_num then\n                max_num = arr[j]\n    \
    \        end\n        end\n        max_arr[i] = max_num\n    end\n    return max_arr\n\
    end", "    local max_arr = {}\n    local max_idx = 1\n    for i = 1, k do\n  \
    \      max_idx = i\n        for j = 1, #arr do\n            if arr[j] > arr[max_idx]\
    \ then\n                max_idx = j\n            end\n        end\n        max_arr[max_idx]\
    \ = arr[max_idx]\n    end\n    return max_arr\nend", "  local max_arr = {}\n \
    \ local max_count = 0\n  for i = 1, k do\n    local max_val = -1000\n    for j\
    \ = 1, #arr do\n      if arr[j] > max_val then\n        max_val = arr[j]\n   \
    \   end\n    end\n    max_arr[i] = max_val\n    max_count = max_count + 1\n  end\n\
    \  return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    max_count = max_count + 1\n  end\n  for\
    \ i = 1, k do\n    if max_count > #arr then\n      max_count = #arr\n    end\n\
    \    max_arr[i] = arr[max_count]\n  end\n  return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_count = 0\n    for i = 1, k do\n        local max_value\
    \ = arr[1]\n        for j = 2, #arr do\n            if arr[j] > max_value then\n\
    \                max_value = arr[j]\n            end\n        end\n        max_arr[i]\
    \ = max_value\n        max_count = max_count + 1\n    end\n    return max_arr\n\
    end", "  -- Base case\n  if k == 1 then\n    return arr\n  end", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end\n  \n  -- Find the max element in the first k elements\n\
    \  local max_element = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element\
    \ then\n      max_element = arr[i]\n    end\n  end\n  \n  -- Sort the remaining\
    \ elements and return the first k elements\n  local sorted_arr = arr\n  for i\
    \ = 2, k do\n    table.insert(sorted_arr, arr[i])\n  end\n  return sorted_arr\n\
    end", "  -- Write your code here\n  local max_arr = {}\n  local max_count = 0\n\
    \  for i = 1, k do\n    max_count = max_count + 1\n  end\n  for i = 1, k do\n\
    \    if max_count > arr[i] then\n      max_count = arr[i]\n    end\n  end\n  for\
    \ i = 1, k do\n    if max_count > arr[i] then\n      max_arr[i] = max_count\n\
    \    end\n  end\n  return max_arr\nend", "  -- Base case\n  if k == 1 then\n \
    \   return arr\n  end", "    local max = {}\n    local i = 0\n    while i < k\
    \ do\n        local max_val = -math.inf\n        for j = 1, #arr do\n        \
    \    if arr[j] > max_val then\n                max_val = arr[j]\n            end\n\
    \        end\n        max[i] = max_val\n        i = i + 1\n    end\n    return\
    \ max\nend", "    local max_arr = {}\n    local max_count = 0\n    for i = 1,\
    \ k do\n        if max_count == 0 then\n            max_count = #arr\n       \
    \ end\n        if max_count > #arr then\n            max_count = #arr\n      \
    \  end\n        if max_count > 1 then\n            max_count = max_count - 1\n\
    \        end\n        if max_count > 1 then\n            max_arr[i] = arr[max_count]\n\
    \        end\n    end\n    return max_arr\nend", "    local max_arr = {}\n   \
    \ local max_num = 0\n    for i = 1, k do\n        max_num = max_num > arr[i] and\
    \ max_num or arr[i]\n        max_arr[i] = max_num\n    end\n    return max_arr\n\
    end", "  -- Write your code here\n  local max_arr = {}\n  local max_k = 0\n  local\
    \ max_val = 0\n  for i = 1, k do\n    max_val = max_val or arr[i]\n    max_arr[i]\
    \ = max_val\n  end\n  for i = k + 1, #arr do\n    max_val = max_val or arr[i]\n\
    \    if max_val > max_arr[k] then\n      max_arr[k] = max_val\n    end\n  end\n\
    \  return max_arr\nend", "  local max_so_far = nil\n  local max_so_far_index =\
    \ 0\n  for i = 1, k do\n    if max_so_far == nil then\n      max_so_far = arr[i]\n\
    \      max_so_far_index = i\n    else\n      if arr[i] > max_so_far then\n   \
    \     max_so_far = arr[i]\n        max_so_far_index = i\n      end\n    end\n\
    \  end\n  \n  -- Return the array with the maximum k numbers in arr\n  return\
    \ max_so_far_index .. \":\" .. max_so_far\nend", "    local max_arr = {}\n   \
    \ local max_count = 0\n    for i = 1, k do\n        local max_val = -1000\n  \
    \      for j = 1, #arr do\n            if arr[j] > max_val then\n            \
    \    max_val = arr[j]\n            end\n        end\n        max_arr[i] = max_val\n\
    \        max_count = max_count + 1\n    end\n    return max_arr\nend", "  -- Write\
    \ your code here\n  local max_arr = {}\n  local max_count = 0\n  for i = 1, k\
    \ do\n    if arr[i] > max_count then\n      max_count = arr[i]\n    end\n  end\n\
    \  for i = 1, k do\n    if arr[i] > max_count then\n      max_arr[i] = arr[i]\n\
    \    end\n  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ > #arr then\n            max_count = #arr\n        end\n        max_arr[i] =\
    \ arr[max_count]\n    end\n    return max_arr\nend", "    local max_arr = {}\n\
    \    local max_count = 0\n    for i = 1, k do\n        max_count = max_count +\
    \ 1\n        max_arr[max_count] = arr[i]\n    end\n    for i = k + 1, #arr do\n\
    \        if arr[i] > max_arr[max_count] then\n            max_arr[max_count] =\
    \ arr[i]\n        end\n    end\n    return max_arr\nend", "    local max_arr =\
    \ {}\n    local max_num = -math.inf\n    for i = 1, k do\n        if arr[i] >\
    \ max_num then\n            max_num = arr[i]\n        end\n    end\n    for i\
    \ = 1, k do\n        if arr[i] > max_num then\n            max_arr[i] = arr[i]\n\
    \        end\n    end\n    return max_arr\nend", "  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    if max_count == 0 then\n      max_count\
    \ = #arr\n    end\n    if max_count > #arr then\n      max_count = #arr\n    end\n\
    \    max_arr[i] = arr[max_count]\n    max_count = max_count - 1\n  end\n  return\
    \ max_arr\nend", "    local max_arr = {}\n    local max_num = nil\n    for i =\
    \ 1, k do\n        max_num = max_num or arr[i]\n        if max_num > arr[i] then\n\
    \            max_arr[i] = max_num\n        end\n    end\n    return max_arr\n\
    end", "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n\
    \        max_count = max_count + 1\n        max_arr[max_count] = arr[i]\n    end\n\
    \    for i = k + 1, #arr do\n        if arr[i] > max_arr[max_count] then\n   \
    \         max_arr[max_count] = arr[i]\n            max_count = max_count + 1\n\
    \        end\n    end\n    return max_arr\nend", "    local max_arr = {}\n   \
    \ local max_num = nil\n    for i = 1, k do\n        if max_num == nil then\n \
    \           max_num = arr[i]\n        else\n            if arr[i] > max_num then\n\
    \                max_num = arr[i]\n            end\n        end\n    end\n   \
    \ max_arr[1] = max_num\n    for i = 2, k do\n        if arr[i] > max_num then\n\
    \            max_arr[i] = arr[i]\n        end\n    end\n    return max_arr\nend",
  "  -- Write your code here\n  local max_arr = {}\n  local max_index = 0\n  for i\
    \ = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n    \
    \  max_index = i\n    end\n  end\n  \n  for i = k + 1, #arr do\n    if arr[i]\
    \ > max_arr[i] then\n      max_arr[i] = arr[i]\n      max_index = i\n    end\n\
    \  end\n  \n  return max_arr\nend", "  -- Write your code here.\n  local max_arr\
    \ = {}\n  local max_idx = 1\n  for i = 1, k do\n    if arr[i] > arr[max_idx] then\n\
    \      max_idx = i\n    end\n  end\n  max_arr[max_idx] = arr[max_idx]\n  for i\
    \ = k + 1, #arr do\n    if arr[i] > arr[max_idx] then\n      max_idx = i\n   \
    \ end\n  end\n  max_arr[max_idx] = arr[max_idx]\n  return max_arr\nend", "   \
    \ local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n        max_count\
    \ = max_count + 1\n        max_arr[i] = arr[i]\n    end\n    for i = 1, k do\n\
    \        if max_arr[i] > max_arr[max_count] then\n            max_arr[max_count]\
    \ = max_arr[i]\n        end\n    end\n    return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_count = 0\n    for i = 1, k do\n        max_count = max_count\
    \ + 1\n        max_arr[max_count] = arr[i]\n    end\n    for i = k + 1, #arr do\n\
    \        max_count = max_count + 1\n        max_arr[max_count] = arr[i]\n    end\n\
    \    return max_arr\nend", "  -- Base case\n  if k == 1 then\n    return arr\n\
    \  end\n  \n  -- Find the max element in the first k elements\n  local max_element\
    \ = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element then\n      max_element\
    \ = arr[i]\n    end\n  end\n  \n  -- Find the max element in the remaining elements\n\
    \  local max_element_rest = maximum(arr, k - 1)\n  \n  -- Return the max element\
    \ and the max element rest\n  return max_element, max_element_rest\nend", "  --\
    \ Base case\n  if k == 1 then\n    return arr\n  end", "    local max_arr = {}\n\
    \    local max_idx = {}\n    for i = 1, k do\n        max_arr[i] = arr[i]\n  \
    \      max_idx[i] = i\n    end\n    for i = k + 1, #arr do\n        if arr[i]\
    \ > max_arr[i] then\n            max_arr[i] = arr[i]\n            max_idx[i] =\
    \ i\n        end\n    end\n    return max_arr, max_idx\nend", "  -- Write your\
    \ code here\n  local max_arr = {}\n  local max_num = -math.inf\n  for i = 1, k\
    \ do\n    if arr[i] > max_num then\n      max_num = arr[i]\n    end\n  end\n \
    \ for i = 1, k do\n    if arr[i] > max_num then\n      max_arr[i] = arr[i]\n \
    \   end\n  end\n  return max_arr\nend", "  -- Base case\n  if k == 1 then\n  \
    \  return arr\n  end", "    local max_arr = {}\n    local max_num = -math.inf\n\
    \    for i = 1, k do\n        if arr[i] > max_num then\n            max_num =\
    \ arr[i]\n        end\n    end\n    for i = 1, k do\n        if arr[i] > max_num\
    \ then\n            max_arr[i] = arr[i]\n        end\n    end\n    return max_arr\n\
    end", "    local max_arr = {}\n    local max_num = math.max(arr[1])\n    for i\
    \ = 2, k do\n        if arr[i] > max_num then\n            max_num = arr[i]\n\
    \        end\n    end\n    max_arr[1] = max_num\n    for i = 2, k do\n       \
    \ if arr[i] > max_num then\n            max_arr[i] = arr[i]\n        end\n   \
    \ end\n    return max_arr\nend", "  -- Base case\n  if k == 0 then\n    return\
    \ arr\n  end\n  \n  -- Find the maximum element in the first k elements\n  local\
    \ max_element = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element then\n\
    \      max_element = arr[i]\n    end\n  end\n  \n  -- Sort the remaining elements\
    \ and return them\n  local sorted_arr = {}\n  for i = 2, k do\n    table.insert(sorted_arr,\
    \ arr[i])\n  end\n  table.sort(sorted_arr)\n  return sorted_arr\nend", "  local\
    \ max_arr = {}\n  local max_count = 0\n  for i = 1, k do\n    local max_value\
    \ = arr[1]\n    for j = 2, #arr do\n      if arr[j] > max_value then\n       \
    \ max_value = arr[j]\n      end\n    end\n    max_arr[i] = max_value\n    max_count\
    \ = max_count + 1\n  end\n  return max_arr\nend", "  local max_arr = {}\n  local\
    \ max_num = 0\n  for i = 1, k do\n    max_num = max_num > arr[i] and max_num or\
    \ arr[i]\n    max_arr[i] = max_num\n  end\n  return max_arr\nend", "  -- Base\
    \ case\n  if k == 0 then\n    return arr\n  end", "  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    local max_value = arr[1]\n    for j =\
    \ 2, #arr do\n      if arr[j] > max_value then\n        max_value = arr[j]\n \
    \     end\n    end\n    max_arr[i] = max_value\n    max_count = max_count + 1\n\
    \  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_count =\
    \ 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ > #max_arr then\n            max_arr = max_arr -- reset the max_arr\n      \
    \  end\n        max_arr[i] = arr[i]\n    end\n    return max_arr\nend", "    local\
    \ maxArray = {}\n    local maxLength = 0\n    for i = 1, k do\n        local maxElement\
    \ = nil\n        for j = 1, #arr do\n            if arr[j] > maxElement then\n\
    \                maxElement = arr[j]\n            end\n        end\n        maxArray[i]\
    \ = maxElement\n        maxLength = maxLength + 1\n    end\n    return maxArray\n\
    end", "    local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n  \
    \      max_num = max_num + arr[i]\n    end\n    for i = 1, k do\n        if arr[i]\
    \ > max_num then\n            max_num = arr[i]\n        end\n    end\n    for\
    \ i = 1, k do\n        max_arr[i] = max_num\n    end\n    return max_arr\nend",
  "  local max_arr = {}\n  local max_num = 0\n  for i = 1, k do\n    max_num = max_num\
    \ > arr[i] and max_num or arr[i]\n    max_arr[i] = max_num\n  end\n  return max_arr\n\
    end", "  local results = {}\n  local max = 0\n  local index = 0\n  for i = 1,\
    \ k do\n    if arr[i] > max then\n      max = arr[i]\n      index = i\n    end\n\
    \  end\n  results[index] = max\n  for i = k + 1, #arr do\n    if arr[i] > max\
    \ then\n      max = arr[i]\n      index = i\n    end\n  end\n  results[index]\
    \ = max\n  return results\nend", "  -- Write your code here\n  local max_arr =\
    \ {}\n  local max_count = 0\n  for i = 1, k do\n    local max_val = -1000\n  \
    \  for j = 1, #arr do\n      if arr[j] > max_val then\n        max_val = arr[j]\n\
    \      end\n    end\n    max_arr[i] = max_val\n    max_count = max_count + 1\n\
    \  end\n  return max_arr\nend", "  local max_arr = {}\n  local max_idx = {}\n\
    \  local max_count = 0\n  for i = 1, k do\n    max_count = max_count + 1\n   \
    \ max_arr[i] = arr[i]\n    max_idx[i] = i\n  end\n  for i = k, #arr do\n    if\
    \ arr[i] > max_arr[k] then\n      max_arr[k] = arr[i]\n      max_idx[k] = k\n\
    \      max_count = max_count + 1\n    end\n  end\n  return max_idx, max_arr, max_count\n\
    end", "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n\
    \        local max_val = -1000\n        for j = 1, #arr do\n            if arr[j]\
    \ > max_val then\n                max_val = arr[j]\n            end\n        end\n\
    \        max_arr[i] = max_val\n        max_count = max_count + 1\n    end\n  \
    \  return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i]\
    \ = arr[i]\n      max_count = i\n    end\n  end\n  \n  for i = k + 1, #arr do\n\
    \    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n      max_count =\
    \ i\n    end\n  end\n  \n  return max_arr\nend", "  -- Write your code here\n\
    \  local max_arr = {}\n  local max_idx = 1\n  local max_val = arr[1]\n  for i\
    \ = 2, #arr do\n    if arr[i] > max_val then\n      max_val = arr[i]\n      max_idx\
    \ = i\n    end\n  end\n  max_arr[max_idx] = max_val\n  for i = 2, #arr do\n  \
    \  if arr[i] > max_val then\n      max_arr[max_idx] = arr[i]\n      max_idx =\
    \ max_idx + 1\n    end\n  end\n  return max_arr\nend", "  local max_arr = {}\n\
    \  local max_len = -1\n  local max_idx = nil\n  for i = 1, k do\n    local max_value\
    \ = arr[1]\n    for j = 2, #arr do\n      if arr[j] > max_value then\n       \
    \ max_value = arr[j]\n      end\n    end\n    max_arr[i] = max_value\n    if max_len\
    \ < #max_arr then\n      max_len = #max_arr\n      max_idx = i\n    end\n  end\n\
    \  return max_arr\nend", "    local max_arr = {}\n    local max_num = 0\n    for\
    \ i = 1, k do\n        max_num = math.max(max_num, arr[i])\n    end\n    for i\
    \ = 1, k do\n        max_arr[i] = max_num\n    end\n    return max_arr\nend",
  "    local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num\
    \ = max_num or arr[i]\n        if arr[i] > max_num then\n            max_num =\
    \ arr[i]\n        end\n    end\n    for i = 1, k do\n        max_arr[i] = max_num\n\
    \    end\n    return max_arr\nend", "  -- Write your code here\n  local max_arr\
    \ = {}\n  local max_index = 0\n  for i = 1, k do\n    max_index = i\n    for j\
    \ = 1, #arr do\n      if arr[j] > arr[max_index] then\n        max_index = j\n\
    \      end\n    end\n    max_arr[i] = arr[max_index]\n  end\n  return max_arr\n\
    end", "  local max_arr = {}\n  local max_idx = {}\n  local max_count = 0\n  local\
    \ max_count = 0\n  for i = 1, k do\n    max_count = max_count + 1\n  end\n  for\
    \ i = 1, k do\n    if max_count > max_count then\n      max_count = max_count\n\
    \      max_idx = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > arr[max_idx]\
    \ then\n      max_arr[i] = arr[max_idx]\n      max_idx = i\n    end\n  end\n \
    \ for i = 1, k do\n    if arr[i] > arr[max_idx] then\n      max_arr[i] = arr[max_idx]\n\
    \      max_idx = i\n    end\n  end\n  return max_arr\nend", "    local max_arr\
    \ = {}\n    local max_count = 0\n    for i = 1, k do\n        local max_value\
    \ = arr[1]\n        for j = 2, #arr do\n            if arr[j] > max_value then\n\
    \                max_value = arr[j]\n            end\n        end\n        max_arr[i]\
    \ = max_value\n        if max_count < i then\n            max_count = i\n    \
    \    end\n    end\n    return max_arr\nend", "  -- Write your code here\n  local\
    \ max_arr = {}\n  local max_count = 0\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_count = i\n    end\n  end\n  for i = 1, k do\n    if arr[i] > max_arr[i]\
    \ then\n      max_arr[i] = arr[i]\n      max_count = i\n    end\n  end\n  return\
    \ max_arr\nend", "  -- Base case\n  if k == 1 then\n    return arr\n  end", " \
    \ -- Write your code here\n  local max_arr = {}\n  local max_index = 0\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_index = i\n    end\n  end\n  for i = k + 1, #arr do\n    if arr[i] >\
    \ max_arr[i] then\n      max_arr[i] = arr[i]\n      max_index = i\n    end\n \
    \ end\n  return max_arr\nend", "  -- Base case\n  if k == 1 then\n    return arr\n\
    \  end", "    local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n\
    \        max_num = max_num + arr[i]\n    end\n    for i = 1, k do\n        if\
    \ max_num > arr[i] then\n            max_num = max_num - arr[i]\n        end\n\
    \        max_arr[i] = max_num\n    end\n    return max_arr\nend", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end\n  -- Find the max number in the first k elements\n  local\
    \ max_element = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element then\n\
    \      max_element = arr[i]\n    end\n  end\n  -- Find the max number in the remaining\
    \ elements\n  local max_element_rest = maximum(arr, k - 1)\n  -- Return the max\
    \ number in the first k elements and the max number in the remaining elements\n\
    \  return max_element, max_element_rest\nend", "  -- Base case: k is 0 or 1.\n\
    \  if k == 0 or k == 1 then\n    return arr\n  end", "    local max_arr = {}\n\
    \    local max_count = 0\n    for i = 1, k do\n        max_count = max_count +\
    \ 1\n        if max_count == 1 then\n            max_arr[i] = arr[i]\n       \
    \ else\n            if arr[i] > max_arr[i] then\n                max_arr[i] =\
    \ arr[i]\n            end\n        end\n    end\n    return max_arr\nend", " \
    \ -- Base case\n  if k == 1 then\n    return arr\n  end", "  -- Base case\n  if\
    \ k == 1 then\n    return arr\n  end\n  \n  -- Find the maximum number in the\
    \ first k elements\n  local max_element = arr[1]\n  for i = 2, k do\n    if arr[i]\
    \ > max_element then\n      max_element = arr[i]\n    end\n  end\n  \n  -- Find\
    \ the maximum number in the remaining elements\n  local max_element_rest = maximum(arr,\
    \ k - 1)\n  \n  -- Return the maximum number in the first k elements and the maximum\
    \ number in the remaining elements\n  return max_element, max_element_rest\nend",
  "  local result = {}\n  local max = 0\n  local i = 1\n  while i <= k do\n    if\
    \ arr[i] > max then\n      max = arr[i]\n    end\n    i = i + 1\n  end\n  local\
    \ j = 1\n  while j <= k do\n    if arr[j] > max then\n      max = arr[j]\n   \
    \ end\n    j = j + 1\n  end\n  local i = 1\n  while i <= k do\n    if arr[i] <\
    \ max then\n      result[i] = arr[i]\n    end\n    i = i + 1\n  end\n  return\
    \ result\nend", "  local max_arr = {}\n  local max_count = 0\n  for i = 1, k do\n\
    \    local max_value = arr[1]\n    for j = 2, #arr do\n      if arr[j] > max_value\
    \ then\n        max_value = arr[j]\n      end\n    end\n    max_arr[i] = max_value\n\
    \    max_count = max_count + 1\n  end\n  return max_arr\nend", "  local max_arr\
    \ = {}\n  local max_count = 0\n  for i = 1, k do\n    max_count = max_count +\
    \ 1\n  end\n  for i = 1, k do\n    if max_count > 0 then\n      max_count = max_count\
    \ - 1\n      max_arr[i] = arr[max_count]\n    end\n  end\n  return max_arr\nend",
  "  -- Base case\n  if k == 1 then\n    return arr\n  end", "    local max_arr =\
    \ {}\n    local max_count = 0\n    for i = 1, k do\n        max_count = max_count\
    \ + 1\n        max_arr[max_count] = arr[i]\n    end\n    for i = k + 1, #arr do\n\
    \        max_count = max_count + 1\n        max_arr[max_count] = arr[i]\n    end\n\
    \    return max_arr\nend", "  local max_arr = {}\n  local max_count = 0\n  for\
    \ i = 1, k do\n    local max_val = -1000\n    for j = 1, #arr do\n      if arr[j]\
    \ > max_val then\n        max_val = arr[j]\n      end\n    end\n    max_arr[i]\
    \ = max_val\n    max_count = max_count + 1\n  end\n  return max_arr\nend", " \
    \   local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n       \
    \ local max_value = arr[1]\n        for j = 2, #arr do\n            if arr[j]\
    \ > max_value then\n                max_value = arr[j]\n            end\n    \
    \    end\n        max_arr[i] = max_value\n        max_count = max_count + 1\n\
    \    end\n    return max_arr\nend", "    local max_arr = {}\n    local max_num\
    \ = 0\n    for i = 1, k do\n        if arr[i] > max_num then\n            max_num\
    \ = arr[i]\n        end\n    end\n    for i = 1, k do\n        if arr[i] > max_num\
    \ then\n            max_arr[i] = arr[i]\n        end\n    end\n    return max_arr\n\
    end", "  -- Write your code here\n  local max_arr = {}\n  local max_count = 0\n\
    \  for i = 1, k do\n    local max_value = arr[1]\n    for j = 2, #arr do\n   \
    \   if arr[j] > max_value then\n        max_value = arr[j]\n      end\n    end\n\
    \    max_arr[i] = max_value\n    max_count = max_count + 1\n  end\n  return max_arr\n\
    end", "    local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n  \
    \      max_num = math.max(max_num, arr[i])\n    end\n    for i = 1, k do\n   \
    \     if arr[i] > max_num then\n            max_num = arr[i]\n        end\n  \
    \  end\n    max_arr = max_arr or {}\n    max_arr[k] = max_num\n    return max_arr\n\
    end", "    local max_arr = {}\n    local max_index = 0\n    for i = 1, k do\n\
    \        max_index = i\n        for j = 1, #arr do\n            if arr[j] > arr[max_index]\
    \ then\n                max_index = j\n            end\n        end\n        max_arr[max_index]\
    \ = arr[max_index]\n    end\n    return max_arr\nend", "  -- Base case\n  if k\
    \ == 1 then\n    return arr\n  end", "    local max_arr = {}\n    local max_idx\
    \ = {}\n    local max_count = 0\n    for i = 1, k do\n        max_count = max_count\
    \ + 1\n        max_arr[i] = arr[i]\n        max_idx[i] = i\n    end\n    for i\
    \ = k + 1, #arr do\n        if arr[i] > max_arr[k] then\n            max_arr[k]\
    \ = arr[i]\n            max_idx[k] = i\n            max_count = max_count + 1\n\
    \        end\n    end\n    return max_arr, max_idx, max_count\nend", "  local\
    \ maxArray = {}\n  local maxLength = 0\n  local maxIndex = 0\n  for i = 1, k do\n\
    \    if maxLength < #arr then\n      maxLength = #arr\n      maxIndex = i\n  \
    \  end\n    if arr[i] > maxArray[maxIndex] then\n      maxArray[maxIndex] = arr[i]\n\
    \    end\n  end\n  return maxArray\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        max_arr[max_count]\
    \ = arr[i]\n    end\n    for i = 1, k do\n        if max_count > 1 then\n    \
    \        max_arr[max_count] = max_arr[max_count] - max_arr[max_count - 1]\n  \
    \      end\n    end\n    return max_arr\nend", "  local result = {}\n  local max\
    \ = 0\n  local i = 1\n  while i <= k do\n    if arr[i] > max then\n      max =\
    \ arr[i]\n    end\n    i = i + 1\n  end\n  local j = 1\n  while j <= k do\n  \
    \  if arr[j] > max then\n      max = arr[j]\n    end\n    j = j + 1\n  end\n \
    \ local i = 1\n  while i <= k do\n    if arr[i] < max then\n      result[i] =\
    \ arr[i]\n    end\n    i = i + 1\n  end\n  return result\nend", "  -- Write your\
    \ code here.\n  local max_arr = {}\n  for i = 1, k do\n    max_arr[i] = arr[i]\n\
    \  end\n  for i = k + 1, #arr do\n    max_arr[i] = arr[i]\n  end\n  for i = 1,\
    \ k do\n    for j = 1, #max_arr do\n      if max_arr[j] < max_arr[i] then\n  \
    \      max_arr[j] = max_arr[i]\n      end\n    end\n  end\n  return max_arr\n\
    end", "  -- Write your code here\n  local max_arr = {}\n  local max_num = 0\n\
    \  for i = 1, k do\n    max_num = max_num + arr[i]\n  end\n  for i = 1, k do\n\
    \    if max_num > arr[i] then\n      max_num = max_num - arr[i]\n    end\n   \
    \ max_arr[i] = max_num\n  end\n  return max_arr\nend", "  -- Base case: k is 0\
    \ or 1.\n  if k == 1 then\n    return arr\n  end\n  -- Base case: k is greater\
    \ than or equal to 2.\n  if k > 2 then\n    return nil\n  end\n  -- Base case:\
    \ k is less than or equal to 1.\n  if k < 1 then\n    return nil\n  end\n  --\
    \ Base case: k is 2.\n  if k == 2 then\n    return arr\n  end\n  -- Base case:\
    \ k is 3.\n  if k == 3 then\n    return arr\n  end\n  -- Base case: k is 4.\n\
    \  if k == 4 then\n    return arr\n  end\n  -- Base case: k is 5.\n  if k == 5\
    \ then\n    return arr\n  end\n  -- Base case: k is 6.\n  if k == 6 then\n   \
    \ return arr\n  end\n  -- Base case: k is 7.\n  if k == 7 then\n    return arr\n\
    \  end\n  -- Base case: k is 8.\n  if k == 8 then\n    return arr\n  end\n  --\
    \ Base case: k is 9.\n  if k == 9 then\n    return arr\n  end\n  -- Base case:\
    \ k is 10.\n  if k == 10 then\n    return arr\n  end\n  -- Base case: k is 11.\n\
    \  if k == 11 then\n    return arr\n  end\n  -- Base case: k is 12.\n  if k ==\
    \ 12 then\n    return arr\n  end\n  -- Base case: k is 13.\n  if k == 13 then\n\
    \    return arr\n  end\n  -- Base case: k is 14.\n  if k == 14 then\n    return\
    \ arr\n  end\n  -- Base case: k is 15.\n  if k == 15 then\n    return arr\n  end\n\
    \  -- Base case: k is 16.\n  if k == 16 then\n    return arr\n  end\n  -- Base\
    \ case: k is 17.\n  if k == 17 then\n    return arr\n  end\n  -- Base case: k\
    \ is 18.\n  if k == 18 then\n    return arr\n  end\n  -- Base case: k is 19.\n\
    \  if k == 19 then\n    return arr\n  end\n  -- Base case: k is 20.\n  if k ==\
    \ 20 then\n    return arr\n  end\n  -- Base case: k is 21.\n  if k == 21 then\n\
    \    return arr\n  end\n  -- Base case: k is 22.\n  if k == 22 then\n    return\
    \ arr\n  end\n  -- Base case: k is 23.\n  if k == 23 then\n    return arr\n  end\n\
    \  -- Base case: k is 24.\n  if k == 24 then\n", "  -- Write your code here\n\
    \  local max_arr = {}\n  for i = 1, k do\n    max_arr[i] = arr[i]\n  end\n  for\
    \ i = k + 1, #arr do\n    max_arr[i] = arr[i]\n  end\n  table.sort(max_arr)\n\
    \  return max_arr\nend", "  -- Write your code here\n  local max_arr = {}\n  local\
    \ max_count = 0\n  for i = 1, k do\n    local max_value = arr[1]\n    for j =\
    \ 2, #arr do\n      if arr[j] > max_value then\n        max_value = arr[j]\n \
    \     end\n    end\n    max_arr[i] = max_value\n    max_count = max_count + 1\n\
    \  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_idx = 1\n\
    \    for i = 1, k do\n        local max_value = arr[i]\n        for j = 1, k do\n\
    \            if arr[j] > max_value then\n                max_value = arr[j]\n\
    \                max_idx = j\n            end\n        end\n        max_arr[max_idx]\
    \ = max_value\n    end\n    return max_arr\nend", "    local max_arr = {}\n  \
    \  local max_idx = 1\n    for i = 1, k do\n        if arr[i] > arr[max_idx] then\n\
    \            max_idx = i\n        end\n    end\n    max_arr[max_idx] = arr[max_idx]\n\
    \    for i = k + 1, #arr do\n        if arr[i] > arr[max_idx] then\n         \
    \   max_idx = i\n        end\n    end\n    max_arr[max_idx] = arr[max_idx]\n \
    \   return max_arr\nend", "  local max_arr = {}\n  local max_count = 0\n  local\
    \ max_index = 0\n  for i = 1, k do\n    if max_count < arr[i] then\n      max_count\
    \ = arr[i]\n      max_index = i\n    end\n  end\n  max_arr[max_index] = max_count\n\
    \  for i = k + 1, #arr do\n    if arr[i] > max_count then\n      max_count = arr[i]\n\
    \      max_index = i\n    end\n  end\n  return max_arr\nend", "  -- Base case\n\
    \  if k == 1 then\n    return arr\n  end", "  -- Base case\n  if k == 1 then\n\
    \    return arr\n  end", "    local max_arr = {}\n    local max_num = 0\n    for\
    \ i = 1, k do\n        max_num = max_num > arr[i] and max_num or arr[i]\n    \
    \    max_arr[i] = max_num\n    end\n    return max_arr\nend", "  local max = {}\n\
    \  local pos = 1\n  local len = #arr\n  local i = 0\n  while i < len do\n    if\
    \ pos == k then\n      table.insert(max, arr[i - 1])\n      pos = 1\n    elseif\
    \ pos > k then\n      table.insert(max, arr[i - 1])\n      pos = 1\n    else\n\
    \      pos = pos + 1\n    end\n    i = i + 1\n  end\n  return max\nend", "   \
    \ local max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num\
    \ = max_num > arr[i] and max_num or arr[i]\n        max_arr[i] = max_num\n   \
    \ end\n    return max_arr\nend", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ == 1 then\n            max_arr[i] = arr[i]\n        else\n            if arr[i]\
    \ > max_arr[i] then\n                max_arr[i] = arr[i]\n            end\n  \
    \      end\n    end\n    return max_arr\nend", "  -- Write your code here\n  local\
    \ max_arr = {}\n  local max_count = 0\n  for i = 1, k do\n    local max_val =\
    \ -1000\n    for j = 1, #arr do\n      if arr[j] > max_val then\n        max_val\
    \ = arr[j]\n      end\n    end\n    max_arr[i] = max_val\n    max_count = max_count\
    \ + 1\n  end\n  return max_arr\nend", "    local max_arr = {}\n    local max_num\
    \ = 0\n    for i = 1, k do\n        max_num = max_num + arr[i]\n    end\n    for\
    \ i = 1, k do\n        if arr[i] > max_num then\n            max_num = arr[i]\n\
    \        end\n    end\n    for i = 1, k do\n        max_arr[i] = max_num\n   \
    \ end\n    return max_arr\nend", "  -- Write your code here\n  local maxArr =\
    \ {}\n  local maxVal = arr[1]\n  for i = 2, k do\n    if arr[i] > maxVal then\n\
    \      maxVal = arr[i]\n    end\n  end\n  for i = 1, k do\n    if arr[i] > maxVal\
    \ then\n      maxVal = arr[i]\n    end\n  end\n  for i = 1, k do\n    maxArr[i]\
    \ = arr[i]\n  end\n  return maxArr\nend", "    local max_arr = {}\n    local max_idx\
    \ = 1\n    for i = 1, k do\n        local max_value = arr[1]\n        for j =\
    \ 2, #arr do\n            if arr[j] > max_value then\n                max_value\
    \ = arr[j]\n                max_idx = j\n            end\n        end\n      \
    \  max_arr[i] = max_value\n    end\n    return max_arr\nend", "  local max_arr\
    \ = {}\n  local max_count = 0\n  for i = 1, k do\n    max_count = max_count +\
    \ 1\n    max_arr[i] = -1000\n  end\n  for i = 1, #arr do\n    max_count = max_count\
    \ + 1\n    if max_arr[i] < arr[i] then\n      max_arr[i] = arr[i]\n    end\n \
    \ end\n  for i = 1, k do\n    if max_arr[i] > max_arr[i + 1] then\n      max_arr[i\
    \ + 1] = max_arr[i]\n    end\n  end\n  return max_arr\nend", "  local max_arr\
    \ = {}\n  local max_count = 0\n  local max_index = 0\n  for i = 1, k do\n    max_count\
    \ = max_count + 1\n    if max_count > #max_arr then\n      max_count = #max_arr\n\
    \      max_index = i\n    end\n    max_arr[max_count] = arr[i]\n  end\n  return\
    \ max_arr\nend", "    local max_arr = {}\n    local max_num = 0\n    for i = 1,\
    \ k do\n        max_num = math.max(max_num, arr[i])\n    end\n    for i = 1, k\
    \ do\n        max_arr[i] = max_num\n    end\n    return max_arr\nend", "  local\
    \ results = {}\n  for i = 1, k do\n    local max_value = -math.inf\n    for j\
    \ = 1, #arr do\n      if arr[j] > max_value then\n        max_value = arr[j]\n\
    \      end\n    end\n    results[i] = max_value\n  end\n  return results\nend",
  "    local max_arr = {}\n    local max_count = 0\n    for i = 1, k do\n        max_count\
    \ = max_count + 1\n        if max_count > #max_arr then\n            max_count\
    \ = #max_arr\n        end\n        max_arr[i] = arr[i]\n    end\n    return max_arr\n\
    end", "  -- Write your code here.\n  local max_arr = {}\n  local max_idx = {}\n\
    \  for i = 1, k do\n    max_arr[i] = arr[i]\n    max_idx[i] = i\n  end\n  for\
    \ i = 1, k do\n    if arr[i] > max_arr[i] then\n      max_arr[i] = arr[i]\n  \
    \    max_idx[i] = i\n    end\n  end\n  for i = 1, k do\n    arr[i] = max_arr[i]\n\
    \  end\n  return arr\nend", "    local max_arr = {}\n    local max_count = 0\n\
    \    for i = 1, k do\n        max_count = max_count + 1\n        max_arr[max_count]\
    \ = arr[i]\n    end\n    for i = k + 1, #arr do\n        if arr[i] > max_arr[max_count]\
    \ then\n            max_arr[max_count] = arr[i]\n            max_count = max_count\
    \ + 1\n        end\n    end\n    return max_arr\nend", "  -- Base case\n  if k\
    \ == 1 then\n    return arr\n  end", "    local max_arr = {}\n    local max_count\
    \ = 0\n    for i = 1, k do\n        max_count = max_count + 1\n        if max_count\
    \ > #max_arr then\n            max_count = #max_arr\n        end\n        max_arr[i]\
    \ = arr[i]\n    end\n    return max_arr\nend", "  -- Base case\n  if k == 0 then\n\
    \    return arr\n  end\n  -- Find the max number in the first k elements\n  local\
    \ max_element = arr[1]\n  for i = 2, k do\n    if arr[i] > max_element then\n\
    \      max_element = arr[i]\n    end\n  end\n  -- Find the max number in the remaining\
    \ elements\n  local max_element_rest = arr[k]\n  for i = k + 1, #arr do\n    if\
    \ arr[i] > max_element_rest then\n      max_element_rest = arr[i]\n    end\n \
    \ end\n  -- Return the max number in the first k elements and the max number in\
    \ the remaining elements\n  return max_element, max_element_rest\nend", "    local\
    \ max_arr = {}\n    local max_num = 0\n    for i = 1, k do\n        max_num =\
    \ max_num + arr[i]\n    end\n    for i = 1, k do\n        if max_num > arr[i]\
    \ then\n            max_num = max_num - arr[i]\n        else\n            max_arr[i]\
    \ = max_num\n        end\n    end\n    return max_arr\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

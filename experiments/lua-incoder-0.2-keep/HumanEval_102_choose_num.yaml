name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- choose_num(12,\
  \ 15) = 14\n-- choose_num(13, 12) = -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["   if x < y then\n      x, y = y, x\n   end\n   if x < 2 then\n   \
    \   return -1\n   end\n   local z = x\n   while z < y do\n      z = z * 2\n  \
    \ end\n   return z\nend", "   if x < y then\n      x, y = y, x\n   end\n   if\
    \ x > y then\n      x, y = y, x\n   end\n   if x == y then\n      return x\n \
    \  end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n  \
    \    return choose_num(3 * x + 1, y)\n   end\nend", "    local max_num\n    for\
    \ i = x, y + 1 do\n        if i % 2 == 0 then\n            if max_num == nil then\n\
    \                max_num = i\n            else\n                if max_num < i\
    \ then\n                    max_num = i\n                end\n            end\n\
    \        end\n    end\n    return max_num\nend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend", "    local function is_even(n)\n        return n % 2 == 0\n  \
    \  end\n    \n    local function is_between(low, high)\n        return low <=\
    \ high and low < high\n    end\n    \n    local function is_in_range(n)\n    \
    \    return is_between(math.floor(n), math.ceil(n))\n    end\n    \n    local\
    \ function is_odd(n)\n        return n % 2 == 1\n    end\n    \n    local function\
    \ is_even_in_range(low, high)\n        return is_between(low, high) and is_even(n)\n\
    \    end\n    \n    local function is_odd_in_range(low, high)\n        return\
    \ is_between(low, high) and is_odd(n)\n    end\n    \n    local function is_in_range_or_even_in_range(low,\
    \ high)\n        return is_in_range(low) or is_even_in_range(low, high)\n    end\n\
    \    \n    local function is_in_range_or_odd_in_range(low, high)\n        return\
    \ is_in_range(low) or is_odd_in_range(low, high)\n    end\n    \n    local function\
    \ is_in_range_or_even_in_range_or_odd_in_range(low, high)\n        return is_in_range_or_even_in_range(low,\
    \ high) or is_odd_in_range(low, high)\n    end\n    \n    local function is_in_range_or_odd_in_range_or_even_in_range(low,\
    \ high)\n        return is_in_range_or_odd_in_range(low, high) or is_even_in_range(low,\
    \ high)\n    end\n    \n    local function is_in_range_or_even_in_range_or_odd_in_range_or_even_in_range(low,\
    \ high)\n        return is_in_range_or_even_in_range(low, high) or is_odd_in_range_or_even_in_range(low,\
    \ high)\n    end\n    \n    local function is_in_range_or_odd_in_range_or_even_in_range_or_even_in_range(low,\
    \ high)\n        return is_in_range_or_odd_in_range(low, high) or is_even_in_range_or_even_in_range(low,\
    \ high)\n    end\n    \n    local function is_in_range_or_even_in_range_or_odd_in_range_or_even_in_range_or_odd_in_range(low,\
    \ high)\n        return is_in_range_or_even_in_range(low, high) or is_odd_in_range_or_odd_in_range(low,\
    \ high)\n    end\n    \n    local function is_in_range_or_odd_in_range_or_even_in_range_or_even_in_range_or_odd_in_range(low,\
    \ high)\n        return is_in_range_or_odd_in_range(low, high) or is_even_in_range_or_even_in_range(low,\
    \ high)\n    end\n    \n    local function is_in_range_or_even_in_range_", "\t\
    local function is_even(n)\n\t\treturn n % 2 == 0\n\tend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend", "    local x_even = x % 2\n    local y_even = y\
    \ % 2\n    if x_even and y_even then\n        local x_odd = x % 2\n        local\
    \ y_odd = y % 2\n        if x_even and y_odd then\n            return x\n    \
    \    elseif x_odd and not y_even then\n            return y\n        elseif not\
    \ x_even and y_odd then\n            return x\n        elseif not x_odd and y_even\
    \ then\n            return y\n        end\n    end\n    return -1\nend", "  if\
    \ x < y then\n    x, y = y, x\n  end\n  local num = x\n  while num < y do\n  \
    \  num = num * 2 + 1\n  end\n  return num\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end", "\tlocal x_even = x % 2 == 0\n\tlocal y_even =\
    \ y % 2 == 0\n\tlocal x_odd = x % 2 ~= 0\n\tlocal y_odd = y % 2 ~= 0\n\tif x_even\
    \ and y_even then\n\t\treturn x\n\telseif x_even and y_odd then\n\t\treturn y\n\
    \telseif x_odd then\n\t\treturn x\n\telseif y_even then\n\t\treturn y\n\telse\n\
    \t\treturn -1\n\tend\nend", "   if x < y then\n      x, y = y, x\n   end\n   local\
    \ max_num = x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n      \
    \   max_num = max_num / i\n      else\n         return -1\n      end\n   end\n\
    \   return max_num\nend", "   if x < y then\n      x, y = y, x\n   end\n   local\
    \ max_num = x\n   local max_num2 = y\n   local i = 2\n   while i <= max_num2 do\n\
    \      if max_num % i == 0 then\n         max_num = max_num / i\n         max_num2\
    \ = max_num2 - i\n      else\n         i = i + 1\n      end\n   end\n   return\
    \ max_num\nend", "   if x < y then\n      return choose_num(y, x)\n   end\n  \
    \ if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y) + 1\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2) + 1\n   end\n   return -1\nend", "   if x < y then\n      x, y = y, x\n\
    \   end\n   local max_num = x\n   local min_num = y\n   while max_num - min_num\
    \ > 1 do\n      local num = max_num + min_num\n      if num % 2 == 0 then\n  \
    \       max_num = num\n      else\n         min_num = num\n      end\n   end\n\
    \   return max_num\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\
    \tend", "   if x < y then\n      x, y = y, x\n   end\n   for i = x, y + 1 do\n\
    \      if i ~= math.floor(i) then\n         return i\n      end\n   end\n   return\
    \ -1\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend", "\tlocal\
    \ function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\
    \t\treturn n % 2 == 1\n\tend\n\t\n\tlocal function is_between(a, b)\n\t\treturn\
    \ a <= b and a >= b\n\tend\n\t\n\tlocal function is_in_range(n)\n\t\treturn is_between(x\
    \ + 1, y) and is_between(x - 1, y)\n\tend\n\t\n\tlocal function is_in_range_even(n)\n\
    \t\treturn is_between(x + 1, y) and is_even(n) and is_in_range(n - 1)\n\tend\n\
    \t\n\tlocal function is_in_range_odd(n)\n\t\treturn is_between(x + 1, y) and is_odd(n)\
    \ and is_in_range(n - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even(n)\n\
    \t\treturn is_between(x + 1, y) and is_odd(n) and is_even(n) and is_in_range(n\
    \ - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_odd(n)\n\t\treturn is_between(x\
    \ + 1, y) and is_odd(n) and is_odd(n) and is_in_range(n - 1)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_even_even(n)\n\t\treturn is_between(x + 1, y) and is_odd(n)\
    \ and is_even(n) and is_in_range(n - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_between(x + 1, y) and is_odd(n) and is_odd(n) and is_in_range(n\
    \ - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\t\treturn\
    \ is_between(x + 1, y) and is_odd(n) and is_even(n) and is_in_range(n - 1)\n\t\
    end\n\t\n\tlocal function is_in_range_odd_even_even_odd(n)\n\t\treturn is_between(x\
    \ + 1, y) and is_odd(n) and is_odd(n) and is_in_range(n - 1)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_even_odd_even(n)\n\t\treturn is_between(x + 1, y) and\
    \ is_odd(n) and is_odd(n) and is_even(n) and is_in_range(n - 1)\n\tend\n\t\n\t\
    local function is_in_range_odd_even_odd_odd(n)\n\t\treturn is_between(x + 1, y)\
    \ and is_odd(n) and is_odd(n) and is_odd(n) and is_in_range(n - 1)\n\tend\n\t\n\
    \tlocal function is_in_range_odd_even_odd_"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  -- >>> fibfib(1)\n-- 0\n-- >>> fibfib(5)\n-- 4\n-- >>> fibfib(8)\n-- 24\nlocal function\
  \ fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 0 then return 0 end\n  if n < 3 then return n end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  if n < 3 then\n    return n\n  end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n < 0 then\n    return 0\n  elseif n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 0 then\n    return 0\n \
    \ elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 0\
    \ then\n    return 0\n  end\n  if n == 0 then\n    return 0\n  end\n  if n ==\
    \ 1 then\n    return 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then\n    return 0\n  elseif n < 3 then\n    return n\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 0\
    \ then\n    return 0\n  elseif n < 1 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 0 then return 0 end\n  if\
    \ n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n    return 0\n  elseif\
    \ n < 1 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 3 then\n    return\
    \ n\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n < 0 then\n    return 0\n  elseif n < 1 then\n    return 1\n  elseif n <\
    \ 2 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 1 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n < 0 then\n    return 0\n  elseif n < 2 then\n    return n\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 0 then\n   \
    \ return 0\n  end\n  if n < 3 then\n    return n\n  end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n    return 0\n  elseif\
    \ n < 1 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 1 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n < 0 then return 0 end\n  if n == 0 then return 0 end\n  if n == 1 then return\
    \ 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n\
    \    return 0\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n\
    \ == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  elseif n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

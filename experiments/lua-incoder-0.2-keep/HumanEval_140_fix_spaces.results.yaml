language: lua
name: HumanEval_140_fix_spaces
results:
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S\", \" \")\n  if spaces ~= \"\" then\n    spaces\
    \ = spaces:gsub(\"%S\", \"-\")\n  end\n  return spaces\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn4fgtek9.lua:19:\
    \ expected: \"Example\"\nactual: \"       \"\nstack traceback:\n\t/tmp/tmpn4fgtek9.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if\
    \ spaces ~= text then\n    return spaces\n  else\n    return text:gsub(\"%S+\"\
    , \"_\")\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw25i_bge.lua:24:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmpw25i_bge.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", \" \")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"%S+\", \"_\")\n  end\n  return spaces\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb5nic38m.lua:19:\
    \ expected: \"Example\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmpb5nic38m.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if\
    \ spaces:gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkug80o1v.lua:14: unfinished string near ''"%''

    '
  stdout: ''
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", \" \")\n  if spaces ~= \"\" then\n    spaces\
    \ = spaces:gsub(\"%S+\", \" \")\n    if spaces ~= \"\" then\n      spaces = spaces:gsub(\"\
    %S+\", \"_\")\n    end\n  end\n  return spaces\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx4h8zggd.lua:22:\
    \ expected: \"Example\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmpx4h8zggd.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \"\
    ) end)\n  if spaces ~= text then\n    return spaces:gsub(\"%S+\", \"_\")\n  end\n\
    \  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5c9hxuk3.lua:19:\
    \ expected: \"Example\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmp5c9hxuk3.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return \"_\"..s2\n    end)\n  end)\n  local spaces_count\
    \ = spaces:gsub(\"%S+\", \"\")\n  if spaces_count > 2 then\n    spaces = spaces:gsub(\"\
    %S+\", function (s)\n      return \"_\"..s\n    end)\n  end\n  return spaces\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2k2pnges.lua:15:\
    \ attempt to compare number with string\nstack traceback:\n\t/tmp/tmp2k2pnges.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp2k2pnges.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\"%S+\", function(s) return s:gsub(\"%S+\", function(s2) return\
    \ s2:gsub(\"%S+\", \"_\") end)end)\n  text = text:gsub(\"%S+$\", function(s) return\
    \ s:gsub(\"%S+$\", function(s2) return s2:gsub(\"%S+$\", \"_\") end)end)\n  return\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplw0843l4.lua:17:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmplw0843l4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if\
    \ spaces ~= text then\n    return spaces\n  else\n    return text:gsub(\"%S+\"\
    , function (s)\n      return s:gsub(\"%S+\", function (s2)\n        return s2:gsub(\"\
    %S+\", \"-\")\n      end)\n    end)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl60m6jtm.lua:28:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmpl60m6jtm.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return \"_\"..s2\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\", \"%S\") > 2 then\n    spaces = spaces:gsub(\"%S+\", \"%S-\")\n  end\n \
    \ return spaces\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp92bnvz7s.lua:14:\
    \ invalid use of '%' in replacement string\nstack traceback:\n\t/tmp/tmp92bnvz7s.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp92bnvz7s.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return \"_\" .. s2\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsezwlluz.lua:15: function arguments expected near ''=''

    '
  stdout: ''
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \"_\"\
    ) end)\n  if spaces:gsub(\"%S+\", \"_\") ~= spaces then\n    return text:gsub(\"\
    %S+\", \"_\")\n  else\n    return text\n  end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7omlm7ta.lua:21:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp7omlm7ta.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\"%S+\", function(s) return s:gsub(\"%S+\", \"_\") end)\n\
    \  text = text:gsub(\"%S+$\", function(s) return s:gsub(\"%S+\", \"_\") end)\n\
    \  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjaufmojb.lua:17:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmpjaufmojb.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (t)\n      return \"_\"..t\n    end)\n  end)\n  if spaces:gsub(\"%S+\"\
    , \"%S\") > 2 then\n    spaces = spaces:gsub(\"%S+\", \"%S-\")\n  end\n  return\
    \ spaces\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpii4ts24h.lua:14:\
    \ invalid use of '%' in replacement string\nstack traceback:\n\t/tmp/tmpii4ts24h.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpii4ts24h.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S\", \" \")\n  if spaces ~= \"\" then\n    spaces\
    \ = spaces:gsub(\"%S+\", \" \")\n    if spaces ~= \"\" then\n      spaces = spaces:gsub(\"\
    %S{2,}\", \" \")\n    end\n  end\n  return spaces\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfh_i7vh.lua:22:\
    \ expected: \"Example\"\nactual: \"       \"\nstack traceback:\n\t/tmp/tmpvfh_i7vh.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\"[%z\\1-\\3]\", function(c) return c:lower() end)\n  text\
    \ = text:gsub(\"[%z\\1-\\3]\", function(c) return c:upper() end)\n  text = text:gsub(\"\
    [%z\\1-\\3]\", function(c) return c:sub(1,1) end)\n  text = text:gsub(\"[%z\\\
    1-\\3]\", function(c) return c:sub(2,2) end)\n  return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_k_9nr5h.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp_k_9nr5h.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \"\
    ) end)\n  if spaces ~= text then\n    return spaces:gsub(\"%S+\", function (s)\
    \ return s:gsub(\"%S+\", \"-\") end)\n  else\n    return text\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfmkqp0m.lua:20:\
    \ expected: \"Example\"\nactual: \" \"\nstack traceback:\n\t/tmp/tmpsfmkqp0m.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\",\
    \ function (s2)\n      return \"_\"..s2\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpg4_9lfi7.lua:15: function arguments expected near ''=''

    '
  stdout: ''
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \"\
    ) end)\n  if spaces ~= text then\n    return text:gsub(\"%S+\", function (s) return\
    \ s:gsub(\"%S+\", \"_\") end)\n  else\n    return text\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpidu6x3tc.lua:20:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmpidu6x3tc.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\"%S+\", function(s) return s:gsub(\"%S+\", \"_\") end)\n\
    \  text = text:gsub(\"%S+$\", function(s) return s:gsub(\"%S+\", \"_\") end)\n\
    \  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjaufmojb.lua:17:\
    \ expected: \"Example\"\nactual: \"_\"\nstack traceback:\n\t/tmp/tmpjaufmojb.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"

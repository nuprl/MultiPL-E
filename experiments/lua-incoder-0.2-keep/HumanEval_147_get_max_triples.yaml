name: HumanEval_147_get_max_triples
language: lua
prompt: "-- You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- Input:\
  \ n = 5\n-- Output: 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The only valid\
  \ triple is (1, 7, 13).\nlocal function get_max_triples(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_max_triples\n\
  \    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6), 4)\n  \
  \  lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100), 53361)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n\
    \  local count = 0\n  for i = 1, n do\n    for j = 1, n do\n      for k = 1, n\
    \ do\n        if a[i] < a[j] and a[i] < a[k] then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local a = {}\n\
    \  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count = 0\n  for\
    \ i = 1, n do\n    for j = 1, n do\n      for k = 1, n do\n        if a[i] < a[j]\
    \ and a[i] < a[k] then\n          count = count + 1\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "    local a = {}\n    for i = 1, n do\n\
    \        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n\
    \ do\n        for j = 1, n do\n            for k = 1, n do\n                if\
    \ i < j and j < k and i < k then\n                    count = count + 1\n    \
    \            end\n            end\n        end\n    end\n    return count\nend",
  "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n\
    \    local count = 0\n    for i = 1, n do\n        for j = 1, n do\n         \
    \   for k = 1, n do\n                if i < j and j < k and i < k then\n     \
    \               count = count + 1\n                end\n            end\n    \
    \    end\n    end\n    return count\nend", "    local a = {}\n    for i = 1, n\
    \ do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i =\
    \ 1, n do\n        for j = 1, n do\n            for k = 1, n do\n            \
    \    if i < j and j < k and i < k then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n \
    \   end\n    local count = 0\n    for i = 1, n do\n        for j = 1, n do\n \
    \           for k = 1, n do\n                if i < j and j < k and a[i] < a[j]\
    \ and a[i] < a[k] then\n                    count = count + 1\n              \
    \  end\n            end\n        end\n    end\n    return count\nend", "  local\
    \ a = {}\n  local count = 0\n  for i = 1, n do\n    local j = i - 1\n    local\
    \ k = i + 1\n    local triple = i + j + k\n    if triple % 3 == 0 then\n     \
    \ count = count + 1\n      a[i] = triple\n    end\n  end\n  return count\nend",
  "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n\
    \    local count = 0\n    for i = 1, n do\n        for j = 1, n do\n         \
    \   for k = 1, n do\n                if i < j and j < k and i < k then\n     \
    \               count = count + 1\n                end\n            end\n    \
    \    end\n    end\n    return count\nend", "    local a = {}\n    for i = 1, n\
    \ do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i =\
    \ 1, n do\n        for j = 1, n do\n            for k = 1, n do\n            \
    \    if i < j and j < k and i < k then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n \
    \   end\n    local count = 0\n    for i = 1, n do\n        for j = 1, n do\n \
    \           for k = 1, n do\n                if i < j and j < k and i < k then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    local a = {}\n    for i =\
    \ 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for\
    \ i = 1, n do\n        for j = 1, n do\n            for k = 1, n do\n        \
    \        if i < j and j < k and i < k then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i -\
    \ i + 1\n    end\n    local count = 0\n    for i = 1, n do\n        for j = 1,\
    \ n do\n            for k = 1, n do\n                if i < j and j < k and i\
    \ < k then\n                    count = count + 1\n                end\n     \
    \       end\n        end\n    end\n    return count\nend", "    local a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count =\
    \ 0\n    for i = 1, n do\n        for j = 1, n do\n            for k = 1, n do\n\
    \                if i < j and j < k and i < k then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "    local a = {}\n    for i = 1, n do\n        a[i] =\
    \ i * i - i + 1\n    end\n    local count = 0\n    local max_triple = nil\n  \
    \  for i = 1, n do\n        for j = 1, n do\n            for k = 1, n do\n   \
    \             if i < j and j < k and i < k then\n                    local triple\
    \ = a[i] + a[j] + a[k]\n                    if triple % 3 == 0 then\n        \
    \                count = count + 1\n                        if max_triple == nil\
    \ or triple > max_triple then\n                            max_triple = triple\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return count\nend", "    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count\
    \ = 0\n    local i = 0\n    local j = 1\n    local k = 2\n    while i < n and\
    \ j < n and k < n do\n        if a[i] < a[j] and a[i] < a[k] then\n          \
    \  count = count + 1\n            i = i + 1\n        elseif a[j] < a[k] and a[j]\
    \ < a[i] then\n            count = count + 1\n            j = j + 1\n        elseif\
    \ a[k] < a[i] and a[k] < a[j] then\n            count = count + 1\n          \
    \  k = k + 1\n        else\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local a = {}\n    for i = 1, n do\n        a[i]\
    \ = i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n do\n       \
    \ for j = 1, n do\n            for k = 1, n do\n                if i < j and j\
    \ < k and i < k then\n                    count = count + 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count\
    \ = 0\n    for i = 1, n do\n        for j = 1, n do\n            for k = 1, n\
    \ do\n                if i < j and j < k and i < k then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "    local a = {}\n    for i = 1, n do\n        a[i] =\
    \ i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n do\n        for\
    \ j = 1, n do\n            for k = 1, n do\n                if i < j and j < k\
    \ and i < k then\n                    count = count + 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count\
    \ = 0\n    for i = 1, n do\n        for j = 1, n do\n            for k = 1, n\
    \ do\n                if i < j and j < k and i < k then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i -\
    \ i + 1\n  end\n  local count = 0\n  for i = 1, n do\n    for j = 1, n do\n  \
    \    for k = 1, n do\n        if a[i] < a[j] and a[i] < a[k] then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

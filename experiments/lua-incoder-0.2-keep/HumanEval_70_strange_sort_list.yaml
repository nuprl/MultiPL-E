name: HumanEval_70_strange_sort_list
language: lua
prompt: "-- Given list of integers, return list in strange order.\n-- Strange sorting,\
  \ is when you start with the minimum value,\n-- then maximum of the remaining integers,\
  \ then minimum and so on.\n-- Examples:\n-- strange_sort_list([1, 2, 3, 4]) == [1,\
  \ 4, 2, 3]\n-- strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n-- strange_sort_list([])\
  \ == []\nlocal function strange_sort_list(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strange_sort_list\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4}), {1, 4, 2, 3})\n    lu.assertEquals(candidate({5,\
  \ 6, 7, 8, 9}), {5, 9, 6, 8, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}),\
  \ {1, 5, 2, 4, 3})\n    lu.assertEquals(candidate({5, 6, 7, 8, 9, 1}), {1, 9, 5,\
  \ 8, 6, 7})\n    lu.assertEquals(candidate({5, 5, 5, 5}), {5, 5, 5, 5})\n    lu.assertEquals(candidate({}),\
  \ {})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8}), {1, 8, 2, 7, 3,\
  \ 6, 4, 5})\n    lu.assertEquals(candidate({0, 2, 2, 2, 5, 5, -5, -5}), {-5, 5,\
  \ -5, 5, 0, 2, 2, 2})\n    lu.assertEquals(candidate({111111}), {111111})\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local\
    \ max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  for i =\
    \ 1, #sorted_lst do\n    sorted_lst[i] = min_value .. max_value .. sorted_lst[i]\n\
    \  end\n  return sorted_lst\nend", "  local sorted_list = lst\n  local minimum\
    \ = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and sorted_list[i] or minimum\n \
    \   maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n  end\n\
    \  sorted_list[#sorted_list+1] = minimum\n  sorted_list[#sorted_list+1] = maximum\n\
    \  return sorted_list\nend", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n\
    \  local maximum = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum =\
    \ minimum > sorted_list[i] and sorted_list[i] or minimum\n    maximum = maximum\
    \ < sorted_list[i] and sorted_list[i] or maximum\n  end\n  sorted_list[#sorted_list]\
    \ = minimum\n  sorted_list[#sorted_list + 1] = maximum\n  return sorted_list\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < minimum then\n      minimum = value\n    elseif value > maximum\
    \ then\n      maximum = value\n    end\n  end\n  -- Swap the minimum and maximum\
    \ values.\n  sorted_lst[1], sorted_lst[#sorted_lst] = minimum, maximum\n  -- Reverse\
    \ the list.\n  -- This is done by swapping the first and last elements of the\
    \ list.\n  -- This swap operation is done in O(1) time because we know that the\n\
    \  -- list has at least two elements.\n  -- The first element of the list will\
    \ be the second element of the list.\n  -- The last element of the list will be\
    \ the first element of the list.\n  -- The list will be reversed in O(n) time.\n\
    \  -- The list will be reversed in O(1) time because we know that the\n  -- list\
    \ has at least two elements.\n  -- The first element of the list will be the second\
    \ element of the list.\n  -- The last element of the list will be the first element\
    \ of the list.\n  -- The list will be reversed in O(n) time.\n  -- The list will\
    \ be reversed in O(1) time because we know that the\n  -- list has at least two\
    \ elements.\n  -- The first element of the list will be the second element of\
    \ the list.\n  -- The last element of the list will be the first element of the\
    \ list.\n  -- The list will be reversed in O(n) time.\n  -- The list will be reversed\
    \ in O(1) time because we know that the\n  -- list has at least two elements.\n\
    \  -- The first element of the list will be the second element of the list.\n\
    \  -- The last element of the list will be the first element of the list.\n  --\
    \ The list will be reversed in O(n) time.\n  -- The list will be reversed in O(1)\
    \ time because we know that the\n  -- list has at least two elements.\n  -- The\
    \ first element of the list will be the second element of the list.\n  -- The\
    \ last element of the list will be the first element of the list.\n  -- The list\
    \ will be reversed in O(n) time.\n  -- The list will be reversed in O(1) time\
    \ because we know that the\n  -- list has at least two elements.\n  -- The first\
    \ element of the list will be the second element of the list.\n  -- The last element\
    \ of the list will be the first element of the list.\n  -- The list will be reversed\
    \ in O(n) time.\n  -- The list will be reversed in O(1) time because we know that\
    \ the\n  -- list has ", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  table.sort(sorted_lst, function(a, b) return a < b end)\n  return\
    \ sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ element = sorted_lst[i]\n    if element < minimum then\n      minimum = element\n\
    \    elseif element > maximum then\n      maximum = element\n    end\n  end\n\
    \  sorted_lst[#sorted_lst] = minimum\n  sorted_lst[1] = maximum\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  sorted_lst[1] =\
    \ min_value\n  sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend",
  "  local sorted_lst = {}\n  local min_val = lst[1]\n  local max_val = lst[1]\n \
    \ for i = 2, #lst do\n    if lst[i] < min_val then\n      min_val = lst[i]\n \
    \   end\n    if lst[i] > max_val then\n      max_val = lst[i]\n    end\n  end\n\
    \  table.insert(sorted_lst, min_val)\n  table.insert(sorted_lst, max_val)\n  for\
    \ i = 2, #lst do\n    table.insert(sorted_lst, lst[i])\n  end\n  return sorted_lst\n\
    end", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum\
    \ = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i]\
    \ and sorted_list[i] or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i]\
    \ or maximum\n  end\n  -- Swap the minimum and maximum\n  sorted_list[#sorted_list]\
    \ = minimum\n  sorted_list[#sorted_list + 1] = maximum\n  return sorted_list\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < minimum then\n      minimum = value\n    elseif value > maximum\
    \ then\n      maximum = value\n    end\n  end\n  sorted_lst[#sorted_lst] = minimum\n\
    \  sorted_lst[1] = maximum\n  return sorted_lst\nend", "  local sorted_list =\
    \ lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n  for\
    \ i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and sorted_list[i]\
    \ or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n\
    \  end\n  sorted_list[#sorted_list+1] = minimum\n  sorted_list[#sorted_list+1]\
    \ = maximum\n  return sorted_list\nend", "  local sorted_lst = {}\n  local minimum\
    \ = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum = minimum\
    \ or lst[i]\n    maximum = maximum or lst[i]\n    if minimum > lst[i] then\n \
    \     minimum = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum =\
    \ lst[i]\n    end\n    table.insert(sorted_lst, minimum)\n    table.insert(sorted_lst,\
    \ maximum)\n    table.insert(sorted_lst, minimum)\n  end\n  return sorted_lst\n\
    end", "  local lst = lst or {}\n  local min = lst[1]\n  local max = lst[1]\n \
    \ for i = 2, #lst do\n    if lst[i] < min then\n      min = lst[i]\n    end\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  lst[1] = min\n\
    \  lst[#lst] = max\n  local new_lst = {}\n  for i = 1, #lst do\n    new_lst[#new_lst+1]\
    \ = lst[i]\n  end\n  return new_lst\nend", "  local sorted_list = lst\n  local\
    \ minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and minimum or sorted_list[i]\n \
    \   maximum = maximum < sorted_list[i] and maximum or sorted_list[i]\n  end\n\
    \  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list + 1] = maximum\n\
    \  return sorted_list\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    elseif value > max_value then\n      max_value = value\n    end\n\
    \  end\n  -- Swap min and max values.\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap min and max values.\n  sorted_lst[1]\
    \ = min_value\n  sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend",
  "  local sorted_lst = {}\n  local minimum = lst[1]\n  local maximum = lst[1]\n \
    \ for i = 2, #lst do\n    minimum = minimum > lst[i] and minimum or lst[i]\n \
    \   maximum = maximum < lst[i] and maximum or lst[i]\n    table.insert(sorted_lst,\
    \ minimum)\n    table.insert(sorted_lst, maximum)\n    minimum = minimum > lst[i]\
    \ and minimum or lst[i]\n    maximum = maximum < lst[i] and maximum or lst[i]\n\
    \  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min and max values.\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and sorted_list[i]\
    \ or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n\
    \  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list + 1]\
    \ = maximum\n  return sorted_list\nend", "  local lst = lst\n  local n = #lst\n\
    \  local i = 0\n  while i < n do\n    local j = i\n    while j < n and lst[j]\
    \ < lst[j + 1] do\n      j = j + 1\n    end\n    lst[i], lst[j] = lst[j], lst[i]\n\
    \    i = j\n  end\n  return lst\nend", "  local sorted_lst = {}\n  local min_value\
    \ = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] <\
    \ min_value then\n      min_value = lst[i]\n    end\n    if lst[i] > max_value\
    \ then\n      max_value = lst[i]\n    end\n  end\n  table.insert(sorted_lst, min_value)\n\
    \  table.insert(sorted_lst, max_value)\n  for i = 2, #lst do\n    table.insert(sorted_lst,\
    \ lst[i])\n  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap the min and max values\n \
    \ sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local element =\
    \ sorted_lst[i]\n    if element < minimum then\n      minimum = element\n    elseif\
    \ element > maximum then\n      maximum = element\n    end\n  end\n  local new_lst\
    \ = nil\n  local i = minimum\n  while i <= maximum do\n    new_lst = table.insert(new_lst,\
    \ i)\n    i = i + 1\n  end\n  return new_lst\nend", "  local sorted_lst = lst\n\
    \  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap min_value and max_value if\
    \ min_value is greater than max_value.\n  if min_value > max_value then\n    local\
    \ tmp = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n  --\
    \ Swap min_value and max_value if min_value is greater than max_value.\n  if min_value\
    \ > max_value then\n    local tmp = min_value\n    min_value = max_value\n   \
    \ max_value = tmp\n  end\n  -- Swap min_value and max_value if min_value is greater\
    \ than max_value.\n  if min_value > max_value then\n    local tmp = min_value\n\
    \    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min_value and\
    \ max_value if min_value is greater than max_value.\n  if min_value > max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min_value and max_value if min_value is greater than max_value.\n\
    \  if min_value > max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min_value and max_value if min_value is\
    \ greater than max_value.\n  if min_value > max_value then\n    local tmp = min_value\n\
    \    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min_value and\
    \ max_value if min_value is greater than max_value.\n  if min_value > max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min_value and max_value if min_value is greater than max_value.\n\
    \  if min_value > max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min_value and max_value if min_value is\
    \ greater than max_value.\n  if min_value > max_value then\n    local tmp = min_value\n\
    \    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min_value and\
    \ max_value if min_value is greater than max_value.\n  if min_value > max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min_value and max_value if min_value is greater than max_value.\n\
    \  if min_value > max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min_value and max_value if min_value is\
    \ greater than max_value.", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min and max values\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst]\
    \ = max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum\
    \ = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local current = sorted_lst[i]\n    if current < minimum then\n     \
    \ minimum = current\n    end\n    if current > maximum then\n      maximum = current\n\
    \    end\n  end\n  local new_lst = {}\n  for i = 1, #sorted_lst do\n    new_lst[#new_lst\
    \ + 1] = sorted_lst[i]\n  end\n  for i = 1, #sorted_lst do\n    local current\
    \ = sorted_lst[i]\n    if current < minimum then\n      new_lst[#new_lst + 1]\
    \ = minimum\n      minimum = current\n    end\n    if current > maximum then\n\
    \      new_lst[#new_lst + 1] = maximum\n      maximum = current\n    end\n  end\n\
    \  return new_lst\nend", "  local sorted_lst = lst\n  local min_val = sorted_lst[1]\n\
    \  local max_val = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ cur_val = sorted_lst[i]\n    if cur_val < min_val then\n      min_val = cur_val\n\
    \    elseif cur_val > max_val then\n      max_val = cur_val\n    end\n  end\n\
    \  sorted_lst[1] = min_val\n  sorted_lst[#sorted_lst] = max_val\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  for i =\
    \ 1, #sorted_lst do\n    sorted_lst[i], sorted_lst[#sorted_lst + i] = sorted_lst[#sorted_lst\
    \ + i], sorted_lst[i]\n  end\n  sorted_lst[#sorted_lst + 1] = min_value\n  sorted_lst[#sorted_lst\
    \ + 2] = max_value\n  return sorted_lst\nend", "  local sorted_list = lst\n  local\
    \ minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum\
    \ = minimum or lst[i]\n    maximum = maximum or lst[i]\n    if minimum > lst[i]\
    \ then\n      minimum = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum\
    \ = lst[i]\n    end\n  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list\
    \ + 1] = maximum\n  return sorted_list\nend", "  local min_value = lst[1]\n  local\
    \ max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n \
    \     min_value = lst[i]\n    end\n    if lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  local tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp,\
    \ min_value)\n    table.insert(tmp, max_value)\n  end\n  table.sort(tmp)\n  local\
    \ new_lst = {}\n  for _, v in ipairs(tmp) do\n    table.insert(new_lst, v)\n \
    \ end\n  return new_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < minimum then\n      minimum = value\n\
    \    elseif value > maximum then\n      maximum = value\n    end\n  end\n  local\
    \ i = minimum\n  while i <= maximum do\n    table.insert(sorted_lst, i)\n    i\
    \ = i + 1\n  end\n  return sorted_lst\nend", "  local min_value = lst[1]\n  local\
    \ max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n \
    \     min_value = lst[i]\n    elseif lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  local tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp,\
    \ min_value)\n    table.insert(tmp, max_value)\n    table.insert(tmp, lst[i])\n\
    \  end\n  return tmp\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n    end\n\
    \    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n    end\n\
    \  end\n  local new_lst = sorted_lst\n  new_lst[1] = min_value\n  new_lst[#new_lst\
    \ + 1] = max_value\n  return new_lst\nend", "  local lst = lst\n  local min =\
    \ lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n\
    \      min = lst[i]\n    end\n    if lst[i] > max then\n      max = lst[i]\n \
    \   end\n  end\n  lst[1] = min\n  lst[#lst] = max\n  local i = 1\n  while i <=\
    \ #lst do\n    local tmp = lst[i]\n    lst[i] = lst[i-1]\n    lst[i-1] = tmp\n\
    \    i = i + 1\n  end\n  return lst\nend", "  local min = lst[1]\n  local max\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n      min = lst[i]\n\
    \    end\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local\
    \ tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp, lst[i])\n  end\n  table.sort(tmp,\
    \ function(a, b) return a < b end)\n  local new_lst = {}\n  for i = 1, #lst do\n\
    \    table.insert(new_lst, tmp[i])\n  end\n  return new_lst\nend", "  local lst\
    \ = lst\n  local min = lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] < min then\n      min = lst[i]\n    end\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  lst[1] = min\n  lst[#lst] = max\n  for\
    \ i = 2, #lst do\n    lst[i] = lst[i] - min\n  end\n  return lst\nend", "  local\
    \ lst = lst\n  local n = #lst\n  local i = 0\n  while i < n do\n    local j =\
    \ i\n    while j < n and lst[j] < lst[j+1] do\n      j = j + 1\n    end\n    lst[i],\
    \ lst[j] = lst[j], lst[i]\n    i = j\n  end\n  return lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_list = lst\n  local min_value = lst[1]\n  local max_value = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < min_value then\n      min_value = lst[i]\n\
    \    end\n    if lst[i] > max_value then\n      max_value = lst[i]\n    end\n\
    \  end\n  sorted_list[#sorted_list] = max_value\n  sorted_list[#sorted_list +\
    \ 1] = min_value\n  return sorted_list\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    sorted_lst[i],\
    \ sorted_lst[min_value], sorted_lst[max_value] = sorted_lst[min_value], sorted_lst[i],\
    \ sorted_lst[max_value]\n  end\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  sorted_lst[#sorted_lst] = max_value\n\
    \  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ {}\n  local min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < min_value then\n      min_value = lst[i]\n    elseif lst[i]\
    \ > max_value then\n      max_value = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n  end\n  for i = 1, #sorted_lst\
    \ do\n    sorted_lst[i] = min_value\n  end\n  for i = 1, #sorted_lst do\n    sorted_lst[i]\
    \ = max_value\n  end\n  return sorted_lst\nend", "  local result = {}\n  local\
    \ minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    local\
    \ value = lst[i]\n    if value < minimum then\n      minimum = value\n    elseif\
    \ value > maximum then\n      maximum = value\n    end\n    result[#result + 1]\
    \ = value\n  end\n  result[#result + 1] = minimum\n  result[#result + 1] = maximum\n\
    \  return result\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap minimum with maximum\n  sorted_lst[#sorted_lst] = max_value\n\
    \  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local current_value = sorted_lst[i]\n    if\
    \ current_value < min_value then\n      min_value = current_value\n    end\n \
    \   if current_value > max_value then\n      max_value = current_value\n    end\n\
    \  end\n  -- Swap min_value and max_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap min and max values.\n  sorted_lst[1]\
    \ = min_value\n  sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend",
  "  local sorted_lst = {}\n  local minimum = lst[1]\n  local maximum = lst[1]\n \
    \ for i = 2, #lst do\n    minimum = minimum > lst[i] and lst[i] or minimum\n \
    \   maximum = maximum < lst[i] and lst[i] or maximum\n  end\n  for i = 1, #lst\
    \ do\n    sorted_lst[#sorted_lst + 1] = minimum\n    minimum = maximum\n    maximum\
    \ = minimum\n  end\n  sorted_lst[#sorted_lst + 1] = minimum\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  -- Swap\
    \ min and max values\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] =\
    \ max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min_value and max_value\n  sorted_lst[#sorted_lst] =\
    \ min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ minimum then\n      minimum = value\n    elseif value > maximum then\n     \
    \ maximum = value\n    end\n  end\n  for i = 1, #sorted_lst do\n    local value\
    \ = sorted_lst[i]\n    sorted_lst[i] = minimum\n    minimum = minimum + maximum\n\
    \    maximum = maximum - minimum\n    sorted_lst[i] = value\n  end\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  -- Swap min and\
    \ max values\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ element = sorted_lst[i]\n    if element < minimum then\n      minimum = element\n\
    \    end\n    if element > maximum then\n      maximum = element\n    end\n  end\n\
    \  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst] = maximum\n  return sorted_lst\n\
    end", "  local min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < min_value then\n      min_value = lst[i]\n    elseif lst[i]\
    \ > max_value then\n      max_value = lst[i]\n    end\n  end\n  local new_lst\
    \ = {}\n  for i = 1, #lst do\n    new_lst[#new_lst + 1] = lst[i]\n  end\n  for\
    \ i = 1, #new_lst do\n    new_lst[i] = min_value\n  end\n  for i = 1, #new_lst\
    \ do\n    new_lst[i] = max_value\n  end\n  return new_lst\nend", "  local sorted_lst\
    \ = {}\n  local min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < min_value then\n      min_value = lst[i]\n    elseif lst[i]\
    \ > max_value then\n      max_value = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n  end\n  for i = 1, #sorted_lst\
    \ do\n    sorted_lst[i] = min_value .. max_value .. sorted_lst[i]\n  end\n  return\
    \ sorted_lst\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  for i = 1, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    sorted_lst[i] = min_value\n    sorted_lst[#sorted_lst + i] = max_value\n\
    \  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    elseif value > max_value then\n      max_value = value\n    end\n\
    \  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n \
    \ return sorted_lst\nend", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n\
    \  local maximum = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum =\
    \ minimum > sorted_list[i] and sorted_list[i] or minimum\n    maximum = maximum\
    \ < sorted_list[i] and sorted_list[i] or maximum\n  end\n  sorted_list[#sorted_list+1]\
    \ = minimum\n  sorted_list[#sorted_list+1] = maximum\n  return sorted_list\nend",
  "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  local tmp_lst =\
    \ sorted_lst\n  tmp_lst[1] = min_value\n  tmp_lst[#tmp_lst] = max_value\n  sorted_lst\
    \ = tmp_lst\n  return sorted_lst\nend", "  local lst2 = {}\n  local i = 1\n  while\
    \ i <= #lst do\n    lst2[#lst2 + 1] = lst[i]\n    i = i + 1\n  end\n  lst2 = lst2\n\
    \  table.sort(lst2, function(a, b) return a < b end)\n  local j = 1\n  while j\
    \ <= #lst do\n    lst[#lst + 1] = lst2[j]\n    j = j + 1\n  end\n  return lst\n\
    end", "  local sorted_lst = {}\n  local min_val = math.min(lst)\n  local max_val\
    \ = math.max(lst)\n  for i = min_val, max_val do\n    table.insert(sorted_lst,\
    \ i)\n  end\n  for i = max_val, min_val do\n    table.insert(sorted_lst, i)\n\
    \  end\n  return sorted_lst\nend", "  local sorted_list = lst\n  local minimum\
    \ = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and sorted_list[i] or minimum\n \
    \   maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n  end\n\
    \  sorted_list[#sorted_list+1] = minimum\n  sorted_list[#sorted_list+1] = maximum\n\
    \  return sorted_list\nend", "  local sorted_list = lst\n  local minimum = lst[1]\n\
    \  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum = minimum or lst[i]\n\
    \    maximum = maximum or lst[i]\n    if minimum > lst[i] then\n      minimum\
    \ = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum = lst[i]\n  \
    \  end\n  end\n  for i = 1, #lst do\n    if minimum > lst[i] then\n      minimum\
    \ = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum = lst[i]\n  \
    \  end\n  end\n  for i = 1, #lst do\n    if minimum > lst[i] then\n      minimum\
    \ = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum = lst[i]\n  \
    \  end\n    table.insert(sorted_list, minimum)\n    table.insert(sorted_list,\
    \ maximum)\n  end\n  return sorted_list\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and sorted_list[i]\
    \ or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n\
    \  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list + 1]\
    \ = maximum\n  return sorted_list\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  local min_value = min_value - 1\n  local max_value = max_value\
    \ + 1\n  for i = 1, #sorted_lst do\n    local value = sorted_lst[i]\n    local\
    \ new_value = min_value + (max_value - min_value) * ((value - min_value) / (max_value\
    \ - min_value))\n    sorted_lst[i] = new_value\n  end\n  return sorted_lst\nend",
  "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  -- Swap\
    \ min_value and max_value\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst]\
    \ = max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n\
    \    end\n    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n\
    \    end\n  end\n  -- Swap minimum with maximum\n  sorted_lst[1] = max_value\n\
    \  sorted_lst[#sorted_lst] = min_value\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst\
    \ do\n    minimum = minimum or lst[i]\n    maximum = maximum or lst[i]\n    if\
    \ minimum > lst[i] then\n      minimum = lst[i]\n    end\n    if maximum < lst[i]\
    \ then\n      maximum = lst[i]\n    end\n  end\n  sorted_list[1] = minimum\n \
    \ sorted_list[#sorted_list + 1] = maximum\n  for i = 2, #lst do\n    local tmp\
    \ = sorted_list[i]\n    sorted_list[i] = minimum\n    minimum = minimum or lst[i]\n\
    \    minimum = minimum or tmp\n    minimum = minimum or maximum\n    minimum =\
    \ minimum or minimum\n    minimum = minimum or maximum\n    minimum = minimum\
    \ or minimum\n    minimum = minimum or maximum\n    minimum = minimum or minimum\n\
    \    minimum = minimum or maximum\n    minimum = minimum or minimum\n    minimum\
    \ = minimum or maximum\n    minimum = minimum or minimum\n    minimum = minimum\
    \ or maximum\n    minimum = minimum or minimum\n    minimum = minimum or maximum\n\
    \    minimum = minimum or minimum\n    minimum = minimum or maximum\n    minimum\
    \ = minimum or minimum\n    minimum = minimum or maximum\n    minimum = minimum\
    \ or minimum\n    minimum = minimum or maximum\n    minimum = minimum or minimum\n\
    \    minimum = minimum or maximum\n    minimum = minimum or minimum\n    minimum\
    \ = minimum or maximum\n    minimum = minimum or minimum\n    minimum = minimum\
    \ or maximum\n    minimum = minimum or minimum\n    minimum = minimum or maximum\n\
    \    minimum = minimum or minimum\n    minimum = minimum or maximum\n    minimum\
    \ = minimum or minimum\n    minimum = minimum or maximum\n    minimum = minimum\
    \ or minimum\n    minimum = minimum or maximum\n    minimum = minimum or minimum\n\
    \    minimum = minimum or maximum\n    minimum = minimum or minimum\n    minimum\
    \ = minimum or maximum\n    minimum = minimum or minimum\n    minimum = minimum\
    \ or maximum\n    minimum = minimum or minimum\n    minimum = minimum or maximum\n\
    \    minimum = minimum or minimum\n    minimum = minimum or maximum\n    minimum\
    \ = minimum or minimum\n    minimum = minimum or maximum\n    minimum = minimum\
    \ or minimum\n    minimum = minimum or maximum\n    minimum = minimum or minimum\n\
    \    minimum = minimum or maximum\n    minimum = minimum or minimum\n    minimum\
    \ = minimum or maximum\n    minimum = minimum or minimum\n    minimum = minimum\
    \ or maximum\n    minimum = minimum or minimum\n    minimum = minimum or maximum",
  "  local sorted_lst = lst\n  local min_val = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local val = sorted_lst[i]\n    if val < min_val\
    \ then\n      min_val = val\n    end\n    if val > max_val then\n      max_val\
    \ = val\n    end\n  end\n  -- Now we have the min and max values, we can swap\
    \ them\n  -- We start with the minimum value and then the maximum\n  -- This way\
    \ we always have min and max values in sorted order\n  -- We also need to swap\
    \ the values at the start and end of the list\n  -- We do this by swapping the\
    \ values at the start and end of the list\n  -- Then we swap the min and max values\
    \ at the start and end of the list\n  -- Then we swap the min and max values at\
    \ the start and end of the list\n  -- Then we swap the min and max values at the\
    \ start and end of the list\n  -- Then we swap the min and max values at the start\
    \ and end of the list\n  -- Then we swap the min and max values at the start and\
    \ end of the list\n  -- Then we swap the min and max values at the start and end\
    \ of the list\n  -- Then we swap the min and max values at the start and end of\
    \ the list\n  -- Then we swap the min and max values at the start and end of the\
    \ list\n  -- Then we swap the min and max values at the start and end of the list\n\
    \  -- Then we swap the min and max values at the start and end of the list\n \
    \ -- Then we swap the min and max values at the start and end of the list\n  --\
    \ Then we swap the min and max values at the start and end of the list\n  -- Then\
    \ we swap the min and max values at the start and end of the list\n  -- Then we\
    \ swap the min and max values at the start and end of the list\n  -- Then we swap\
    \ the min and max values at the start and end of the list\n  -- Then we swap the\
    \ min and max values at the start and end of the list\n  -- Then we swap the min\
    \ and max values at the start and end of the list\n  -- Then we swap the min and\
    \ max values at the start and end of the list\n  -- Then we swap the min and max\
    \ values at the start and end of the list\n  -- Then we swap the min and max values\
    \ at the start and end of the list\n  -- Then we swap the min and max values at\
    \ the start and end of the list\n  -- Then we swap the min and max values at the\
    \ start and end of the list\n  -- Then we swap the min and max values at the start\
    \ and end of the list\n  -- Then we swap the min and max values at the start and\
    \ end of the list\n  -- Then we swap the min and max values at the start and end\
    \ of the ", "  local sorted_lst = {}\n  local min_value = lst[1]\n  local max_value\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n      min_value\
    \ = lst[i]\n    elseif lst[i] > max_value then\n      max_value = lst[i]\n   \
    \ end\n  end\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n\
    \  end\n  sorted_lst[#sorted_lst + 1] = min_value\n  sorted_lst[#sorted_lst +\
    \ 1] = max_value\n  return sorted_lst\nend", "  local sorted_list = lst\n  local\
    \ minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and sorted_list[i] or minimum\n \
    \   maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n  end\n\
    \  -- Swap minimum and maximum.\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list\
    \ + 1] = maximum\n  return sorted_list\nend", "  local sorted_lst = lst\n  local\
    \ minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i\
    \ = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < minimum\
    \ then\n      minimum = value\n    elseif value > maximum then\n      maximum\
    \ = value\n    end\n  end\n  local i = minimum\n  while i <= maximum do\n    sorted_lst[#sorted_lst\
    \ + 1] = i\n    i = i + 1\n  end\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    sorted_lst[i],\
    \ sorted_lst[#sorted_lst + i] = sorted_lst[#sorted_lst + i], sorted_lst[i]\n \
    \ end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  local tmp\n  for i = 1, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      tmp = sorted_lst[i]\n      sorted_lst[i]\
    \ = min_value\n      min_value = tmp\n    end\n    if value > max_value then\n\
    \      tmp = sorted_lst[i]\n      sorted_lst[i] = max_value\n      max_value =\
    \ tmp\n    end\n  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n\
    \  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  table.sort(sorted_lst, function(a,\
    \ b)\n    if a < b then\n      return -1\n    elseif a > b then\n      return\
    \ 1\n    else\n      return 0\n    end\n  end)\n  return sorted_lst\nend", " \
    \ local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  -- Swap the minimum\
    \ value with the first element\n  sorted_lst[1] = min_value\n  -- Swap the maximum\
    \ value with the last element\n  sorted_lst[#sorted_lst] = max_value\n  return\
    \ sorted_lst\nend", "  local sorted_lst = {}\n  local min_value = lst[1]\n  local\
    \ max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n \
    \     min_value = lst[i]\n    end\n    if lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst +\
    \ 1] = lst[i]\n  end\n  sorted_lst[#sorted_lst + 1] = min_value\n  sorted_lst[#sorted_lst\
    \ + 1] = max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ function swap(list, i, j) -- swap two elements in a list\n    local tmp = list[i]\n\
    \    list[i] = list[j]\n    list[j] = tmp\n  end", "  local sorted_lst = lst\n\
    \  local min_val = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local val = sorted_lst[i]\n    if val < min_val\
    \ then\n      min_val = val\n    end\n    if val > max_val then\n      max_val\
    \ = val\n    end\n  end\n  local tmp_lst = nil\n  local tmp_val = nil\n  for i\
    \ = 1, #sorted_lst do\n    local val = sorted_lst[i]\n    if val == min_val then\n\
    \      tmp_lst = sorted_lst:sub(1, i)\n      tmp_val = val\n    elseif val ==\
    \ max_val then\n      tmp_lst = sorted_lst:sub(i, #sorted_lst)\n      tmp_val\
    \ = val\n    end\n    sorted_lst:insert(i, tmp_val)\n    sorted_lst:insert(#sorted_lst\
    \ + i, tmp_lst)\n  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n\
    \  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local current = sorted_lst[i]\n    if current\
    \ < minimum then\n      minimum = current\n    elseif current > maximum then\n\
    \      maximum = current\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum\
    \ = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local current = sorted_lst[i]\n    if current < minimum then\n     \
    \ minimum = current\n    elseif current > maximum then\n      maximum = current\n\
    \    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst] = maximum\n\
    \  return sorted_lst\nend", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n\
    \  local maximum = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum =\
    \ minimum > sorted_list[i] and sorted_list[i] or minimum\n    maximum = maximum\
    \ < sorted_list[i] and sorted_list[i] or maximum\n  end\n  -- Swap the minimum\
    \ and maximum\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list\
    \ + 1] = maximum\n  return sorted_list\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap min and max values.\n  sorted_lst[1]\
    \ = min_value\n  sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend",
  "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  -- Swap min and\
    \ max values.\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ element = sorted_lst[i]\n    if element < minimum then\n      minimum = element\n\
    \    elseif element > maximum then\n      maximum = element\n    end\n  end\n\
    \  sorted_lst[#sorted_lst] = minimum\n  sorted_lst[1] = maximum\n  return sorted_lst\n\
    end", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum\
    \ = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i]\
    \ and sorted_list[i] or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i]\
    \ or maximum\n  end\n  -- Swap minimum and maximum.\n  sorted_list[#sorted_list]\
    \ = minimum\n  sorted_list[#sorted_list + 1] = maximum\n  return sorted_list\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < minimum then\n      minimum = value\n    elseif value > maximum\
    \ then\n      maximum = value\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = {}\n  local min_value\
    \ = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] <\
    \ min_value then\n      min_value = lst[i]\n    elseif lst[i] > max_value then\n\
    \      max_value = lst[i]\n    end\n  end\n  table.insert(sorted_lst, min_value)\n\
    \  table.insert(sorted_lst, max_value)\n  for i = 2, #lst do\n    if lst[i] <\
    \ min_value then\n      table.insert(sorted_lst, lst[i])\n    elseif lst[i] >\
    \ max_value then\n      table.insert(sorted_lst, lst[i])\n    end\n  end\n  return\
    \ sorted_lst\nend", "  local sorted_lst = {}\n  local min_value = lst[1]\n  local\
    \ max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n \
    \     min_value = lst[i]\n    elseif lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst +\
    \ 1] = lst[i]\n  end\n  table.sort(sorted_lst, function(a, b) return a < b end)\n\
    \  return sorted_lst\nend", "  local sorted_lst = {}\n  local minimum = lst[1]\n\
    \  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum = minimum > lst[i]\
    \ and minimum or lst[i]\n    maximum = maximum < lst[i] and maximum or lst[i]\n\
    \    table.insert(sorted_lst, minimum)\n    table.insert(sorted_lst, maximum)\n\
    \    minimum = minimum > lst[i] and minimum or lst[i]\n    maximum = maximum <\
    \ lst[i] and maximum or lst[i]\n  end\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local min_value = sorted_list[1]\n  local max_value = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    if min_value > sorted_list[i] then\n      min_value\
    \ = sorted_list[i]\n    end\n    if max_value < sorted_list[i] then\n      max_value\
    \ = sorted_list[i]\n    end\n  end\n  sorted_list[#sorted_list] = max_value\n\
    \  sorted_list[#sorted_list + 1] = min_value\n  return sorted_list\nend", "  local\
    \ lst = lst\n  local min = lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] < min then\n      min = lst[i]\n    end\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  lst[1] = min\n  lst[#lst] = max\n  for\
    \ i = 2, #lst do\n    lst[i] = lst[i] - min\n  end\n  return lst\nend", "  local\
    \ sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap min and max if necessary\n\
    \  if min_value < max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value\
    \ < max_value then\n    local tmp = min_value\n    min_value = max_value\n   \
    \ max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value <\
    \ max_value then\n    local tmp = min_value\n    min_value = max_value\n    max_value\
    \ = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary\n  if min_value < max_value then\n\
    \    local tmp = min_value\n    min_value = max_value\n    max_value = tmp\n \
    \ end\n  -- Swap min and max if necessary\n  if min_value < max_value then\n \
    \   local tmp = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n\
    \  -- Swap min and max if necessary\n  if min_value < max_value then\n    local\
    \ tmp = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n  --\
    \ Swap min and max if necessary\n  if min_value < max_value then\n    local tmp\
    \ = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap\
    \ min and max if necessary\n  if min_value < max_value then\n    local tmp = min_value\n\
    \    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min and max\
    \ if necessary\n  if min_value < max_value then\n    local tmp = min_value\n \
    \   min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min and max if\
    \ necessary\n  if min_value < max_value then\n    local tmp = min_value\n    min_value\
    \ = max_value\n    max_value = tmp\n  end\n  -- Swap min and max if necessary\n\
    \  if min_value < max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value\
    \ < max_value then\n    local tmp = min_value\n    min_value = max_value\n   \
    \ max_value = tmp\n  end\n  ", "  local sorted_lst = lst\n  local min_value =\
    \ sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary.\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  ", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = {}\n  local min_value = lst[1]\n\
    \  local max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n\
    \      min_value = lst[i]\n    elseif lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst+1]\
    \ = max_value\n  for i = 2, #lst do\n    sorted_lst[#sorted_lst+1] = lst[i]\n\
    \  end\n  return sorted_lst\nend", "  local function swap(list, i, j) -- Swap\
    \ two elements in the list.\n    local tmp = list[i]\n    list[i] = list[j]\n\
    \    list[j] = tmp\n  end", "  local sorted_lst = {}\n  local min_value = lst[1]\n\
    \  local max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min_value then\n\
    \      min_value = lst[i]\n    elseif lst[i] > max_value then\n      max_value\
    \ = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst +\
    \ 1] = lst[i]\n  end\n  table.sort(sorted_lst, function(x, y)\n    if x == min_value\
    \ then\n      return -1\n    elseif y == max_value then\n      return 1\n    else\n\
    \      return x - y\n    end\n  end)\n  return sorted_lst\nend", "  local sorted_lst\
    \ = {}\n  local minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst\
    \ do\n    minimum = minimum > lst[i] and minimum or lst[i]\n    maximum = maximum\
    \ < lst[i] and maximum or lst[i]\n  end\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst\
    \ + 1] = minimum\n    minimum = maximum\n    maximum = lst[i]\n  end\n  sorted_lst[#sorted_lst\
    \ + 1] = minimum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and sorted_list[i]\
    \ or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n\
    \  end\n  -- Swap the minimum and maximum.\n  sorted_list[#sorted_list] = minimum\n\
    \  sorted_list[#sorted_list + 1] = maximum\n  return sorted_list\nend", "  local\
    \ sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap minimum with maximum\n  sorted_lst[1]\
    \ = max_value\n  sorted_lst[#sorted_lst] = min_value\n  return sorted_lst\nend",
  "  local min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] < min_value then\n      min_value = lst[i]\n    end\n    if lst[i]\
    \ > max_value then\n      max_value = lst[i]\n    end\n  end\n  local tmp = {}\n\
    \  for i = 1, #lst do\n    table.insert(tmp, lst[i])\n  end\n  table.sort(tmp,\
    \ function(a, b) return a < b end)\n  local new_lst = {}\n  for i = 1, #tmp do\n\
    \    table.insert(new_lst, tmp[i])\n  end\n  return new_lst\nend", "  local sorted_lst\
    \ = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ minimum then\n      minimum = value\n    elseif value > maximum then\n     \
    \ maximum = value\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  return sorted_lst\nend", "  local min_value = lst[1]\n  local max_value = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < min_value then\n      min_value = lst[i]\n\
    \    end\n    if lst[i] > max_value then\n      max_value = lst[i]\n    end\n\
    \  end\n  local tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp, lst[i])\n\
    \  end\n  table.sort(tmp, function(a, b) return a < b end)\n  local new_lst =\
    \ {}\n  for i = 1, #tmp do\n    table.insert(new_lst, tmp[i])\n  end\n  return\
    \ new_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < minimum then\n      minimum = value\n\
    \    elseif value > maximum then\n      maximum = value\n    end\n  end\n  for\
    \ i = 1, #sorted_lst do\n    local value = sorted_lst[i]\n    sorted_lst[i] =\
    \ minimum .. value .. maximum\n  end\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_lst = lst\n  local min_val = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_val then\n      min_val\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_val then\n      max_val\
    \ = sorted_lst[i]\n    end\n  end\n  sorted_lst[1] = min_val\n  sorted_lst[#sorted_lst]\
    \ = max_val\n  return sorted_lst\nend", "  local sorted_list = lst\n  local minimum\
    \ = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum = minimum\
    \ or lst[i]\n    maximum = maximum or lst[i]\n    if minimum > lst[i] then\n \
    \     minimum = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum =\
    \ lst[i]\n    end\n  end\n  for i = 1, #sorted_list do\n    if sorted_list[i]\
    \ < minimum then\n      table.insert(sorted_list, minimum, sorted_list[i])\n \
    \     table.remove(sorted_list, i)\n    end\n    if sorted_list[i] > maximum then\n\
    \      table.insert(sorted_list, maximum, sorted_list[i])\n      table.remove(sorted_list,\
    \ i)\n    end\n  end\n  return sorted_list\nend", "  local sorted_list = lst\n\
    \  local minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n  \
    \  minimum = minimum > lst[i] and lst[i] or minimum\n    maximum = maximum < lst[i]\
    \ and lst[i] or maximum\n  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list\
    \ + 1] = maximum\n  for i = 2, #lst do\n    sorted_list[#sorted_list + 1] = minimum\n\
    \    minimum = minimum > lst[i] and lst[i] or minimum\n    maximum = maximum <\
    \ lst[i] and lst[i] or maximum\n    sorted_list[#sorted_list + 1] = maximum\n\
    \  end\n  return sorted_list\nend", "  local sorted_list = lst\n  local minimum\
    \ = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and sorted_list[i] or minimum\n \
    \   maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n  end\n\
    \  sorted_list[#sorted_list+1] = minimum\n  sorted_list[#sorted_list+1] = maximum\n\
    \  return sorted_list\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  local new_lst = {}\n  for i = 1, #sorted_lst do\n    new_lst[#new_lst\
    \ + 1] = sorted_lst[i]\n  end\n  table.sort(new_lst, function(a, b) return a <\
    \ b end)\n  for i = 1, #sorted_lst do\n    sorted_lst[i] = new_lst[i]\n  end\n\
    \  return sorted_lst\nend", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n\
    \  local maximum = sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum =\
    \ minimum > sorted_list[i] and sorted_list[i] or minimum\n    maximum = maximum\
    \ < sorted_list[i] and sorted_list[i] or maximum\n  end\n  sorted_list[#sorted_list+1]\
    \ = minimum\n  sorted_list[#sorted_list+1] = maximum\n  return sorted_list\nend",
  "  local sorted_lst = {}\n  local min_value = lst[1]\n  local max_value = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < min_value then\n      min_value = lst[i]\n\
    \    elseif lst[i] > max_value then\n      max_value = lst[i]\n    end\n  end\n\
    \  table.insert(sorted_lst, min_value)\n  table.insert(sorted_lst, max_value)\n\
    \  table.insert(sorted_lst, min_value)\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < minimum then\n      minimum\
    \ = sorted_lst[i]\n    elseif sorted_lst[i] > maximum then\n      maximum = sorted_lst[i]\n\
    \    end\n  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i] < minimum then\n\
    \      minimum = sorted_lst[i]\n    elseif sorted_lst[i] > maximum then\n    \
    \  maximum = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    if\
    \ sorted_lst[i] > minimum then\n      minimum = sorted_lst[i]\n    elseif sorted_lst[i]\
    \ < maximum then\n      maximum = sorted_lst[i]\n    end\n  end\n  for i = 1,\
    \ #sorted_lst do\n    if sorted_lst[i] > minimum then\n      minimum = sorted_lst[i]\n\
    \    elseif sorted_lst[i] < maximum then\n      maximum = sorted_lst[i]\n    end\n\
    \  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i] > minimum then\n   \
    \   minimum = sorted_lst[i]\n    elseif sorted_lst[i] < maximum then\n      maximum\
    \ = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i]\
    \ > minimum then\n      minimum = sorted_lst[i]\n    elseif sorted_lst[i] < maximum\
    \ then\n      maximum = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst\
    \ do\n    if sorted_lst[i] > minimum then\n      minimum = sorted_lst[i]\n   \
    \ elseif sorted_lst[i] < maximum then\n      maximum = sorted_lst[i]\n    end\n\
    \  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i] > minimum then\n   \
    \   minimum = sorted_lst[i]\n    elseif sorted_lst[i] < maximum then\n      maximum\
    \ = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i]\
    \ > minimum then\n      minimum = sorted_lst[i]\n    elseif sorted_lst[i] < maximum\
    \ then\n      maximum = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst\
    \ do\n    if sorted_lst[i] > minimum then\n      minimum = sorted_lst[i]\n   \
    \ elseif sorted_lst[i] < maximum then\n      maximum = sorted_lst[i]\n    end\n\
    \  end\n  for i = 1, #sorted_lst do\n    if sorted_lst[i] > minimum then\n   \
    \   minimum = sorted_lst[i]\n    elseif sorted_lst[i] < maximum then\n      maximum\
    \ = sorted_lst[i]\n    end\n  end\n  for ", "  local lst = lst\n  local n = #lst\n\
    \  local i = 0\n  while i < n do\n    local j = i\n    while j > 0 and lst[j -\
    \ 1] > lst[j] do\n      lst[j] = lst[j - 1]\n      j = j - 1\n    end\n    lst[j]\
    \ = lst[i]\n    i = i + 1\n  end\n  return lst\nend", "  local result = {}\n \
    \ local minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n   \
    \ local value = lst[i]\n    if value < minimum then\n      minimum = value\n \
    \   elseif value > maximum then\n      maximum = value\n    end\n    result[#result\
    \ + 1] = value\n  end\n  result[#result + 1] = minimum\n  result[#result + 1]\
    \ = maximum\n  return result\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n\
    \    end\n    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n\
    \    end\n  end\n  -- Swap min and max values\n  sorted_lst[1] = min_value\n \
    \ sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  table.sort(sorted_lst, function(a,\
    \ b) return a < b end)\n  return sorted_lst\nend", "  local lst = lst\n  local\
    \ min = lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min\
    \ then\n      min = lst[i]\n    end\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  lst[1] = min\n  lst[#lst] = max\n  return lst\nend", "  local\
    \ sorted_list = lst\n  local min_value = sorted_list[1]\n  local max_value = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    if sorted_list[i] < min_value then\n      min_value\
    \ = sorted_list[i]\n    elseif sorted_list[i] > max_value then\n      max_value\
    \ = sorted_list[i]\n    end\n  end\n  -- Swap the minimum value to the beginning\
    \ of the list.\n  sorted_list[1] = min_value\n  -- Swap the maximum value to the\
    \ end of the list.\n  sorted_list[#sorted_list + 1] = max_value\n  return sorted_list\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  -- Swap\
    \ min_value and max_value\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1]\
    \ = max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n    end\n\
    \    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n    end\n\
    \  end\n  -- Swap minimum with maximum value\n  sorted_lst[1] = max_value\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  return sorted_lst\nend", "  local result = {}\n  local minimum\
    \ = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    if minimum > lst[i]\
    \ then\n      minimum = lst[i]\n    end\n    if maximum < lst[i] then\n      maximum\
    \ = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if minimum > lst[i] then\n\
    \      table.insert(result, minimum)\n      minimum = lst[i]\n    end\n    if\
    \ maximum < lst[i] then\n      table.insert(result, maximum)\n      maximum =\
    \ lst[i]\n    end\n  end\n  table.insert(result, minimum)\n  table.insert(result,\
    \ maximum)\n  return result\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n\
    \    end\n    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n\
    \    end\n  end\n  -- Swap min and max values.\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local element = sorted_lst[i]\n    if element\
    \ < minimum then\n      minimum = element\n    elseif element > maximum then\n\
    \      maximum = element\n    end\n  end\n  local i = minimum\n  while i <= maximum\
    \ do\n    table.insert(sorted_lst, i)\n    i = i + 2\n  end\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local element =\
    \ sorted_lst[i]\n    if element < minimum then\n      minimum = element\n    end\n\
    \    if element > maximum then\n      maximum = element\n    end\n  end\n  local\
    \ minimum_index = #sorted_lst + 1\n  local maximum_index = #sorted_lst\n  for\
    \ i = minimum_index, maximum_index do\n    local element = sorted_lst[i]\n   \
    \ minimum_index = minimum_index - 1\n    maximum_index = maximum_index - 1\n \
    \   local swap_index = minimum_index\n    minimum = minimum_index\n    for j =\
    \ minimum_index + 1, maximum_index do\n      local element_2 = sorted_lst[j]\n\
    \      if element > element_2 then\n        swap_index = swap_index - 1\n    \
    \    minimum = minimum_index\n      else\n        minimum = minimum_index + 1\n\
    \      end\n    end\n    sorted_lst[swap_index], sorted_lst[minimum_index] = sorted_lst[minimum_index],\
    \ sorted_lst[swap_index]\n  end\n  return sorted_lst\nend", "  local min_value\
    \ = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst do\n    if lst[i] <\
    \ min_value then\n      min_value = lst[i]\n    end\n    if lst[i] > max_value\
    \ then\n      max_value = lst[i]\n    end\n  end\n  local new_lst = {}\n  for\
    \ i = 1, #lst do\n    new_lst[#new_lst + 1] = lst[i]\n  end\n  table.sort(new_lst,\
    \ function(a, b) return a < b end)\n  return new_lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local current_value = sorted_lst[i]\n    if\
    \ current_value < min_value then\n      min_value = current_value\n    end\n \
    \   if current_value > max_value then\n      max_value = current_value\n    end\n\
    \  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n \
    \ return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min and max values.\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local min = lst[1]\n\
    \  local max = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n      min\
    \ = lst[i]\n    end\n    if lst[i] > max then\n      max = lst[i]\n    end\n \
    \ end\n  local new_lst = {}\n  for i = 1, #lst do\n    new_lst[#new_lst + 1] =\
    \ lst[i]\n  end\n  for i = 1, #new_lst do\n    new_lst[i] = new_lst[i] + min -\
    \ max\n  end\n  return new_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_list = lst\n  local min_value = sorted_list[1]\n  local max_value = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    if sorted_list[i] < min_value then\n      min_value\
    \ = sorted_list[i]\n    end\n    if sorted_list[i] > max_value then\n      max_value\
    \ = sorted_list[i]\n    end\n  end\n  -- Swap min_value and max_value\n  sorted_list[#sorted_list]\
    \ = max_value\n  sorted_list[#sorted_list + 1] = min_value\n  return sorted_list\n\
    end", "  local lst = lst\n  local min = lst[1]\n  local max = lst[1]\n  for i\
    \ = 2, #lst do\n    min = min or lst[i]\n    max = max or lst[i]\n    if min >\
    \ max then\n      local tmp = min\n      min = max\n      max = tmp\n    end\n\
    \  end\n  lst[1] = min\n  lst[#lst] = max\n  return lst\nend", "  local result\
    \ = {}\n  local minimum = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst\
    \ do\n    minimum = minimum > lst[i] and lst[i] or minimum\n    maximum = maximum\
    \ < lst[i] and lst[i] or maximum\n    result[#result + 1] = minimum\n    result[#result\
    \ + 1] = maximum\n  end\n  return result\nend", "  local sorted_lst = {}\n  local\
    \ min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst do\n    if\
    \ lst[i] < min_value then\n      min_value = lst[i]\n    end\n    if lst[i] >\
    \ max_value then\n      max_value = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n  end\n  table.sort(sorted_lst,\
    \ function(a, b) return a < b end)\n  return sorted_lst\nend", "  local min =\
    \ lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n\
    \      min = lst[i]\n    end\n    if lst[i] > max then\n      max = lst[i]\n \
    \   end\n  end\n  local res = {}\n  for i = 1, #lst do\n    res[#res + 1] = lst[i]\n\
    \  end\n  table.sort(res, function(x, y)\n    if x < min then\n      return -1\n\
    \    end\n    if x > max then\n      return 1\n    end\n    return 0\n  end)\n\
    \  return res\nend", "  local min = lst[1]\n  local max = lst[1]\n  for i = 2,\
    \ #lst do\n    if lst[i] < min then\n      min = lst[i]\n    end\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local res = {}\n  for i =\
    \ 1, #lst do\n    res[#res + 1] = lst[i]\n  end\n  for i = 1, #res do\n    res[i]\
    \ = min .. res[i] .. max\n  end\n  return res\nend", "  local sorted_lst = lst\n\
    \  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local element = sorted_lst[i]\n    if element\
    \ < minimum then\n      minimum = element\n    elseif element > maximum then\n\
    \      maximum = element\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < minimum then\n      minimum = value\n\
    \    elseif value > maximum then\n      maximum = value\n    end\n  end\n  --\
    \ Swap minimum and maximum.\n  sorted_lst[#sorted_lst] = minimum\n  sorted_lst[1]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum\
    \ = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local current = sorted_lst[i]\n    if current < minimum then\n     \
    \ minimum = current\n    elseif current > maximum then\n      maximum = current\n\
    \    end\n  end\n  local minimum_index = #sorted_lst + 1\n  local maximum_index\
    \ = #sorted_lst\n  for i = minimum_index, maximum_index do\n    local current\
    \ = sorted_lst[i]\n    minimum_index = minimum_index + 1\n    maximum_index =\
    \ maximum_index - 1\n    sorted_lst[minimum_index] = current\n    sorted_lst[maximum_index]\
    \ = current\n  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local\
    \ min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for\
    \ i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < min_value\
    \ then\n      min_value = value\n    end\n    if value > max_value then\n    \
    \  max_value = value\n    end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst]\
    \ = max_value\n  return sorted_lst\nend", "  local sorted_list = lst\n  local\
    \ minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    minimum = minimum > sorted_list[i] and sorted_list[i] or minimum\n \
    \   maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n  end\n\
    \  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list + 1] = maximum\n\
    \  return sorted_list\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < minimum then\n      minimum = value\n\
    \    elseif value > maximum then\n      maximum = value\n    end\n  end\n  sorted_lst[#sorted_lst]\
    \ = minimum\n  sorted_lst[1] = maximum\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local current = sorted_lst[i]\n    if current\
    \ < minimum then\n      minimum = current\n    end\n    if current > maximum then\n\
    \      maximum = current\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n\
    \    end\n    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n\
    \    end\n  end\n  -- Swap min_value and max_value\n  sorted_lst[#sorted_lst]\
    \ = min_value\n  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local\
    \ sorted_lst = lst\n  local min_val = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local val = sorted_lst[i]\n    if val < min_val\
    \ then\n      min_val = val\n    end\n    if val > max_val then\n      max_val\
    \ = val\n    end\n  end\n  -- Swap min and max if they are the same\n  if min_val\
    \ == max_val then\n    local tmp = min_val\n    min_val = max_val\n    max_val\
    \ = tmp\n  end\n  -- Swap min and max if they are the same\n  if min_val == max_val\
    \ then\n    local tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n\
    \  -- Swap min and max if they are the same\n  if min_val == max_val then\n  \
    \  local tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n  --\
    \ Swap min and max if they are the same\n  if min_val == max_val then\n    local\
    \ tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n  -- Swap min\
    \ and max if they are the same\n  if min_val == max_val then\n    local tmp =\
    \ min_val\n    min_val = max_val\n    max_val = tmp\n  end\n  -- Swap min and\
    \ max if they are the same\n  if min_val == max_val then\n    local tmp = min_val\n\
    \    min_val = max_val\n    max_val = tmp\n  end\n  -- Swap min and max if they\
    \ are the same\n  if min_val == max_val then\n    local tmp = min_val\n    min_val\
    \ = max_val\n    max_val = tmp\n  end\n  -- Swap min and max if they are the same\n\
    \  if min_val == max_val then\n    local tmp = min_val\n    min_val = max_val\n\
    \    max_val = tmp\n  end\n  -- Swap min and max if they are the same\n  if min_val\
    \ == max_val then\n    local tmp = min_val\n    min_val = max_val\n    max_val\
    \ = tmp\n  end\n  -- Swap min and max if they are the same\n  if min_val == max_val\
    \ then\n    local tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n\
    \  -- Swap min and max if they are the same\n  if min_val == max_val then\n  \
    \  local tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n  --\
    \ Swap min and max if they are the same\n  if min_val == max_val then\n    local\
    \ tmp = min_val\n    min_val = max_val\n    max_val = tmp\n  end\n  -- Swap min\
    \ and max ", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local\
    \ max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < min_value then\n      min_value = value\n\
    \    end\n    if value > max_value then\n      max_value = value\n    end\n  end\n\
    \  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] = max_value\n  return\
    \ sorted_lst\nend", "  local min_value = lst[1]\n  local max_value = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < min_value then\n      min_value = lst[i]\n\
    \    elseif lst[i] > max_value then\n      max_value = lst[i]\n    end\n  end\n\
    \  local new_lst = {}\n  for i = 1, #lst do\n    new_lst[#new_lst + 1] = lst[i]\n\
    \  end\n  table.sort(new_lst, function(a, b) return a < b end)\n  return new_lst\n\
    end", "  local function swap(list, i, j) -- swap two elements in list\n    local\
    \ tmp = list[i]\n    list[i] = list[j]\n    list[j] = tmp\n  end", "  local min\
    \ = lst[1]\n  local max = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n\
    \      min = lst[i]\n    elseif lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  local tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp, lst[i])\n\
    \  end\n  table.sort(tmp, function(a, b) return a < b end)\n  local ret = {}\n\
    \  for i = 1, #tmp do\n    table.insert(ret, tmp[i])\n  end\n  return ret\nend",
  "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ minimum then\n      minimum = value\n    elseif value > maximum then\n     \
    \ maximum = value\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap minimum with maximum.\n  sorted_lst[#sorted_lst] = max_value\n\
    \  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_val = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_val then\n      min_val\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_val then\n      max_val\
    \ = sorted_lst[i]\n    end\n  end\n  for i = 1, #sorted_lst do\n    sorted_lst[i],\
    \ sorted_lst[i - 1] = sorted_lst[i - 1], sorted_lst[i]\n  end\n  table.sort(sorted_lst,\
    \ function(x, y)\n    if x == y then\n      return x\n    elseif x < y then\n\
    \      return -1\n    else\n      return 1\n    end\n  end)\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    elseif value > max_value\
    \ then\n      max_value = value\n    end\n  end\n  -- Swap min and max if necessary\n\
    \  if min_value < max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value\
    \ < max_value then\n    local tmp = min_value\n    min_value = max_value\n   \
    \ max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value <\
    \ max_value then\n    local tmp = min_value\n    min_value = max_value\n    max_value\
    \ = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value < max_value\
    \ then\n    local tmp = min_value\n    min_value = max_value\n    max_value =\
    \ tmp\n  end\n  -- Swap min and max if necessary\n  if min_value < max_value then\n\
    \    local tmp = min_value\n    min_value = max_value\n    max_value = tmp\n \
    \ end\n  -- Swap min and max if necessary\n  if min_value < max_value then\n \
    \   local tmp = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n\
    \  -- Swap min and max if necessary\n  if min_value < max_value then\n    local\
    \ tmp = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n  --\
    \ Swap min and max if necessary\n  if min_value < max_value then\n    local tmp\
    \ = min_value\n    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap\
    \ min and max if necessary\n  if min_value < max_value then\n    local tmp = min_value\n\
    \    min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min and max\
    \ if necessary\n  if min_value < max_value then\n    local tmp = min_value\n \
    \   min_value = max_value\n    max_value = tmp\n  end\n  -- Swap min and max if\
    \ necessary\n  if min_value < max_value then\n    local tmp = min_value\n    min_value\
    \ = max_value\n    max_value = tmp\n  end\n  -- Swap min and max if necessary\n\
    \  if min_value < max_value then\n    local tmp = min_value\n    min_value = max_value\n\
    \    max_value = tmp\n  end\n  -- Swap min and max if necessary\n  if min_value\
    \ < max_value then\n    local tmp = min_value\n    min_value = max_value\n   \
    \ max_value = tmp\n  end\n  -- ", "  local sorted_lst = lst\n  local minimum =\
    \ sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local current = sorted_lst[i]\n    if current < minimum then\n     \
    \ minimum = current\n    elseif current > maximum then\n      maximum = current\n\
    \    end\n  end\n  local minimum_index = #sorted_lst + 1\n  local maximum_index\
    \ = #sorted_lst\n  for i = 1, #sorted_lst do\n    local current = sorted_lst[i]\n\
    \    if current < minimum then\n      minimum_index = i\n      minimum = current\n\
    \    elseif current > maximum then\n      maximum_index = i\n      maximum = current\n\
    \    end\n  end\n  sorted_lst[minimum_index], sorted_lst[maximum_index] = minimum,\
    \ maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    if sorted_lst[i] < min_value then\n      min_value = sorted_lst[i]\n\
    \    end\n    if sorted_lst[i] > max_value then\n      max_value = sorted_lst[i]\n\
    \    end\n  end\n  sorted_lst[1] = min_value\n  sorted_lst[#sorted_lst] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ current = sorted_lst[i]\n    if current < minimum then\n      minimum = current\n\
    \    elseif current > maximum then\n      maximum = current\n    end\n  end\n\
    \  -- Swap minimum and maximum\n  sorted_lst[#sorted_lst] = minimum\n  sorted_lst[1]\
    \ = maximum\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_val\
    \ = sorted_lst[1]\n  local max_val = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local val = sorted_lst[i]\n    if val < min_val then\n      min_val\
    \ = val\n    end\n    if val > max_val then\n      max_val = val\n    end\n  end\n\
    \  local min_idx = 1\n  local max_idx = #sorted_lst\n  while min_idx <= max_idx\
    \ do\n    local idx = min_idx\n    while idx <= max_idx do\n      local val =\
    \ sorted_lst[idx]\n      if val < min_val then\n        sorted_lst[idx] = min_val\n\
    \        min_idx = idx + 1\n      elseif val > max_val then\n        sorted_lst[idx]\
    \ = max_val\n        max_idx = idx - 1\n      else\n        -- do nothing\n  \
    \    end\n      idx = idx + 1\n    end\n  end\n  return sorted_lst\nend", "  local\
    \ sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and minimum\
    \ or sorted_list[i]\n    maximum = maximum < sorted_list[i] and maximum or sorted_list[i]\n\
    \  end\n  -- Swap the minimum and maximum.\n  sorted_list[#sorted_list] = minimum\n\
    \  sorted_list[#sorted_list + 1] = maximum\n  return sorted_list\nend", "  local\
    \ lst = lst\n  local len = #lst\n  local i = 0\n  local j = 1\n  local tmp\n \
    \ while i < len do\n    tmp = lst[i]\n    lst[i] = lst[j]\n    lst[j] = tmp\n\
    \    i = i + 1\n    j = j + 1\n  end\n  return lst\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap minimum with maximum.\n  sorted_lst[#sorted_lst]\
    \ = max_value\n  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local\
    \ sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  local new_lst = {}\n  for i = 1, #sorted_lst\
    \ do\n    new_lst[#new_lst + 1] = sorted_lst[i]\n  end\n  new_lst[#new_lst + 1]\
    \ = min_value\n  new_lst[#new_lst + 1] = max_value\n  return new_lst\nend", " \
    \ local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < min_value then\n      min_value = value\n    end\n    if value\
    \ > max_value then\n      max_value = value\n    end\n  end\n  local tmp_lst =\
    \ sorted_lst\n  tmp_lst[1] = min_value\n  tmp_lst[#tmp_lst] = max_value\n  sorted_lst\
    \ = tmp_lst\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    elseif value > max_value then\n      max_value = value\n    end\n\
    \  end\n  -- Swap min and max values\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local min_value = sorted_list[1]\n  local max_value = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    if sorted_list[i] < min_value then\n      min_value\
    \ = sorted_list[i]\n    end\n    if sorted_list[i] > max_value then\n      max_value\
    \ = sorted_list[i]\n    end\n  end\n  -- Swap the minimum value with the first\
    \ element\n  sorted_list[#sorted_list] = min_value\n  -- Swap the maximum value\
    \ with the last element\n  sorted_list[#sorted_list - 1] = max_value\n  return\
    \ sorted_list\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    elseif value > max_value then\n      max_value = value\n    end\n\
    \  end\n  -- Swap min and max values.\n  sorted_lst[#sorted_lst] = min_value\n\
    \  sorted_lst[1] = max_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  for i = 1, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    sorted_lst[i] = min_value .. value .. max_value\n\
    \  end\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum\
    \ = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < minimum then\n      minimum\
    \ = value\n    elseif value > maximum then\n      maximum = value\n    end\n \
    \ end\n  for i = 1, #sorted_lst do\n    local value = sorted_lst[i]\n    sorted_lst[i]\
    \ = minimum .. value .. maximum\n  end\n  return sorted_lst\nend", "  local sorted_lst\
    \ = lst\n  local minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < minimum then\n      minimum\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > maximum then\n      maximum\
    \ = sorted_lst[i]\n    end\n  end\n  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst]\
    \ = maximum\n  return sorted_lst\nend", "  local lst2 = {}\n  local min = lst[1]\n\
    \  local max = lst[1]\n  for i = 2, #lst do\n    local v = lst[i]\n    if v <\
    \ min then\n      min = v\n    end\n    if v > max then\n      max = v\n    end\n\
    \    lst2[i] = v\n  end\n  lst2 = lst2..lst[#lst]\n  for i = #lst, 1, -1 do\n\
    \    lst2[i] = lst2[i - 1]\n  end\n  return lst2\nend", "  local sorted_lst =\
    \ {}\n  local min_value = lst[1]\n  local max_value = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < min_value then\n      min_value = lst[i]\n    elseif lst[i]\
    \ > max_value then\n      max_value = lst[i]\n    end\n  end\n  -- Sort list from\
    \ min to max\n  for i = 1, #lst do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n\
    \  end\n  -- Sort list from max to min\n  for i = #sorted_lst, 1, -1 do\n    sorted_lst[#sorted_lst\
    \ - 1] = sorted_lst[#sorted_lst - 1]\n  end\n  -- Sort list from min to max\n\
    \  for i = 1, #lst do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n  end\n  return\
    \ sorted_lst\nend", "  local sorted_lst = lst\n  local min_value = sorted_lst[1]\n\
    \  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n  \
    \  local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1] = max_value\n\
    \  return sorted_lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ current = sorted_lst[i]\n    if current < minimum then\n      minimum = current\n\
    \    elseif current > maximum then\n      maximum = current\n    end\n  end\n\
    \  sorted_lst[1] = minimum\n  sorted_lst[#sorted_lst] = maximum\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < minimum then\n      minimum = value\n    elseif value > maximum\
    \ then\n      maximum = value\n    end\n  end\n  -- Swap minimum and maximum.\n\
    \  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum\
    \ and maximum.\n  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n\
    \  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum = maximum\n\
    \  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum\
    \ = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n\
    \  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local\
    \ tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n\
    \  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum\
    \ and maximum.\n  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n\
    \  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum = maximum\n\
    \  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum\
    \ = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n\
    \  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local\
    \ tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n\
    \  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum\
    \ and maximum.\n  local tmp = minimum\n  minimum = maximum\n  maximum = tmp\n\
    \  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum = maximum\n\
    \  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n  minimum\
    \ = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local tmp = minimum\n\
    \  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n  local\
    \ tmp = minimum\n  minimum = maximum\n  maximum = tmp\n  -- Swap minimum and maximum.\n\
    \  local tmp = minimum\n", "  local lst = lst\n  local min = lst[1]\n  local max\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n      min = lst[i]\n\
    \    end\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  lst[1]\
    \ = min\n  lst[#lst] = max\n  for i = 2, #lst do\n    lst[i] = lst[i] - min\n\
    \  end\n  return lst\nend", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n\
    \  local maximum = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local\
    \ value = sorted_lst[i]\n    if value < minimum then\n      minimum = value\n\
    \    elseif value > maximum then\n      maximum = value\n    end\n  end\n  sorted_lst[1]\
    \ = minimum\n  sorted_lst[#sorted_lst] = maximum\n  return sorted_lst\nend", " \
    \ local sorted_lst = lst\n  local min_value = sorted_lst[1]\n  local max_value\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    if sorted_lst[i]\
    \ < min_value then\n      min_value = sorted_lst[i]\n    end\n    if sorted_lst[i]\
    \ > max_value then\n      max_value = sorted_lst[i]\n    end\n  end\n  -- Swap\
    \ min_value and max_value\n  sorted_lst[#sorted_lst] = min_value\n  sorted_lst[1]\
    \ = max_value\n  return sorted_lst\nend", "  local sorted_lst = lst\n  local min_value\
    \ = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst\
    \ do\n    local value = sorted_lst[i]\n    if value < min_value then\n      min_value\
    \ = value\n    end\n    if value > max_value then\n      max_value = value\n \
    \   end\n  end\n  -- Swap minimum with maximum\n  sorted_lst[#sorted_lst] = max_value\n\
    \  sorted_lst[1] = min_value\n  return sorted_lst\nend", "  local sorted_lst =\
    \ lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value <\
    \ min_value then\n      min_value = value\n    end\n    if value > max_value then\n\
    \      max_value = value\n    end\n  end\n  for i = 1, #sorted_lst do\n    sorted_lst[i]\
    \ = min_value .. max_value\n  end\n  return sorted_lst\nend", "  local sorted_list\
    \ = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i] and sorted_list[i]\
    \ or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i] or maximum\n\
    \  end\n  -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n\
    \  -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n \
    \ -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  --\
    \ Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap\
    \ the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the\
    \ minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum\
    \ and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum and\
    \ maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n\
    \  minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n \
    \ minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n  minimum,\
    \ maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n  minimum, maximum\
    \ = minimum, maximum\n  -- Swap the minimum and maximum.\n  minimum, maximum =\
    \ minimum, maximum\n  -- Swap the minimum and maximum.\n  minimum, maximum = minimum,\
    \ maximum\n  -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n\
    \  -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n \
    \ -- Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  --\
    \ Swap the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap\
    \ the minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the\
    \ minimum and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum\
    \ and maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum and\
    \ maximum.\n  minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n\
    \  minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n \
    \ minimum, maximum = minimum, maximum\n  -- Swap the minimum and maximum.\n  minimum,\
    \ maximum = minimum, maximum\n", "  local sorted_list = lst\n  local min_value\
    \ = sorted_list[1]\n  local max_value = sorted_list[1]\n  for i = 2, #sorted_list\
    \ do\n    if sorted_list[i] < min_value then\n      min_value = sorted_list[i]\n\
    \    end\n    if sorted_list[i] > max_value then\n      max_value = sorted_list[i]\n\
    \    end\n  end\n  -- Swap min and max values\n  sorted_list[#sorted_list] = max_value\n\
    \  sorted_list[#sorted_list + 1] = min_value\n  return sorted_list\nend", "  local\
    \ sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum = sorted_list[1]\n\
    \  for i = 2, #sorted_list do\n    if minimum > sorted_list[i] then\n      minimum\
    \ = sorted_list[i]\n    end\n    if maximum < sorted_list[i] then\n      maximum\
    \ = sorted_list[i]\n    end\n  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list\
    \ + 1] = maximum\n  return sorted_list\nend", "  local sorted_lst = lst\n  local\
    \ minimum = sorted_lst[1]\n  local maximum = sorted_lst[#sorted_lst]\n  for i\
    \ = 2, #sorted_lst do\n    local value = sorted_lst[i]\n    if value < minimum\
    \ then\n      minimum = value\n    elseif value > maximum then\n      maximum\
    \ = value\n    end\n  end\n  -- Swap the minimum and maximum.\n  local tmp = minimum\n\
    \  minimum = maximum\n  maximum = tmp\n  -- Sort rest of list.\n  for i = #sorted_lst,\
    \ 1, -1 do\n    local value = sorted_lst[i]\n    if value < minimum then\n   \
    \   minimum = value\n    elseif value > maximum then\n      maximum = value\n\
    \    end\n  end\n  -- Swap the minimum and maximum.\n  tmp = minimum\n  minimum\
    \ = maximum\n  maximum = tmp\n  -- Return sorted list.\n  return minimum, maximum,\
    \ sorted_lst\nend", "  local min = lst[1]\n  local max = lst[1]\n  for i = 2,\
    \ #lst do\n    if lst[i] < min then\n      min = lst[i]\n    end\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local tmp = {}\n  for i =\
    \ 1, #lst do\n    table.insert(tmp, lst[i])\n  end\n  table.sort(tmp, function(a,\
    \ b) return a < b end)\n  local new_lst = {}\n  for i = 1, #lst do\n    table.insert(new_lst,\
    \ tmp[i])\n  end\n  return new_lst\nend", "  local sorted_lst = {}\n  local minimum\
    \ = lst[1]\n  local maximum = lst[1]\n  for i = 2, #lst do\n    minimum = minimum\
    \ > lst[i] and lst[i] or minimum\n    maximum = maximum < lst[i] and lst[i] or\
    \ maximum\n  end\n  for i = 1, #lst do\n    sorted_lst[i] = minimum\n    minimum\
    \ = minimum > lst[i] and lst[i] or minimum\n    maximum = maximum < lst[i] and\
    \ lst[i] or maximum\n  end\n  sorted_lst[#sorted_lst+1] = maximum\n  return sorted_lst\n\
    end", "  local sorted_lst = lst\n  local minimum = sorted_lst[1]\n  local maximum\
    \ = sorted_lst[#sorted_lst]\n  for i = 2, #sorted_lst do\n    local value = sorted_lst[i]\n\
    \    if value < minimum then\n      minimum = value\n    elseif value > maximum\
    \ then\n      maximum = value\n    end\n  end\n  local new_lst = {}\n  for i =\
    \ 1, #sorted_lst do\n    new_lst[#new_lst + 1] = sorted_lst[i]\n  end\n  for i\
    \ = 1, #sorted_lst do\n    new_lst[#new_lst + 1] = minimum\n  end\n  for i = 1,\
    \ #sorted_lst do\n    new_lst[#new_lst + 1] = maximum\n  end\n  return new_lst\n\
    end", "  local sorted_list = lst\n  local min_value = sorted_list[1]\n  local\
    \ max_value = sorted_list[1]\n  for i = 2, #sorted_list do\n    if sorted_list[i]\
    \ < min_value then\n      min_value = sorted_list[i]\n    end\n    if sorted_list[i]\
    \ > max_value then\n      max_value = sorted_list[i]\n    end\n  end\n  sorted_list[#sorted_list+1]\
    \ = max_value\n  sorted_list[#sorted_list+1] = min_value\n  return sorted_list\n\
    end", "  local sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum\
    \ = sorted_list[1]\n  for i = 2, #sorted_list do\n    local current = sorted_list[i]\n\
    \    if current < minimum then\n      minimum = current\n    elseif current >\
    \ maximum then\n      maximum = current\n    end\n  end\n  local tmp\n  for i\
    \ = 1, #sorted_list do\n    local current = sorted_list[i]\n    if current ==\
    \ minimum then\n      tmp = minimum\n    elseif current == maximum then\n    \
    \  tmp = maximum\n    else\n      tmp = current\n    end\n    sorted_list[i] =\
    \ tmp\n  end\n  return sorted_list\nend", "  local min = lst[1]\n  local max =\
    \ lst[1]\n  for i = 2, #lst do\n    if lst[i] < min then\n      min = lst[i]\n\
    \    end\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local\
    \ tmp = {}\n  for i = 1, #lst do\n    table.insert(tmp, lst[i])\n  end\n  table.sort(tmp,\
    \ function(a, b) return a < b end)\n  local ret = {}\n  for i = 1, #tmp do\n \
    \   table.insert(ret, tmp[i])\n  end\n  return ret\nend", "  local sorted_lst\
    \ = lst\n  local min_value = sorted_lst[1]\n  local max_value = sorted_lst[#sorted_lst]\n\
    \  for i = 2, #sorted_lst do\n    if sorted_lst[i] < min_value then\n      min_value\
    \ = sorted_lst[i]\n    end\n    if sorted_lst[i] > max_value then\n      max_value\
    \ = sorted_lst[i]\n    end\n  end\n  -- Swap min and max values\n  sorted_lst[1]\
    \ = min_value\n  sorted_lst[#sorted_lst] = max_value\n  return sorted_lst\nend",
  "  local sorted_list = lst\n  local minimum = sorted_list[1]\n  local maximum =\
    \ sorted_list[1]\n  for i = 2, #sorted_list do\n    minimum = minimum > sorted_list[i]\
    \ and sorted_list[i] or minimum\n    maximum = maximum < sorted_list[i] and sorted_list[i]\
    \ or maximum\n  end\n  sorted_list[#sorted_list] = minimum\n  sorted_list[#sorted_list]\
    \ = maximum\n  return sorted_list\nend", "  local sorted_lst = {}\n  for i = 1,\
    \ #lst do\n    sorted_lst[#sorted_lst + 1] = lst[i]\n  end\n  table.sort(sorted_lst,\
    \ function(x, y)\n    if x < y then\n      return -1\n    elseif x > y then\n\
    \      return 1\n    else\n      return 0\n    end\n  end)\n  return sorted_lst\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_114_minSubArraySum
language: lua
prompt: "-- Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n-- of nums.\n-- Example\n-- minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  -- minSubArraySum([-1, -2, -3]) == -6\nlocal function minSubArraySum(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
  \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
  \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n   \
  \ lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
  \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n\
  \    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
  \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
  \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
  \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local min = math.min(nums)\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n  \
    \  if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local min = math.min(nums)\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n \
    \ end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for\
    \ i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n        minSumIndex = j\n      end\n    end\n  end\n\
    \  return minSum\nend", "  local min = math.min(unpack(nums))\n  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n     \
    \ min = sum\n    end\n  end\n  return min\nend", "  -- Base case\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n\
    \      if j == i then\n        sum = sum + nums[j]\n      else\n        sum =\
    \ sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum then\n    \
    \  minSum = sum\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if\
    \ #nums == 0 then\n    return 0\n  end", "  local min = math.inf\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\nend", "  local\
    \ min = math.inf\n  local sum = 0\n  for _, v in ipairs(nums) do\n    sum = sum\
    \ + v\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local min = math.min(nums)\n  local sum = 0\n \
    \ for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min\
    \ = sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\nend", "  local\
    \ sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum\
    \ + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n\
    \      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum =\
    \ sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  local\
    \ min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return\
    \ sum\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum\
    \ = nums[i]\n    for j = i + 1, #nums do\n      sum = sum + nums[j]\n      if\
    \ sum < minSum then\n        minSum = sum\n      end\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  for _, v in ipairs(nums) do\n    sum = sum\
    \ + v\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum\
    \ = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  -- Base\
    \ case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local currentSum = nums[i]\n\
    \    for j = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n      if\
    \ currentSum < minSum then\n        minSum = currentSum\n        minSumIndex =\
    \ j\n      end\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1,\
    \ #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum =\
    \ sum\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    local currentSum = nums[i]\n    for j = i + 1, #nums do\n      currentSum\
    \ = currentSum + nums[j]\n      if currentSum < minSum then\n        minSum =\
    \ currentSum\n      end\n    end\n  end\n  return minSum\nend", "  local sum =\
    \ 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end", "  local min = math.inf\n  local index = 0\n  local sum = 0\n  for i = 1,\
    \ #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n\
    \      index = i\n    end\n  end\n  return min\nend", "  local sum = 0\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  -- Base\
    \ case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n \
    \   sum = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(nums) do\n    sum = sum + v\n  end\n  return sum\nend", "  local\
    \ minSum = math.inf\n  for _, num in ipairs(nums) do\n    local subSum = num\n\
    \    for i = 1, #nums do\n      subSum = subSum + nums[i]\n      if subSum < minSum\
    \ then\n        minSum = subSum\n      end\n    end\n  end\n  return minSum\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n     \
    \   sum = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n \
    \     end\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSum\nend", "  local sum = 0\n  local minSum\
    \ = math.inf", "  -- Base case: if the array is empty, return 0\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  local sum = 0\n  local i = 1\n  while i <= #nums do\n\
    \    sum = sum + nums[i]\n    i = i + 1\n  end\n  return sum\nend", "  -- Base\
    \ case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local sum = 0\n  for _, num in ipairs(nums) do\n    sum = sum + num\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n  end\n  return sum\nend", "  local min = math.inf\n  local sum =\
    \ 0\n  for _, v in ipairs(nums) do\n    sum = sum + v\n    if sum < min then\n\
    \      min = sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n \
    \ return minSumIndex\nend", "  local min = math.inf\n  local sum = 0\n  for i\
    \ = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n\
    \    end\n  end\n  return min\nend", "  -- Base case\n  if #nums == 0 then\n \
    \   return 0\n  end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for\
    \ i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n        minSumIndex = j\n      end\n    end\n  end\n\
    \  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n\
    \  end", "  local sum = 0\n  local min = math.inf", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums\
    \ do\n      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n      end\n    end\n  end\n  return minSum\nend",
  "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n   \
    \ local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n   \
    \ if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n \
    \ end\n  return minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local min = math.inf\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n  end\n  return min\nend", "  local min\
    \ = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n\
    \      sum = sum + nums[j]\n    end\n    if sum < min then\n      min = sum\n\
    \    end\n  end\n  return min\nend", "  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\nend",
  "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  local min = math.inf\n  for _,\
    \ v in ipairs(nums) do\n    min = math.min(min, v)\n  end\n  return min\nend",
  "  local sum = 0\n  local min = nil\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if min == nil or sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  local min = nil\n  for i = 1,\
    \ #nums do\n    local num = nums[i]\n    if min == nil then\n      min = num\n\
    \    else\n      min = min + num\n    end\n    sum = sum + num\n  end\n  return\
    \ sum - min\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  local minSum =\
    \ math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n \
    \ for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n  \
    \  if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  -- Base case\n  if #nums == 0 then\n  \
    \  return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local currentSum = nums[i]\n   \
    \ for j = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n      if currentSum\
    \ < minSum then\n        minSum = currentSum\n        minSumIndex = j\n      end\n\
    \    end\n  end\n  return minSum\nend", "  local min = math.inf\n  local sum =\
    \ 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n \
    \     min = sum\n    end\n  end\n  return min\nend", "  local min = math.inf\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n  end\n  return min\nend", "  local min\
    \ = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n    local currentSum\
    \ = nums[i]\n    for j = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n\
    \      if currentSum < minSum then\n        minSum = currentSum\n      end\n \
    \   end\n  end\n  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n   \
    \   if j == i then\n        sum = sum + nums[j]\n      else\n        sum = sum\
    \ + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  local min = nil\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if min == nil or sum < min\
    \ then\n      min = sum\n    end\n  end\n  return min\nend", "  local min = math.min(unpack(nums))\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n  end\n  return min\nend", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n \
    \ for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for\
    \ i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n        minSumIndex = j\n      end\n    end\n  end\n\
    \  return minSumIndex\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  local min = nil\n  for i = 1,\
    \ #nums do\n    sum = sum + nums[i]\n    if min == nil or sum < min then\n   \
    \   min = sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local min\
    \ = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return\
    \ sum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ min = math.min(nums)\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  --\
    \ Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local\
    \ min = math.inf\n  local index = 0\n  for i = 1, #nums do\n    local value =\
    \ nums[i]\n    index = i\n    if value < min then\n      min = value\n    end\n\
    \  end\n  local sum = 0\n  while index > 1 do\n    sum = sum + nums[index - 1]\n\
    \    index = index - 1\n  end\n  return sum + min\nend", "  -- Base case\n  if\
    \ #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i +\
    \ 1, #nums do\n      currentSum = currentSum + nums[j]\n      if currentSum <\
    \ minSum then\n        minSum = currentSum\n        minSumIndex = j\n      end\n\
    \    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n \
    \ end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local min\
    \ = math.min(unpack(nums))\n  local sum = 0\n  for _, v in ipairs(nums) do\n \
    \   sum = sum + v\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  local min = math.inf\n  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n\
    \      min = sum\n    end\n  end\n  return min\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  local min = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = nums[i]\n    for j = i + 1, #nums do\n      sum = sum +\
    \ nums[j]\n      if sum < min then\n        min = sum\n      end\n    end\n  end\n\
    \  return min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  for _, v in ipairs(nums)\
    \ do\n    sum = sum + v\n  end\n  return sum\nend", "  local min = math.min(unpack(nums))\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n  end\n  return min\nend", "  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  local min = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n  end\n  return sum\nend", "  local min = math.min(nums)\n  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n\
    \      min = sum\n    end\n  end\n  return min\nend", "  local min = math.inf\n\
    \  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ min then\n      min = sum\n    end\n  end\n  return min\nend", "  local sum\
    \ = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  local sum = 0\n  local min = nil\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if min == nil or sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum\
    \ = sum\n    end\n  end\n  return minSum\nend", "  local sum = 0\n  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local min = math.inf\n\
    \  local sum = 0\n  for _, v in ipairs(nums) do\n    sum = sum + v\n    if sum\
    \ < min then\n      min = sum\n    end\n  end\n  return min\nend", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j\
    \ = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n      if currentSum\
    \ < minSum then\n        minSum = currentSum\n      end\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local min = math.min(unpack(nums))\n  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n\
    \      min = sum\n    end\n  end\n  return min\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base\
    \ case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local min = math.inf\n  for i\
    \ = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

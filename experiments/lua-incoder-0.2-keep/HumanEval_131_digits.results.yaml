language: lua
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppcvl9gyl.lua:19:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmppcvl9gyl.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local nDigits = math.floor(n/10)\n\
    \  if nDigits == 0 then\n    return 0\n  else\n    return (n%10) * (math.floor(n/10))\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoaq4jh8p.lua:19:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpoaq4jh8p.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 0 then return\
    \ 0 end\n  local product = 1\n  for i = 1, n do\n    if n % 2 == 1 then\n    \
    \  product = product * i\n    end\n    n = n / 2\n  end\n  return product\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
    \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n\
    \    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9elil6hd.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp9elil6hd.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvimbw9ja.lua:20:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpvimbw9ja.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  local i = 1\n  while n > 0 do\n    product = product * i % 10\n    i = i +\
    \ 1\n    n = n / 10\n  end\n  return product\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = digits\n    lu.assertEquals(candidate(5),\
    \ 5)\n    lu.assertEquals(candidate(54), 5)\n    lu.assertEquals(candidate(120),\
    \ 1)\n    lu.assertEquals(candidate(5014), 5)\n    lu.assertEquals(candidate(98765),\
    \ 315)\n    lu.assertEquals(candidate(5576543), 2625)\n    lu.assertEquals(candidate(2468),\
    \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfx4uz98.lua:21:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpsfx4uz98.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 10 then\n  \
    \  return n\n  else\n    local digits = math.floor(n/10)\n    local remainder\
    \ = n - 10*digits\n    return digits*10 + digits(remainder)\n  end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
    \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n\
    \    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsz193t6y.lua:13:\
    \ attempt to call a number value (local 'digits')\nstack traceback:\n\t/tmp/tmpsz193t6y.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpsz193t6y.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n == 0 then\n  \
    \  return 0\n  end\n  local digit = 1\n  local product = 1\n  while n > 0 do\n\
    \    digit = n % 10\n    product = product * digit\n    n = n / 10\n  end\n  return\
    \ product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqd28wat0.lua:24:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpqd28wat0.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47po56mz.lua:11:\
    \ attempt to call a nil value (field 'mod')\nstack traceback:\n\t/tmp/tmp47po56mz.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp47po56mz.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local ndigits = 0\n\
    \  while n > 0 do\n    local digit = n % 10\n    n = math.floor(n / 10)\n    ndigits\
    \ = ndigits + digit\n  end\n  return ndigits\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = digits\n    lu.assertEquals(candidate(5),\
    \ 5)\n    lu.assertEquals(candidate(54), 5)\n    lu.assertEquals(candidate(120),\
    \ 1)\n    lu.assertEquals(candidate(5014), 5)\n    lu.assertEquals(candidate(98765),\
    \ 315)\n    lu.assertEquals(candidate(5576543), 2625)\n    lu.assertEquals(candidate(2468),\
    \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmc4mpd_b.lua:21:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpmc4mpd_b.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 0 then\n   \
    \ return 0\n  end\n  local digits = math.floor(n)\n  if digits == 0 then\n   \
    \ return 0\n  end\n  local product = 1\n  local remainder = n - digits\n  while\
    \ remainder > 0 do\n    product = product * 2\n    remainder = remainder - 2\n\
    \  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_jlohdc.lua:27:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpb_jlohdc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47po56mz.lua:11:\
    \ attempt to call a nil value (field 'mod')\nstack traceback:\n\t/tmp/tmp47po56mz.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp47po56mz.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 0 then\n   \
    \ return 0\n  end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n  local product\
    \ = 1\n  while n2 > 0 do\n    product = product * 10 + n2 % 2\n    n2 = n2 //\
    \ 2\n  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wry4pd3.lua:24:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp0wry4pd3.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 0 then\n   \
    \ return 0\n  elseif n < 10 then\n    return n\n  else\n    local digits = math.floor(n/10)\n\
    \    local remainder = n - 10*digits\n    return digits*10 + digits(remainder)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0du19c8i.lua:15:\
    \ attempt to call a number value (local 'digits')\nstack traceback:\n\t/tmp/tmp0du19c8i.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp0du19c8i.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local nDigits = math.floor(math.log10(n))\n\
    \  if nDigits == 0 then\n    return 0\n  else\n    local nDigits = nDigits - 1\n\
    \    local product = 1\n    for i = 1, nDigits do\n      product = product * math.floor(n/10)\
    \ % 10\n      n = math.floor(n/10)\n    end\n    return product\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
    \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n\
    \    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr7wg7ucz.lua:25:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpr7wg7ucz.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  local digit\n  for digit = 1, n do\n    if n % 2 == 1 then\n      product =\
    \ product * digit\n    end\n    n = n / 2\n  end\n  return product\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
    \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n\
    \    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpue9u_nch.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpue9u_nch.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n == 0 then return\
    \ 0 end\n  local digit = 1\n  while n > 0 do\n    digit = n * digit\n    n = math.floor(n/10)\n\
    \  end\n  return digit\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvrrspu91.lua:21:\
    \ expected: 5, actual: 270\nstack traceback:\n\t/tmp/tmpvrrspu91.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  if n < 0 then\n   \
    \ return 0\n  end\n  local digit = 1\n  while n > 0 do\n    digit = n * digit\n\
    \    n = n / 10\n  end\n  return digit\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digits\n    lu.assertEquals(candidate(5),\
    \ 5)\n    lu.assertEquals(candidate(54), 5)\n    lu.assertEquals(candidate(120),\
    \ 1)\n    lu.assertEquals(candidate(5014), 5)\n    lu.assertEquals(candidate(98765),\
    \ 315)\n    lu.assertEquals(candidate(5576543), 2625)\n    lu.assertEquals(candidate(2468),\
    \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3teumlgs.lua:22:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp3teumlgs.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = n % 10\n\
    \  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpovz5x6p1.lua:19:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpovz5x6p1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local digits = 0\n\
    \  while n > 0 do\n    digits = digits * 10 + n % 10\n    n = n / 10\n  end\n\
    \  return digits\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk8x8fp8u.lua:19:\
    \ expected: 5, actual: #Inf\nstack traceback:\n\t/tmp/tmpk8x8fp8u.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a positive integer n, return the product of the odd digits.\n\
    -- Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
    \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digits\n    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54),\
    \ 5)\n    lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014),\
    \ 5)\n    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
    \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47po56mz.lua:11:\
    \ attempt to call a nil value (field 'mod')\nstack traceback:\n\t/tmp/tmp47po56mz.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp47po56mz.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"

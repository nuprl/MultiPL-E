language: lua
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpim5jfxgb.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpim5jfxgb.lua:8: in local 'candidate'\n\t/tmp/tmpim5jfxgb.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if not distinct_characters[char] then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcb87lwv3.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpcb87lwv3.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe9xb8ppk.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpe9xb8ppk.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxl9n39uk.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpxl9n39uk.lua:8: in local 'candidate'\n\t/tmp/tmpxl9n39uk.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in ipairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdnqmx4i5.lua:18:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpdnqmx4i5.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm16j1swa.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpm16j1swa.lua:8: in local 'candidate'\n\t/tmp/tmpm16j1swa.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe9xb8ppk.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpe9xb8ppk.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpud3d0ngz.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpud3d0ngz.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = 0\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if string.find(string.lower(string), char) ~= nil then\n      distinct_characters\
    \ = distinct_characters + 1\n    end\n  end\n  return distinct_characters\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyp9a2lh9.lua:21:\
    \ expected: 5, actual: 4\nstack traceback:\n\t/tmp/tmpyp9a2lh9.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, char in string.gmatch('([A-Za-z]+)') do\n   \
    \     count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphv6ozkr6.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmphv6ozkr6.lua:8: in local 'candidate'\n\t/tmp/tmphv6ozkr6.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, c in string.gmatch(\"[%a]+\") do\n        count\
    \ = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnzm6awlj.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpnzm6awlj.lua:8: in local 'candidate'\n\t/tmp/tmpnzm6awlj.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]+\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd06pc65p.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpd06pc65p.lua:8: in local 'candidate'\n\t/tmp/tmpd06pc65p.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ydr6k_9.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp9ydr6k_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string, i, i) == string.sub(string, i, i)) * (#string.sub(string,\
    \ i, i) + 1)\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsnwk5wlu.lua:10:\
    \ attempt to perform arithmetic on a boolean value\nstack traceback:\n\t/tmp/tmpsnwk5wlu.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpsnwk5wlu.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ydr6k_9.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp9ydr6k_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string,i,i) == string.sub(string,i,i))\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4x2ul9j2.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp4x2ul9j2.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm16j1swa.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpm16j1swa.lua:8: in local 'candidate'\n\t/tmp/tmpm16j1swa.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if not distinct_characters[char] then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcb87lwv3.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpcb87lwv3.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm16j1swa.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpm16j1swa.lua:8: in local 'candidate'\n\t/tmp/tmpm16j1swa.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ydr6k_9.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp9ydr6k_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"

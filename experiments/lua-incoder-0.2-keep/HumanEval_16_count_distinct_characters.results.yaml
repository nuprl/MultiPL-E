name: HumanEval_16_count_distinct_characters
language: lua
results:
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps14obtlu.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmps14obtlu.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq_d_qwm3.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpq_d_qwm3.lua:8: in function 'candidate'\n\t/tmp/tmpq_d_qwm3.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(string.sub(char,\
    \ 1, 1))) then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd60_0ew3.lua:22:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpd60_0ew3.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7829eykh.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp7829eykh.lua:8: in function 'candidate'\n\t/tmp/tmp7829eykh.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    count = count + count_distinct_characters(char)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpme8e8q7s.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpme8e8q7s.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpme8e8q7s.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpme8e8q7s.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpme8e8q7s.lua:11: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.287 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_helper(string,\
    \ i)\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpye4zmjmf.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpye4zmjmf.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for c in string.gmatch(string, \"%a\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5o52hu4t.lua:19:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp5o52hu4t.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for c in string.gmatch(string, \"%a\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph_cm3mwn.lua:19:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmph_cm3mwn.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm5nf2s7s.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpm5nf2s7s.lua:8: in function 'candidate'\n\t/tmp/tmpm5nf2s7s.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl89ugt69.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpl89ugt69.lua:8: in function 'candidate'\n\t/tmp/tmpl89ugt69.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then count = count - 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6rszhk9.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpn6rszhk9.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z]+)') do\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvi68touf.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpvi68touf.lua:8: in function 'candidate'\n\t/tmp/tmpvi68touf.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('(.-)') do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplx8beaj0.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmplx8beaj0.lua:8: in function 'candidate'\n\t/tmp/tmplx8beaj0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in pairs(string) do\n  \
    \  local lowercase = character:lower()\n    local lowercase_index = string.find(lowercase,\
    \ \"abcdefghijklmnopqrstuvwxyz\")\n    local uppercase_index = string.find(lowercase,\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    local digits_index = string.find(lowercase,\
    \ \"0123456789\")\n    local lowercase_index = lowercase_index or 0\n    local\
    \ uppercase_index = uppercase_index or 0\n    local digits_index = digits_index\
    \ or 0\n    distinct_characters[lowercase_index] = distinct_characters[lowercase_index]\
    \ or 0\n    distinct_characters[uppercase_index] = distinct_characters[uppercase_index]\
    \ or 0\n    distinct_characters[digits_index] = distinct_characters[digits_index]\
    \ or 0\n    distinct_characters[lowercase_index + 1] = distinct_characters[lowercase_index\
    \ + 1] or 0\n    distinct_characters[uppercase_index + 1] = distinct_characters[uppercase_index\
    \ + 1] or 0\n    distinct_characters[digits_index + 1] = distinct_characters[digits_index\
    \ + 1] or 0\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjwiplkqg.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmpjwiplkqg.lua:8: in function 'candidate'\n\t/tmp/tmpjwiplkqg.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, character in string:gmatch(\"[%a]+\") do\n  \
    \      count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp67zra_19.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp67zra_19.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(char))\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpne97tub5.lua:22:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpne97tub5.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch'([^%s]+)' do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptiz2b2zy.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmptiz2b2zy.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z])') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpri1c37rh.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpri1c37rh.lua:8: in function 'candidate'\n\t/tmp/tmpri1c37rh.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count - 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_w87i0ei.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp_w87i0ei.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local character\
    \ = string.sub(i, i)\n    if character ~= character then\n      distinct_characters[character]\
    \ = true\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5grfhm5g.lua:21:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp5grfhm5g.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string, \"^[\" .. char .. \"]+$\"\
    ) then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8yhyytmd.lua:11:\
    \ malformed pattern (missing ']')\nstack traceback:\n\t/tmp/tmp8yhyytmd.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp8yhyytmd.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    count = count + count_distinct_characters(char)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmxhjg41e.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpmxhjg41e.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpmxhjg41e.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpmxhjg41e.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpmxhjg41e.lua:11: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.270 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4ddkiufl.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp4ddkiufl.lua:8: in function 'candidate'\n\t/tmp/tmp4ddkiufl.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for _, char in string.gmatch('([A-Za-z])') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6ly3bq6.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpn6ly3bq6.lua:8: in function 'candidate'\n\t/tmp/tmpn6ly3bq6.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_internal(string.sub(string,i,i))\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6516q5_a.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp6516q5_a.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 1\n    for _, char in string.gmatch('(.)') do\n        if string.match(string.lower(char),\
    \ string.lower(char)) then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3yv_uwg.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpm3yv_uwg.lua:8: in function 'candidate'\n\t/tmp/tmpm3yv_uwg.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpil7iuphh.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpil7iuphh.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = 0\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if string.find(string.lower(string), char) ~= nil then\n      distinct_characters\
    \ = distinct_characters + 1\n    end\n  end\n  return distinct_characters\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdp6404xc.lua:21:\
    \ expected: 5, actual: 4\nstack traceback:\n\t/tmp/tmpdp6404xc.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z]+)') do\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl4rvyl6m.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpl4rvyl6m.lua:8: in function 'candidate'\n\t/tmp/tmpl4rvyl6m.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.001 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, character in string.gmatch(\"[%a]+\") do\n  \
    \      count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbhfoy2ks.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpbhfoy2ks.lua:8: in function 'candidate'\n\t/tmp/tmpbhfoy2ks.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ == string[i] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ff5yg9.lua:21:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpp8ff5yg9.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z]+)') do\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcrq2w1_r.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpcrq2w1_r.lua:8: in function 'candidate'\n\t/tmp/tmpcrq2w1_r.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptzbfzwg9.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmptzbfzwg9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i) ~= string.sub(i, 1, i) then\n      count = count - 1\n    end\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsvoqs4h6.lua:21:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpsvoqs4h6.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count - 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6xii3g5i.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp6xii3g5i.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([%aA%a%zZ%Z])') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuqdtxc3b.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpuqdtxc3b.lua:8: in function 'candidate'\n\t/tmp/tmpuqdtxc3b.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in ipairs(string) do\n \
    \   local lowercase = character:lower()\n    if not distinct_characters[lowercase]\
    \ then\n      distinct_characters[lowercase] = 1\n    else\n      distinct_characters[lowercase]\
    \ = distinct_characters[lowercase] + 1\n    end\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmputd0n0lv.lua:8:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmputd0n0lv.lua:8: in function 'candidate'\n\t/tmp/tmputd0n0lv.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch(\"[%a]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0zr38yyj.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp0zr38yyj.lua:8: in function 'candidate'\n\t/tmp/tmp0zr38yyj.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiprq8whv.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpiprq8whv.lua:8: in function 'candidate'\n\t/tmp/tmpiprq8whv.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpomd5xcpv.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpomd5xcpv.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local counts = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    counts[char] = counts[char] + 1 or 1\n  end\n  return #counts\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpet4vz2or.lua:10:\
    \ attempt to perform arithmetic on field '?' (a nil value)\nstack traceback:\n\
    \t/tmp/tmpet4vz2or.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbbb8bd3a.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpbbb8bd3a.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if not distinct_characters[char] then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvcpkf29x.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpvcpkf29x.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, character in string:gmatch(\"[%a]+\") do\n  \
    \      count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvnvnqd8_.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpvnvnqd8_.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp43oundet.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp43oundet.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(string, i, i) then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr9vzfdl3.lua:21:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpr9vzfdl3.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1vh30k26.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp1vh30k26.lua:8: in function 'candidate'\n\t/tmp/tmp1vh30k26.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9w6770j8.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp9w6770j8.lua:8: in function 'candidate'\n\t/tmp/tmp9w6770j8.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  local last_char = ''\n  for char in string:gmatch'[%a]+'\
    \ do\n    if last_char == char then\n      count = count + 1\n    else\n     \
    \ count = count + 1\n      last_char = char\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdtmrlrhs.lua:23:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpdtmrlrhs.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string, i, i) == string.sub(string, i, i)) * (#string.sub(string,\
    \ i, i) + 1)\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcgjio27z.lua:10:\
    \ attempt to perform arithmetic on a boolean value\nstack traceback:\n\t/tmp/tmpcgjio27z.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z])') do\n   \
    \ count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplh_gru2k.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmplh_gru2k.lua:8: in function 'candidate'\n\t/tmp/tmplh_gru2k.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjtix2bx8.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpjtix2bx8.lua:8: in function 'candidate'\n\t/tmp/tmpjtix2bx8.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprgq7rp3v.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmprgq7rp3v.lua:8: in function 'candidate'\n\t/tmp/tmprgq7rp3v.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch(\"[%w]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcmuhprpc.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpcmuhprpc.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_internal(string:sub(i,\
    \ i))\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt4hs1kcm.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpt4hs1kcm.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + count_distinct_characters(string.sub(string,i,i))\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_pzu2skc.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmp_pzu2skc.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmp_pzu2skc.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmp_pzu2skc.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmp_pzu2skc.lua:10: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.239 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp38cnlqpi.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp38cnlqpi.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for c in string.gmatch(string, \"%a\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpib84jvit.lua:19:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpib84jvit.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbah_7nc9.lua:19:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpbah_7nc9.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphrrq215_.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmphrrq215_.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5blnaooz.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp5blnaooz.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local distinct_characters = {}\n    for _, character in pairs(string) do\n\
    \        local lowercase = character:lower()\n        if lowercase:find(lowercase)\
    \ == 0 then\n            table.insert(distinct_characters, lowercase)\n      \
    \  end\n    end\n    return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6x6anshj.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmp6x6anshj.lua:8: in function 'candidate'\n\t/tmp/tmp6x6anshj.lua:20: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpob4icx6d.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpob4icx6d.lua:8: in function 'candidate'\n\t/tmp/tmpob4icx6d.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local character\
    \ = string.sub(i, i)\n    local lowercase = character:lower()\n    if not distinct_characters[lowercase]\
    \ then\n      distinct_characters[lowercase] = 1\n    else\n      distinct_characters[lowercase]\
    \ = distinct_characters[lowercase] + 1\n    end\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd203s_w3.lua:24:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpd203s_w3.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcex7m22x.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpcex7m22x.lua:8: in function 'candidate'\n\t/tmp/tmpcex7m22x.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpur_rug35.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpur_rug35.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+) *') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_j99yr4.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpp_j99yr4.lua:8: in function 'candidate'\n\t/tmp/tmpp_j99yr4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpshwwh5wz.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpshwwh5wz.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then break end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfkxl8i9m.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpfkxl8i9m.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbs48w1cy.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpbs48w1cy.lua:8: in function 'candidate'\n\t/tmp/tmpbs48w1cy.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('(.)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ioztlty.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp6ioztlty.lua:8: in function 'candidate'\n\t/tmp/tmp6ioztlty.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('(.-)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1nswzrb6.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp1nswzrb6.lua:8: in function 'candidate'\n\t/tmp/tmp1nswzrb6.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + count_distinct_characters_internal(string.sub(string,i,i))\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5hi9tlsd.lua:10:\
    \ attempt to call global 'count_distinct_characters_internal' (a nil value)\n\
    stack traceback:\n\t/tmp/tmp5hi9tlsd.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string, i, i) == string.sub(string, i, i)) * (string.sub(string,\
    \ i, i) + 1)\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfylqhril.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpfylqhril.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkn7srytg.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpkn7srytg.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('(.-)') do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt9ceeumc.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpt9ceeumc.lua:8: in function 'candidate'\n\t/tmp/tmpt9ceeumc.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in pairs(string) do\n    if character ~=\
    \ character then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnoughuxm.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmpnoughuxm.lua:8: in function 'candidate'\n\t/tmp/tmpnoughuxm.lua:19: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if distinct_characters[char] == nil then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2o3ge9vz.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp2o3ge9vz.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp97sllavq.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp97sllavq.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaxst215c.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpaxst215c.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2mlcp7pn.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp2mlcp7pn.lua:8: in function 'candidate'\n\t/tmp/tmp2mlcp7pn.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('(.)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxdber9oe.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpxdber9oe.lua:8: in function 'candidate'\n\t/tmp/tmpxdber9oe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolv3rt8k.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpolv3rt8k.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for i = 1, #string do\n        count = count + 1\n \
    \       if string[i] ~= string.lower(string[i]) or string[i] ~= string.upper(string[i])\
    \ then\n            count = count - 1\n        end\n    end\n    return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpee0qy3d2.lua:10:\
    \ bad argument #1 to 'lower' (string expected, got nil)\nstack traceback:\n\t\
    /tmp/tmpee0qy3d2.lua:10: in function 'candidate'\n\t/tmp/tmpee0qy3d2.lua:21: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.001 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_helper(string,\
    \ i)\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8gdreksq.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp8gdreksq.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + string.sub(string,\
    \ i, i):lower()\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuq2oe8ug.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpuq2oe8ug.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  local last_char = ''\n  for char in string.gmatch(string,\
    \ '%a') do\n    if last_char == char then\n      count = count + 1\n    else\n\
    \      last_char = char\n      count = 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4uk8oz3x.lua:23:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp4uk8oz3x.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 1\n    for _, char in string.gmatch('([A-Za-z]+)') do\n   \
    \     count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2l8zjr8f.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp2l8zjr8f.lua:8: in function 'candidate'\n\t/tmp/tmp2l8zjr8f.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphbkfm1tf.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmphbkfm1tf.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    count = count + count_distinct_characters(char)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7mkp6dst.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmp7mkp6dst.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmp7mkp6dst.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmp7mkp6dst.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmp7mkp6dst.lua:11: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.243 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z])') do\n   \
    \ count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi0pt_zt9.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpi0pt_zt9.lua:8: in function 'candidate'\n\t/tmp/tmpi0pt_zt9.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in string.gmatch(\"[%a%A]\"\
    ) do\n    table.insert(distinct_characters, character)\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmjfmgers.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpmjfmgers.lua:8: in function 'candidate'\n\t/tmp/tmpmjfmgers.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + count_distinct_characters(string.sub(string,i,i))\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe2jfpay8.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpe2jfpay8.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmpe2jfpay8.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmpe2jfpay8.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpe2jfpay8.lua:10: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.250 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string, char) then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1ux8_0o4.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp1ux8_0o4.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcsp94hky.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpcsp94hky.lua:8: in function 'candidate'\n\t/tmp/tmpcsp94hky.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z]+)') do\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpys7f8t65.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpys7f8t65.lua:8: in function 'candidate'\n\t/tmp/tmpys7f8t65.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in ipairs(string) do\n \
    \   local lowercase = character:lower()\n    if not distinct_characters[lowercase]\
    \ then\n      distinct_characters[lowercase] = 1\n    else\n      distinct_characters[lowercase]\
    \ = distinct_characters[lowercase] + 1\n    end\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpco9pafcp.lua:8:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpco9pafcp.lua:8: in function 'candidate'\n\t/tmp/tmpco9pafcp.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + count_distinct_characters(string.sub(string,i,i))\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp40unxwg5.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp40unxwg5.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(string.sub(string,\
    \ 1, i)) ~= nil then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp8r5kvwc2.lua:11: ')' expected near 'then'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    count = count + count_distinct_characters(char)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfz33kf88.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpfz33kf88.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpfz33kf88.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpfz33kf88.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpfz33kf88.lua:11: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.242 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in string.gmatch('(.)')\
    \ do\n    table.insert(distinct_characters, character)\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0f20ebs3.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp0f20ebs3.lua:8: in function 'candidate'\n\t/tmp/tmp0f20ebs3.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch'(.)' do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp37kvs_y5.lua:19:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp37kvs_y5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, character in string.gmatch('([A-Za-z])') do\n\
    \        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpopjjw5du.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpopjjw5du.lua:8: in function 'candidate'\n\t/tmp/tmpopjjw5du.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z])') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpypylkvy7.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpypylkvy7.lua:8: in function 'candidate'\n\t/tmp/tmpypylkvy7.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z])') do\n   \
    \ count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcvti7oqz.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpcvti7oqz.lua:8: in function 'candidate'\n\t/tmp/tmpcvti7oqz.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if distinct_characters[char] == nil then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zv686jl.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp8zv686jl.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2457f0h2.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp2457f0h2.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch(\"[%a]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgbyldl_x.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpgbyldl_x.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string, i, i) == string.sub(string, i, i) .. string.sub(string,\
    \ i, i))\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplb3swdch.lua:10:\
    \ attempt to perform arithmetic on a boolean value\nstack traceback:\n\t/tmp/tmplb3swdch.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsof6fjsr.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpsof6fjsr.lua:8: in function 'candidate'\n\t/tmp/tmpsof6fjsr.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpenqfmqml.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpenqfmqml.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpznlz06_e.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpznlz06_e.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string, \"^[%a]\", 1, true) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6aeiz1fu.lua:23:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp6aeiz1fu.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z])') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp968iz977.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp968iz977.lua:8: in function 'candidate'\n\t/tmp/tmp968iz977.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count - 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ab9qb15.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp_ab9qb15.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then count = count - 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpele5j9dp.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpele5j9dp.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local counts = {}\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    counts[char]\
    \ = counts[char] or 0\n    counts[char] = counts[char] + 1\n  end\n  return #counts\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgscxf89n.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpgscxf89n.lua:8: in function 'candidate'\n\t/tmp/tmpgscxf89n.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + count_distinct_characters(string.sub(string,i,i))\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw554uqjn.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpw554uqjn.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmpw554uqjn.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10: in function 'count_distinct_characters'\n\
    \t/tmp/tmpw554uqjn.lua:10: in function 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpw554uqjn.lua:10: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.249 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('(.)') do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqbbg_xce.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpqbbg_xce.lua:8: in function 'candidate'\n\t/tmp/tmpqbbg_xce.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph3prp30a.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmph3prp30a.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmxhs19iy.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpmxhs19iy.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then break end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg69y4ffa.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpg69y4ffa.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_internal(string.sub(string,i,i))\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qbduhqa.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp2qbduhqa.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0hicwzc.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpw0hicwzc.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1s89w46l.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp1s89w46l.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch(\"[%a]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_zj3w0mf.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp_zj3w0mf.lua:8: in function 'candidate'\n\t/tmp/tmp_zj3w0mf.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local counts = {}\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if counts[char] == nil then\n            counts[char] = 1\n    \
    \    else\n            counts[char] = counts[char] + 1\n        end\n    end\n\
    \    return #counts\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxua86stc.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpxua86stc.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvpyh7cto.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpvpyh7cto.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch(\"[%a]\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphv634txp.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmphv634txp.lua:8: in function 'candidate'\n\t/tmp/tmphv634txp.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local counts = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if counts[char] == nil then\n      counts[char] = 1\n    else\n    \
    \  counts[char] = counts[char] + 1\n    end\n  end\n  return #counts\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7tje6452.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp7tje6452.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]+\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdf_63uh0.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpdf_63uh0.lua:8: in function 'candidate'\n\t/tmp/tmpdf_63uh0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for _, character in string.gmatch('([A-Za-z])') do\n   \
    \ count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpta7wgmcy.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpta7wgmcy.lua:8: in function 'candidate'\n\t/tmp/tmpta7wgmcy.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr9f33wir.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpr9f33wir.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string[i] and string[i]:upper() == string[i]):byte()\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvbi0x1ng.lua:10:\
    \ attempt to index a nil value\nstack traceback:\n\t/tmp/tmpvbi0x1ng.lua:19: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z])') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4o56x50s.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp4o56x50s.lua:8: in function 'candidate'\n\t/tmp/tmp4o56x50s.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in ipairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6sc4n15a.lua:8:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp6sc4n15a.lua:8: in function 'candidate'\n\t/tmp/tmp6sc4n15a.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_internal(string:sub(i,\
    \ i))\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl2lqgler.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpl2lqgler.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local count = 0\n    for _, char in string.gmatch(\"[%a]\", \"%a\") do\n\
    \        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph21qm2bq.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmph21qm2bq.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local character\
    \ = string.sub(i, i)\n    local lowercase = character:lower()\n    if lowercase:find(lowercase)\
    \ == 0 then\n      table.insert(distinct_characters, lowercase)\n    end\n  end\n\
    \  return #distinct_characters\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsymd70vq.lua:22:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpsymd70vq.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpezdj0pp7.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpezdj0pp7.lua:8: in function 'candidate'\n\t/tmp/tmpezdj0pp7.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpig2fx1vy.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpig2fx1vy.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4m25sm67.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp4m25sm67.lua:8: in function 'candidate'\n\t/tmp/tmp4m25sm67.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]+\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvlzwaamm.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpvlzwaamm.lua:8: in function 'candidate'\n\t/tmp/tmpvlzwaamm.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_distinct_characters\n    lu.assertEquals(candidate(''), 0)\n\
    \    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4veriilt.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp4veriilt.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8n6bs2zj.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmp8n6bs2zj.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if distinct_characters[char] == nil then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ef7gm5g.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp5ef7gm5g.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    count = count + count_distinct_characters(char)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpavsvo3w1.lua:10:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpavsvo3w1.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpavsvo3w1.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11: in function 'count_distinct_characters'\n\
    \t/tmp/tmpavsvo3w1.lua:11: in function 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11:\
    \ in function 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11: in function\
    \ 'count_distinct_characters'\n\t/tmp/tmpavsvo3w1.lua:11: in function 'count_distinct_characters'\n\
    \t...\n\nRan 1 tests in 0.233 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z]+)(.+?)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu79xhcdf.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpu79xhcdf.lua:8: in function 'candidate'\n\t/tmp/tmpu79xhcdf.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local counts = {}\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if counts[char] == nil then\n            counts[char] = 1\n    \
    \    else\n            counts[char] = counts[char] + 1\n        end\n    end\n\
    \    return #counts\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3lw47liu.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp3lw47liu.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4voqj5nc.lua:19:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp4voqj5nc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local counts = {}\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if counts[char] == nil then\n            counts[char] = 1\n    \
    \    else\n            counts[char] = counts[char] + 1\n        end\n    end\n\
    \    return #counts\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9dmc180p.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmp9dmc180p.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpza7zybp6.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpza7zybp6.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string, \"^\" .. char .. \"$\")\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf91ai1i4.lua:23:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpf91ai1i4.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for c in string.gmatch(string, \"%a\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbfx2izvk.lua:19:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpbfx2izvk.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(string,\
    \ i, i) then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp07he95y8.lua:19:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp07he95y8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(string, i, i) then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfjp99zcj.lua:21:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpfjp99zcj.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, char in string.gmatch('([A-Za-z]+)') do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl_cq_1gz.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpl_cq_1gz.lua:8: in function 'candidate'\n\t/tmp/tmpl_cq_1gz.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in pairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7pcmdz82.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmp7pcmdz82.lua:8: in function 'candidate'\n\t/tmp/tmp7pcmdz82.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then count = count - 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfuun9mbo.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpfuun9mbo.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch(\"[%a]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3v32qr70.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp3v32qr70.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z]+)') do\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfa6h976o.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpfa6h976o.lua:8: in function 'candidate'\n\t/tmp/tmpfa6h976o.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    count\
    \ = count + (string.sub(string, i, i) == string.sub(string, i, i) and 1 or 0)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxspu_i5.lua:19:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpoxspu_i5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z])') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuj0yjqs5.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpuj0yjqs5.lua:8: in function 'candidate'\n\t/tmp/tmpuj0yjqs5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + count_distinct_characters_internal(string:sub(i,\
    \ i))\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps_odjxry.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmps_odjxry.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count - 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpacg8flu_.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpacg8flu_.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string, \"^\" .. char .. \"$\")\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxma99mj0.lua:23:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpxma99mj0.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count - 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_f0b8gs_.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp_f0b8gs_.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjyiu0pky.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpjyiu0pky.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3x25x0_7.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp3x25x0_7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then count = count - 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc2_26niv.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpc2_26niv.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in pairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnfxho5uw.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmpnfxho5uw.lua:8: in function 'candidate'\n\t/tmp/tmpnfxho5uw.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  local last_char = ''\n  for char in string:gmatch'([^%s]+)'\
    \ do\n    if last_char ~= char then\n      count = count + 1\n    end\n    last_char\
    \ = char\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0d6anh03.lua:21:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp0d6anh03.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfaojvy0g.lua:22:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpfaojvy0g.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb87m404.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpsb87m404.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then count = count - 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeghu6sfy.lua:20:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmpeghu6sfy.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in pairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ou67jja.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmp9ou67jja.lua:8: in function 'candidate'\n\t/tmp/tmp9ou67jja.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch('([A-Za-z])') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1f1i2kye.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp1f1i2kye.lua:8: in function 'candidate'\n\t/tmp/tmp1f1i2kye.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string[i - 1] then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1q3s6o9m.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp1q3s6o9m.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcnet_2kp.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpcnet_2kp.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptn4jbrxi.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmptn4jbrxi.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('(.)') do\n    count =\
    \ count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsnnrt2_h.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpsnnrt2_h.lua:8: in function 'candidate'\n\t/tmp/tmpsnnrt2_h.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(char))\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnryj2iuf.lua:22:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpnryj2iuf.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(string.sub(char,\
    \ 1, 1))) == nil then\n      count = count - 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjvpv1ww.lua:23:\
    \ expected: 5, actual: 13\nstack traceback:\n\t/tmp/tmptjvpv1ww.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplrzu53q7.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmplrzu53q7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ ~= string.lower(string[i]) or string[i] ~= string.upper(string[i]) then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeh1ogosb.lua:10:\
    \ bad argument #1 to 'lower' (string expected, got nil)\nstack traceback:\n\t\
    /tmp/tmpeh1ogosb.lua:10: in function 'candidate'\n\t/tmp/tmpeh1ogosb.lua:21: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbh1g7tsg.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpbh1g7tsg.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in pairs(string) do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63udlqki.lua:8:\
    \ bad argument #1 to 'pairs' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmp63udlqki.lua:8: in function 'candidate'\n\t/tmp/tmp63udlqki.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 1\n  for i = 1, #string do\n    count = count + string.sub(string,\
    \ i, i):len()\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8m61ekqr.lua:17:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp8m61ekqr.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \    local counts = {}\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if counts[char] == nil then\n            counts[char] = 1\n    \
    \    else\n            counts[char] = counts[char] + 1\n        end\n    end\n\
    \    return #counts\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnmlyk7yd.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpnmlyk7yd.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string:gmatch(\"[%a]+\") do\n    count\
    \ = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghoys_jr.lua:18:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmpghoys_jr.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local character\
    \ = string.sub(i, i)\n    if not distinct_characters[character] then\n      distinct_characters[character]\
    \ = 1\n    else\n      distinct_characters[character] = distinct_characters[character]\
    \ + 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcrdlssej.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpcrdlssej.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, character in string.gmatch('([A-Za-z])') do\n   \
    \ count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbuqp43ds.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpbuqp43ds.lua:8: in function 'candidate'\n\t/tmp/tmpbuqp43ds.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk5w1l7hh.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmpk5w1l7hh.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(string), char) ~= nil\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3icuzv3g.lua:22:\
    \ expected: 5, actual: 9\nstack traceback:\n\t/tmp/tmp3icuzv3g.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]+\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1od8z25e.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp1od8z25e.lua:8: in function 'candidate'\n\t/tmp/tmp1od8z25e.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = 0\n  for _, character in string.gmatch(\"[%a]\"\
    ) do\n    distinct_characters = distinct_characters + 1\n  end\n  return distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe7krij89.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpe7krij89.lua:8: in function 'candidate'\n\t/tmp/tmpe7krij89.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    local\
    \ char = string.sub(i, i)\n    if string.find(string.lower(char), string.lower(char))\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuzenlq0y.lua:22:\
    \ expected: 5, actual: 10\nstack traceback:\n\t/tmp/tmpuzenlq0y.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local count = 0\n  for _, c in string.gmatch(\"[%a]\") do\n    count = count\
    \ + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_distinct_characters\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abcde'), 5)\n    lu.assertEquals(candidate('abcdecadeCADE'),\
    \ 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)\n    lu.assertEquals(candidate('Jerry\
    \ jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4t7qc985.lua:8:\
    \ bad argument #2 to 'gmatch' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp4t7qc985.lua:8: in function 'candidate'\n\t/tmp/tmp4t7qc985.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if not distinct_characters[char] then\n      distinct_characters[char]\
    \ = 1\n    else\n      distinct_characters[char] = distinct_characters[char] +\
    \ 1\n    end\n  end\n  return #distinct_characters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n   \
    \ lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'), 5)\n\
    \    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa48af06h.lua:23:\
    \ expected: 5, actual: 0\nstack traceback:\n\t/tmp/tmpa48af06h.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n-- >>> count_distinct_characters('xyzXYZ')\n-- 3\n\
    -- >>> count_distinct_characters('Jerry')\n-- 4\nlocal function count_distinct_characters(string)\n\
    \  local distinct_characters = {}\n  for _, character in ipairs(string) do\n \
    \   local lowercase = character:lower()\n    if not distinct_characters[lowercase]\
    \ then\n      distinct_characters[lowercase] = 1\n    else\n      distinct_characters[lowercase]\
    \ = distinct_characters[lowercase] + 1\n    end\n  end\n  return #distinct_characters\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_distinct_characters\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abcde'),\
    \ 5)\n    lu.assertEquals(candidate('abcdecadeCADE'), 5)\n    lu.assertEquals(candidate('aaaaAAAAaaaa'),\
    \ 1)\n    lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp15twoxfz.lua:8:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp15twoxfz.lua:8: in function 'candidate'\n\t/tmp/tmp15twoxfz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception

name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing(\"<\"\
  )\n-- False\n-- >>> correct_bracketing(\"<>\")\n-- True\n-- >>> correct_bracketing(\"\
  <<><>>\")\n-- True\n-- >>> correct_bracketing(\"><<>\")\n-- False\nlocal function\
  \ correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_count_correct\
    \ = opening_brackets_count == opening_brackets_count + 1\n  local closing_brackets_count_correct\
    \ = closing_brackets_count == closing_brackets_count + 1\n  return opening_brackets_count_correct\
    \ and closing_brackets_count_correct\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n\
    \         return false\n      end\n      if closing ~= \">\" and closing ~= \"\
    <\" then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index_count = opening_brackets_index\n  local closing_brackets_index_count\
    \ = closing_brackets_index\n  while opening_brackets_index_count > 0 do\n    opening_brackets_index\
    \ = opening_brackets_index - 1\n    opening_brackets_index_count = opening_brackets_index\n\
    \  end\n  while closing_brackets_index_count > 0 do\n    closing_brackets_index\
    \ = closing_brackets_index + 1\n    closing_brackets_index_count = closing_brackets_index\n\
    \  end\n  -- if opening_brackets_index_count < closing_brackets_index_count then\n\
    \  --   return false\n  -- end\n  -- if opening_brackets_index_count > closing_brackets_index_count\
    \ then\n  --   return true\n  -- end\n  -- if opening_brackets_index_count ==\
    \ closing_brackets_index_count then\n  --   return true\n  -- end\n  -- return\
    \ false\n  return opening_brackets_index_count == closing_brackets_index_count\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_count_correct = opening_brackets_count == opening_brackets_count\
    \ + 1\n  local closing_brackets_count_correct = closing_brackets_count == closing_brackets_count\
    \ + 1\n  return opening_brackets_count_correct and closing_brackets_count_correct\n\
    end", "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = closing_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_count)\n  local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_count)\n  local opening_brackets_open = opening_bracket:sub(1,\
    \ 1)\n  local closing_brackets_open = closing_bracket:sub(1, 1)\n  local opening_brackets_close\
    \ = opening_bracket:sub(2, 1)\n  local closing_brackets_close = closing_bracket:sub(2,\
    \ 1)\n  local opening_brackets_closed = opening_bracket:sub(3, 1)\n  local closing_brackets_closed\
    \ = closing_bracket:sub(3, 1)\n  local opening_brackets_opened = opening_bracket:sub(4,\
    \ 1)\n  local closing_brackets_opened = closing_bracket:sub(4, 1)\n  local opening_brackets_opened_again\
    \ = opening_bracket:sub(5, 1)\n  local closing_brackets_opened_again = closing_bracket:sub(5,\
    \ 1)\n  local opening_brackets_opened_again_again = opening_bracket:sub(6, 1)\n\
    \  local closing_brackets_opened_again_again = closing_bracket:sub(6, 1)\n  local\
    \ opening_brackets_opened_again_again_again = opening_bracket:sub(7, 1)\n  local\
    \ closing_brackets_opened_again_again_again = closing_bracket:sub(7, 1)\n  local\
    \ opening_brackets_opened_again_again_again_again = opening_bracket:sub(8, 1)\n\
    \  local closing_brackets_opened_again_again_again_again = closing_bracket:sub(",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index_count = opening_brackets_index\n  if opening_brackets_index_count\
    \ == 0 then\n    return false\n  elseif opening_brackets_index_count > 1 then\n\
    \    return true\n  elseif opening_brackets_index_count == 1 then\n    if opening_brackets_index\
    \ > 0 then\n      return true\n    else\n      return false\n    end\n  else\n\
    \    if opening_brackets_index > 0 then\n      return true\n    else\n      return\
    \ false\n    end\n  end\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\">\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\"<\")\n  local opening_brackets_index_count = opening_brackets_index\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index + opening_brackets_count\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index + closing_brackets_count\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local ",
  "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"(<)\"\
    , \"<\")\n  brackets = brackets:gsub(\"(>)\", \">\")\n  return brackets:sub(1,\
    \ #brackets) == brackets\nend", "  local opening = brackets:gsub(\"<\", \"\")\n\
    \  local closing = brackets:gsub(\">\", \"\")\n  local opening_count = opening:gsub(\"\
    (%w+)(%w+)\", function(a, b, c) return #b * #c end):gsub(\"^0+\", \"\")\n  local\
    \ opening_count = opening_count:gsub(\"%w+\", \"\")\n  local opening_count = opening_count:gsub(\"\
    %w\", \"\")\n  local opening_count = opening_count:gsub(\"%\", \"\")\n  local\
    \ opening_count = tonumber(opening_count)\n  local opening_count = opening_count\
    \ and opening_count > 0 and opening_count or 0\n  local closing_brackets = closing:gsub(\"\
    (%w+)(%w+)\", function(a, b, c) return #b * #c end):gsub(\"^0+\", \"\")\n  local\
    \ closing_brackets = closing_brackets:gsub(\"%w+\", \"\")\n  local closing_brackets\
    \ = closing_brackets:gsub(\"%w\", \"\")\n  local closing_brackets = closing_brackets:gsub(\"\
    %\", \"\")\n  local closing_brackets = tonumber(closing_brackets)\n  local closing_brackets\
    \ = closing_brackets and closing_brackets > 0 and closing_brackets or 0\n  return\
    \ opening_count == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets:len() then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:gsub(\"[<>]\", \"\")\n  local closing = brackets:gsub(\"\
    [<>]\", \"\")\n  return opening:sub(1, 1):lower() == closing:sub(1, 1):lower()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing(\"<\"\
  )\n-- False\n-- >>> correct_bracketing(\"<>\")\n-- True\n-- >>> correct_bracketing(\"\
  <<><>>\")\n-- True\n-- >>> correct_bracketing(\"><<>\")\n-- False\nlocal function\
  \ correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_count_correct\
    \ = opening_brackets_count == opening_brackets_count + 1\n  local closing_brackets_count_correct\
    \ = closing_brackets_count == closing_brackets_count + 1\n  return opening_brackets_count_correct\
    \ and closing_brackets_count_correct\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n\
    \         return false\n      end\n      if closing ~= \">\" and closing ~= \"\
    <\" then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index_count = opening_brackets_index\n  local closing_brackets_index_count\
    \ = closing_brackets_index\n  while opening_brackets_index_count > 0 do\n    opening_brackets_index\
    \ = opening_brackets_index - 1\n    opening_brackets_index_count = opening_brackets_index\n\
    \  end\n  while closing_brackets_index_count > 0 do\n    closing_brackets_index\
    \ = closing_brackets_index + 1\n    closing_brackets_index_count = closing_brackets_index\n\
    \  end\n  -- if opening_brackets_index_count < closing_brackets_index_count then\n\
    \  --   return false\n  -- end\n  -- if opening_brackets_index_count > closing_brackets_index_count\
    \ then\n  --   return true\n  -- end\n  -- if opening_brackets_index_count ==\
    \ closing_brackets_index_count then\n  --   return true\n  -- end\n  -- return\
    \ false\n  return opening_brackets_index_count == closing_brackets_index_count\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_count_correct = opening_brackets_count == opening_brackets_count\
    \ + 1\n  local closing_brackets_count_correct = closing_brackets_count == closing_brackets_count\
    \ + 1\n  return opening_brackets_count_correct and closing_brackets_count_correct\n\
    end", "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = closing_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_count)\n  local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_count)\n  local opening_brackets_open = opening_bracket:sub(1,\
    \ 1)\n  local closing_brackets_open = closing_bracket:sub(1, 1)\n  local opening_brackets_close\
    \ = opening_bracket:sub(2, 1)\n  local closing_brackets_close = closing_bracket:sub(2,\
    \ 1)\n  local opening_brackets_closed = opening_bracket:sub(3, 1)\n  local closing_brackets_closed\
    \ = closing_bracket:sub(3, 1)\n  local opening_brackets_opened = opening_bracket:sub(4,\
    \ 1)\n  local closing_brackets_opened = closing_bracket:sub(4, 1)\n  local opening_brackets_opened_again\
    \ = opening_bracket:sub(5, 1)\n  local closing_brackets_opened_again = closing_bracket:sub(5,\
    \ 1)\n  local opening_brackets_opened_again_again = opening_bracket:sub(6, 1)\n\
    \  local closing_brackets_opened_again_again = closing_bracket:sub(6, 1)\n  local\
    \ opening_brackets_opened_again_again_again = opening_bracket:sub(7, 1)\n  local\
    \ closing_brackets_opened_again_again_again = closing_bracket:sub(7, 1)\n  local\
    \ opening_brackets_opened_again_again_again_again = opening_bracket:sub(8, 1)\n\
    \  local closing_brackets_opened_again_again_again_again = closing_bracket:sub(",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index_count = opening_brackets_index\n  if opening_brackets_index_count\
    \ == 0 then\n    return false\n  elseif opening_brackets_index_count > 1 then\n\
    \    return true\n  elseif opening_brackets_index_count == 1 then\n    if opening_brackets_index\
    \ > 0 then\n      return true\n    else\n      return false\n    end\n  else\n\
    \    if opening_brackets_index > 0 then\n      return true\n    else\n      return\
    \ false\n    end\n  end\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\">\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\"<\")\n  local opening_brackets_index_count = opening_brackets_index\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index + opening_brackets_count\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index + closing_brackets_count\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local ",
  "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"(<)\"\
    , \"<\")\n  brackets = brackets:gsub(\"(>)\", \">\")\n  return brackets:sub(1,\
    \ #brackets) == brackets\nend", "  local opening = brackets:gsub(\"<\", \"\")\n\
    \  local closing = brackets:gsub(\">\", \"\")\n  local opening_count = opening:gsub(\"\
    (%w+)(%w+)\", function(a, b, c) return #b * #c end):gsub(\"^0+\", \"\")\n  local\
    \ opening_count = opening_count:gsub(\"%w+\", \"\")\n  local opening_count = opening_count:gsub(\"\
    %w\", \"\")\n  local opening_count = opening_count:gsub(\"%\", \"\")\n  local\
    \ opening_count = tonumber(opening_count)\n  local opening_count = opening_count\
    \ and opening_count > 0 and opening_count or 0\n  local closing_brackets = closing:gsub(\"\
    (%w+)(%w+)\", function(a, b, c) return #b * #c end):gsub(\"^0+\", \"\")\n  local\
    \ closing_brackets = closing_brackets:gsub(\"%w+\", \"\")\n  local closing_brackets\
    \ = closing_brackets:gsub(\"%w\", \"\")\n  local closing_brackets = closing_brackets:gsub(\"\
    %\", \"\")\n  local closing_brackets = tonumber(closing_brackets)\n  local closing_brackets\
    \ = closing_brackets and closing_brackets > 0 and closing_brackets or 0\n  return\
    \ opening_count == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets:len() then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:gsub(\"[<>]\", \"\")\n  local closing = brackets:gsub(\"\
    [<>]\", \"\")\n  return opening:sub(1, 1):lower() == closing:sub(1, 1):lower()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:gsub(\"<\", \"\")\n  local closing = brackets:gsub(\"\
    >\", \"\")\n  return opening:len() == closing:len() and opening:len() > 0 and\
    \ closing:len() > 0\nend", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets = brackets:gsub(\"^<\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ^>\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "   for i = 1, #brackets\
    \ do\n      if brackets[i] == \"<\" then\n         if brackets[i+1] == \"<\" then\n\
    \            return false\n         else\n            return true\n         end\n\
    \      elseif brackets[i] == \">\" then\n         if brackets[i+1] == \">\" then\n\
    \            return false\n         else\n            return true\n         end\n\
    \      else\n         return false\n      end\n   end\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i+1] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "    local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n    local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  \
    \  local opening_brackets_count = opening_brackets:len()\n    local closing_brackets_count\
    \ = closing_brackets:len()\n    local opening_brackets_index = opening_brackets:find(\"\
    >\")\n    local closing_brackets_index = closing_brackets:find(\"<\")\n    local\
    \ opening_brackets_index2 = opening_brackets:find(\"<<\")\n    local closing_brackets_index2\
    \ = closing_brackets:find(\">>\")\n    local opening_brackets_index3 = opening_brackets:find(\"\
    <<<\")\n    local closing_brackets_index3 = closing_brackets:find(\">>>>\")\n\
    \    local opening_brackets_index4 = opening_brackets:find(\"<<<\")\n    local\
    \ closing_brackets_index4 = closing_brackets:find(\">>>>\")\n    local opening_brackets_index5\
    \ = opening_brackets:find(\"<<<\")\n    local closing_brackets_index5 = closing_brackets:find(\"\
    >>>>\")\n    local opening_brackets_index6 = opening_brackets:find(\"<<<\")\n\
    \    local closing_brackets_index6 = closing_brackets:find(\">>>>\")\n    local\
    \ opening_brackets_index7 = opening_brackets:find(\"<<<\")\n    local closing_brackets_index7\
    \ = closing_brackets:find(\">>>>\")\n    local opening_brackets_index8 = opening_brackets:find(\"\
    <<<\")\n    local closing_brackets_index8 = closing_brackets:find(\">>>>\")\n\
    \    local opening_brackets_index9 = opening_brackets:find(\"<<<\")\n    local\
    \ closing_brackets_index9 = closing_brackets:find(\">>>>\")\n    local opening_brackets_index10\
    \ = opening_brackets:find(\"<<<\")\n    local closing_brackets_index10 = closing_brackets:find(\"\
    >>>>\")\n    local opening_brackets_index11 = opening_brackets:find(\"<<<\")\n\
    \    local closing_brackets_index11 = closing_brackets:find(\">>>>\")\n    local\
    \ opening_brackets_index12 = opening_brackets:find(\"<<", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1\"):gsub(\">\", \"%%%2\")\n  local closing_brackets\
    \ = brackets:gsub(\"<\", \"%%%2\"):gsub(\">\", \"%%%1\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]+\", \"\")\n  local closing_brackets = brackets:gsub(\"<>\", \"\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets:len() then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  if opening_brackets_count ~= closing_brackets_count\
    \ then\n    return false\n  end\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  if opening_brackets_count ~= closing_brackets_count\
    \ then\n    return false\n  end\n  local opening_brackets_table = opening_brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets_table = closing_brackets:gsub(\"[<>]\"\
    , \"\")\n  local opening_brackets_table_count = opening_brackets_table:len()\n\
    \  local closing_brackets_table_count = closing_brackets_table:len()\n  if opening_brackets_table_count\
    \ ~= closing_brackets_table_count then\n    return false\n  end\n  for i = 1,\
    \ opening_brackets_table_count do\n    local opening_bracket = opening_brackets_table:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets_table:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:len(i)]\
    \ == closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "    local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n   \
    \ local closing_brackets_count = closing_brackets:len()\n    local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n    local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n    local opening_brackets_index2 = opening_brackets:find(\"{\")\n    local\
    \ closing_brackets_index2 = closing_brackets:find(\"}\")\n    local opening_brackets_index3\
    \ = opening_brackets:find(\"(\")\n    local closing_brackets_index3 = closing_brackets:find(\"\
    )\")\n    local opening_brackets_index4 = opening_brackets:find(\"...\")\n   \
    \ local closing_brackets_index4 = closing_brackets:find(\"...\")\n    local opening_brackets_index5\
    \ = opening_brackets:find(\"...\")\n    local closing_brackets_index5 = closing_brackets:find(\"\
    ...\")\n    local opening_brackets_index6 = opening_brackets:find(\"...\")\n \
    \   local closing_brackets_index6 = closing_brackets:find(\"...\")\n    local\
    \ opening_brackets_index7 = opening_brackets:find(\"...\")\n    local closing_brackets_index7\
    \ = closing_brackets:find(\"...\")\n    local opening_brackets_index8 = opening_brackets:find(\"\
    ...\")\n    local closing_brackets_index8 = closing_brackets:find(\"...\")\n \
    \   local opening_brackets_index9 = opening_brackets:find(\"...\")\n    local\
    \ closing_brackets_index9 = closing_brackets:find(\"...\")\n    local opening_brackets_index10\
    \ = opening_brackets:find(\"...\")\n    local closing_brackets_index10 = closing_brackets:find(\"\
    ...\")\n    local opening_brackets_index11 = opening_brackets:find(\"...\")\n\
    \    local closing_brackets_index11 = closing_brackets:find(\"...\")\n    local\
    \ opening_brackets_index12 = opening_brackets:find(\"...\")\n    local closing_brackets_index12\
    \ = closing_brackets:find(\"...\")\n    local opening_brackets_index13", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_found = false\n\
    \  local closing_brackets_found = false\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    if opening_brackets_found then\n      if opening_bracket ~= closing_brackets_found\
    \ then\n        return false\n      end\n    else\n      if opening_bracket ==\
    \ \"<\" then\n        opening_brackets_found = true\n      elseif opening_bracket\
    \ == \">\" then\n        opening_brackets_found = false\n      else\n        return\
    \ false\n      end\n    end\n  end\n  return true\nend", "  local opening = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing = brackets:gsub(\"[<>]\", \"\")\n  local opening_count\
    \ = opening:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local closing_count =\
    \ closing:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  return opening_count ==\
    \ closing_count\nend", "  local opening = brackets:gsub(\"<\", \"\")\n  local\
    \ closing = brackets:gsub(\">\", \"\")\n  return opening:len() == closing:len()\n\
    end", "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        local opening_bracket = opening_brackets:sub(1, i)\n        local\
    \ closing_bracket = closing_brackets:sub(1, i)\n        if opening_bracket ~=\
    \ closing_bracket then\n            return false\n        end\n    end\n    return\
    \ true\nend", "   for i = 1, #brackets do\n      local opening = brackets[i]\n\
    \      local closing = brackets[i+1]\n      if opening ~= \">\" and opening ~=\
    \ \"<\" then\n         return false\n      end\n      if closing ~= \">\" and\
    \ closing ~= \"<\" then\n         return false\n      end\n   end\n   return true\n\
    end", "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    for i = 1, #opening_brackets do\n     \
    \   if opening_brackets[i] ~= closing_brackets[i] then\n            return false\n\
    \        end\n    end\n    return true\nend", "   for i = 1, #brackets do\n  \
    \    if brackets[i] ~= \"<\" then\n         return false\n      end\n   end\n\
    \   return true\nend", "  local opening = brackets:gsub(\"<\", \"\")\n  local\
    \ closing = brackets:gsub(\">\", \"\")\n  return opening:len() == closing:len()\
    \ and opening:sub(1, opening:len()) == closing:sub(1, closing:len())\nend", " \
    \ local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    local opening_bracket = opening_brackets[i]\n    local closing_bracket\
    \ = closing_brackets[i]\n    if opening_bracket ~= closing_bracket then\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening_bracket =\
    \ opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"\
    %1\")\n  local closing_brackets = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local open_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local close_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ open_brackets_count = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  local open_brackets_index = 1\n  local close_brackets_index = 1\n  while open_brackets_index\
    \ < open_brackets_count do\n    local open_bracket = open_brackets:sub(open_brackets_index,\
    \ open_brackets_index)\n    local close_bracket = close_brackets:sub(close_brackets_index,\
    \ close_brackets_index)\n    if open_bracket ~= close_bracket then\n      return\
    \ false\n    end\n    open_brackets_index = open_brackets_index + 1\n    close_brackets_index\
    \ = close_brackets_index + 1\n  end\n  return true\nend", "  local opening = brackets:gsub(\"\
    <\", \"\")\n  local closing = brackets:gsub(\">\", \"\")\n  local opening_count\
    \ = opening:gsub(\"(%w+)(%w+)\", function(a, b, c) \n    return #b > #c \n  end)\n\
    \  local closing_count = closing:gsub(\"(%w+)(%w+)\", function(a, b, c) \n   \
    \ return #b > #c \n  end)\n  return opening_count == closing_count\nend", "  local\
    \ opening = brackets:gsub(\"[<>]\", \"\")\n  local closing = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening do\n    if opening[i] ~= closing[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) == closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"<%1>\")\n  local closing_brackets = brackets:gsub(\"\
    <%1>+\", \"%>\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket\
    \ = closing_brackets:sub(1, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:len(i)]\
    \ == closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  while opening_brackets_index >= 0 do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ 1)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ 1)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n    opening_brackets_index = opening_brackets_index - 1\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local open_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local open_brackets_count = open_brackets:len()\n  local close_brackets_count\
    \ = close_brackets:len()\n  local open_brackets_count = open_brackets_count\n\
    \  if open_brackets_count ~= close_brackets_count then\n    return false\n  end\n\
    \  local open_brackets_table = open_brackets:gsub(\"[<>]\", \"\")\n  local close_brackets_table\
    \ = close_brackets:gsub(\"[<>]\", \"\")\n  for i = 1, open_brackets_count do\n\
    \    if open_brackets_table[i] ~= close_brackets_table[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:gsub(\"<\", \"[\")\n  local closing = brackets:gsub(\">\", \"]\"\
    )\n  return opening:len() == closing:len() and opening:sub(1, opening:len()) ==\
    \ closing:sub(1, closing:len())\nend", "  brackets = brackets:gsub(\"[<>]\", \"\
    \")\n  brackets = brackets:gsub(\"^\", \"\")\n  brackets = brackets:gsub(\"$\"\
    , \"\")\n  brackets = brackets:gsub(\"{\", \"\")\n  brackets = brackets:gsub(\"\
    }\", \"\")\n  brackets = brackets:gsub(\"<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(",
  "  local open_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local close_brackets\
    \ = brackets:gsub(\"%1[<>]+\", \"%1\")\n  return open_brackets:len() == close_brackets:len()\
    \ and\n         open_brackets:sub(1, 1) == close_brackets:sub(1, 1)\nend", " \
    \   local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    return opening_brackets:sub(1, 1):sub(1,\
    \ 1) == closing_brackets:sub(1, 1)\nend", "   for i = 1, #brackets do\n      local\
    \ opening = brackets[i]\n      local closing = brackets[i+1]\n      if opening\
    \ ~= \">\" and opening ~= \"<\" then\n         return false\n      end\n     \
    \ if closing ~= \">\" and closing ~= \"<\" then\n         return false\n     \
    \ end\n      if opening ~= closing then\n         return false\n      end\n  \
    \ end\n   return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets_count then\n    return false\n\
    \  end\n  local opening_brackets_table = opening_brackets:gsub(\"(%S+)\", function(x)\n\
    \    return x:gsub(\"[<>]\", \"\")\n  end)\n  local closing_brackets_table = closing_brackets:gsub(\"\
    (%S+)\", function(x)\n    return x:gsub(\"[<>]\", \"\")\n  end)\n  local opening_brackets_table_count\
    \ = opening_brackets_table:len()\n  local closing_brackets_table_count = closing_brackets_table:len()\n\
    \  if opening_brackets_table_count ~= closing_brackets_table_count then\n    return\
    \ false\n  end\n  local opening_brackets_table_sorted = opening_brackets_table:sort()\n\
    \  local closing_brackets_table_sorted = closing_brackets_table:sort()\n  for\
    \ i = 1, opening_brackets_table_count do\n    if opening_brackets_table_sorted[i]\
    \ ~= closing_brackets_table_sorted[i] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "   for i = 1, #brackets do\n      local\
    \ opening = brackets[i]\n      local closing = brackets[i+1]\n      if opening\
    \ ~= \">\" and opening ~= \"<\" then\n         return false\n      end\n     \
    \ if closing ~= \">\" and closing ~= \"<\" then\n         return false\n     \
    \ end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_brackets_char\
    \ = opening_brackets[opening_brackets_index]\n  local closing_brackets_char =\
    \ closing_brackets[closing_brackets_index]\n  while opening_brackets_index >=\
    \ 0 do\n    if opening_brackets_char == closing_brackets_char then\n      opening_brackets_index\
    \ = opening_brackets_index - 1\n      closing_brackets_index = closing_brackets_index\
    \ - 1\n      opening_brackets_char = opening_brackets[opening_brackets_index]\n\
    \      closing_brackets_char = closing_brackets[closing_brackets_index]\n    else\n\
    \      return false\n    end\n  end\n  return true\nend", "   for i = 1, #brackets\
    \ do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"<\" then\n         return false\n\
    \      end\n      if closing ~= \">\" and closing ~= \"<\" then\n         return\
    \ false\n      end\n      if opening == \"<\" then\n         if closing ~= \"\
    >\" then\n            return false\n         end\n      elseif opening == \">\"\
    \ then\n         if closing ~= \"<\" then\n            return false\n        \
    \ end\n      end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index_next\
    \ = opening_brackets_index\n  local closing_brackets_index_next = closing_brackets_index\n\
    \  local opening_brackets_index_prev = opening_brackets_index\n  local closing_brackets_index_prev\
    \ = closing_brackets_index\n  while opening_brackets_index_next ~= nil do\n  \
    \  opening_brackets_index = opening_brackets_index_next\n    opening_brackets_index_next\
    \ = opening_brackets_index:find(\"<\")\n    if opening_brackets_index_next ==\
    \ nil then\n      opening_brackets_index_next = opening_brackets_index:find(\"\
    >\")\n    end\n    if opening_brackets_index_next ~= nil then\n      opening_brackets_count\
    \ = opening_brackets_count - 1\n      opening_brackets_index_next = opening_brackets_index_next:find(\"\
    <\")\n      if opening_brackets_index_next ~= nil then\n        opening_brackets_count\
    \ = opening_brackets_count - 1\n      end\n    end\n  end\n  while closing_brackets_index_prev\
    \ ~= nil do\n    closing_brackets_index = closing_brackets_index_prev\n    closing_brackets_index_prev\
    \ = closing_brackets_index:find(\">\")\n    if closing_brackets_index_prev ==\
    \ nil then\n      closing_brackets_index_prev = closing_brackets_index:find(\"\
    <\")\n    end\n    if closing_brackets_index_prev ~= nil then\n      closing_brackets_count\
    \ = closing_brackets_count - 1\n      closing_brackets_index_prev = closing_brackets_index_prev:find(\"\
    >\")\n      if closing_brackets_index_prev ~= nil then\n        closing_brackets_count\
    \ = closing_bra", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n\
    \  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(1,\
    \ i)\n    local closing_bracket = closing_brackets:sub(1, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_open = false\n\
    \  local closing_brackets_open = false\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    if opening_brackets[opening_brackets_index] ~= \">\" then\n      opening_brackets_open\
    \ = false\n    else\n      opening_brackets_open = true\n      opening_brackets_index\
    \ = opening_brackets_index + 1\n    end\n  end\n  while closing_brackets_index\
    \ < closing_brackets_count do\n    if closing_brackets[closing_brackets_index]\
    \ ~= \"<\" then\n      closing_brackets_open = false\n    else\n      closing_brackets_open\
    \ = true\n      closing_brackets_index = closing_brackets_index + 1\n    end\n\
    \  end\n  return opening_brackets_open and closing_brackets_open\nend", "  brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets = brackets:gsub(\"\
    ^<\", \"\")\n  local closing_brackets = brackets:gsub(\"^>\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^<\", \"\")\n  local closing_brackets_count\
    \ = closing_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^>\", \"\")\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing = brackets:gsub(\"[<>]\", \"\
    \")\n  local opening_count = opening:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n\
    \  local closing_count = closing:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  return\
    \ opening_count == closing_count\nend", "  local opening = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing = brackets:gsub(\"[<>]\", \"\")\n  return opening:sub(1,\
    \ 1) ~= closing:sub(1, 1)\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  if opening_brackets_count ~= closing_brackets_count\
    \ then\n    return false\n  end\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening = brackets:gsub(\"\
    <\", \"\")\n  local closing = brackets:gsub(\">\", \"\")\n  local opening_brackets\
    \ = opening:gsub(\"(%w+)(%w+)\", function(a, b, c)\n    return a .. b\n  end)\n\
    \  local closing_brackets = closing:gsub(\"(%w+)(%w+)\", function(a, b, c)\n \
    \   return a .. b\n  end)\n  return opening_brackets == closing_brackets\nend",
  "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        local opening_bracket = opening_brackets:sub(i, i)\n        local\
    \ closing_bracket = closing_brackets:sub(i, i)\n        if opening_bracket ~=\
    \ closing_bracket then\n            return false\n        end\n    end\n    return\
    \ true\nend", "   local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n   local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^<\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"\
    ^>\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"^<<<\", \"\"\
    )\n   local opening_brackets = opening_brackets:gsub(\"^>>>\", \"\")\n   local\
    \ opening_brackets = opening_brackets:gsub(\"^<<<\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^>>>\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"\
    ^<\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"^>\", \"\")\n\
    \   local opening_brackets = opening_brackets:gsub(\"^<<<\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^>>>\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"\
    ^<\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"^>\", \"\")\n\
    \   local opening_brackets = opening_brackets:gsub(\"^<<<\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^>>>\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"\
    ^<\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"^>\", \"\")\n\
    \   local opening_brackets = opening_brackets:gsub(\"^<<<\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^>>>\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"\
    ^<\", \"\")\n   local opening_brackets = opening_brackets:gsub(\"^>\", \"\")\n\
    \   local opening_brackets = opening_brackets:gsub(\"^<<<\", \"\")\n   local opening_brackets\
    \ = opening_brackets:gsub(\"^>>>\", \"\")\n   local opening_brackets = open",
  "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    for i = 1, #opening_brackets do\n     \
    \   if opening_brackets[i] ~= closing_brackets[i] then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = closing_brackets_count - 1\n  while opening_brackets_index >= 0 do\n    if\
    \ opening_brackets[opening_brackets_index] ~= closing_brackets[closing_brackets_index]\
    \ then\n      return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ - 1\n    closing_brackets_index = closing_brackets_index - 1\n  end\n  return\
    \ true\nend", "  local open_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ close_brackets = brackets:gsub(\"[<>]\", \"\")\n  local open_brackets_count\
    \ = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  local open_brackets_index = open_brackets:find(\">\")\n  local close_brackets_index\
    \ = close_brackets:find(\"<\")\n  local open_brackets_index_count = open_brackets_index\n\
    \  if open_brackets_index_count == 0 then\n    open_brackets_index_count = open_brackets_count\n\
    \  end\n  local close_brackets_index_count = close_brackets_index\n  if close_brackets_index_count\
    \ == 0 then\n    close_brackets_index_count = close_brackets_count\n  end\n  local\
    \ open_brackets_index_count = open_brackets_index_count - 1\n  local close_brackets_index_count\
    \ = close_brackets_index_count - 1\n  local open_brackets_index_count = open_brackets_index_count\
    \ - 1\n  local close_brackets_index_count = close_brackets_index_count - 1\n \
    \ local open_brackets_index_count = open_brackets_index_count - 1\n  local close_brackets_index_count\
    \ = close_brackets_index_count - 1\n  local open_brackets_index_count = open_brackets_index_count\
    \ - 1\n  local close_brackets_index_count = close_brackets_index_count - 1\n \
    \ local open_brackets_index_count = open_brackets_index_count - 1\n  local close_brackets_index_count\
    \ = close_brackets_index_count - 1\n  local open_brackets_index_count = open_brackets_index_count\
    \ - 1\n  local close_brackets_index_count = close_brackets_index_count - 1\n \
    \ local open_brackets_index_count = open_brackets_index_count - 1\n  local close_brackets_index_count\
    \ = close_brackets_index_count - 1\n  local open_brackets_index_count = open_brackets_index_count\
    \ - 1\n  local close_brackets_index_count = close_brackets_index_count - 1\n \
    \ local open_brackets_index_count = open_brackets_index_count - 1\n  local close_brackets_index_count\
    \ = close_brackets_index_count - 1\n  local ", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i+1] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) == closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening_bracket =\
    \ opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets\
    \ = brackets:gsub(\"^\", \"\")\n  brackets = brackets:gsub(\"$\", \"\")\n  brackets\
    \ = brackets:gsub(\"{\", \"\")\n  brackets = brackets:gsub(\"}\", \"\")\n  brackets\
    \ = brackets:gsub(\"<<\", \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets\
    \ = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n\
    \  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\">>>\"\
    , \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  local opening_brackets_table\
    \ = opening_brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets_table = closing_brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, opening_brackets_count do\n    if opening_brackets_table[i]\
    \ ~= closing_brackets_table[i] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  for i = 1,\
    \ #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets:len() then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\")\n  local closing_brackets = brackets:gsub(\">\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index - 1\n  local\
    \ closing_brackets_index_prev = closing_brackets_index + 1\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_prev = closing_brackets_index - 1\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index - 1\n  local\
    \ closing_brackets_index_prev = closing_brackets_index - 1\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index - 1\n  local\
    \ closing_brackets_index_prev = closing_brackets_index + 1\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_prev = closing_brackets_index - 1\n  local opening_brackets_index_next\
    \ = opening_brackets_index + 1\n  local closing_brackets_index_next = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_prev = opening_brackets_index", "   for\
    \ i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n     \
    \    return false\n      end\n      if closing ~= \">\" and closing ~= \"<\" then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening_bracket =\
    \ opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets\
    \ = brackets:gsub(\"^\", \"\")\n  brackets = brackets:gsub(\"$\", \"\")\n  brackets\
    \ = brackets:gsub(\"{\", \"\")\n  brackets = brackets:gsub(\"}\", \"\")\n  brackets\
    \ = brackets:gsub(\"<<\", \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets\
    \ = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n\
    \  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\">>>\"\
    , \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(\"\
    >>>\", \"\")\n  brackets = brackets:gsub(\"<<<\", \"\")\n  brackets = brackets:gsub(",
  "  local opening_brackets = brackets:gsub(\"<>\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"<\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local open_brackets = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local open_brackets_count = open_brackets:len()\n\
    \  local close_brackets_count = close_brackets:len()\n  if open_brackets_count\
    \ ~= close_brackets_count then\n    return false\n  end\n  for i = 1, open_brackets_count\
    \ do\n    local open_bracket = open_brackets:sub(i, i)\n    local close_bracket\
    \ = close_brackets:sub(i, i)\n    if open_bracket ~= close_bracket then\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local\
    \ opening = opening_brackets:sub(i, i)\n    local closing = closing_brackets:sub(i,\
    \ i)\n    if opening ~= closing then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\">\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\"<\")\n  local opening_brackets_index_count = opening_brackets_index:len()\n\
    \  local closing_brackets_index_count = closing_brackets_index:len()\n  local\
    \ opening_brackets_index_count_min = opening_brackets_index_count - closing_brackets_index_count\n\
    \  local opening_brackets_index_count_max = opening_brackets_index_count + closing_brackets_index_count\n\
    \  local opening_brackets_index_count_min = opening_brackets_index_count_min +\
    \ 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + 1\n  local opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ - 1\n  local opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ + ", "  local open_brackets = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets\
    \ = open_brackets:gsub(\"[<>]\", \"\")\n  return open_brackets:len() == close_brackets:len()\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n\
    \         return false\n      end\n      if closing ~= \">\" and closing ~= \"\
    <\" then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\">\")\n  local closing_brackets_index = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  local opening_brackets_index_previous\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_previous = closing_brackets_index\
    \ + 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  local opening_brackets_index_previous\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_previous = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  local opening_brackets_index_previous\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_previous = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  local opening_brackets_index_previous\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_previous = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  local opening_brackets_index_previous\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_previous = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index - 1\n  ", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  local opening_brackets_table\
    \ = { }\n  for i = 1, opening_brackets_count do\n    opening_brackets_table[opening_brackets:sub(i,\
    \ i)] = true\n  end\n  local closing_brackets_table = { }\n  for i = 1, closing_brackets_count\
    \ do\n    closing_brackets_table[closing_brackets:sub(i, i)] = true\n  end\n \
    \ for i = 1, opening_brackets_count do\n    if not opening_brackets_table[i] then\n\
    \      return false\n    end\n  end\n  for i = 1, closing_brackets_count do\n\
    \    if not closing_brackets_table[i] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]+$\", \"\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    if opening_brackets:sub(i,\
    \ i) ~= closing_brackets:sub(i, i) then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i]:sub(1, 1) ~= closing_brackets[i]:sub(1, 1) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"<$1>\")\n  local closing_brackets = brackets:gsub(\"\
    <([<>])+>\", \"<$1>\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index2\
    \ = opening_brackets:find(\"<<\")\n  local closing_brackets_index2 = closing_brackets:find(\"\
    >>\")\n  local opening_brackets_index3 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index3 = closing_brackets:find(\">>>>\")\n  local opening_brackets_index4\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index4 = closing_brackets:find(\"\
    >>>>\")\n  local opening_brackets_index5 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index5 = closing_brackets:find(\">>>>\")\n  local opening_brackets_index6\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index6 = closing_brackets:find(\"\
    >>>>\")\n  local opening_brackets_index7 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index7 = closing_brackets:find(\">>>>\")\n  local opening_brackets_index8\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index8 = closing_brackets:find(\"\
    >>>>\")\n  local opening_brackets_index9 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index9 = closing_brackets:find(\">>>>\")\n  local opening_brackets_index10\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index10 = closing_brackets:find(\"\
    >>>>\")\n  local opening_brackets_index11 = opening_brackets:find(\"<<<\")\n \
    \ local closing_brackets_index11 = closing_brackets:find(\">>>>\")\n  local opening_brackets_index12\
    \ = opening_brackets:find(\"<<", "  local opening = brackets:gsub(\"<\", \"\"\
    )\n  local closing = brackets:gsub(\">\", \"\")\n  local opening_count = opening:gsub(\"\
    (%S+)\", function(a)\n    return #a ~= 1 and #a or 0\n  end)\n  local closing_count\
    \ = closing:gsub(\"(%S+)\", function(a)\n    return #a ~= 1 and #a or 0\n  end)\n\
    \  return opening_count == closing_count\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    local opening_bracket = opening_brackets[i]\n\
    \    local closing_bracket = closing_brackets[i]\n    if opening_bracket ~= closing_bracket\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening_bracket =\
    \ opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    if opening_brackets:sub(i,\
    \ i) == closing_brackets:sub(i, i) then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    local opening_bracket = opening_brackets[i]\n    local closing_bracket\
    \ = closing_brackets[i]\n    if opening_bracket ~= closing_bracket then\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\")\n  local closing_brackets = brackets:gsub(\">\"\
    , \"\")\n  return opening_brackets:len() == closing_brackets:len()\nend", "  brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening = brackets:sub(1, 1)\n  local\
    \ closing = brackets:sub(2, 2)\n  return opening ~= closing and opening ~= \"\
    <\" and opening ~= \">\"\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = opening_brackets_count - 1\n  local opening_brackets_index2 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index2 = opening_brackets_count - 1\n  local opening_brackets_index3\
    \ = opening_brackets_count - 1\n  local closing_brackets_index3 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index4 = opening_brackets_count - 1\n  local closing_brackets_index4\
    \ = opening_brackets_count - 1\n  local opening_brackets_index5 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index5 = opening_brackets_count - 1\n  local opening_brackets_index6\
    \ = opening_brackets_count - 1\n  local closing_brackets_index6 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index7 = opening_brackets_count - 1\n  local closing_brackets_index7\
    \ = opening_brackets_count - 1\n  local opening_brackets_index8 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index8 = opening_brackets_count - 1\n  local opening_brackets_index9\
    \ = opening_brackets_count - 1\n  local closing_brackets_index9 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index10 = opening_brackets_count - 1\n  local\
    \ closing_brackets_index10 = opening_brackets_count - 1\n  local opening_brackets_index11\
    \ = opening_brackets_count - 1\n  local closing_brackets_index11 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index12 = opening_brackets_count - 1\n  local\
    \ closing_brackets_index12 = opening_brackets_count - 1\n  ", "   for i = 1, #brackets\
    \ do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"<\" then\n         return false\n\
    \      end\n      if closing ~= \">\" and closing ~= \"<\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "    local opening = brackets:gsub(\"\
    <\", \"\")\n    local closing = brackets:gsub(\">\", \"\")\n    local opening_brackets\
    \ = opening:gsub(\"(%w+)(%w+)\", function (_, l1, l2)\n        return l1 .. l2:gsub(\"\
    %w+\", \"%w+\")\n    end)\n    local closing_brackets = closing:gsub(\"(%w+)(%w+)\"\
    , function (_, l1, l2)\n        return l1 .. l2:gsub(\"%w+\", \"%w+\")\n    end)\n\
    \    return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index2 = opening_brackets:find(\"<<\")\n  local\
    \ closing_brackets_index2 = closing_brackets:find(\">>\")\n  local opening_brackets_index3\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index3 = closing_brackets:find(\"\
    >>>\")\n  local opening_brackets_index4 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index4 = closing_brackets:find(\">>>\")\n  local opening_brackets_index5\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index5 = closing_brackets:find(\"\
    >>>\")\n  local opening_brackets_index6 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index6 = closing_brackets:find(\">>>\")\n  local opening_brackets_index7\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index7 = closing_brackets:find(\"\
    >>>\")\n  local opening_brackets_index8 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index8 = closing_brackets:find(\">>>\")\n  local opening_brackets_index9\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index9 = closing_brackets:find(\"\
    >>>\")\n  local opening_brackets_index10 = opening_brackets:find(\"<<<\")\n  local\
    \ closing_brackets_index10 = closing_brackets:find(\">>>\")\n  local opening_brackets_index11\
    \ = opening_brackets:find(\"<<<\")\n  local closing_brackets_index11 = closing_brackets:find(\"\
    >>>\")\n  local opening_brackets_index12 = opening_brackets:find(\"<<", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening = brackets:gsub(\"<\", \"\")\n  local closing =\
    \ brackets:gsub(\">\", \"\")\n  local opening_count = opening:gsub(\"(%S+)\",\
    \ function(a)\n    return #a ~= 1 and #a ~= #closing and #a ~= #opening + 1\n\
    \  end)\n  return opening_count == #brackets\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\"):gsub(\"[\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    >\", \"\"):gsub(\"]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "    local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        if opening_brackets:sub(i, i) == closing_brackets:sub(i, i) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"^\", \"\")\n \
    \ brackets = brackets:gsub(\"$\", \"\")\n  brackets = brackets:gsub(\"{\", \"\"\
    )\n  brackets = brackets:gsub(\"}\", \"\")\n  brackets = brackets:gsub(\"<<\"\
    , \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(", "  local opening = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing = brackets:gsub(\"[<>]\", \"\")\n  local opening_count\
    \ = opening:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local closing_count =\
    \ closing:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  return opening_count ==\
    \ closing_count\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "   for i = 1, #brackets do\n      local\
    \ opening = brackets[i]\n      local closing = brackets[i+1]\n      if opening\
    \ ~= \">\" and opening ~= \"<\" then\n         return false\n      end\n     \
    \ if closing ~= \">\" and closing ~= \"<\" then\n         return false\n     \
    \ end\n      if opening ~= closing then\n         return false\n      end\n  \
    \ end\n   return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]+\"\
    , \"%1\")\n  local closing_brackets = brackets:gsub(\"%[<>]+\", \"[<>]\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  return opening_brackets:len() == closing_brackets:len() and\n\
    \         opening_brackets:sub(1, 1) == closing_brackets:sub(1, 1)\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"\
    ^\", \"\")\n  brackets = brackets:gsub(\"$\", \"\")\n  brackets = brackets:gsub(\"\
    {\", \"\")\n  brackets = brackets:gsub(\"}\", \"\")\n  brackets = brackets:gsub(\"\
    <<\", \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>>\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(", "  local opening = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing = brackets:gsub(\"[<>]$\", \"\")\n  return opening:len()\
    \ == closing:len() and opening:sub(1, opening:len() - closing:len()) == closing\n\
    end", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"\
    ^\", \"\")\n  brackets = brackets:gsub(\"$\", \"\")\n  brackets = brackets:gsub(\"\
    [\", \"\")\n  brackets = brackets:gsub(\"]\", \"\")\n  brackets = brackets:gsub(\"\
    {\", \"\")\n  brackets = brackets:gsub(\"}\", \"\")\n  brackets = brackets:gsub(\"\
    <<\", \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <<<\", \"\")\n  brackets = brackets:gsub(\">>\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <\", \"\")\n  brackets = brackets:gsub(\">\", \"\")\n  brackets = brackets:gsub(\"\
    <", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"<$1>\")\n  local closing_brackets\
    \ = brackets:gsub(\"<([<>]+)>\", \"<$1>\")\n  return opening_brackets:len() ==\
    \ closing_brackets:len()\nend", "    local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n    local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  \
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<>\", \"\")\n  local closing_brackets = brackets:gsub(\"<\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening = brackets:gsub(\"<\", \"\")\n  local closing = brackets:gsub(\"\
    >\", \"\")\n  return opening:len() == closing:len()\nend", "   for i = 1, #brackets\
    \ do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"<\" then\n         return false\n\
    \      end\n      if closing ~= \">\" and closing ~= \"<\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    <\")\n  local closing_brackets_index = closing_brackets:find(\">\")\n  local opening_brackets_index_count\
    \ = opening_brackets_index\n  local closing_brackets_index_count = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  while opening_brackets_index_count_min < opening_brackets_count\
    \ do\n    opening_brackets_index_count_min = opening_brackets_index_count_min\
    \ + 1\n  end\n  while closing_brackets_index_count_min < closing_brackets_count\
    \ do\n    closing_brackets_index_count_min = closing_brackets_index_count_min\
    \ + 1\n  end\n  while opening_brackets_index_count_max > opening_brackets_count\
    \ do\n    opening_brackets_index_count_max = opening_brackets_index_count_max\
    \ - 1\n  end\n  while closing_brackets_index_count_max > closing_brackets_count\
    \ do\n    closing_brackets_index_count_max = closing_brackets_index_count_max\
    \ - 1\n  end\n  if opening_brackets_index_count_min == opening_brackets_count\
    \ then\n    return false\n  elseif closing_brackets_index_count_min == closing_brackets_count\
    \ then\n    return true\n  elseif opening_brackets_index_count_max == opening",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local\
    \ opening_bracket = opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n\
    \    if opening_bracket ~= closing_bracket then\n      return false\n    end\n\
    \  end\n  return true\nend", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets = brackets:gsub(\"^<\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ^>\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n     \
    \    return false\n      end\n      if closing ~= \">\" and closing ~= \"<\" then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local open_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local open_brackets_count = open_brackets:len()\n  local close_brackets_count\
    \ = close_brackets:len()\n  local open_brackets_index = open_brackets:find(\"\
    >\")\n  local close_brackets_index = close_brackets:find(\"<\")\n  local open_brackets_index2\
    \ = open_brackets:find(\"<<\")\n  local close_brackets_index2 = close_brackets:find(\"\
    >>\")\n  local open_brackets_index3 = open_brackets:find(\"<<<\")\n  local close_brackets_index3\
    \ = close_brackets:find(\">>>\")\n  local open_brackets_index4 = open_brackets:find(\"\
    <<<\")\n  local close_brackets_index4 = close_brackets:find(\">>>\")\n  local\
    \ open_brackets_index5 = open_brackets:find(\"<<<\")\n  local close_brackets_index5\
    \ = close_brackets:find(\"<<<\")\n  local open_brackets_index6 = open_brackets:find(\"\
    <<<\")\n  local close_brackets_index6 = close_brackets:find(\"<<<\")\n  local\
    \ open_brackets_index7 = open_brackets:find(\"<<<\")\n  local close_brackets_index7\
    \ = close_brackets:find(\"<<<\")\n  local open_brackets_index8 = open_brackets:find(\"\
    <<<\")\n  local close_brackets_index8 = close_brackets:find(\"<<<\")\n  local\
    \ open_brackets_index9 = open_brackets:find(\"<<<\")\n  local close_brackets_index9\
    \ = close_brackets:find(\"<<<\")\n  local open_brackets_index10 = open_brackets:find(\"\
    <<<\")\n  local close_brackets_index10 = close_brackets:find(\"<<<\")\n  local\
    \ open_brackets_index11 = open_brackets:find(\"<<<\")\n  local close_brackets_index11\
    \ = close_brackets:find(\"<<<\")\n  local open_brackets_index12 = open_brackets:find(\"\
    <<<\")\n  local close_brackets_index12 = close_brackets:find(\"<<<", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:len(i)]\
    \ == closing_brackets[i:len(i)] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  brackets = brackets:gsub(\"[<>]\", \"\")\n  brackets = brackets:gsub(\"\
    (<)\", \"<\")\n  brackets = brackets:gsub(\"(>)\", \">\")\n  brackets = brackets:gsub(\"\
    (<<)\", \"<<\")\n  brackets = brackets:gsub(\"(>>)\", \">>\")\n  return brackets:sub(1,\
    \ 1):sub(1, 1):sub(1, 1) == brackets\nend", "  local opening = brackets:gsub(\"\
    <\", \"\")\n  local closing = brackets:gsub(\">\", \"\")\n  local opening_count\
    \ = opening:gsub(\"(%w+)(%w+)\", function(_, open, close)\n    return #close ==\
    \ 0 and #open == 0 and open or close end\n  end)\n  local closed_count = closing:gsub(\"\
    (%w+)(%w+)\", function(_, open, close)\n    return #close == 0 and #open == 0\
    \ and close or open end\n  end)\n  return opening_count == closed_count\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n         opening_brackets:sub(1, 1) == closing_brackets:sub(1, 1)\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local\
    \ opening = opening_brackets[i]\n    local closing = closing_brackets[i]\n   \
    \ if opening ~= closing then\n      return false\n    end\n  end\n  return true\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n\
    \         return false\n      end\n      if closing ~= \">\" and closing ~= \"\
    <\" then\n         return false\n      end\n   end\n   return true\nend", "  brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #brackets do\n    if brackets[i]:sub(1,\
    \ 1) == \"<\" then\n      return false\n    end\n  end\n  return true\nend", " \
    \   local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n    local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n    local opening_brackets_count = opening_brackets:len()\n\
    \    local closing_brackets_count = closing_brackets:len()\n    for i = 1, opening_brackets_count\
    \ do\n        local opening_bracket = opening_brackets:sub(i, i)\n        local\
    \ closing_bracket = closing_brackets:sub(i, i)\n        if opening_bracket ~=\
    \ closing_bracket then\n            return false\n        end\n    end\n    return\
    \ true\nend", "  local open_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ close_brackets = brackets:gsub(\"[<>]\", \"\")\n  local open_brackets_count\
    \ = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  local open_brackets_table = { }\n  local close_brackets_table = { }\n  for\
    \ i = 1, open_brackets_count do\n    open_brackets_table[open_brackets:sub(i,\
    \ i)] = true\n  end\n  for i = 1, close_brackets_count do\n    close_brackets_table[close_brackets:sub(i,\
    \ i)] = true\n  end\n  for i = 1, open_brackets_count do\n    if not open_brackets_table[i]\
    \ then\n      return false\n    end\n  end\n  for i = 1, close_brackets_count\
    \ do\n    if not close_brackets_table[i] then\n      return false\n    end\n \
    \ end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\"<\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\">\")\n  local opening_brackets_index_count = opening_brackets_index\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index + opening_brackets_count\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index + closing_brackets_count\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local ",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_char = opening_brackets[1]\n\
    \  local closing_brackets_char = closing_brackets[1]\n  while opening_brackets_index\
    \ < opening_brackets_count do\n    local opening_brackets_char = opening_brackets[opening_brackets_index]\n\
    \    local closing_brackets_char = closing_brackets[closing_brackets_index]\n\
    \    if opening_brackets_char == closing_brackets_char then\n      opening_brackets_index\
    \ = opening_brackets_index + 1\n      closing_brackets_index = closing_brackets_index\
    \ + 1\n    else\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local open_brackets = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local open_brackets_count = open_brackets:len()\n\
    \  local close_brackets_count = close_brackets:len()\n  local open_brackets_index\
    \ = 1\n  local close_brackets_index = 1\n  local open_brackets_open = false\n\
    \  local close_brackets_open = false\n  while open_brackets_index < open_brackets_count\
    \ do\n    if open_brackets_open then\n      if open_brackets_index == open_brackets_count\
    \ then\n        return true\n      else\n        close_brackets_index = close_brackets_index\
    \ + 1\n      end\n    else\n      if open_brackets_index == open_brackets_count\
    \ then\n        open_brackets_open = true\n      else\n        open_brackets_index\
    \ = open_brackets_index + 1\n      end\n    end\n  end\n  while close_brackets_index\
    \ < close_brackets_count do\n    if close_brackets_open then\n      if close_brackets_index\
    \ == close_brackets_count then\n        return true\n      else\n        open_brackets_index\
    \ = open_brackets_index + 1\n      end\n    else\n      if close_brackets_index\
    \ == close_brackets_count then\n        close_brackets_open = true\n      else\n\
    \        close_brackets_index = close_brackets_index + 1\n      end\n    end\n\
    \  end\n  return false\nend", "  local opening = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing = brackets:gsub(\"[<>]\", \"\")\n  local opening_count = opening:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^\", \"\")\n  local closing_count = closing:gsub(\"[^<>]+\"\
    , \"\"):gsub(\"^\", \"\")\n  return opening_count == closing_count\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:gsub(\"<\", \"\")\n  local closing = brackets:gsub(\"\
    >\", \"\")\n  local opening_count = opening:gsub(\"(%w+)(%w+)\", function(a, b,\
    \ c) return #b > #c end):gsub(\"(%w+)(%w+)\", function(a, b, c) return #b < #c\
    \ end)\n  local closing_count = closing:gsub(\"(%w+)(%w+)\", function(a, b, c)\
    \ return #b > #c end):gsub(\"(%w+)(%w+)\", function(a, b, c) return #b < #c end)\n\
    \  return opening_count == closing_count\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets = brackets:gsub(\"\
    %[<>]+\", \"[<>]\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n  local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_prev = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_prev = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_prev = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_prev = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_index_prev = closing_brackets_index\
    \ - 1\n  local opening_brackets_index_next = opening_brackets_index + 1\n  local\
    \ closing_brackets_index_next = closing_brackets_index + 1\n  local opening_brackets_index_prev\
    \ = opening", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets_count then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"%1\")\n  local closing_brackets = brackets:gsub(\"\
    %1[<>]+\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n\
    \         return false\n      end\n      if closing ~= \">\" and closing ~= \"\
    <\" then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening = brackets:gsub(\"<\", \"\")\n  local closing = brackets:gsub(\">\"\
    , \"\")\n  return opening:len() == closing:len() and opening:sub(1, opening:len()\
    \ - closing:len()) == closing\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets:len() then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<>\", \"\")\n  local closing_brackets = brackets:gsub(\"<\"\
    , \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_open = false\n\
    \  local closing_brackets_open = false\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    if opening_brackets_open then\n      closing_brackets_index = closing_brackets_index\
    \ + 1\n      if not closing_brackets_index then\n        opening_brackets_open\
    \ = false\n      elseif closing_brackets_index == closing_brackets_count then\n\
    \        opening_brackets_open = false\n      else\n        opening_brackets_open\
    \ = opening_brackets:sub(1, opening_brackets_index) == closing_brackets:sub(1,\
    \ closing_brackets_index)\n      end\n    else\n      opening_brackets_open =\
    \ opening_brackets:sub(1, opening_brackets_index) == \">\"\n    end\n    opening_brackets_index\
    \ = opening_brackets_index + 1\n  end\n  return opening_brackets_open\nend", " \
    \  for i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n     \
    \    return false\n      end\n      if closing ~= \">\" and closing ~= \"<\" then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local open_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local close_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local open_brackets_count = open_brackets:len()\n  local close_brackets_count\
    \ = close_brackets:len()\n  local open_brackets_index = 1\n  local close_brackets_index\
    \ = 1\n  local open_brackets_next = true\n  local close_brackets_next = true\n\
    \  while open_brackets_index < open_brackets_count do\n    local open_bracket\
    \ = open_brackets:sub(open_brackets_index, open_brackets_index)\n    if open_brackets_next\
    \ then\n      open_brackets_index = open_brackets_index + 1\n      open_brackets_next\
    \ = false\n    end\n    if open_bracket ~= close_brackets:sub(close_brackets_index,\
    \ close_brackets_index) then\n      close_brackets_index = close_brackets_index\
    \ + 1\n      close_brackets_next = false\n    end\n  end\n  return open_brackets_index\
    \ == open_brackets_count and close_brackets_index == close_brackets_count\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  while opening_brackets_index >= 0 do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ 1)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ 1)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n    opening_brackets_index = opening_brackets_index - 1\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n  end\n  return true\nend", "   for i = 1, #brackets\
    \ do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"<\" then\n         return false\n\
    \      end\n      if closing ~= \">\" and closing ~= \"<\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = closing_brackets_count - 1\n  local opening_bracket\
    \ = opening_brackets[opening_brackets_index]\n  local closing_bracket = closing_brackets[closing_brackets_index]\n\
    \  while opening_bracket ~= nil do\n    if opening_bracket:sub(1, 1) ~= closing_bracket\
    \ then\n      return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ - 1\n    closing_brackets_index = closing_brackets_index - 1\n    opening_bracket\
    \ = opening_brackets[opening_brackets_index]\n    closing_bracket = closing_brackets[closing_brackets_index]\n\
    \  end\n  return true\nend", "  local open_brackets = brackets:gsub(\"[<>]\",\
    \ \"\")\n  local close_brackets = brackets:gsub(\"[<>]\", \"\")\n  local open_brackets_count\
    \ = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  local open_brackets_index = open_brackets:find(\">\")\n  local close_brackets_index\
    \ = close_brackets:find(\"<\")\n  local open_brackets_index_count = open_brackets_index\n\
    \  if open_brackets_index_count == 0 then\n    return close_brackets_count ==\
    \ 0\n  else\n    return open_brackets_count == close_brackets_count and open_brackets_index\
    \ == close_brackets_index\n  end\nend", "  local open_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local close_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ open_brackets_count = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  local open_brackets_index = 1\n  local close_brackets_index = 1\n  local open_brackets_open\
    \ = false\n  local close_brackets_open = false\n  local open_brackets_close =\
    \ false\n  local close_brackets_close = false\n  while open_brackets_index < open_brackets_count\
    \ do\n    if open_brackets_open then\n      if open_brackets_close then\n    \
    \    if open_brackets_index == open_brackets_count then\n          close_brackets_open\
    \ = false\n        else\n          close_brackets_index = close_brackets_index\
    \ + 1\n        end\n      else\n        if open_brackets_index == open_brackets_count\
    \ then\n          open_brackets_open = false\n        else\n          open_brackets_index\
    \ = open_brackets_index + 1\n        end\n      end\n    elseif close_brackets_open\
    \ then\n      if close_brackets_close then\n        if close_brackets_index ==\
    \ close_brackets_count then\n          open_brackets_open = false\n        else\n\
    \          open_brackets_index = open_brackets_index + 1\n        end\n      else\n\
    \        if close_brackets_index == close_brackets_count then\n          close_brackets_close\
    \ = false\n        else\n          close_brackets_index = close_brackets_index\
    \ + 1\n        end\n      end\n    else\n      if open_brackets_close then\n \
    \       if open_brackets_index == open_brackets_count then\n          open_brackets_open\
    \ = false\n        else\n          open_brackets_index = open_brackets_index +\
    \ 1\n        end\n      else\n        if close_brackets_index == close_brackets_count\
    \ then\n          close_brackets_close = false\n        else\n          close_brackets_index\
    \ = close_brackets_index + 1\n        end\n      end\n    end\n    if open_brackets_open\
    \ then\n      if close_brackets_close then\n        if open_brackets_index ==\
    \ open_brackets_count then\n          close_bra", "  local opening_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index_count\
    \ = opening_brackets_index\n  if opening_brackets_index_count > 0 then\n    opening_brackets_index\
    \ = opening_brackets_index + 1\n    opening_brackets_index_count = opening_brackets_index\n\
    \  end\n  if closing_brackets_index_count > 0 then\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n    closing_brackets_index_count = closing_brackets_index\n\
    \  end\n  if opening_brackets_index_count ~= closing_brackets_index_count then\n\
    \    return false\n  end\n  for i = 1, opening_brackets_index_count do\n    if\
    \ opening_brackets_index == closing_brackets_index then\n      return false\n\
    \    end\n    if opening_brackets[i + 1] ~= closing_brackets[opening_brackets_index\
    \ + 1] then\n      return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index - 1\n  end\n  return\
    \ true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_146_specialFilter
language: lua
prompt: "-- Write a function that takes an array of numbers as input and returns \n\
  -- the number of elements in the array that are greater than 10 and both \n-- first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n-- For example:\n-- specialFilter([15,\
  \ -73, 14, -15]) => 1 \n-- specialFilter([33, -2, -3, 45, 21, 109]) => 2\nlocal\
  \ function specialFilter(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = specialFilter\n\
  \    lu.assertEquals(candidate({5, -2, 1, -5}), 0)\n    lu.assertEquals(candidate({15,\
  \ -73, 14, -15}), 1)\n    lu.assertEquals(candidate({33, -2, -3, 45, 21, 109}),\
  \ 2)\n    lu.assertEquals(candidate({43, -12, 93, 125, 121, 109}), 4)\n    lu.assertEquals(candidate({71,\
  \ -2, -33, 75, 21, 19}), 3)\n    lu.assertEquals(candidate({1}), 0)\n    lu.assertEquals(candidate({}),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10\
    \ then\n      if num % 2 == 1 then\n        if num % 2 == 1 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 then\n   \
    \   if num % 2 == 1 then\n        if num % 2 == 1 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for _, num in pairs(nums) do\n        if num > 10 then\n    \
    \        if num % 2 == 1 then\n                if num % 2 == 1 then\n        \
    \            count = count + 1\n                end\n            end\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums\
    \ do\n        if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and\
    \ nums[i] ~= math.floor(nums[i]) then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 then\n            if num % 2 == 1 then\n\
    \                if num % 2 == 1 then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n \
    \     if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 0 then\n          if\
    \ nums[i] % 100 == 0 then\n            if nums[i] % 1000 == 0 then\n         \
    \     count = count + 1\n            end\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 then\n      if num % 2 == 1 then\n        if num % 10 ==\
    \ 1 and num % 100 != 11 then\n          count = count + 1\n        end\n     \
    \ end\n    end\n  end\n  return count\nend", "  local count = 0\n  for _, num\
    \ in ipairs(nums) do\n    if num > 10 then\n      if num % 2 == 1 then\n     \
    \   if num % 2 == 1 then\n          count = count + 1\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 then\n      if num % 2 == 1 then\n        if num % 10 ==\
    \ 1 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 then\n            if num % 2 == 1 then\n                if\
    \ num % 10 == 1 and num % 100 != 11 then\n                    count = count +\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n \
    \     if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 then\n\
    \            if num % 2 == 1 then\n                if num % 2 == 1 then\n    \
    \                count = count + 1\n                end\n            end\n   \
    \     end\n    end\n    return count\nend", "  local count = 0\n  for i = 1, #nums\
    \ do\n    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2\
    \ == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 then\n      if num % 2 == 1 then\n        if num % 2 ==\
    \ 1 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ if nums[i] > 10 then\n            if nums[i] % 2 == 1 then\n               \
    \ if nums[i] % 10 == 0 then\n                    if nums[i] % 100 == 0 then\n\
    \                        if nums[i] % 1000 == 0 then\n                       \
    \     count = count + 1\n                        end\n                    end\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 then\n\
    \      if num % 2 == 1 then\n        if num % 2 == 1 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 then\n   \
    \         if num % 2 == 1 then\n                if num % 10 == 1 then\n      \
    \              if num % 100 == 0 then\n                        count = count +\
    \ 1\n                    end\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 then\n      if num % 2 == 1 then\n        if num % 10 ==\
    \ 1 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n \
    \   if num > 10 then\n      if num % 2 == 1 then\n        if num % 2 == 1 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num\
    \ > 10 then\n      if num % 2 == 1 then\n        if num % 2 == 1 then\n      \
    \    count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

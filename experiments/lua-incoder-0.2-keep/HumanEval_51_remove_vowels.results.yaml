language: lua
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels:contains(char)\
    \ then\n      new_text = new_text .. char\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvu1jbz_.lua:17:\
    \ attempt to call a nil value (method 'contains')\nstack traceback:\n\t/tmp/tmpnvu1jbz_.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpnvu1jbz_.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu22wk1pp.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpu22wk1pp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu22wk1pp.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpu22wk1pp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphgte1ey3.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmphgte1ey3.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels:contains(char)\
    \ then\n      new_text = new_text .. char\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvu1jbz_.lua:17:\
    \ attempt to call a nil value (method 'contains')\nstack traceback:\n\t/tmp/tmpnvu1jbz_.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpnvu1jbz_.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpef61ruf1.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpef61ruf1.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpceelv55w.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpceelv55w.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n  local new_text = text:gsub('[^'\
    \ .. table.concat(vowels, '|') .. ']', '');\n  return new_text;\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmproz2imq8.lua:22:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmproz2imq8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpef61ruf1.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpef61ruf1.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjjoklu3s.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpjjoklu3s.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu22wk1pp.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpu22wk1pp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu22wk1pp.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpu22wk1pp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if text[i] ~= '' then\n      if text[i] ~= text[i] then\n \
    \       new_text = new_text .. text[i]\n      end\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxmnec65c.lua:29:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpxmnec65c.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoiha_0v7.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpoiha_0v7.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk8n68yzp.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpk8n68yzp.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', '')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpatdk_4j7.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpatdk_4j7.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjjoklu3s.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpjjoklu3s.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n   \
    \   new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphj0n7_zs.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmphj0n7_zs.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwann13pq.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpwann13pq.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwann13pq.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpwann13pq.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"

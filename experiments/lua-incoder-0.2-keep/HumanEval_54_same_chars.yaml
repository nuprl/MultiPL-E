name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n-- True\n-- >>> same_chars('abcd', 'dddddddabc')\n-- True\n\
  -- >>> same_chars('dddddddabc', 'abcd')\n-- True\n-- >>> same_chars('eabcd', 'dddddddabc')\n\
  -- False\n-- >>> same_chars('abcd', 'dddddddabce')\n-- False\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n-- False\nlocal function same_chars(s0, s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for\
    \ i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n\
    \  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1 < l1 do\n    if s0[i0]\
    \ ~= s1[i1] then return false end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n \
    \ return i0 == l0 and i1 == l1\nend", "  local l0 = #s0 or 0\n  local l1 = #s1\
    \ or 0\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1 < l1 do\n    if\
    \ s0[i0] ~= s1[i1] then return false end\n    i0 = i0 + 1\n    i1 = i1 + 1\n \
    \ end\n  return i0 == l0 and i1 == l1\nend", "  local n0, n1 = #s0, #s1\n  if\
    \ n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "   if #s0 ~= #s1 then return\
    \ false end\n   for i=1, #s0 do\n      if s0[i] ~= s1[i] then return false end\n\
    \   end\n   return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~=\
    \ n1 then return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n\
    \  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n  end\n  return true\nend", "  -- Check lengths\n  if\
    \ #s0 ~= #s1 then\n    return false\n  end\n  -- Check characters\n  for i = 0,\
    \ #s0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\
    \ return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n \
    \ if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0:sub(i,\
    \ i) ~= s1:sub(i, i) then return false end\n  end\n  return true\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1,\
    \ l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for\
    \ i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\n    return false\n\
    \  end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\n      return false\n \
    \   end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n\
    \  if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then return false end\n  end\n  return true\nend", "  local n0 = #s0\n\
    \  local n1 = #s1\n  local i0\n  local i1\n  for i0 = 1, n0 do\n    for i1 = 1,\
    \ n1 do\n      if s0[i0] == s1[i1] then return true end\n    end\n  end\n  return\
    \ false\nend", "  local n0 = #s0\n  local n1 = #s1\n  local i0\n  local i1\n \
    \ for i0 = 1, n0 do\n    for i1 = 1, n1 do\n      if s0[i0] == s1[i1] then\n \
    \       return true\n      end\n    end\n  end\n  return false\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  for\
    \ i = 1, l0 do\n    if string.sub(s0, i, i) ~= string.sub(s1, i, i) then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local len0 = #s0\n \
    \ local len1 = #s1\n  local i = 0\n  local j = 0\n  while i < len0 and j < len1\
    \ do\n    if s0[i] == s1[j] then\n      i = i + 1\n      j = j + 1\n    else\n\
    \      i = i + 1\n      j = j + 1\n    end\n  end\n  return i == len0 and j ==\
    \ len1\nend", "  -- Check length\n  if #s0 ~= #s1 then\n    return false\n  end\n\
    \  -- Check characters\n  for i = 0, #s0 do\n    if s0[i] ~= s1[i] then\n    \
    \  return false\n    end\n  end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

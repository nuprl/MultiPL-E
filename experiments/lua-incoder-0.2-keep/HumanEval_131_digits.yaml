name: HumanEval_131_digits
language: lua
prompt: "-- Given a positive integer n, return the product of the odd digits.\n--\
  \ Return 0 if all digits are even.\n-- For example:\n-- digits(1)  == 1\n-- digits(4)\
  \  == 0\n-- digits(235) == 15\nlocal function digits(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
  \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n \
  \   lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014), 5)\n\
  \    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
  \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\
    \ % 10\n    n = math.floor(n/10)\n  end\n  return product\nend", "  local nDigits\
    \ = math.floor(n/10)\n  if nDigits == 0 then\n    return 0\n  else\n    return\
    \ (n%10) * (math.floor(n/10))\n  end\nend", "  if n < 0 then return 0 end\n  local\
    \ product = 1\n  for i = 1, n do\n    if n % 2 == 1 then\n      product = product\
    \ * i\n    end\n    n = n / 2\n  end\n  return product\nend", "  local product\
    \ = 1\n  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local product = 1\n  local i = 1\n  while n\
    \ > 0 do\n    product = product * i % 10\n    i = i + 1\n    n = n / 10\n  end\n\
    \  return product\nend", "  if n < 10 then\n    return n\n  else\n    local digits\
    \ = math.floor(n/10)\n    local remainder = n - 10*digits\n    return digits*10\
    \ + digits(remainder)\n  end\nend", "  if n == 0 then\n    return 0\n  end\n \
    \ local digit = 1\n  local product = 1\n  while n > 0 do\n    digit = n % 10\n\
    \    product = product * digit\n    n = n / 10\n  end\n  return product\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  local ndigits = 0\n\
    \  while n > 0 do\n    local digit = n % 10\n    n = math.floor(n / 10)\n    ndigits\
    \ = ndigits + digit\n  end\n  return ndigits\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  local digits = math.floor(n)\n  if digits == 0 then\n    return\
    \ 0\n  end\n  local product = 1\n  local remainder = n - digits\n  while remainder\
    \ > 0 do\n    product = product * 2\n    remainder = remainder - 2\n  end\n  return\
    \ product\nend", "  local product = 1\n  for i = 1, n do\n    product = product\
    \ * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\nend",
  "  if n < 0 then\n    return 0\n  end\n  local n1 = math.floor(n)\n  local n2 =\
    \ n - n1\n  local product = 1\n  while n2 > 0 do\n    product = product * 10 +\
    \ n2 % 2\n    n2 = n2 // 2\n  end\n  return product\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n < 10 then\n    return n\n  else\n    local digits =\
    \ math.floor(n/10)\n    local remainder = n - 10*digits\n    return digits*10\
    \ + digits(remainder)\n  end\nend", "  local nDigits = math.floor(math.log10(n))\n\
    \  if nDigits == 0 then\n    return 0\n  else\n    local nDigits = nDigits - 1\n\
    \    local product = 1\n    for i = 1, nDigits do\n      product = product * math.floor(n/10)\
    \ % 10\n      n = math.floor(n/10)\n    end\n    return product\n  end\nend",
  "  local product = 1\n  local digit\n  for digit = 1, n do\n    if n % 2 == 1 then\n\
    \      product = product * digit\n    end\n    n = n / 2\n  end\n  return product\n\
    end", "  if n == 0 then return 0 end\n  local digit = 1\n  while n > 0 do\n  \
    \  digit = n * digit\n    n = math.floor(n/10)\n  end\n  return digit\nend", " \
    \ if n < 0 then\n    return 0\n  end\n  local digit = 1\n  while n > 0 do\n  \
    \  digit = n * digit\n    n = n / 10\n  end\n  return digit\nend", "  local product\
    \ = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = n\
    \ % 10\n  end\n  return product\nend", "  local digits = 0\n  while n > 0 do\n\
    \    digits = digits * 10 + n % 10\n    n = n / 10\n  end\n  return digits\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n == 0 then\n \
    \   return 0\n  end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n  local\
    \ n3 = math.floor(n2)\n  local n4 = n2 - n3\n  local n5 = math.floor(n4)\n  local\
    \ n6 = n4 - n5\n  local n7 = math.floor(n6)\n  local n8 = n6 - n7\n  local n9\
    \ = math.floor(n8)\n  local n10 = n8 - n9\n  local n11 = math.floor(n10)\n  local\
    \ n12 = n10 - n11\n  local n13 = math.floor(n12)\n  local n14 = n12 - n13\n  local\
    \ n15 = math.floor(n14)\n  local n16 = n14 - n15\n  local n17 = math.floor(n16)\n\
    \  local n18 = n16 - n17\n  local n19 = math.floor(n18)\n  local n20 = n18 - n19\n\
    \  local n21 = math.floor(n20)\n  local n22 = n20 - n21\n  local n23 = math.floor(n22)\n\
    \  local n24 = n22 - n23\n  local n25 = math.floor(n24)\n  local n26 = n24 - n25\n\
    \  local n27 = math.floor(n26)\n  local n28 = n26 - n27\n  local n29 = math.floor(n28)\n\
    \  local n30 = n28 - n29\n  local n31 = math.floor(n30)\n  local n32 = n30 - n31\n\
    \  local n33 = math.floor(n32)\n  local n34 = n32 - n33\n  local n35 = math.floor(n34)\n\
    \  local n36 = n34 - n35\n  local n37 = math.floor(n36)\n  local n38 = n36 - n37\n\
    \  local n39 = math.floor(n38)\n  local n40 = n38 - n39\n  local n41 = math.floor(n40)\n\
    \  local n42 = n40 - n41\n  local n43 = math.floor(n42)\n  local n44 = n42 - n43\n\
    \  local n45 = math.floor(n44)\n  local n46 = n44 - n45\n  local n47 = math.floor(n46)\n\
    \  local n48 = n46 - n47\n  local n49 = math.floor(n48)\n  local n50 = n48 - n49\n\
    \  local n5", "  if n == 0 then\n    return 0\n  end\n  local digit = 1\n  while\
    \ n > 0 do\n    digit = n * digit\n    n = n / 10\n  end\n  return digit\nend",
  "  if n < 0 then\n    return 0\n  end\n  local digits = math.floor(n/10)\n  if digits\
    \ == 0 then\n    return 0\n  end\n  local remainder = n % 10\n  if remainder ==\
    \ 0 then\n    return digits\n  end\n  return digits*10 + digits(remainder)\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor((n %\
    \ 10) + 0.5)\n    n = math.floor(n/10)\n  end\n  return product\nend", "  local\
    \ product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n \
    \   n = math.mod(n, 10)\n  end\n  return product\nend", "  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor((n % 10) + 0.5)\n    n\
    \ = math.floor((n / 10) + 0.5)\n  end\n  return product\nend", "  local product\
    \ = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n\
    \  local digits = math.floor(n/10)\n  if n % 10 == 0 then\n    return digits\n\
    \  end\n  return digits*10 + digits(n % 10)\nend", "  local product = 1\n  for\
    \ i = 1, n do\n    product = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ product = 1\n  local digit\n  for digit = 1, n do\n    product = product * digit\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n  end\n  return\
    \ product\nend", "  if n < 0 then\n    return 0\n  end\n  local n1 = math.floor(n)\n\
    \  local n2 = n - n1\n  local product = 1\n  while n2 > 0 do\n    product = product\
    \ * 10 + n2\n    n2 = n2 - (n2 % 2)\n  end\n  return product\nend", "  local nDigits\
    \ = math.floor(n/10)\n  if nDigits % 2 == 1 then\n    return 0\n  end\n  local\
    \ product = 1\n  for i = 1, nDigits do\n    product = product * 10 + n % 10\n\
    \    n = math.floor(n/10)\n  end\n  return product\nend", "  local product = 1\n\
    \  local digit\n  for digit = 1, n do\n    product = product * digit\n  end\n\
    \  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local digits\
    \ = math.floor(n/10)\n  if digits == 0 then\n    return 0\n  end\n  local remainder\
    \ = n % 10\n  if remainder == 0 then\n    return digits\n  end\n  return digits*10\
    \ + remainder\nend", "  if n < 0 then\n    return 0\n  elseif n < 10 then\n  \
    \  return n\n  else\n    return n * digits(math.floor(n/10))\n  end\nend", " \
    \ local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  local product = 1\n\
    \  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor((n - i) / 2)\n  end\n  return product\nend", "  if n\
    \ < 0 then\n    return 0\n  end\n  local n1 = math.floor(n)\n  local n2 = n -\
    \ n1\n  local product = 1\n  while n2 > 0 do\n    product = product * 10 + n2\n\
    \    n2 = n2 % 10\n  end\n  return product\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  local product = 1\n  while n > 0 do\n    product = product * n %\
    \ 10\n    n = n / 10\n  end\n  return product\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 10 then\n    return n\n  else\n    local digits = math.floor(math.log(n,\
    \ 10))\n    return digits and digits(n / 10) * 10 + n % 10\n  end\nend", "  if\
    \ n == 0 then return 0 end\n  local d = 0\n  while n > 0 do\n    d, n = div(n,\
    \ 10)\n    if d % 2 == 1 then return 0 end\n  end\n  return d\nend", "  local\
    \ product = 1\n  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n\
    \ / 10)\n  end\n  return product\nend", "  local product = 1\n  local digit\n\
    \  for digit = 1, n do\n    if n % 2 == 1 then\n      product = product * digit\n\
    \    end\n    n = math.floor(n/10)\n  end\n  return product\nend", "  if n < 0\
    \ then\n    return 0\n  end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n\
    \  local product = 1\n  while n2 > 0 do\n    product = product * 10 + n2\n   \
    \ n2 = n2 % 10\n  end\n  return product\nend", "  if n == 0 then\n    return 0\n\
    \  end\n  local digit = 1\n  while n > 0 do\n    digit = n * digit\n    n = math.floor(n/10)\n\
    \  end\n  return digit\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\n\
    end", "  local product = 1\n  local digit\n  for digit = 1, n do\n    product\
    \ = product * digit\n  end\n  return product\nend", "  if n == 0 then return 0\
    \ end\n  local digits = math.floor(math.log(n, 2))\n  if digits == 0 then return\
    \ 0 end\n  local product = 1\n  for i = 1, digits do\n    product = product *\
    \ n % 10\n    n = n / 10\n  end\n  return product\nend", "  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = n % 10\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\n\
    end", "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n  \
    \  return 0\n  elseif n < 10 then\n    return n\n  else\n    local digits = math.floor(n/10)\n\
    \    local remainder = n - 10*digits\n    return digits*10 + digits(remainder)\n\
    \  end\nend", "  if n == 0 then\n    return 0\n  elseif n < 0 then\n    return\
    \ nil\n  else\n    local n1 = math.floor(n)\n    local n2 = math.floor(n/10)\n\
    \    return (n2 - 1) * 10 + n1 - 1\n  end\nend", "  local product = 1\n  for i\
    \ = 1, n do\n    product = product * math.floor((n % 10) + 0.5)\n    n = math.floor((n\
    \ / 10) + 0.5)\n  end\n  return product\nend", "  local product = 1\n  for i =\
    \ 1, n do\n    product = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ digit = 0\n  while n > 0 do\n    digit = n * 10 + digit\n    n = math.floor(n/10)\n\
    \  end\n  return digit\nend", "  if n < 10 then\n    return n\n  else\n    return\
    \ n * digits(math.floor(n/10))\n  end\nend", "  if n < 0 then\n    return 0\n\
    \  end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n  local product = 1\n\
    \  while n2 > 0 do\n    product = product * 10 + n2\n    n2 = n2 % 10\n  end\n\
    \  return product\nend", "  local product = 1\n  while n > 0 do\n    product =\
    \ product * n % 10\n    n = math.floor(n/10)\n  end\n  return product\nend", " \
    \ if n < 0 then\n    return 0\n  end\n  local nstr = tostring(n)\n  local digits\
    \ = nstr:match(\"^%d%d*$\")\n  if digits == nil then\n    return 0\n  end\n  local\
    \ product = 1\n  for i = 1, #digits do\n    product = product * tonumber(digits[i])\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = n % 10\n  end\n  return product\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  local product = 1\n\
    \  local digits = math.floor(n/10)\n  while digits > 0 do\n    product = product\
    \ * digits % 10\n    digits = math.floor(digits/10)\n  end\n  return product\n\
    end", "  local product = 1\n  while n > 0 do\n    product = product * n % 10\n\
    \    n = n / 10\n  end\n  return product\nend", "  local product = 1\n  while\
    \ n > 0 do\n    product = product * n % 10\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  local n1 = math.floor(n)\n  local n2 = math.floor(n/10)\n\
    \  local n3 = math.floor(n/100)\n  local n4 = math.floor(n/1000)\n  local n5 =\
    \ math.floor(n/10000)\n  local n6 = math.floor(n/100000)\n  local n7 = math.floor(n/1000000)\n\
    \  local n8 = math.floor(n/10000000)\n  local n9 = math.floor(n/100000000)\n \
    \ local n10 = math.floor(n/1000000000)\n  local n11 = math.floor(n/10000000000)\n\
    \  local n12 = math.floor(n/100000000000)\n  local n13 = math.floor(n/1000000000000)\n\
    \  local n14 = math.floor(n/10000000000000)\n  local n15 = math.floor(n/100000000000000)\n\
    \  local n16 = math.floor(n/1000000000000000)\n  local n17 = math.floor(n/10000000000000000)\n\
    \  local n18 = math.floor(n/100000000000000000)\n  local n19 = math.floor(n/100000000000000001)\n\
    \  local n20 = math.floor(n/100000000000000002)\n  local n21 = math.floor(n/100000000000000003)\n\
    \  local n22 = math.floor(n/100000000000000004)\n  local n23 = math.floor(n/100000000000000005)\n\
    \  local n24 = math.floor(n/100000000000000006)\n  local n25 = math.floor(n/100000000000000007)\n\
    \  local n26 = math.floor(n/100000000000000008)\n  local n27 = math.floor(n/100000000000000009)\n\
    \  local n28 = math.floor(n/100000000000000010)\n  local n29 = math.floor(n/100000000000000011)\n\
    \  local n30 = math.floor(n/100000000000000012)\n  local n31 = math.floor(n/100000000000000013)\n\
    \  local n32 = math.floor(n/100000000000000014)\n  local n33 = math.floor(n/100000000000000015)\n\
    \  local n34 = math.floor(n/100000000000000016)\n  local n35 = math.floor(n/100000000000000017)\n\
    \  local n36 = math.floor(n/100000000000000018)\n  local n37 = math.floor(n/100000000000000019)\n\
    \  local n38 = math.floor(n/100000000000000020)\n  local n39 = math.floor(n/100000000000000021)\n\
    \  local n40 = ", "  if n < 10 then\n    return n\n  else\n    local digits =\
    \ math.floor(n/10)\n    local remainder = n % 10\n    return digits*10 + digits(remainder)\n\
    \  end\nend", "  local nstr = tostring(n)\n  local digits = nstr:match(\"^%d%d*$\"\
    )\n  if digits == nil then\n    return 0\n  end\n  local digits = tonumber(digits)\n\
    \  local product = 1\n  for i = 1, digits do\n    product = product * 2\n  end\n\
    \  return product\nend", "  if n < 10 then\n    return n\n  elseif n < 100 then\n\
    \    return n * digits(n / 10)\n  elseif n < 1000 then\n    return n * digits(n\
    \ / 100) * digits(n / 10)\n  else\n    return n * digits(n / 1000) * digits(n\
    \ / 100) * digits(n / 10)\n  end\nend", "  local product = 1\n  while n > 0 do\n\
    \    product = product * n % 10\n    n = math.floor(n/10)\n  end\n  return product\n\
    end", "  local n1 = math.floor(n)\n  local n2 = math.floor(n/10)\n  local n3 =\
    \ math.floor(n/100)\n  local n4 = math.floor(n/1000)\n  local n5 = math.floor(n/10000)\n\
    \  local n6 = math.floor(n/100000)\n  local n7 = math.floor(n/1000000)\n  local\
    \ n8 = math.floor(n/10000000)\n  local n9 = math.floor(n/100000000)\n  local n10\
    \ = math.floor(n/1000000000)\n  local n11 = math.floor(n/10000000000)\n  local\
    \ n12 = math.floor(n/100000000000)\n  local n13 = math.floor(n/1000000000000)\n\
    \  local n14 = math.floor(n/10000000000000)\n  local n15 = math.floor(n/100000000000000)\n\
    \  local n16 = math.floor(n/1000000000000000)\n  local n17 = math.floor(n/10000000000000000)\n\
    \  local n18 = math.floor(n/100000000000000000)\n  local n19 = math.floor(n/100000000000000001)\n\
    \  local n20 = math.floor(n/100000000000000002)\n  local n21 = math.floor(n/100000000000000003)\n\
    \  local n22 = math.floor(n/100000000000000004)\n  local n23 = math.floor(n/100000000000000005)\n\
    \  local n24 = math.floor(n/100000000000000006)\n  local n25 = math.floor(n/100000000000000007)\n\
    \  local n26 = math.floor(n/100000000000000008)\n  local n27 = math.floor(n/100000000000000009)\n\
    \  local n28 = math.floor(n/100000000000000010)\n  local n29 = math.floor(n/100000000000000011)\n\
    \  local n30 = math.floor(n/100000000000000012)\n  local n31 = math.floor(n/100000000000000013)\n\
    \  local n32 = math.floor(n/100000000000000014)\n  local n33 = math.floor(n/100000000000000015)\n\
    \  local n34 = math.floor(n/100000000000000016)\n  local n35 = math.floor(n/100000000000000017)\n\
    \  local n36 = math.floor(n/100000000000000018)\n  local n37 = math.floor(n/100000000000000019)\n\
    \  local n38 = math.floor(n/100000000000000020)\n  local n39 = math.floor(n/100000000000000021)\n\
    \  local n40 = ", "  if n == 0 then return 0 end\n  if n < 10 then return n end\n\
    \  local digits = n % 10\n  if digits == 0 then return 0 end\n  return digits(digits\
    \ / 2) + digits\nend", "  if n < 0 then\n    return 0\n  end\n  local nDigits\
    \ = math.floor(math.log(math.abs(n), 10))\n  local product = 1\n  for i = 1, nDigits\
    \ do\n    product = product * math.floor((n % 10) + 0.5)\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local ndigits = math.floor(math.log(n, 2))\n\
    \  if ndigits == 0 then\n    return 0\n  else\n    local ndigits2 = math.floor(ndigits\
    \ / 2)\n    return n * digits(math.floor(ndigits / 2)) * digits(ndigits2)\n  end\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local digits = math.floor(n/10)\n\
    \  if digits == 0 then\n    return 0\n  end\n  local remainder = n % 10\n  if\
    \ remainder == 0 then\n    return digits\n  end\n  return digits*10 + remainder\n\
    end", "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\
    \ % 10\n    n = math.floor(n/10)\n  end\n  return product\nend", "  local product\
    \ = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = n\
    \ % 10\n  end\n  return product\nend", "  if n == 0 then\n    return 0\n  end\n\
    \  local digit = 1\n  while n > 0 do\n    digit = n * digit\n    n = n / 10\n\
    \  end\n  return digit\nend", "  local product = 1\n  local digit = 1\n  while\
    \ n > 0 do\n    digit = n % 10\n    product = product * digit\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local ndigits = 0\n  local ndigits_prev = 1\n\
    \  while n > 0 do\n    local digit = n\n    local ndigits_curr = 1\n    while\
    \ digit > 0 do\n      digit = digit / 2\n      ndigits_curr = ndigits_curr * 2\n\
    \    end\n    if ndigits == 0 then\n      ndigits = ndigits_prev\n    else\n \
    \     ndigits = ndigits * ndigits_prev\n    end\n    ndigits_prev = ndigits_curr\n\
    \  end\n  return ndigits\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor((n % 10) + 0.5)\n    n = math.floor((n / 10) + 0.5)\n\
    \  end\n  return product\nend", "  local nDigits = math.floor(math.log10(n))\n\
    \  local product = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/math.pow(10,\
    \ i))\n  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n\
    \    product = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return\
    \ product\nend", "  local product = 1\n  for i = 1, n do\n    product = product\
    \ * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\nend",
  "  if n < 0 then\n    return 0\n  end\n  local digits = math.floor(n/10)\n  if n\
    \ % 10 == 0 then\n    return digits\n  end\n  return digits*10 + digits(math.floor(n/10))\n\
    end", "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n  \
    \  return 0\n  end\n  local digits = 1\n  while n > 0 do\n    digits = digits\
    \ * n % 10\n    n = n / 10\n  end\n  return digits\nend", "  local product = 1\n\
    \  local i = 1\n  while n > 0 do\n    product = product * i % 10\n    i = i +\
    \ 1\n    n = n / 10\n  end\n  return product\nend", "  local product = 1\n  for\
    \ i = 1, n do\n    product = product * math.floor((n % 10) + 0.5)\n    n = math.floor(n\
    \ / 10)\n  end\n  return product\nend", "  if n < 10 then\n    return n\n  elseif\
    \ n < 100 then\n    return n * digits(n / 10)\n  elseif n < 1000 then\n    return\
    \ n * digits(n / 100) * digits(n / 10)\n  else\n    return n * digits(n / 1000)\
    \ * digits(n / 100) * digits(n / 10)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  local digits = 1\n  while n > 0 do\n    digits = digits * n % 10\n\
    \    n = n / 10\n  end\n  return digits\nend", "  local product = 1\n  for i =\
    \ 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n, 10)\n\
    \  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ nstr = tostring(n)\n  local digits = nstr:match(\"^%d*([%d]+)$\")\n  if digits\
    \ == nil then\n    return 0\n  end\n  local digits = digits[1]\n  local product\
    \ = 1\n  for i = 1, #digits do\n    product = product * tonumber(digits[i])\n\
    \  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ product = 1\n  while n > 0 do\n    product = product * n % 10\n    n = n / 10\n\
    \  end\n  return product\nend", "  if n < 0 then return 0 end\n  local ndigits\
    \ = math.floor(math.log10(n))\n  if ndigits == 0 then return 0 end\n  local digits\
    \ = math.floor(n/math.pow(10,ndigits))\n  if digits % 2 == 1 then return 0 end\n\
    \  local product = 1\n  for i = 1, digits do\n    product = product * math.floor(n/math.pow(10,ndigits-i))\n\
    \  end\n  return product\nend", "  local product = 1\n  while n > 0 do\n    product\
    \ = product * n % 10\n    n = n / 10\n  end\n  return product\nend", "  if n <\
    \ 0 then\n    return 0\n  end\n  local digits = 1\n  while n > 0 do\n    digits\
    \ = digits * n % 10\n    n = n / 10\n  end\n  return digits\nend", "  local product\
    \ = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n\
    \    product = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return\
    \ product\nend", "  local product = 1\n  for i = 1, n do\n    product = product\
    \ * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\nend",
  "  local product = 1\n  while n > 0 do\n    product = product * n % 10\n    n =\
    \ n / 10\n  end\n  return product\nend", "  local nDigits = math.floor(math.log10(n))\n\
    \  local product = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/10)\n\
    \    n = math.floor(n/10)\n  end\n  return product\nend", "  if n < 0 then\n \
    \   return 0\n  end\n  local digit = 1\n  local product = 1\n  while n > 0 do\n\
    \    digit = n % 10\n    product = product * digit\n    n = n / 10\n  end\n  return\
    \ product\nend", "  local product = 1\n  local i = 1\n  while n > 0 do\n    product\
    \ = product * i + (n % 2)\n    n = math.floor(n/2)\n    i = i + 1\n  end\n  return\
    \ product\nend", "  if n < 0 then\n    return 0\n  elseif n < 10 then\n    return\
    \ n\n  else\n    return n * digits(math.floor(n/10))\n  end\nend", "  if n < 0\
    \ then\n    return 0\n  elseif n < 10 then\n    return n\n  else\n    return n\
    \ % 10 * digits(n / 10)\n  end\nend", "  local product = 1\n  while n > 0 do\n\
    \    product = product * n % 10\n    n = math.floor(n / 10)\n  end\n  return product\n\
    end", "  local nDigits = math.floor(math.log10(n))\n  local product = 1\n  for\
    \ i = 1, nDigits do\n    product = product * math.floor(n/math.pow(10,i))\n  end\n\
    \  return product\nend", "  local nDigits = math.floor(math.log10(n))\n  local\
    \ product = 1\n  local digit\n  for digit = 1, nDigits do\n    product = product\
    \ * math.floor(n/math.pow(10, digit))\n    n = math.floor(n / math.pow(10, digit))\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = n % 10\n  end\n  return product\nend",
  "  if n < 0 then\n    return 0\n  end\n  local digits = 1\n  while n > 0 do\n  \
    \  digits = digits * n % 10\n    n = n / 10\n  end\n  return digits\nend", " \
    \ if n < 0 then\n    return 0\n  end\n  local product = 1\n  local digit\n  for\
    \ digit = 1, n do\n    if n % 2 == 1 then\n      product = product * digit\n \
    \   end\n    n = n / 2\n  end\n  return product\nend", "  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local product = 1\n  while n > 0 do\n    product\
    \ = product * n % 10\n    n = math.floor(n/10)\n  end\n  return product\nend",
  "  if n < 0 then\n    return 0\n  end\n  local digits = 1\n  while n > 0 do\n  \
    \  digits = digits * n % 10\n    n = n / 10\n  end\n  return digits\nend", " \
    \ local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n  \
    \  return 0\n  elseif n < 10 then\n    return n\n  else\n    local digits = math.floor(n/10)\n\
    \    local remainder = n - 10*digits\n    return digits*10 + digits(remainder)\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  end\n  local nstr = tostring(n)\n\
    \  local digits = {}\n  for i = 1, #nstr do\n    local d = tonumber(nstr:sub(i,\
    \ i))\n    if d ~= 0 then\n      digits[#digits + 1] = d % 10\n    end\n  end\n\
    \  if #digits == 0 then\n    return 0\n  end\n  local product = 1\n  for i = 1,\
    \ #digits do\n    product = product * digits[i]\n  end\n  return product\nend",
  "  local product = 1\n  while n > 0 do\n    product = product * n % 10\n    n =\
    \ n / 10\n  end\n  return product\nend", "  local product = 1\n  for i = 1, n\
    \ do\n    product = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n\
    \  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local digits\
    \ = math.floor(n/10)\n  if digits == 0 then\n    return 0\n  end\n  local remainder\
    \ = n % 10\n  if remainder == 0 then\n    return digits\n  end\n  local product\
    \ = 1\n  for i = 1, digits do\n    product = product * 10 + remainder\n    remainder\
    \ = remainder % 10\n  end\n  return product\nend", "  local product = 1\n  for\
    \ i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n, 10)\n\
    \  end\n  return product\nend", "  local ndigits = math.floor(math.log10(n))\n\
    \  if ndigits == 0 then\n    return 0\n  else\n    local product = 1\n    for\
    \ i = 1, ndigits do\n      product = product * math.floor(n/math.pow(10, i))\n\
    \      n = math.floor(n/math.pow(10, i))\n    end\n    return product\n  end\n\
    end", "  local nDigits = math.floor(math.log10(n))\n  local product = 1\n  for\
    \ i = 1, nDigits do\n    product = product * math.floor((n % 10) + 0.5)\n    n\
    \ = math.floor(n / 10)\n  end\n  return product\nend", "  local product = 1\n\
    \  local digit = 1\n  while n > 0 do\n    digit = n % 10\n    product = product\
    \ * digit\n    n = math.floor(n/10)\n  end\n  return product\nend", "  if n ==\
    \ 0 then\n    return 0\n  end\n  local digit = 1\n  local product = 1\n  while\
    \ n > 0 do\n    product = product * digit\n    digit = digit * 10\n    n = n -\
    \ digit\n  end\n  return product\nend", "  if n < 0 then\n    return 0\n  elseif\
    \ n < 10 then\n    return n\n  else\n    return n % 10 * digits(math.floor(n/10))\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 10 then\n    return\
    \ n\n  elseif n < 100 then\n    return n * 2\n  elseif n < 1000 then\n    return\
    \ n * 3\n  elseif n < 10000 then\n    return n * 4\n  elseif n < 100000 then\n\
    \    return n * 5\n  elseif n < 1000000 then\n    return n * 6\n  elseif n < 10000000\
    \ then\n    return n * 7\n  elseif n < 100000000 then\n    return n * 8\n  elseif\
    \ n < 1000000000 then\n    return n * 9\n  else\n    return 0\n  end\nend", " \
    \ local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n  \
    \  return 0\n  end\n  local product = 1\n  while n > 0 do\n    product = product\
    \ * n % 10\n    n = n / 10\n  end\n  return product\nend", "  local product =\
    \ 1\n  local digit\n  for digit = 1, n do\n    product = product * digit\n  end\n\
    \  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor((n % 10) + 0.5)\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  local product = 1\n  for i = 1, n do\n    if n % 2\
    \ == 1 then\n      product = product * i\n    end\n    n = n / 2\n  end\n  return\
    \ product\nend", "  if n < 0 then\n    return 0\n  end\n  local product = 1\n\
    \  while n > 0 do\n    product = product * n % 10\n    n = n / 10\n  end\n  return\
    \ product\nend", "  local product = 1\n  for i = 1, n do\n    product = product\
    \ * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\nend",
  "  if n == 0 then\n    return 0\n  end\n  local digit = 1\n  local product = 1\n\
    \  while n > 0 do\n    digit = n % 10\n    product = product * digit\n    n =\
    \ math.floor(n/10)\n  end\n  return product\nend", "  if n == 0 then return 0\
    \ end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n  local product = 1\n\
    \  while n2 > 0 do\n    product = product * 10 + n2\n    n2 = n2 // 2\n  end\n\
    \  return product\nend", "  local digits = math.floor(n/10)\n  if digits == 0\
    \ then\n    return 0\n  elseif digits % 2 == 1 then\n    return 0\n  else\n  \
    \  return digits*10 + digits(math.floor(n/10))\n  end\nend", "  local product\
    \ = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n    n = math.mod(n,\
    \ 10)\n  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n\
    \  local product = 1\n  while n > 0 do\n    product = product * n % 10\n    n\
    \ = n / 10\n  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n\
    \  local nstr = tostring(n)\n  local digits = {}\n  for i = 1, #nstr do\n    local\
    \ digit = nstr:sub(i,i)\n    if digit == \"0\" then\n      digits[i] = 0\n   \
    \ else\n      digits[i] = digit\n    end\n  end\n  return product( digits )\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local n1 = math.floor(n)\n  local\
    \ n2 = n - n1\n  local product = 1\n  while n2 > 0 do\n    product = product *\
    \ 10 + n2\n    n2 = n2 % 10\n  end\n  return product\nend", "  local product =\
    \ 1\n  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\n\
    end", "  if n == 0 then return 0 end\n  if n < 10 then return n end\n  local digits\
    \ = n % 10\n  if digits == 0 then return 0 end\n  local product = 1\n  for i =\
    \ 1, digits do\n    product = product * 2\n  end\n  return product\nend", "  local\
    \ product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n \
    \   n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n   \
    \ return 0\n  end\n  local digits = math.floor(n/10)\n  if n % 10 == 0 then\n\
    \    return digits\n  end\n  return digits*10 + digits(math.floor(n/10))\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor((n %\
    \ 10) + 0.5)\n    n = math.floor(n/10)\n  end\n  return product\nend", "  if n\
    \ < 10 then\n    return n\n  else\n    return n % 10 * digits(math.floor(n/10))\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  end\n  local product = 1\n  while\
    \ n > 0 do\n    product = product * n % 10\n    n = n / 10\n  end\n  return product\n\
    end", "  local product = 1\n  while n > 0 do\n    product = product * n % 10\n\
    \    n = math.floor(n/10)\n  end\n  return product\nend", "  if n == 0 then\n\
    \    return 0\n  else\n    local digit = 1\n    while n > 0 do\n      digit =\
    \ n * digit\n      n = math.floor(n/10)\n    end\n    return digit\n  end\nend",
  "  if n < 0 then\n    return 0\n  end\n  local nDigits = math.floor(n/10)\n  if\
    \ nDigits == 0 then\n    return 0\n  end\n  local nOddDigits = n % 10\n  if nOddDigits\
    \ > 0 then\n    return nOddDigits * digits(nDigits)\n  end\n  return 0\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor(n/10)\n\
    \    n = math.mod(n, 10)\n  end\n  return product\nend", "  if n < 0 then\n  \
    \  return 0\n  end\n  local product = 1\n  while n > 0 do\n    product = product\
    \ * n % 10\n    n = n / 10\n  end\n  return product\nend", "  local product =\
    \ 1\n  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    if\
    \ n % 2 == 1 then\n      product = product * i\n    end\n    n = n / 2\n  end\n\
    \  return product\nend", "  local digits = math.floor(n/10)\n  if digits == 0\
    \ then\n    return 0\n  elseif digits % 2 == 1 then\n    return 0\n  else\n  \
    \  return digits*10 + digits(math.floor(n/10))\n  end\nend", "  local nDigits\
    \ = math.floor(math.log10(n))\n  if nDigits == 0 then\n    return 0\n  end\n \
    \ local product = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/10)\n\
    \    n = math.floor(n/10)\n  end\n  return product\nend", "  local nDigits = math.floor(math.log10(n))\n\
    \  local product = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/math.pow(10,\
    \ i))\n  end\n  return product\nend", "  local nDigits = math.floor(math.log10(n))\n\
    \  if nDigits == 0 then\n    return 0\n  else\n    local product = 1\n    for\
    \ i = 1, nDigits do\n      product = product * math.floor(n/math.pow(10,i))\n\
    \      n = math.floor(n/math.pow(10,i+1))\n    end\n    return product\n  end\n\
    end", "  local product = 1\n  local digit = 1\n  while n > 0 do\n    digit = n\
    \ % 10\n    product = product * digit\n    n = math.floor(n/10)\n  end\n  return\
    \ product\nend", "  local digits = math.floor(n/10)\n  if digits == 0 then\n \
    \   return 0\n  else\n    return math.floor(n/10) * 10 + digits(math.floor(n%10))\n\
    \  end\nend", "  if n < 0 then\n    return 0\n  end\n  local product = 1\n  while\
    \ n > 0 do\n    product = product * n % 10\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local nDigits\
    \ = math.floor(math.log10(n))\n  if nDigits == 0 then\n    return 0\n  end\n \
    \ local product = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/10)\n\
    \    n = math.floor(n/10)\n  end\n  return product\nend", "  local product = 1\n\
    \  local digit\n  for digit = 1, n do\n    product = product * digit\n  end\n\
    \  return product\nend", "  if n < 0 then\n    return 0\n  elseif n < 10 then\n\
    \    return n\n  else\n    return n % 10 * digits(math.floor(n/10))\n  end\nend",
  "  if n < 0 then\n    return 0\n  end\n  local digits = math.floor(n)\n  if digits\
    \ % 2 == 1 then\n    return 0\n  end\n  local product = 1\n  local i = 1\n  while\
    \ i <= digits do\n    product = product * i\n    i = i + 1\n  end\n  return product\n\
    end", "  local product = 1\n  local digit\n  for digit = 1, n do\n    if n % 2\
    \ == 1 then\n      product = product * digit\n    end\n    n = n / 2\n  end\n\
    \  return product\nend", "  local product = 1\n  while n > 0 do\n    product =\
    \ product * n % 10\n    n = math.floor(n / 10)\n  end\n  return product\nend",
  "  local product = 1\n  local i = 1\n  while n > 0 do\n    product = product * i\
    \ % 10\n    i = i + 1\n    n = n / 10\n  end\n  return product\nend", "  local\
    \ nDigits = math.floor(math.log(n, 2))\n  if nDigits == 0 then\n    return 0\n\
    \  end\n  local product = 1\n  for i = 1, nDigits do\n    product = product *\
    \ n % 10\n    n = n / 10\n  end\n  return product\nend", "  local product = 1\n\
    \  for i = 1, n do\n    product = product * math.floor((n % 10) + 0.5)\n    n\
    \ = math.floor(n / 10)\n  end\n  return product\nend", "  if n == 0 then\n   \
    \ return 0\n  end\n  local nDigits = math.floor(math.log10(n))\n  local product\
    \ = 1\n  for i = 1, nDigits do\n    product = product * math.floor(n/math.pow(10,\
    \ i))\n    n = math.floor(n/math.pow(10, i))\n  end\n  return product\nend", " \
    \ local ndigits = math.floor(math.log10(n))\n  local product = 1\n  for i = 1,\
    \ ndigits do\n    product = product * math.floor(n/math.pow(10,i))\n  end\n  return\
    \ product\nend", "  local product = 1\n  for i = 1, n do\n    product = product\
    \ * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\nend",
  "  local product = 1\n  for i = 1, n do\n    product = product * math.floor((n %\
    \ 10) + 0.5)\n    n = math.floor((n / 10) + 0.5)\n  end\n  return product\nend",
  "  local product = 1\n  local i = 1\n  while n > 0 do\n    product = product * i\
    \ + (n % 2)\n    n = math.floor(n/2)\n    i = i + 1\n  end\n  return product\n\
    end", "  local product = 1\n  for i = 1, n do\n    product = product * math.floor((n\
    \ % 10) + 0.5)\n    n = math.floor((n / 10) + 0.5)\n  end\n  return product\n\
    end", "  local nDigits = math.floor(math.log10(n))\n  if nDigits == 0 then\n \
    \   return 0\n  end\n  local product = 1\n  for i = 1, nDigits do\n    product\
    \ = product * math.floor(n/10)\n    n = math.floor(n/10)\n  end\n  return product\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local product = 1\n  while n >\
    \ 0 do\n    product = product * n % 10\n    n = n / 10\n  end\n  return product\n\
    end", "  local product = 1\n  for i = 1, n do\n    if n % 2 == 1 then\n      product\
    \ = product * i\n    end\n    n = n / 2\n  end\n  return product\nend", "  local\
    \ product = 1\n  for i = 1, n do\n    product = product * math.floor((n - i) /\
    \ 2)\n  end\n  return product\nend", "  local n1 = math.floor(n)\n  local n2 =\
    \ n - n1\n  local product = 1\n  for i = 1, n2 do\n    product = product * 2\n\
    \  end\n  return product\nend", "  local product = 1\n  for i = 1, n do\n    product\
    \ = product * math.floor(n/10)\n    n = math.mod(n, 10)\n  end\n  return product\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local product = 1\n  while n >\
    \ 0 do\n    product = product * n % 10\n    n = n / 10\n  end\n  return product\n\
    end", "  local product = 1\n  while n > 0 do\n    product = product * n % 10\n\
    \    n = math.floor(n / 10)\n  end\n  return product\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n < 10 then\n    return n\n  else\n    local digits =\
    \ math.floor(n/10)\n    local remainder = n - 10*digits\n    return digits*10\
    \ + digits(remainder)\n  end\nend", "  local product = 1\n  local digit\n  for\
    \ digit = 1, n do\n    product = product * digit\n  end\n  return product\nend",
  "  local nDigits = math.floor(math.log10(n))\n  local product = 1\n  for i = 1,\
    \ nDigits do\n    product = product * math.floor(n/math.pow(10,i))\n  end\n  return\
    \ product\nend", "  local product = 1\n  local digit\n  for digit = 1, n do\n\
    \    if n % 2 == 1 then\n      product = product * digit\n    end\n    n = n /\
    \ 2\n  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ nstr = tostring(n)\n  local digits = {}\n  for i = 1, #nstr do\n    local digit\
    \ = tonumber(nstr:sub(i,i))\n    if digit == 0 then\n      return 0\n    end\n\
    \    digits[#digits+1] = digit\n  end\n  local product = 1\n  for i = 1, #digits\
    \ do\n    product = product * digits[i]\n  end\n  return product\nend", "  local\
    \ product = 1\n  local digit\n  for digit = 1, n do\n    product = product * digit\n\
    \  end\n  return product\nend", "  local digits = math.floor(n/10)\n  if digits\
    \ == 0 then\n    return 0\n  else\n    return math.mod(n, 10) * digits(math.floor(n/10))\n\
    \  end\nend", "  if n < 0 then return 0 end\n  local n1 = math.floor(n)\n  local\
    \ n2 = n - n1\n  local product = 1\n  while n2 > 0 do\n    product = product *\
    \ 10 + n2\n    n2 = n2 - (n2 % 2)\n  end\n  return product\nend", "  local product\
    \ = 1\n  while n > 0 do\n    product = product * n % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend", "  if n < 0 then\n    return 0\n  end\n  local\
    \ nstr = tostring(n)\n  local digits = nstr:match(\"^%d%d*$\")\n  if digits ==\
    \ nil then\n    return 0\n  end\n  local product = 1\n  for i = 1, #digits do\n\
    \    product = product * tonumber(digits[i])\n  end\n  return product\nend", " \
    \ local nDigits = math.floor(math.log10(n))\n  local product = 1\n  for i = 1,\
    \ nDigits do\n    product = product * math.floor(n/10) % 10\n    n = math.floor(n/10)\n\
    \  end\n  return product\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

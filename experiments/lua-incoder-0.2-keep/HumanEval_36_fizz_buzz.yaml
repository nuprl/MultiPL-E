name: HumanEval_36_fizz_buzz
language: lua
prompt: "-- Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
  -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
  \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
  \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
  \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000), 192)\n\
  \    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
  \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then count\
    \ = count + 1 end\n    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    local\
    \ remainder = n % 11\n    if remainder == 0 then\n      count = count + 1\n  \
    \  end\n    local remainder2 = n % 13\n    if remainder2 == 0 then\n      count\
    \ = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n \
    \   if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n   \
    \ return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n\
    \  return fizz_buzz(n - 10)\nend", "  if n < 10 then\n    return n\n  elseif n\
    \ % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n\
    \  end\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n  \
    \  if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n\
    \      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 10) + 1\n  end\nend", "  local count = 0\n  while n\
    \ > 0 do\n    count = count + 1\n    if n % 11 == 0 then count = count + 1 end\n\
    \    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n\
    \  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n\
    \ % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  if n < 10 then\n    return n\n  end\n\
    \  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n\
    \ - 10) + fizz_buzz(n - 9)\nend", "  if n < 10 then\n    return n\n  elseif n\
    \ % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11.\n  elseif\
    \ n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 13.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 10 and 11.\n  end\nend", "  if\
    \ n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if\
    \ n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  if n % 11 == 1 then\n\
    \    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 1 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  end\n  return fizz_buzz(n / 10) + 1\nend", "  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 10\
    \ then\n    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n\
    \  else\n    return fizz_buzz(n - 10) + fizz_buzz(n - 9)\n  end\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    elseif i % 11 == 0 then\n      count =\
    \ count + 1\n    elseif i % 13 == 0 then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  if n < 0 then\n    return nil\n  end\n  if n <\
    \ 10 then\n    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return\
    \ n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 13)\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 10) + 1\n  end\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return\
    \ 1\n  end\n  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n\
    \    return 3\n  end\n  return 0\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n  \
    \  if n % 11 == 0 and n % 13 == 0 then\n      count = count + 1\n    end\n   \
    \ n = math.floor(n/10)\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 10 and 11.\n\
    \  end\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i +\
    \ 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n\
    \ % 11 == 0 and n % 13 == 0 then\n    return n\n  else\n    return fizz_buzz(n\
    \ - 10) + fizz_buzz(n - 9)\n  end\nend", "  if n < 10 then\n    return n\n  end\n\
    \  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n\
    \ - 10) + fizz_buzz(n - 9)\nend", "  if n < 10 then\n    return n\n  elseif n\
    \ % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- FizzBuzz\n  elseif n % 13\
    \ == 0 then\n    return fizz_buzz(n / 13) + 1 -- FizzBuzz\n  else\n    return\
    \ fizz_buzz(n / 10) + 1 -- Fizz\n  end\nend", "  local count = 0\n  local i =\
    \ 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if\
    \ n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 and n % 13\
    \ == 0 then\n    return 0\n  elseif n % 11 == 1 then\n    return 1\n  elseif n\
    \ % 13 == 1 then\n    return 2\n  else\n    return 3\n  end\nend", "  local count\
    \ = 0\n  while n > 0 do\n    local digit = n % 10\n    if digit == 7 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n / 10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return n + fizz_buzz(n / 11)\n\
    \  end\n  if n % 13 == 0 then\n    return n + fizz_buzz(n / 13)\n  end\n  return\
    \ n\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n    return\
    \ n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  if n\
    \ % 11 == 1 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 1 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n\
    \ - 11)\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i\
    \ % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    count\
    \ = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n   \
    \ if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count\
    \ + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n  \
    \  n = math.floor(n/10)\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- FizzBuzz\n\
    \  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- FizzBuzz\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Fizz\n  end\nend", "  local count = 0\n \
    \ for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  if n < 0 then\n    return 0\n\
    \  end\n  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 ==\
    \ 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0\
    \ do\n    count = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n\
    \    end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    count\
    \ = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n   \
    \ if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    if n %\
    \ 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  while n > 0 do\n    count = count + 1\n    if n %\
    \ 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  end\n  if n %\
    \ 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", "  local count = 0\n\
    \  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  end\n  if n %\
    \ 11 == 0 and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n \
    \   return 1\n  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend", "  if n < 10 then\n    return n\n  elseif\
    \ n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n\
    \  end\nend", "  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n\
    \ - 9)\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n  \
    \  if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n\
    \      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n > 0 do\n    if n % 11 ==\
    \ 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend",
  "  local count = 0\n  while n > 0 do\n    local digit = n % 10\n    if digit ==\
    \ 7 then\n      count = count + 1\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return count\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n    return\
    \ 3\n  end\n  return fizz_buzz(n - 1)\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 7\n  elseif n % 13\
    \ == 0 then\n    return fizz_buzz(n / 13) + 7\n  else\n    return fizz_buzz(n\
    \ / 10) + 3\n  end\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    count\
    \ = count + 1\n    if n % 11 == 0 and n % 13 == 0 then\n      count = count +\
    \ 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n\
    \ % 11 == 0 and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n\
    \    return 1\n  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n > 0 do\n    count = count\
    \ + 1\n    local remainder = n % 11\n    if remainder == 0 or remainder == 13\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1 -- FizzBuzz\n  elseif n % 13 ==\
    \ 0 then\n    return fizz_buzz(n / 13) + 1 -- FizzBuzz\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Fizz\n  end\nend", "  local count = 0\n  for i = 1, n do\n    if\
    \ i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 0\n  end\n\
    \  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13 == 0 then\n    return\
    \ 2\n  end\n  return 3\nend", "  local count = 0\n  while n > 0 do\n    if n %\
    \ 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1\
    \ -- Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 10 and 11.\n  end\nend", "  local count = 0\n  while n > 0\
    \ do\n    count = count + 1\n    if n % 11 == 0 then count = count + 1 end\n \
    \   if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 to the result\
    \ because we found a multiple of 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Add 1 to the result because we found a multiple of 13.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Add 1 to the result because we found a multiple\
    \ of 10.\n  end\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13\
    \ == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n\
    \ / 10) + 1\n  end\nend", "  if n < 10 then\n    return n\n  elseif n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  else\n    return fizz_buzz(n - 10)\n\
    \  end\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n   \
    \ return fizz_buzz(n / 11) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Add 1 because\
    \ we count the digit 7 twice.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add\
    \ 1 because we count the digit 7 twice.\n  end\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n    \
    \  count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count +\
    \ 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  if n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return n\n\
    \  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n\
    \ - 10) + fizz_buzz(n - 9)\nend", "  local count = 0\n  local i = 1\n  while i\
    \ <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if n % i == 0 and n / i ~= math.floor(n/i) then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n  \
    \  return fizz_buzz(n / 11) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11.\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 13.\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 10 and 11.\n  end\nend", "  local count = 0\n\
    \  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    local\
    \ remainder = n % 11\n    if remainder == 0 then\n      count = count + 1\n  \
    \  end\n    local remainder2 = n % 13\n    if remainder2 == 0 then\n      count\
    \ = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend",
  "  local count = 0\n  while n > 0 do\n    local remainder = n % 11\n    if remainder\
    \ == 0 then\n      count = count + 1\n    end\n    local remainder2 = n % 13\n\
    \    if remainder2 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if n %\
    \ 11 == 0 then\n    return 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n\
    \  return fizz_buzz(n - 1)\nend", "  local count = 0\n  local div = math.floor(n/11)\n\
    \  local mod = math.mod(n, 11)\n  if div == 0 and mod == 0 then\n    return count\n\
    \  end\n  if div == 0 then\n    count = count + 1\n  end\n  if mod == 0 then\n\
    \    count = count + 1\n  end\n  if div > 0 and mod > 0 then\n    count = count\
    \ + 1\n  end\n  if div > 0 and mod < 0 then\n    count = count + 1\n  end\n  if\
    \ div < 0 and mod > 0 then\n    count = count + 1\n  end\n  if div < 0 and mod\
    \ < 0 then\n    count = count + 1\n  end\n  return count\nend", "  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend", "  if n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return\
    \ n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n \
    \ if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend",
  "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1 -- Add 1 because we count the digit 7 twice.\n  elseif n % 13 == 0\
    \ then\n    return fizz_buzz(n / 13) + 1 -- Add 1 because we count the digit 7\
    \ twice.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add 1 because we count the\
    \ digit 7 twice.\n  end\nend", "  if n < 0 then\n    return 0\n  elseif n < 11\
    \ then\n    return 1\n  elseif n < 13 then\n    return 2\n  else\n    return fizz_buzz(n\
    \ - 11) + fizz_buzz(n - 13)\n  end\nend", "  if n < 0 then\n    return nil\n \
    \ end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n    return\
    \ fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  end\n  return nil\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for\
    \ i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 0 then\n      count = count + 1\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n\
    \ / 11)\n  end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n\
    \ / 13)\n  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif\
    \ n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 because we count\
    \ the digit 7 twice.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Add 1 because we count the digit 7 twice.\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Add 1 because we count the digit 7 twice.\n  end\nend", "  if n\
    \ < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n\
    \  end\n  return 0\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0\
    \ do\n    if n % 11 == 1 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if n % i == 0 and n % 11 == 0 and n % 13 == 0 then\n \
    \     count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if\
    \ n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 0 then\n\
    \    return 2\n  end\n  if n % 13 == 0 then\n    return 3\n  end\n  return 0\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n >= 11 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  while n >= 13 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n  else\n    return fizz_buzz(n / 10)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  end\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  elseif n % 11\
    \ == 1 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 1 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n  end\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n\
    \  return fizz_buzz(n - 10) + fizz_buzz(n - 13)\nend", "  local count = 0\n  for\
    \ i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "  local count = 0\n  while n >= 11\
    \ do\n    count = count + 1\n    n = math.floor(n/10)\n  end\n  if n % 11 == 0\
    \ then\n    count = count + 1\n  end\n  if n % 13 == 0 then\n    count = count\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n  \
    \  if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ nil\nend", "  if n < 0 then\n    return 0\n  end\n  if n % 11 == 0 then\n  \
    \  return 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return fizz_buzz(n\
    \ - 1)\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if n %\
    \ i == 0 and n / i % 11 == 0 or n / i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return 1\n  end\n\
    \  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend", "  local count\
    \ = 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor((n\
    \ - remainder) / 11)\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  while n > 0 do\n    count = count + 1\n    local remainder\
    \ = n % 11\n    if remainder == 0 then\n      count = count + 1\n      remainder\
    \ = n % 13\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", " \
    \ local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i\
    \ % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n % 11 ==\
    \ 0 and n % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n\
    \ - 9)\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i +\
    \ 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n    if\
    \ n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 7 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  while n > 0 do\n    count = count + 1\n    if n %\
    \ 11 == 0 then count = count + 1 end\n    if n % 13 == 0 then count = count +\
    \ 1 end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    local remainder = n % 11\n    if remainder == 0 then\n\
    \      count = count + 1\n    end\n    local remainder2 = n % 13\n    if remainder2\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return 0\n \
    \ end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n % 13 == 0\
    \ then\n    return n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 13)\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  else\n    return 0\n  end\nend", "  if n < 10\
    \ then\n    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11)\
    \ + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n\
    \  return 0\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n\
    \    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n \
    \   if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1\
    \ then\n    return 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return\
    \ 0\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n    if\
    \ n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n\
    \      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  else\n    return 0\n  end\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n % 13 ==\
    \ 0 then\n    return n\n  end\n  if n % 11 == 1 then\n    return fizz_buzz(n /\
    \ 11) + 1\n  end\n  if n % 13 == 1 then\n    return fizz_buzz(n / 13) + 1\n  end\n\
    \  return fizz_buzz(n / 10) + 1\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  local count = 0\n  local div = math.floor(n/11)\n  if div == 0 or div == 1\
    \ then\n    count = count + 1\n  end\n  n = n - div*11\n  div = math.floor(n/13)\n\
    \  if div == 0 or div == 1 then\n    count = count + 1\n  end\n  return count\n\
    end", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return 0\n  end\nend", "  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0\
    \ do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return 0\n \
    \ end\n  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13 == 0 then\n   \
    \ return 2\n  end\n  return fizz_buzz(n - 1)\nend", "  local count = 0\n  for\
    \ i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 and n % 13 == 0 then\n\
    \      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n    return n\n\
    \  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\
    \ -- Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n  end\n  return nil\nend", "  if n < 10 then\n \
    \   return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  elseif\
    \ n % 11 == 1 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 1 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n    return\
    \ n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return\
    \ fizz_buzz(n - 10)\nend", "  if n < 0 then\n    return 0\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1 then\n    return\
    \ 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return 0\nend", "  if\
    \ n < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n\
    \  end\n  return 0\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if n % i == 0 and n % 11 == 0 and n % 13 == 0 then\n      count = count +\
    \ 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n \
    \   return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and\
    \ n % 13 == 0 then\n    return n\n  end\n  if n % 11 == 1 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  end\n  if n % 13 == 1 then\n    return fizz_buzz(n / 13) + 1\n\
    \  end\n  return fizz_buzz(n / 10) + 1\nend", "  local count = 0\n  local i =\
    \ 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 10\
    \ then\n    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n\
    \  elseif n % 11 == 1 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13\
    \ == 1 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n\
    \ / 10) + 1\n  end\nend", "  local count = 0\n  while n > 0 do\n    count = count\
    \ + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  elseif n % 13 ==\
    \ 0 then\n    return fizz_buzz(n / 13) + 1 -- Return the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  end\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n >= 11 do\n    count = count\
    \ + 1\n    local remainder = n % 11\n    if remainder == 7 then\n      count =\
    \ count + 1\n    end\n    n = math.floor(n/11)\n  end\n  if n >= 13 then\n   \
    \ count = count + 1\n  end\n  return count\nend", "  if n < 0 then return nil\
    \ end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13 == 0 then return\
    \ n end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 9)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n  end\n\
    \  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Return the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13.\n  end\n  return nil\nend", "  local count = 0\n  while n > 0 do\n\
    \    count = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n   \
    \ end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

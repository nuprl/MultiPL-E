name: HumanEval_55_fib
language: lua
prompt: "-- Return n-th Fibonacci number.\n-- >>> fib(10)\n-- 55\n-- >>> fib(1)\n\
  -- 1\n-- >>> fib(8)\n-- 21\nlocal function fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
  \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
  \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
  \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n    return\
    \ 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n-2) + fib(n-1)\n\
    \  end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  elseif n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  elseif n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 2 then\n    return 1\n  else\n    return\
    \ fib(n-1) + fib(n-2)\n  end\nend", "  if n < 2 then\n    return n\n  else\n \
    \   return fib(n-1) + fib(n-2)\n  end\nend", "  if n <= 1 then\n    return n\n\
    \  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n < 0 then\n \
    \   return nil\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n   \
    \ return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <\
    \ 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", " \
    \ if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end", "  if n < 2 then return n end\n  return fib(n-1) + fib(n-2)\nend", "  if\
    \ n < 0 then\n    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n \
    \ if n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  elseif n < 2 then\n    return\
    \ n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_94_skjkasdkd
language: lua
prompt: "-- You are given a list of integers.\n-- You need to find the largest prime\
  \ value and return the sum of its digits.\n-- Examples:\n-- For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n-- For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n-- For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n-- For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n-- For lst = [0,81,12,3,1,21] the output should be 3\n--\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nlocal function skjkasdkd(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
  \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
  \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
  \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
  \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
  \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
  \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n    \
    \    if lst[i] > max then\n            max = lst[i]\n        end\n    end\n  \
    \  for i = 1, #lst do\n        if lst[i] == max then\n            sum = sum +\
    \ lst[i]\n        end\n    end\n    return sum\nend", "    local largest = 0\n\
    \    local largestSum = 0\n    for i = 1, #lst do\n        local sum = 0\n   \
    \     for j = 1, #lst do\n            if lst[j] == i then\n                sum\
    \ = sum + lst[j]\n            end\n        end\n        if sum > largest then\n\
    \            largest = sum\n            largestSum = sum\n        end\n    end\n\
    \    return largestSum\nend", "    local max = 0\n    local sum = 0\n    for i\
    \ = 1, #lst do\n        local num = lst[i]\n        if num > 0 then\n        \
    \    if num > max then\n                max = num\n            end\n        end\n\
    \    end\n    for i = 1, #lst do\n        local num = lst[i]\n        if num >\
    \ 0 then\n            if num == max then\n                sum = sum + num\n  \
    \          end\n        end\n    end\n    return sum\nend", "    local max = 0\n\
    \    local sum = 0\n    for i = 1, #lst do\n        local prime = true\n     \
    \   for j = 2, #lst do\n            if lst[i] % j == 0 then\n                prime\
    \ = false\n                break\n            end\n        end\n        if prime\
    \ then\n            sum = sum + lst[i]\n            if sum > max then\n      \
    \          max = sum\n            end\n        end\n    end\n    return max\n\
    end", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if\
    \ lst[i] > max then\n            max = lst[i]\n        end\n    end\n    for i\
    \ = 1, #lst do\n        if lst[i] == max then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "  -- Write your code here\n  local\
    \ max = 0\n  local maxNum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > max then\n      max = num\n      maxNum = i\n    end\n  end\n  return\
    \ maxNum + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] == max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  -- Write your code here\n  local max = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n  \
    \  end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n   \
    \ for i = 1, #lst do\n        local prime = true\n        for j = 2, #lst do\n\
    \            if lst[i] % j == 0 then\n                prime = false\n        \
    \        break\n            end\n        end\n        if prime then\n        \
    \    sum = sum + lst[i]\n            if sum > max then\n                max =\
    \ sum\n            end\n        end\n    end\n    return max\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "    local max\
    \ = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n    \
    \    if lst[i] > max then\n            sum = sum + math.floor(math.log10(max))\n\
    \        end\n    end\n    return sum\nend", "  local max = 0\n  local maxNum\
    \ = 0\n  local maxNumDigit = 0\n  local maxNumDigitDigit = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    local digit = math.floor(num / 10)\n    if digit\
    \ > maxNumDigit then\n      max = digit\n      maxNum = num\n      maxNumDigit\
    \ = digit\n      maxNumDigitDigit = math.floor(num / math.pow(10, digit))\n  \
    \  end\n  end\n  if maxNumDigit == 0 then\n    return maxNum\n  else\n    return\
    \ maxNumDigit + maxNumDigitDigit\n  end\nend", "  local max = 0\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > 0 then\n     \
    \ local prime = true\n      for j = 2, #num - 1 do\n        local m = num % j\n\
    \        if m == 0 then\n          prime = false\n          break\n        end\n\
    \      end\n      if prime then\n        max = num\n        sum = sum + num\n\
    \      end\n    end\n  end\n  return sum + max\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "    local max = 0\n    local\
    \ sum = 0\n    for i = 1, #lst do\n        local prime = true\n        for j =\
    \ 2, #lst do\n            if lst[j] % i == 0 then\n                prime = false\n\
    \                break\n            end\n        end\n        if prime then\n\
    \            sum = sum + lst[i]\n            if sum > max then\n             \
    \   max = sum\n            end\n        end\n    end\n    return max\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            max = n\n\
    \        end\n        sum = sum + math.floor(n / 10)\n    end\n    return sum\
    \ + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if\
    \ lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local n = lst[i]\n        if n > max then\n            max = n\n     \
    \   end\n        sum = sum + math.floor(math.log10(n))\n    end\n    return sum\
    \ + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ num = lst[i]\n    if num > 0 then\n      local prime = true\n      for j = 2,\
    \ math.floor(math.sqrt(num)) + 1 do\n        if num % j == 0 then\n          prime\
    \ = false\n          break\n        end\n      end\n      if prime then\n    \
    \    max = max or num\n        sum = sum + num\n      end\n    end\n  end\n  return\
    \ sum + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n \
    \   local num = lst[i]\n    if num > 0 then\n      local prime = true\n      for\
    \ j = 2, #num do\n        if num % j == 0 then\n          prime = false\n    \
    \    end\n      end\n      if prime then\n        if max < num then\n        \
    \  max = num\n        end\n        sum = sum + num\n      end\n    end\n  end\n\
    \  return sum + max\nend", "    local max = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        local n = lst[i]\n        if n > max then\n            max\
    \ = n\n        end\n        sum = sum + math.floor(n/10)\n    end\n    return\
    \ sum + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            max = n\n\
    \        end\n        sum = sum + math.floor(n)\n    end\n    return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n)\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    if num > 0 then\n      local prime = true\n\
    \      for j = 2, #num + 1 do\n        if num % j == 0 then\n          prime =\
    \ false\n          break\n        end\n      end\n      if prime then\n      \
    \  max = num\n        sum = sum + num\n      end\n    end\n  end\n  return sum\
    \ + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n\
    \        local num = lst[i]\n        if num > 0 then\n            local prime\
    \ = true\n            for j = 2, #num-1 do\n                if num % j == 0 then\n\
    \                    prime = false\n                    break\n              \
    \  end\n            end\n            if prime then\n                sum = sum\
    \ + num\n                if sum > max then\n                    max = sum\n  \
    \              end\n            end\n        end\n    end\n    return max\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        if n > max then\n            max = n\n        end\n        sum\
    \ = sum + math.floor(n/10)\n    end\n    return sum + max\nend", "    local max\
    \ = 0\n    local maxNum = 0\n    local sum = 0\n    for i = 1, #lst do\n     \
    \   local num = lst[i]\n        if num > max then\n            max = num\n   \
    \         maxNum = i\n        end\n    end\n    for i = 1, #lst do\n        local\
    \ num = lst[i]\n        if num == max then\n            sum = sum + num\n    \
    \    end\n    end\n    return sum + maxNum\nend", "  -- Write your code here\n\
    \  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n    end\n  end\n  return\
    \ sum\nend", "    local max = 0\n    local maxIndex = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n            maxIndex\
    \ = i\n        end\n    end\n    local sum = 0\n    for i = 1, #lst do\n     \
    \   if lst[i] > max then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i=1,#lst\
    \ do\n        local j = 1\n        while j<=#lst and lst[i]%j==0 do\n        \
    \    j = j + 1\n        end\n        if j>max then\n            max = j\n    \
    \    end\n        sum = sum + j\n    end\n    return sum\nend", "  local max =\
    \ 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num\
    \ > 0 then\n      local prime = true\n      for j = 2, #num + 1 do\n        if\
    \ num % j == 0 then\n          prime = false\n          break\n        end\n \
    \     end\n      if prime then\n        sum = sum + num\n        if sum > max\
    \ then\n          max = sum\n        end\n      end\n    end\n  end\n  return\
    \ max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local num = lst[i]\n        if num > 0 then\n            local prime =\
    \ true\n            for j = 2, #num-1 do\n                if num % j == 0 then\n\
    \                    prime = false\n                    break\n              \
    \  end\n            end\n            if prime then\n                sum = sum\
    \ + num\n                if sum > max then\n                    max = sum\n  \
    \              end\n            end\n        end\n    end\n    return max\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local num\
    \ = lst[i]\n        if num > 0 then\n            local prime = primes[num]\n \
    \           if prime ~= nil then\n                if prime > max then\n      \
    \              max = prime\n                    sum = sum + num\n            \
    \    end\n            end\n        end\n    end\n    return sum\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime = prime_number(lst[i])\n\
    \        if prime > max then\n            max = prime\n            sum = sum +\
    \ prime\n        end\n    end\n    return sum\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum\
    \ + math.floor(math.log10(max))\n      max = lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local largest = 0\n  local sum = 0\n  for i = 1, #lst do\n   \
    \ local prime = true\n    for j = 2, #lst do\n      if lst[i] % j == 0 then\n\
    \        prime = false\n        break\n      end\n    end\n    if prime then\n\
    \      largest = i\n      sum = sum + lst[i]\n    end\n  end\n  return sum + largest\n\
    end", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n    if largest\
    \ == nil then\n      largest = lst[i]\n      sum = lst[i]\n    elseif largest\
    \ < lst[i] then\n      largest = lst[i]\n      sum = sum + largest\n    end\n\
    \  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        local prime = true\n        for j = 2, #lst do\n       \
    \     if lst[i] == lst[j] then\n                prime = false\n              \
    \  break\n            end\n        end\n        if prime then\n            sum\
    \ = sum + lst[i]\n            if sum > max then\n                max = sum\n \
    \           end\n        end\n    end\n    return max\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > max then\n\
    \      max = n\n    end\n    sum = sum + math.floor(n/10)\n  end\n  return sum\
    \ + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n\
    \        local prime = true\n        for j = 2, #lst do\n            if lst[j]\
    \ % i == 0 then\n                prime = false\n                break\n      \
    \      end\n        end\n        if prime then\n            sum = sum + lst[i]\n\
    \            if sum > max then\n                max = sum\n            end\n \
    \       end\n    end\n    return max\nend", "  local max = 0\n  local maxSum =\
    \ 0\n  for i = 1, #lst do\n    local sum = 0\n    for j = 1, #lst[i] do\n    \
    \  sum = sum + lst[i][j]\n    end\n    if sum > max then\n      max = sum\n  \
    \    maxSum = sum\n    end\n  end\n  return maxSum\nend", "  local max = 0\n \
    \ local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > 0\
    \ then\n      local prime = true\n      for j = 2, #num - 1 do\n        local\
    \ prime2 = true\n        for k = 1, #lst do\n          if lst[k] == num - j then\n\
    \            prime2 = false\n            break\n          end\n        end\n \
    \       if prime2 then\n          prime = false\n          break\n        end\n\
    \      end\n      if prime then\n        sum = sum + num\n        if sum > max\
    \ then\n          max = sum\n        end\n      end\n    end\n  end\n  return\
    \ max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local n = lst[i]\n        if n > max then\n            max = n\n     \
    \   end\n        sum = sum + math.floor(n)\n    end\n    return sum\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > 0 then\n      local m = math.floor(math.sqrt(n))\n      local prime\
    \ = true\n      for j = 2, m do\n        if n % j == 0 then\n          prime =\
    \ false\n          break\n        end\n      end\n      if prime then\n      \
    \  sum = sum + math.floor(n)\n        if max < n then\n          max = n\n   \
    \     end\n      end\n    end\n  end\n  return sum + max\nend", "    local max\
    \ = 0\n    local sum = 0\n    for i = 1, #lst do\n        local num = lst[i]\n\
    \        if num > 0 then\n            local prime = true\n            for j =\
    \ 2, #num-1 do\n                if num % j == 0 then\n                    prime\
    \ = false\n                    break\n                end\n            end\n \
    \           if prime then\n                max = max or num\n                sum\
    \ = sum + num\n            end\n        end\n    end\n    return sum, max\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local num\
    \ = lst[i]\n        if num > 0 then\n            local prime = true\n        \
    \    for j = 2, #num - 1 do\n                local m = num % j\n             \
    \   if m == 0 then\n                    prime = false\n                    break\n\
    \                end\n            end\n            if prime then\n           \
    \     sum = sum + num\n                if sum > max then\n                   \
    \ max = sum\n                end\n            end\n        end\n    end\n    return\
    \ max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local n = lst[i]\n        if n > max then\n            max = n\n     \
    \   end\n        sum = sum + math.floor(n)\n    end\n    return sum\nend", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = prime_check(lst[i])\n        if prime > max then\n            max = prime\n\
    \            sum = sum + prime\n        end\n    end\n    return sum\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > 0 then\n      local prime = primes[num] or primes[math.floor(math.sqrt(num))]\
    \ or primes[math.floor(math.sqrt(num))+1]\n      if prime > max then\n       \
    \ max = prime\n        sum = sum + num\n      end\n    end\n  end\n  return sum\n\
    end", "    local max = 0\n    local maxNum = 0\n    for i = 1, #lst do\n     \
    \   local num = lst[i]\n        if num > max then\n            max = num\n   \
    \         maxNum = i\n        end\n    end\n    return maxNum + max\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n\
    \    if prime > max then\n      max = prime\n    end\n    sum = sum + prime %\
    \ 10\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n \
    \ for i = 1, #lst do\n    if lst[i] == max then\n      sum = sum + math.floor(math.log10(max))\n\
    \    end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n  \
    \  end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n   \
    \ for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local max = 0\n    local sum = 0\n    for i=1,#lst do\n        if lst[i]>0\
    \ then\n            local prime = prime_check(lst[i])\n            if prime >\
    \ max then\n                max = prime\n                sum = sum + prime\n \
    \           end\n        end\n    end\n    return sum\nend", "    local max =\
    \ 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime = true\n \
    \       for j = 2, #lst do\n            if lst[i] % j == 0 then\n            \
    \    prime = false\n                break\n            end\n        end\n    \
    \    if prime then\n            sum = sum + lst[i]\n            if sum > max then\n\
    \                max = sum\n            end\n        end\n    end\n    return\
    \ max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ prime = prime_check(lst[i])\n    if prime > max then\n      max = prime\n  \
    \    sum = sum + prime\n    end\n  end\n  return sum\nend", "    local max = 0\n\
    \    local sum = 0\n    for i = 1, #lst do\n        local n = lst[i]\n       \
    \ if n > max then\n            max = n\n        end\n    end\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            sum = sum\
    \ + math.floor(n/max)\n        end\n    end\n    return sum\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max\
    \ then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            sum = sum + lst[i]\n        end\n \
    \   end\n    return sum\nend", "    local max = 0\n    local sum = 0\n    for\
    \ i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0 then\n         \
    \   local prime = prime_number(n)\n            if prime > max then\n         \
    \       max = prime\n                sum = sum + n\n            end\n        end\n\
    \    end\n    return sum\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for\
    \ your answer. I am not allowed to use any built-in functions. I only can use\
    \ loops, if statements, local variables and functions. I edited my question and\
    \ added my code so far.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that does not use any built-in functions. I hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I am not allowed to use any built-in functions. I only\
    \ can use loops, if statements, local variables and functions. I edited my question\
    \ and added my code so far.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that does not use any built-in functions. I hope it helps.\n<|/ c\
    \ |>\n<| a tags=lua,primes,algorithm |>\nI wrote a Lua script that does this in\
    \ about half a second. \n<code>", "    local max = 0\n    local sum = 0\n    for\
    \ i = 1, #lst do\n        local num = lst[i]\n        if num > 0 then\n      \
    \      local prime = primes[num] or primes[math.floor(num / 2)]\n            if\
    \ prime > max then\n                max = prime\n                sum = sum + num\
    \ % prime\n            end\n        end\n    end\n    return sum\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max\
    \ then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            sum = sum + lst[i]\n        end\n \
    \   end\n    return sum\nend", "    local max = 0\n    local maxSum = 0\n    for\
    \ i = 1, #lst do\n        local sum = 0\n        for j = 1, #lst do\n        \
    \    if lst[j] == i then\n                sum = sum + lst[j]\n            end\n\
    \        end\n        if sum > max then\n            max = sum\n            maxSum\
    \ = sum\n        end\n    end\n    return maxSum\nend", "    local max = 0\n \
    \   local sum = 0\n    for i = 1, #lst do\n        local prime = true\n      \
    \  for j = 2, #lst do\n            if lst[i] % j == 0 then\n                prime\
    \ = false\n                break\n            end\n        end\n        if prime\
    \ then\n            sum = sum + lst[i]\n            if sum > max then\n      \
    \          max = sum\n            end\n        end\n    end\n    return max\n\
    end", "  -- Write your code here\n  local max = 0\n  local sum = 0\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n \
    \ for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \    end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n \
    \   for i = 1, #lst do\n        local n = lst[i]\n        if n > max then\n  \
    \          max = n\n        end\n    end\n    for i = 1, #lst do\n        local\
    \ n = lst[i]\n        if n > max then\n            sum = sum + math.floor(n/max)\n\
    \        end\n    end\n    return sum\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local prime = true\n        for j = 2,\
    \ #lst do\n            if lst[j] % i == 0 then\n                prime = false\n\
    \                break\n            end\n        end\n        if prime then\n\
    \            sum = sum + lst[i]\n            if sum > max then\n             \
    \   max = sum\n            end\n        end\n    end\n    return max\nend", " \
    \   local largest = 0\n    local largestSum = 0\n    for i = 1, #lst do\n    \
    \    local sum = 0\n        for j = 1, #lst[i] do\n            sum = sum + lst[i][j]\n\
    \        end\n        if sum > largest then\n            largest = sum\n     \
    \       largestSum = sum\n        end\n    end\n    return largestSum\nend", " \
    \ -- Write your code here\n  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] == max then\n      sum = sum + lst[i]\n    end\n \
    \ end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local prime = true\n    for j = 2, #lst do\n      if lst[i] % j == 0\
    \ then\n        prime = false\n        break\n      end\n    end\n    if prime\
    \ then\n      sum = sum + lst[i]\n      if sum > max then\n        max = sum\n\
    \      end\n    end\n  end\n  return max\nend", "    local max = 0\n    local\
    \ sum = 0\n    for i = 1, #lst do\n        local num = lst[i]\n        if num\
    \ > 0 then\n            local prime = true\n            for j = 2, #num do\n \
    \               if num % j == 0 then\n                    prime = false\n    \
    \                break\n                end\n            end\n            if prime\
    \ then\n                sum = sum + num\n                if sum > max then\n \
    \                   max = sum\n                end\n            end\n        end\n\
    \    end\n    return max\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  -- Write your code here\n  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > 0 then\n\
    \      local prime = true\n      for j = 2, #num-1 do\n        if num % j == 0\
    \ then\n          prime = false\n          break\n        end\n      end\n   \
    \   if prime then\n        max = max or num\n        sum = sum + num\n      end\n\
    \    end\n  end\n  return sum + max\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    local prime = prime_check(lst[i])\n    if prime > max\
    \ then\n      max = prime\n    end\n    sum = sum + lst[i]\n  end\n  return sum,\
    \ max\nend", "  local largest = 0\n  local sum = 0\n  for i = 1, #lst do\n   \
    \ local prime = true\n    for j = 2, #lst do\n      if lst[i] % j == 0 then\n\
    \        prime = false\n        break\n      end\n    end\n    if prime then\n\
    \      largest = i\n      sum = sum + lst[i]\n    end\n  end\n  return sum + largest\n\
    end", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local\
    \ num = lst[i]\n        if num > 0 then\n            local prime = prime_number(num)\n\
    \            if prime > max then\n                max = prime\n              \
    \  sum = sum + prime\n            end\n        end\n    end\n    return sum\n\
    end", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if\
    \ lst[i] > max then\n            max = lst[i]\n        end\n    end\n    for i\
    \ = 1, #lst do\n        if lst[i] == max then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "  local largest = 0\n  local largestSum\
    \ = 0\n  for i = 1, #lst do\n    local sum = 0\n    for j = 1, #lst do\n     \
    \ if i == j then\n        sum = sum + lst[j]\n      else\n        local prime\
    \ = true\n        for k = 1, #lst do\n          if lst[k] == i then\n        \
    \    prime = false\n            break\n          end\n        end\n        if\
    \ prime then\n          sum = sum + lst[j]\n        end\n      end\n    end\n\
    \    if sum > largest then\n      largest = sum\n      largestSum = sum\n    end\n\
    \  end\n  return largestSum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    local prime = prime_check(lst[i])\n    if prime > max then\n\
    \      max = prime\n      sum = sum + prime\n    end\n  end\n  return sum\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            sum = sum + math.floor(math.log10(max))\n\
    \        end\n    end\n    return sum\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local prime = prime_number(lst[i])\n  \
    \      if prime > max then\n            max = prime\n            sum = sum + prime\n\
    \        end\n    end\n    return sum\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local p = prime(lst[i])\n        if p >\
    \ max then\n            max = p\n            sum = 0\n        end\n        sum\
    \ = sum + lst[i]\n    end\n    return sum, max\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + lst[i]\n  end\n  return sum + max\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max\
    \ then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            sum = sum + lst[i]\n        end\n \
    \   end\n    return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum\
    \ + math.floor(math.log10(max))\n  end\n  return sum\nend", "    local max = 0\n\
    \    local sum = 0\n    for i=1,#lst do\n        local n = lst[i]\n        if\
    \ n > max then\n            max = n\n        end\n        sum = sum + math.floor(n/10)\n\
    \    end\n    return sum + max\nend", "  local max = 0\n  local maxIndex = 0\n\
    \  for i = 1, #lst do\n    local isPrime = true\n    for j = 2, #lst do\n    \
    \  if lst[i] % j == 0 then\n        isPrime = false\n        break\n      end\n\
    \    end\n    if isPrime then\n      max = max + (lst[i]/10)\n      if max > 10\
    \ then\n        max = 10\n      end\n      if maxIndex == i then\n        return\
    \ max\n      end\n    end\n  end\n  return max\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            sum = sum + math.floor(math.log10(max))\n\
    \        end\n    end\n    return sum\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.abs(lst[i]/max))\n\
    \    end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n \
    \   for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local n\
    \ = lst[i]\n        if n > max then\n            max = n\n        end\n    end\n\
    \    for i = 1, #lst do\n        local n = lst[i]\n        if n % max == 0 then\n\
    \            sum = sum + math.floor(n / max)\n        end\n    end\n    return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            sum = sum +\
    \ lst[i]\n        end\n    end\n    return sum\nend", "    local largest = nil\n\
    \    local sum = 0\n    for i = 1, #lst do\n        local prime = true\n     \
    \   for j = 2, #lst do\n            if lst[i] % j == 0 then\n                prime\
    \ = false\n                break\n            end\n        end\n        if prime\
    \ then\n            if largest == nil then\n                largest = lst[i]\n\
    \            elseif largest < lst[i] then\n                largest = lst[i]\n\
    \            end\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum, largest\nend", "    local max = 0\n    local sum = 0\n    for i=1,#lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    for i=1,#lst do\n        if lst[i] == max then\n            sum =\
    \ sum + math.floor(math.log10(max))\n        end\n    end\n    return sum\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = true\n        for j = 2, #lst do\n            if lst[i] % j == 0 then\n  \
    \              prime = false\n                break\n            end\n       \
    \ end\n        if prime then\n            sum = sum + lst[i]\n            if sum\
    \ > max then\n                max = sum\n            end\n        end\n    end\n\
    \    return max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local prime = true\n        for j = 2, #lst do\n            if lst[i]\
    \ % j == 0 then\n                prime = false\n                break\n      \
    \      end\n        end\n        if prime then\n            sum = sum + lst[i]\n\
    \            if sum > max then\n                max = sum\n            end\n \
    \       end\n    end\n    return max\nend", "  local largest = 0\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > largest then\n\
    \      largest = num\n    end\n    if num % 2 == 0 then\n      sum = sum + num\n\
    \    end\n  end\n  return sum + largest\nend", "  local max = 0\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "   \
    \ local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = prime_check(lst[i])\n        if prime > max then\n            max = prime\n\
    \            sum = sum + prime\n        end\n    end\n    return sum\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > 0 then\n      local prime = true\n      for j = 2, #num + 1 do\n\
    \        if num % j == 0 then\n          prime = false\n          break\n    \
    \    end\n      end\n      if prime then\n        sum = sum + num\n        if\
    \ sum > max then\n          max = sum\n        end\n      end\n    end\n  end\n\
    \  return max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local prime = true\n        for j = 2, #lst do\n            if lst[i]\
    \ % j == 0 then\n                prime = false\n                break\n      \
    \      end\n        end\n        if prime then\n            sum = sum + lst[i]\n\
    \            if sum > max then\n                max = sum\n            end\n \
    \       end\n    end\n    return max\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n > max then\n\
    \            max = n\n        end\n        sum = sum + math.floor(n)\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local prime = true\n        for j = 2, #lst do\n            if lst[j]\
    \ % i == 0 then\n                prime = false\n                break\n      \
    \      end\n        end\n        if prime then\n            max = lst[i]\n   \
    \         sum = sum + lst[i]\n        end\n    end\n    return sum, max\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = prime_check(lst[i])\n        if prime > max then\n            max = prime\n\
    \            sum = sum + prime\n        end\n    end\n    return sum\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n)\n\
    \  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n       \
    \ end\n    end\n    for i = 1, #lst do\n        if lst[i] > max then\n       \
    \     sum = sum + math.floor(math.log10(max))\n        end\n    end\n    return\
    \ sum\nend", "    local max = 0\n    local maxNum = 0\n    local sum = 0\n   \
    \ for i = 1, #lst do\n        local num = lst[i]\n        if num > max then\n\
    \            max = num\n            maxNum = i\n        end\n    end\n    for\
    \ i = 1, #lst do\n        local num = lst[i]\n        if num == max then\n   \
    \         sum = sum + num\n        end\n    end\n    return sum\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime = true\n\
    \        for j = 2, #lst do\n            if lst[i] % j == 0 then\n           \
    \     prime = false\n                break\n            end\n        end\n   \
    \     if prime then\n            sum = sum + lst[i]\n            if sum > max\
    \ then\n                max = sum\n            end\n        end\n    end\n   \
    \ return max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            max = n\n\
    \        end\n        sum = sum + math.floor(n/10)\n    end\n    return sum +\
    \ max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local n = lst[i]\n        if n > max then\n            max = n\n     \
    \   end\n    end\n    for i = 1, #lst do\n        local n = lst[i]\n        if\
    \ n > max then\n            sum = sum + math.floor(n/max)\n        end\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    for i = 1, #lst do\n        if lst[i] > max then\n            sum\
    \ = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local max =\
    \ 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n    \
    \    if lst[i] > max then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "  local largest = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n    sum =\
    \ sum + lst[i]\n  end\n  return largest, sum\nend", "    local max = 0\n    local\
    \ maxSum = 0\n    for i = 1, #lst do\n        local sum = 0\n        for j = 1,\
    \ #lst[i] do\n            sum = sum + lst[i][j]\n        end\n        if sum >\
    \ max then\n            max = sum\n            maxSum = sum\n        end\n   \
    \ end\n    return maxSum\nend", "    local max = 0\n    local sum = 0\n    for\
    \ i=1,#lst do\n        local n = lst[i]\n        if n > max then\n           \
    \ max = n\n        end\n        sum = sum + math.floor(math.log(n,10))\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            max = n\n\
    \        end\n        sum = sum + math.floor(n)\n    end\n    return sum\nend",
  "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local n =\
    \ lst[i]\n        if n > max then\n            max = n\n        end\n        sum\
    \ = sum + math.floor(n/10)\n    end\n    return sum + max\nend", "    local max\
    \ = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    for i = 1, #lst do\n    \
    \    if lst[i] > max then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i=1,#lst\
    \ do\n        local n = lst[i]\n        if n>0 then\n            if n>max then\n\
    \                max = n\n            end\n            sum = sum + math.floor(n/10)\n\
    \        end\n    end\n    return sum+max\nend", "  local max = 0\n  local maxNum\
    \ = 0\n  local maxNumDigits = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    local numDigits = math.floor(math.log(num, 10))\n    if numDigits > maxNumDigits\
    \ then\n      max = num\n      maxNumDigits = numDigits\n    end\n  end\n  return\
    \ maxNumDigits + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > 0 then\n            if n % 2 ==\
    \ 0 then\n                local m = n / 2\n                while m > 1 do\n  \
    \                  local t = m\n                    m = m / 2\n              \
    \      if t % 2 == 0 then\n                        m = m + 1\n               \
    \     else\n                        m = m - 1\n                    end\n     \
    \           end\n                if m > max then\n                    max = m\n\
    \                    sum = 0\n                end\n            else\n        \
    \        max = max + 1\n            end\n        end\n    end\n    return sum\
    \ + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    for i = 1, #lst do\n        if lst[i] == max then\n            sum = sum\
    \ + lst[i]\n        end\n    end\n    return sum\nend", "  -- Write your code\
    \ here\n  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if\
    \ lst[i] == max then\n      sum = sum + math.floor(math.log10(max))\n    end\n\
    \  end\n  return sum\nend", "    local max = 0\n    local maxIndex = 0\n    for\
    \ i = 1, #lst do\n        local isPrime = true\n        for j = 2, #lst do\n \
    \           if lst[i] % j == 0 then\n                isPrime = false\n       \
    \         break\n            end\n        end\n        if isPrime then\n     \
    \       max = lst[i]\n            maxIndex = i\n        end\n    end\n    return\
    \ maxIndex + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1,\
    \ #lst do\n        if lst[i] > max then\n            max = lst[i]\n        end\n\
    \    end\n    for i = 1, #lst do\n        if lst[i] == max then\n            sum\
    \ = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local max =\
    \ 0\n    local sum = 0\n    for i = 1, #lst do\n        local num = lst[i]\n \
    \       if num > 0 then\n            local prime = prime_number(num)\n       \
    \     if prime > max then\n                max = prime\n                sum =\
    \ sum + num\n            end\n        end\n    end\n    return sum\nend", "  --\
    \ Write your code here\n  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local num = lst[i]\n    if num > 0 then\n      local prime = true\n     \
    \ local j = 1\n      while prime and j <= num do\n        prime = not prime\n\
    \        j = j + 1\n      end\n      if prime then\n        sum = sum + num\n\
    \        if sum > max then\n          max = sum\n        end\n      end\n    end\n\
    \  end\n  return max\nend", "    local max = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        local n = lst[i]\n        if n > max then\n            max\
    \ = n\n        end\n        sum = sum + math.floor(n)\n    end\n    return sum\n\
    end", "    local max = 0\n    local maxIndex = 0\n    for i = 1, #lst do\n   \
    \     if lst[i] > max then\n            max = lst[i]\n            maxIndex = i\n\
    \        end\n    end\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            sum = sum + lst[maxIndex] - lst[i]\n        end\n  \
    \  end\n    return sum\nend", "    local max = 0\n    local sum = 0\n    for i\
    \ = 1, #lst do\n        local n = lst[i]\n        if n > max then\n          \
    \  max = n\n        end\n        sum = sum + math.floor(n)\n    end\n    return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local p = lst[i]\n        if p == 0 then\n            sum = sum + 0\n\
    \        elseif p == 1 then\n            sum = sum + 1\n        else\n       \
    \     local isPrime = true\n            for j = 2, p do\n                if p\
    \ % j == 0 then\n                    isPrime = false\n                    break\n\
    \                end\n            end\n            if isPrime then\n         \
    \       sum = sum + p % 10\n            else\n                max = p\n      \
    \      end\n        end\n    end\n    return sum, max\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > max then\n\
    \      max = n\n    end\n    sum = sum + math.floor(n/10)\n  end\n  return sum\
    \ + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            sum = sum +\
    \ math.floor(math.log10(max))\n        end\n    end\n    return sum\nend", " \
    \ local max = 0\n  local maxIndex = 0\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      max = lst[i]\n      maxIndex = i\n    end\n  end\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] == max then\n      sum = sum + lst[i]\n\
    \    end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n \
    \   for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    for i = 1, #lst do\n        if lst[i] == max then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = true\n        for j = 2, #lst do\n            if lst[i] % j == 0 then\n  \
    \              prime = false\n                break\n            end\n       \
    \ end\n        if prime then\n            sum = sum + lst[i]\n            if sum\
    \ > max then\n                max = sum\n            end\n        end\n    end\n\
    \    return max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    for i = 1, #lst do\n        if lst[i] > max then\n            sum\
    \ = sum + lst[i]\n        end\n    end\n    return sum\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max =\
    \ lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local prime = true\n    for j = 2,\
    \ #lst do\n      if lst[i] % j == 0 then\n        prime = false\n        break\n\
    \      end\n    end\n    if prime then\n      sum = sum + lst[i]\n      if sum\
    \ > max then\n        max = sum\n      end\n    end\n  end\n  return max\nend",
  "    local max = 0\n    local sum = 0\n    for i=1,#lst do\n        local n = lst[i]\n\
    \        if n>0 then\n            local m = math.floor(n/10)\n            if m>max\
    \ then\n                max = m\n            end\n            sum = sum + m\n\
    \        end\n    end\n    return sum+max\nend", "    local max = 0\n    local\
    \ sum = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max\
    \ = lst[i]\n        end\n    end\n    for i = 1, #lst do\n        if lst[i] ==\
    \ max then\n            sum = sum + lst[i]\n        end\n    end\n    return sum\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n)\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] == max then\n      sum = sum + math.floor(math.log10(max))\n\
    \    end\n  end\n  return sum\nend", "  local max = 0\n  local maxNum = 0\n  for\
    \ i = 1, #lst do\n    local num = lst[i]\n    if num > max then\n      max = num\n\
    \      maxNum = i\n    end\n  end\n  local sum = 0\n  for i = 1, #lst do\n   \
    \ local num = lst[i]\n    if num == max then\n      sum = sum + num\n    end\n\
    \  end\n  return sum\nend", "  local largest = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    local prime = true\n    for j = 2, #lst do\n      if lst[i] % j\
    \ == 0 then\n        prime = false\n        break\n      end\n    end\n    if\
    \ prime then\n      largest = i\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum + largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            sum = sum +\
    \ lst[i]\n        end\n    end\n    return sum\nend", "    local max = 0\n   \
    \ local maxNum = 0\n    for i = 1, #lst do\n        local num = lst[i]\n     \
    \   if num > max then\n            max = num\n            maxNum = i\n       \
    \ end\n    end\n    return maxNum + max\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local num = lst[i]\n        if num > max\
    \ then\n            max = num\n        end\n        sum = sum + num\n    end\n\
    \    return sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst\
    \ do\n        local n = lst[i]\n        if n > max then\n            max = n\n\
    \        end\n        sum = sum + math.floor(n / 10)\n    end\n    return sum\
    \ + max\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n\
    \        local n = lst[i]\n        if n > max then\n            max = n\n    \
    \    end\n        sum = sum + math.floor(math.log10(n))\n    end\n    return sum\
    \ + max\nend", "  local largest = 0\n  local sum = 0\n  for i = 1, #lst do\n \
    \   local prime = true\n    for j = 2, #lst do\n      if lst[i] % j == 0 then\n\
    \        prime = false\n        break\n      end\n    end\n    if prime then\n\
    \      largest = lst[i]\n      sum = sum + lst[i]\n    end\n  end\n  return sum\
    \ + largest\nend", "    local max = 0\n    local maxIndex = 0\n    for i = 1,\
    \ #lst do\n        local isPrime = true\n        for j = 2, #lst do\n        \
    \    if lst[i] % j == 0 then\n                isPrime = false\n              \
    \  break\n            end\n        end\n        if isPrime then\n            max\
    \ = lst[i]\n            maxIndex = i\n        end\n    end\n    return maxIndex\
    \ + max\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ prime = true\n    for j = 2, #lst do\n      if lst[i] % j == 0 then\n      \
    \  prime = false\n        break\n      end\n    end\n    if prime then\n     \
    \ max = lst[i]\n      sum = sum + lst[i]\n    end\n  end\n  return sum, max\n\
    end", "    local max = 0\n    local sum = 0\n    for i=1,#lst do\n        if lst[i]>max\
    \ then\n            max = lst[i]\n        end\n    end\n    for i=1,#lst do\n\
    \        if lst[i]==max then\n            sum = sum + math.floor(math.abs(lst[i]/max))\n\
    \        end\n    end\n    return sum\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n > 0 then\n\
    \            if n % 2 == 0 then\n                local m = n / 2\n           \
    \     while m > 1 do\n                    if m % 2 == 0 then\n               \
    \         m = m / 2\n                    else\n                        max = m\n\
    \                        sum = m\n                        return\n           \
    \         end\n                end\n            else\n                max = n\n\
    \                sum = sum + n\n            end\n        end\n    end\n    return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local n = lst[i]\n        if n > max then\n            max = n\n     \
    \   end\n        sum = sum + math.floor(n)\n    end\n    return sum\nend", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            sum = sum + math.floor(math.log10(max))\n\
    \        end\n    end\n    return sum\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max =\
    \ lst[i]\n        end\n    end\n    for i = 1, #lst do\n        if lst[i] == max\
    \ then\n            sum = sum + lst[i]\n        end\n    end\n    return sum\n\
    end", "    local max = 0\n    local maxNum = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        local num = lst[i]\n        if num > max then\n        \
    \    max = num\n            maxNum = i\n        end\n    end\n    sum = sum +\
    \ max\n    return sum, maxNum\nend", "    local max = 0\n    local sum = 0\n \
    \   for i = 1, #lst do\n        local prime = prime_check(lst[i])\n        if\
    \ prime > max then\n            max = prime\n            sum = 0\n        end\n\
    \        sum = sum + lst[i]\n    end\n    return sum + max\nend", "    local max\
    \ = 0\n    local maxIndex = 0\n    local maxSum = 0\n    local sum = 0\n    for\
    \ i = 1, #lst do\n        local isPrime = true\n        for j = 2, #lst do\n \
    \           if lst[i] % j == 0 then\n                isPrime = false\n       \
    \         break\n            end\n        end\n        if isPrime then\n     \
    \       sum = sum + lst[i]\n            if sum > max then\n                max\
    \ = sum\n                maxIndex = i\n                maxSum = sum\n        \
    \    end\n        end\n    end\n    return maxSum, maxIndex\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime = true\n\
    \        for j = 2, #lst do\n            if lst[i] % j == 0 then\n           \
    \     prime = false\n                break\n            end\n        end\n   \
    \     if prime then\n            sum = sum + lst[i]\n            if sum > max\
    \ then\n                max = sum\n            end\n        end\n    end\n   \
    \ return max\nend", "  -- Write your code here\n  local max = 0\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > 0 then\n     \
    \ local prime = true\n      for j = 2, #num - 1 do\n        if num % j == 0 then\n\
    \          prime = false\n        end\n      end\n      if prime then\n      \
    \  if max < num then\n          max = num\n        end\n        sum = sum + num\n\
    \      end\n    end\n  end\n  return sum + max\nend", "  -- Write your code here\n\
    \  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n      max = lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    local num = lst[i]\n    if num > 0 then\n      local prime\
    \ = true\n      for j = 2, #num + 1 do\n        if num % j == 0 then\n       \
    \   prime = false\n          break\n        end\n      end\n      if prime then\n\
    \        if max < num then\n          max = num\n        end\n        sum = sum\
    \ + num\n      end\n    end\n  end\n  return sum + max\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max =\
    \ lst[i]\n    end\n    sum = sum + lst[i]\n  end\n  return sum + max\nend", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local n\
    \ = lst[i]\n        if n > max then\n            max = n\n        end\n      \
    \  sum = sum + math.floor(n)\n    end\n    return sum\nend", "    local max =\
    \ 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime = prime_check(lst[i])\n\
    \        if prime > max then\n            max = prime\n            sum = sum +\
    \ prime\n        end\n    end\n    return sum\nend", "    local max = 0\n    local\
    \ sum = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0\
    \ then\n            local m = math.floor(math.sqrt(n))\n            if m > max\
    \ then\n                max = m\n            end\n        end\n    end\n    for\
    \ i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0 then\n         \
    \   local m = math.floor(math.sqrt(n))\n            if m > max then\n        \
    \        max = m\n            end\n        end\n    end\n    for i = 1, #lst do\n\
    \        local n = lst[i]\n        if n ~= 0 then\n            local m = math.floor(math.sqrt(n))\n\
    \            if m > max then\n                max = m\n            end\n     \
    \   end\n    end\n    for i = 1, #lst do\n        local n = lst[i]\n        if\
    \ n ~= 0 then\n            local m = math.floor(math.sqrt(n))\n            if\
    \ m > max then\n                max = m\n            end\n        end\n    end\n\
    \    for i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0 then\n  \
    \          local m = math.floor(math.sqrt(n))\n            if m > max then\n \
    \               max = m\n            end\n        end\n    end\n    for i = 1,\
    \ #lst do\n        local n = lst[i]\n        if n ~= 0 then\n            local\
    \ m = math.floor(math.sqrt(n))\n            if m > max then\n                max\
    \ = m\n            end\n        end\n    end\n    for i = 1, #lst do\n       \
    \ local n = lst[i]\n        if n ~= 0 then\n            local m = math.floor(math.sqrt(n))\n\
    \            if m > max then\n                max = m\n            end\n     \
    \   end\n    end\n    for i = 1, #lst do\n        local n = lst[i]\n        if\
    \ n ~= 0 then\n            local m = math.floor(math.sqrt(n))\n            if\
    \ m > max then\n                max = m\n            end\n        end\n    end\n\
    \    for i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0 then\n  \
    \          local m = math.floor(math.sqrt(n))\n            if m > max then\n \
    \               max = m\n            end\n        end\n    end\n    for i = 1,\
    \ #lst do\n        local n = lst[i]\n        if n ~= 0 then\n            local\
    \ m = math.floor(math.sqrt(n))\n            if m > max then\n                max\
    \ = m\n            end\n        end\n    end\n    for i = 1, #lst do\n       \
    \ local n = lst[i]\n        if n ~= 0 then\n            local m = math.floor(math.sqrt(n))\n\
    \            if m > max then\n                max = m\n            end\n", " \
    \   local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local prime\
    \ = true\n        for j = 1, #lst do\n            if lst[i] % lst[j] == 0 then\n\
    \                prime = false\n                break\n            end\n     \
    \   end\n        if prime then\n            sum = sum + lst[i]\n            if\
    \ sum > max then\n                max = sum\n            end\n        end\n  \
    \  end\n    return max\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for\
    \ i = 1, #lst do\n    if lst[i] == max then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  -- Write your code here\n  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max then\n      sum =\
    \ sum + math.floor(math.log10(max))\n    end\n  end\n  return sum\nend", "  --\
    \ Write your code here\n  local largest = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    local prime = true\n    for j = 2, #num do\n\
    \      if num % j == 0 then\n        prime = false\n        break\n      end\n\
    \    end\n    if prime then\n      if largest < num then\n        largest = num\n\
    \      end\n      sum = sum + num\n    end\n  end\n  return sum + largest\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n      max = math.floor(math.pow(10,\
    \ math.floor(math.log10(max))))\n    end\n  end\n  return sum + math.floor(math.log10(max))\n\
    end", "  -- Write your code here\n  local max = 0\n  local maxIndex = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n      maxIndex\
    \ = i\n    end\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] ==\
    \ max then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  --\
    \ Write your code here.\n  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \    end\n  end\n  return sum\nend", "    local max = 0\n    local sum = 0\n \
    \   for i = 1, #lst do\n        local n = lst[i]\n        if n > max then\n  \
    \          max = n\n        end\n        sum = sum + math.floor(n/10)\n    end\n\
    \    return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if\
    \ lst[i] == max then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\n\
    end", "    local max = 0\n    local maxNum = 0\n    local sum = 0\n    for i =\
    \ 1, #lst do\n        local num = lst[i]\n        if num > max then\n        \
    \    max = num\n            maxNum = i\n        end\n    end\n    for i = 1, #lst\
    \ do\n        local num = lst[i]\n        if num == max then\n            sum\
    \ = sum + num\n        end\n    end\n    return sum + maxNum\nend", "    local\
    \ max = 0\n    local sum = 0\n    for i=1,#lst do\n        if lst[i] > max then\n\
    \            max = lst[i]\n        end\n    end\n    for i=1,#lst do\n       \
    \ if lst[i] > max then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local prime = prime_check(lst[i])\n        if prime > max then\n     \
    \       max = prime\n            sum = sum + prime\n        end\n    end\n   \
    \ return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n \
    \       local prime = true\n        for j = 2, #lst do\n            if lst[i]\
    \ % j == 0 then\n                prime = false\n                break\n      \
    \      end\n        end\n        if prime then\n            sum = sum + lst[i]\n\
    \            if sum > max then\n                max = sum\n            end\n \
    \       end\n    end\n    return max\nend", "    local max = 0\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n ~= 0 then\n\
    \            if n % 2 == 0 then\n                local m = n / 2\n           \
    \     while m ~= 1 do\n                    local t = m\n                    m\
    \ = m / 2\n                    if t > max then\n                        max =\
    \ t\n                    end\n                end\n            else\n        \
    \        max = n\n            end\n        end\n    end\n    return sum + max\n\
    end", "    local max = 0\n    local maxSum = 0\n    for i = 1, #lst do\n     \
    \   local sum = 0\n        for j = 1, #lst[i] do\n            sum = sum + lst[i][j]\n\
    \        end\n        if sum > max then\n            max = sum\n            maxSum\
    \ = sum\n        end\n    end\n    return maxSum\nend", "    local max = 0\n \
    \   local sum = 0\n    for i = 1, #lst do\n        local prime = true\n      \
    \  for j = 2, #lst do\n            if lst[j] % i == 0 then\n                prime\
    \ = false\n                break\n            end\n        end\n        if prime\
    \ then\n            sum = sum + lst[i]\n            if sum > max then\n      \
    \          max = sum\n            end\n        end\n    end\n    return max\n\
    end", "    local max = 0\n    local sum = 0\n    for i = 1, #lst do\n        local\
    \ n = lst[i]\n        if n > max then\n            max = n\n        end\n    \
    \    sum = sum + math.floor(n/10)\n    end\n    return sum\nend", "    local max\
    \ = 0\n    local sum = 0\n    for i = 1, #lst do\n        local num = lst[i]\n\
    \        if num > 0 then\n            local prime = prime_number(num)\n      \
    \      if prime > max then\n                max = prime\n                sum =\
    \ sum + prime\n            end\n        end\n    end\n    return sum\nend", " \
    \   local max = 0\n    local maxSum = 0\n    for i = 1, #lst do\n        local\
    \ sum = 0\n        for j = 1, #lst do\n            if lst[j] == i then\n     \
    \           sum = sum + lst[j]\n            end\n        end\n        if sum >\
    \ max then\n            max = sum\n            maxSum = sum\n        end\n   \
    \ end\n    return maxSum\nend", "    local max = 0\n    local sum = 0\n    for\
    \ i = 1, #lst do\n        local num = lst[i]\n        if num > 0 then\n      \
    \      local prime = true\n            for j = 2, #num do\n                if\
    \ num % j == 0 then\n                    prime = false\n                    break\n\
    \                end\n            end\n            if prime then\n           \
    \     max = max or num\n                sum = sum + num\n            end\n   \
    \     end\n    end\n    return sum + max\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

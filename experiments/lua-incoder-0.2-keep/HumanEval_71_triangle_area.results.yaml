language: lua
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn ((a + b - c) * 0.5)\
    \ / 2\n\telseif a + c > b then\n\t\treturn ((a + c - b) * 0.5) / 2\n\telseif b\
    \ + c > a then\n\t\treturn ((b + c - a) * 0.5) / 2\n\telse\n\t\treturn -1\n\t\
    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdz8dfg1c.lua:24:\
    \ expected: 6, actual: 0.5\nstack traceback:\n\t/tmp/tmpdz8dfg1c.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if a + c > b then\
    \ return -1 end\n  if b + c > a then return -1 end\n  return (b * b) - (4 * a\
    \ * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf585wudk.lua:19:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpf585wudk.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then return s end\n\
    \tif s > b then return s end\n\tif s > c then return s end\n\treturn -1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvu6gk32.lua:20:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpnvu6gk32.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\telseif a + c >\
    \ b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\telse\n\t\t\
    return ((a + b + c) / 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b3qry89.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8b3qry89.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\t\treturn\
    \ -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\treturn\
    \ a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telseif s == 4 then\n\t\treturn\
    \ a * b * c\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy4x_rrvd.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpy4x_rrvd.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if a + c > b then\
    \ return -1 end\n  if b + c > a then return -1 end\n  return ((a + b + c) * 0.5)\
    \ / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkpeol62d.lua:19:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpkpeol62d.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\t\treturn\
    \ -1\n\telseif s <= a or s <= b or s <= c then\n\t\treturn s\n\telse\n\t\treturn\
    \ -1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnk2fj1dh.lua:23:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpnk2fj1dh.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif a + c >\
    \ b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n    return\
    \ math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm543v9c1.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpm543v9c1.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\telseif a + c >\
    \ b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\telse\n\t\t\
    return ((a + b + c) / 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b3qry89.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8b3qry89.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s <= b or s <=\
    \ c then return -1 end\n\treturn s / 2\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuq8g5x7v.lua:19:\
    \ expected: -1, actual: 6.5\nstack traceback:\n\t/tmp/tmpuq8g5x7v.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if a + c > b then\
    \ return -1 end\n  if b + c > a then return -1 end\n  return ((a + b) * (b + c))\
    \ / (2.0 * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4bebwfej.lua:19:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4bebwfej.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif a + c >\
    \ b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n    return\
    \ (a * b * c) / 2\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp52n9mulx.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp52n9mulx.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  -- Check if any two sides are equal\n  if a == b or\
    \ b == c or a == c then\n    return -1\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpg4g0fwzi.lua:29: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then return -1 end\n\
    \tif s > b then return -1 end\n\tif s > c then return -1 end\n\treturn s / 2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg5swrkjt.lua:20:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpg5swrkjt.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif a + c >\
    \ b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n    return\
    \ ((a + b + c) / 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjpn1gl0q.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjpn1gl0q.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\t\treturn\
    \ -1\n\telseif s == 1 then\n\t\treturn a\n\telseif s == 2 then\n\t\treturn b\n\
    \telseif s == 3 then\n\t\treturn c\n\telse\n\t\treturn math.round(s * ((a + b\
    \ + c) / 2))\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0a1is7or.lua:20:\
    \ attempt to call a nil value (field 'round')\nstack traceback:\n\t/tmp/tmp0a1is7or.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp0a1is7or.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif a + c >\
    \ b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n    return\
    \ (b + c) / 2\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3h8vqdg5.lua:24:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp3h8vqdg5.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\t\treturn\
    \ -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\treturn\
    \ a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telseif s == 4 then\n\t\treturn\
    \ a * b * c\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy4x_rrvd.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpy4x_rrvd.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then return s end\n\
    \tif s > b then return s end\n\tif s > c then return s end\n\treturn -1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvu6gk32.lua:20:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpnvu6gk32.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- triangle_area(3, 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function\
    \ triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then return s end\n\
    \  if s > b then return s end\n  if s > c then return s end\n  return -1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2vtk_yh8.lua:20:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmp2vtk_yh8.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"

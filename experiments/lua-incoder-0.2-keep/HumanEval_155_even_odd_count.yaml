name: HumanEval_155_even_odd_count
language: lua
prompt: "-- Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n-- Example:\n-- even_odd_count(-12) ==> (1, 1)\n-- even_odd_count(123)\
  \ ==> (1, 2)\nlocal function even_odd_count(num)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = even_odd_count\n\
  \    lu.assertEquals(candidate(7), {0, 1})\n    lu.assertEquals(candidate(-78),\
  \ {1, 1})\n    lu.assertEquals(candidate(3452), {2, 2})\n    lu.assertEquals(candidate(346211),\
  \ {3, 3})\n    lu.assertEquals(candidate(-345821), {3, 3})\n    lu.assertEquals(candidate(-2),\
  \ {1, 0})\n    lu.assertEquals(candidate(-45347), {2, 3})\n    lu.assertEquals(candidate(0),\
  \ {1, 0})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local even = 0\n  local odd = 0\n  for i = 1, math.floor(math.log(num,\
    \ 2)) do\n    if num % 2 == 0 then\n      even = even + 1\n    else\n      odd\
    \ = odd + 1 \n    end\n  end\n  return even, odd\nend", "  local even, odd = 0,\
    \ 1\n  while num > 0 do\n    even = even * 10 + num % 10\n    odd = odd * 10 +\
    \ num / 10\n    num = num / 10\n  end\n  return even, odd\nend", "  local even,\
    \ odd = 0, 1\n  while num > 0 do\n    even = even * 10 + num % 10\n    odd = odd\
    \ * 10 + num / 10\n    num = num / 10\n  end\n  return even, odd\nend", "  local\
    \ even, odd = 0, 1\n  while num > 0 do\n    even = even * 10 + num % 10\n    odd\
    \ = odd*10 + num % 10\n    num = num / 10\n  end\n  return even, odd\nend", " \
    \ local even = 0\n  local odd = 0\n  local digit\n  for digit = 1, 10 do\n   \
    \ local remainder = num % 10\n    if remainder == 0 then\n      even = even +\
    \ 1\n    else\n      odd = odd + 1 -- odd digits start at 1\n    end\n    num\
    \ = num / 10\n  end\n  return even, odd\nend", "  local even, odd = 0, 1\n  while\
    \ num > 0 do\n    local digit = num % 10\n    num = num / 10\n    if digit % 2\
    \ == 0 then\n      even = even + 1\n    else\n      odd = odd + 0\n    end\n \
    \ end\n  return even, odd\nend", "    local even, odd = 0, 1\n    while num >\
    \ 0 do\n        local remainder = math.floor(num / 10)\n        even = even +\
    \ remainder * 2\n        odd = odd + remainder\n        num = math.floor(num /\
    \ 10)\n    end\n    return even, odd\nend", "  local even, odd = 0, 1\n  while\
    \ num > 0 do\n    even = even + num % 2\n    odd = odd + num / 2\n    num = num\
    \ / 2\n  end\n  return even, odd\nend", "  local even, odd = 0, 1\n  while num\
    \ > 0 do\n    local remainder = math.floor(num / 10)\n    even = even + remainder\
    \ * 2\n    odd = odd + remainder\n    num = math.floor(num / 10)\n  end\n  return\
    \ even, odd\nend", "  local even, odd = 0, 1\n  while num > 0 do\n    even = even\
    \ * 10 + num % 10\n    odd = odd * 10 + num % 10\n    num = num / 10\n  end\n\
    \  return even, odd\nend", "  local even, odd = 0, 1\n  while num > 0 do\n   \
    \ local remainder = math.floor(num / 10)\n    even = even * 10 + remainder\n \
    \   odd = odd * 10 - remainder\n    num = num % 10\n  end\n  return even, odd\n\
    end", "  local even, odd = 0, 1\n  while num > 0 do\n    even = even * 10 + num\
    \ % 10\n    odd = odd * 10 + num % 10\n    num = num / 10\n  end\n  return even,\
    \ odd\nend", "    local even, odd = 0, 1\n    for i = 1, math.floor(math.log(num,\
    \ 2)) do\n        if num % 2 == 0 then\n            even = even + 1\n        else\n\
    \            odd = odd + 0\n        end\n        num = num / 2\n    end\n    return\
    \ even, odd\nend", "  local even = 0\n  local odd = 0\n  local count = 0\n  while\
    \ num > 0 do\n    local digit = math.floor(num / 10)\n    count = count + 1\n\
    \    if digit % 2 == 0 then\n      even = even + 1\n    else\n      odd = odd\
    \ + 1 \n    end\n    num = num % 10\n  end\n  return even, odd, count\nend", " \
    \ local even, odd = 0, 1\n  while num > 0 do\n    even = even * 10 + num % 10\n\
    \    odd = odd * 10 + num / 10 % 10\n    num = num / 10\n  end\n  return even,\
    \ odd\nend", "  local even, odd = 0, 1\n  while num > 0 do\n    even = even +\
    \ num % 2\n    odd = odd + num / 2\n    num = num / 2\n  end\n  return even, odd\n\
    end", "    local even, odd = 1, 0\n    while num > 0 do\n        local remainder\
    \ = num % 10\n        if remainder == 0 then\n            even = even+1\n    \
    \    else\n            odd = odd+1\n        end\n        num = num / 10\n    end\n\
    \    return even, odd\nend", "  local even, odd = 0, 1\n  while num > 0 do\n \
    \   local remainder = math.floor(num / 10)\n    even = even + remainder % 2\n\
    \    odd = odd + remainder / 2\n    num = math.floor(num / 10)\n  end\n  return\
    \ even, odd\nend", "  local even, odd = 0, 1\n  while num > 0 do\n    even = even\
    \ + num % 2\n    odd = odd + num / 2\n    num = num / 2\n  end\n  return even,\
    \ odd\nend", "    local even, odd = 0, 1\n    for i = 1, num do\n        if num\
    \ % i == 0 then\n            even = even + 1\n        else\n            odd =\
    \ odd + 1\n        end\n    end\n    return even, odd\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

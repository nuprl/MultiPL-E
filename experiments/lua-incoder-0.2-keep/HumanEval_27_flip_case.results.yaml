language: lua
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local c = string.sub(i, i)\n    if c == 'a' then\n      result = 'A'\n  \
    \  elseif c == 'A' then\n      result = 'a'\n    elseif c == 'e' then\n      result\
    \ = 'E'\n    elseif c == 'E' then\n      result = 'e'\n    elseif c == 'i' then\n\
    \      result = 'I'\n    elseif c == 'I' then\n      result = 'i'\n    elseif\
    \ c == 'o' then\n      result = 'O'\n    elseif c == 'O' then\n      result =\
    \ 'o'\n    elseif c == 'u' then\n      result = 'U'\n    elseif c == 'U' then\n\
    \      result = 'u'\n    elseif c == 'y' then\n      result = 'Y'\n    elseif\
    \ c == 'Y' then\n      result = 'y'\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphow24oz4.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmphow24oz4.lua:6: in local 'candidate'\n\t/tmp/tmphow24oz4.lua:41: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5tx_0ahk.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5tx_0ahk.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j - 1, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j + 1, \"a\")\n      i = i + 1\n    end\n    if c == \"e\" then\n      c = string.sub(i,\
    \ j - 1, \"E\")\n      i = i + 1\n    end\n    if c == \"E\" then\n      c = string.sub(i,\
    \ j + 1, \"e\")\n      i = i + 1\n    end\n    if c == \"i\" then\n      c = string.sub(i,\
    \ j - 1, \"I\")\n      i = i + 1\n    end\n    if c == \"I\" then\n      c = string.sub(i,\
    \ j + 1, \"i\")\n      i = i + 1\n    end\n    if c == \"o\" then\n      c = string.sub(i,\
    \ j - 1, \"O\")\n      i = i + 1\n    end\n    if c == \"O\" then\n      c = string.sub(i,\
    \ j + 1, \"o\")\n      i = i + 1\n    end\n    if c == \"u\" then\n      c = string.sub(i,\
    \ j - 1, \"U\")\n      i = i + 1\n    end\n    if c == \"U\" then\n      c = string.sub(i,\
    \ j + 1, \"u\")\n      i = i + 1\n    end\n    if c == \"l\" then\n      c = string.sub(i,\
    \ j - 1, \"L\")\n      i = i + 1\n    end\n    if c == \"L\" then\n      c = string.sub(i,\
    \ j + 1, \"l\")\n      i = i + 1\n    end\n    if c == \"s\" then\n      c = string.sub(i,\
    \ j - 1, \"S\")\n      i = i + 1\n    end\n    if c == \"S\" then\n      c = string.sub(i,\
    \ j + 1, \"s\")\n      i = i + 1\n    end\n    if c == \"t\" then\n      c = string.sub(i,\
    \ j - 1, \"T\")\n      i = i + 1\n    end\n    if c == \"T\" then\n      c = string.sub(i,\
    \ j + 1, \"t\")\n      i = i + 1\n    end\n    if c == \"n\" then\n      c = string.sub(i,\
    \ j - 1, \"N\")\n      i = i + 1\n    end\n    if c == \"N\" then\n      c = string.sub(i,\
    \ j + 1, \"n\")\n      i = i + 1\n    end\n    if c == \"m\" then\n      c = string.sub(i,\
    \ j - 1, \"M\")\n      i = i + 1\n    end\n    if c == \"M\" then\n      c = string.sub(i,\
    \ j + 1, \"m\")\n      i = i + 1\n    end\n    if c == \"p\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6eopfojp.lua:90: unfinished string near ''"p''

    '
  stdout: ''
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      c\
    \ = string.sub(i, i - 1, 1)\n    end\n    result = result .. c\n  end\n  -- Uppercase\
    \ letters.\n  for i = #string, 1, -1 do\n    local c = string.sub(i, i, i)\n \
    \   if c >= 'A' and c <= 'Z' then\n      c = string.sub(i, i - 1, 1)\n    end\n\
    \    result = result .. c\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9lzjp4bf.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!11\"\nstack traceback:\n\t/tmp/tmp9lzjp4bf.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.chars:gsub('%l', function(c)\n\
    \    return string.chars[string.chars.index(c, 1, true) + 1]\n  end)\n  local\
    \ lower = string.chars:gsub('%l', function(c)\n    return string.chars[string.chars.index(c,\
    \ -1, true) - 1]\n  end)\n  for i = 1, #upper do\n    result = string.sub(result,\
    \ 1, i-1) .. upper[i] .. string.sub(result, i+1)\n  end\n  for i = 1, #lower do\n\
    \    result = string.sub(result, 1, i-1) .. lower[i] .. string.sub(result, i+1)\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmr7mjg21.lua:6:\
    \ attempt to index a nil value (field 'chars')\nstack traceback:\n\t/tmp/tmpmr7mjg21.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpmr7mjg21.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      c = string.char(tonumber(c))\n\
    \      if c ~= nil then\n        result = result .. c\n        i = i + 1\n   \
    \   end\n    end\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdalqxzfe.lua:10:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpdalqxzfe.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpdalqxzfe.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = string\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) == 'a' then\n            new_string = string.sub(i, 1, #string) + string.sub(i,\
    \ #string + 1)\n        elseif string.sub(i, 1, 1) == 'A' then\n            new_string\
    \ = string.sub(i, 1, #string) + string.sub(i, #string + 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'e' then\n            new_string = string.sub(i, 1, #string) + string.sub(i,\
    \ #string + 1)\n        elseif string.sub(i, 1, 1) == 'E' then\n            new_string\
    \ = string.sub(i, 1, #string) + string.sub(i, #string + 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'i' then\n            new_string = string.sub(i, 1, #string) + string.sub(i,\
    \ #string + 1)\n        elseif string.sub(i, 1, 1) == 'I' then\n            new_string\
    \ = string.sub(i, 1, #string) + string.sub(i, #string + 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'o' then\n            new_string = string.sub(i, 1, #string) + string.sub(i,\
    \ #string + 1)\n        elseif string.sub(i, 1, 1) == 'O' then\n            new_string\
    \ = string.sub(i, 1, #string) + string.sub(i, #string + 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'u' then\n            new_string = string.sub(i, 1, #string) + string.sub(i,\
    \ #string + 1)\n        elseif string.sub(i, 1, 1) == 'U' then\n            new_string\
    \ = string.sub(i, 1, #string) + string.sub(i, #string + 1)\n        end\n    end\n\
    \    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpai1ljg9r.lua:36:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpai1ljg9r.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \    end\n    if c == \"A\" then\n      c = string.sub(j - 1, j)\n    end\n  \
    \  if c == \"0\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"\
    1\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"2\" then\n  \
    \    c = string.sub(j, j - 1)\n    end\n    if c == \"3\" then\n      c = string.sub(j,\
    \ j - 1)\n    end\n    if c == \"4\" then\n      c = string.sub(j, j - 1)\n  \
    \  end\n    if c == \"5\" then\n      c = string.sub(j, j - 1)\n    end\n    if\
    \ c == \"6\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"7\"\
    \ then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"8\" then\n    \
    \  c = string.sub(j, j - 1)\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n    end\n    if c == \"_\" then\n      c = string.sub(j, j - 1)\n  \
    \  end\n    if c == \"-\" then\n      c = string.sub(j, j - 1)\n    end\n    if\
    \ c == \"+\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"/\"\
    \ then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"%\" then\n    \
    \  c = string.sub(j, j - 1)\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n    end\n    if c == \"~\" then\n      c = string.sub(j, j - 1)\n  \
    \  end\n    if c == \"!\" then\n      c = string.sub(j, j - 1)\n    end\n    if\
    \ c == \"&\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"|\"\
    \ then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"{\" then\n    \
    \  c = string.sub(j, j - 1)\n    end\n    if c == \"}\" then\n      c = string.sub(j,\
    \ j - 1)\n    end\n    if c == \"[\" then\n      c = string.sub(j, j - 1)\n  \
    \  end\n    if c == \"]\" then\n      c = string.sub(j, j - 1)\n    end\n    if\
    \ c == \"<\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"=\"\
    \ then\n      c = string.sub(j, j - 1)\n    end\n    if c == \">\" then\n    \
    \  c = string.sub(j, j - 1)\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5ap3x105.lua:105: ''end'' expected (to close ''if'' at line
    93) near <eof>

    '
  stdout: ''
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.find(c, \"[A-Z]\") then\n   \
    \   result = string.gsub(result, \"[\" .. c .. \"]\", string.upper(c))\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.find(c, \"[a-z]\") then\n      result = string.gsub(result,\
    \ \"[\" .. c .. \"]\", string.lower(c))\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe3p28wus.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpe3p28wus.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ i, string.upper)\n      i = string.upper\n    elseif char == string.upper then\n\
    \      result = string.sub(string.lower, i, string.lower)\n      i = string.lower\n\
    \    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxzyesgl4.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpxzyesgl4.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ == c:upper() then\n            result = result:sub(1, #result-1)..c:lower()\n\
    \        else\n            result = result:sub(1, #result-1)..c:upper()\n    \
    \    end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpui7s31oh.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpui7s31oh.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c) \n    return\
    \ string.upper(c) \n  end)\n  result:gsub(\"([A-Z])\", function (c) \n    return\
    \ string.lower(c) \n  end)\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt6hom68t.lua:19:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpt6hom68t.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"0\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"1\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"2\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"3\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"4\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"5\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"6\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"7\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"8\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"9\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"-\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"_\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"+\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"/\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"%\" \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp601op2t1.lua:75: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, i - 1)\n      i = i - 1\n    else\n      result = string.sub(i, j, i)\n \
    \     i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9pobcw1b.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp9pobcw1b.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, j) .. string.sub(string.lower(char), string.upper(char))\n\
    \      i = i + 1\n    end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9gv96ya2.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp9gv96ya2.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.byte(c) >= 65 and string.byte(c)\
    \ <= 90 then\n      c = string.byte(c) + 32\n    end\n    result = string.sub(i,\
    \ 1, i-1) .. string.sub(c, i, i)\n  end\n  -- Uppercase letters.\n  for i = 1,\
    \ #string do\n    local c = string.sub(i, i, i)\n    if string.byte(c) >= 97 and\
    \ string.byte(c) <= 122 then\n      c = string.byte(c) - 32\n    end\n    result\
    \ = string.sub(i, 1, i-1) .. string.sub(c, i, i)\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpufv8hwvr.lua:9:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpufv8hwvr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpufv8hwvr.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char <= 'z'\n   \
    \ local lower = char >= 'A' and char <= 'Z'\n    if upper and lower then\n   \
    \   result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif upper\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i-1) .. string.sub(i+1,\
    \ j)\n      i = j\n    elseif lower then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i-1) .. string.sub(i+1, j-1)\n      i = j\n    end\n    j = i\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2egaz8rv.lua:30:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp2egaz8rv.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, j, j) ~= string.sub(i, j, j) then\n      result = string.sub(i,\
    \ j, j):lower() + string.sub(i, j, j):upper()\n      i = i + 1\n    end\n    j\
    \ = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    elseif\
    \ char == 'A' then\n      char = 'a'\n    end\n    result = result .. char\n \
    \   i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq4uwt1a_.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpq4uwt1a_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == 'a' then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    end\n    if c\
    \ == 'A' then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i =\
    \ i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9a0chi7y.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp9a0chi7y.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7mnetf_e.lua:95: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j - 1) .. string.lower(char)\n      i = i + 1\n    elseif char\
    \ == string.lower(char) then\n      result = string.sub(i, j - 1) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n    j = j - 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsvdvrbsr.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpsvdvrbsr.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_dz_8kj.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpm_dz_8kj.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf7b7c9_e.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpf7b7c9_e.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() ..\
    \ c:lower() end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp77abhsb9.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp77abhsb9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c ~= nil then\n      c = string.char(tonumber(c))\n\
    \      if c ~= nil then\n        result = string.sub(i, i-1) .. c\n      end\n\
    \    end\n  end\n  -- Uppercase to lowercase.\n  for i = #string, 1, -1 do\n \
    \   local c = string.sub(i, i)\n    if c ~= nil then\n      c = string.char(tonumber(c))\n\
    \      if c ~= nil then\n        result = string.sub(i, i-1) .. c\n      end\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2zd5aio4.lua:10:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmp2zd5aio4.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp2zd5aio4.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, 1)\n    i = i + 1\n    if c ~= nil then\n      if c ==\
    \ 'a' then\n        c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n   \
    \   end\n    end\n    j = j + 1\n    result = result .. c\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      result\
    \ = string.sub(i, j, \"A\")\n      i = i + 1\n    elseif c == \"A\" then\n   \
    \   result = string.sub(i, j, \"a\")\n      i = i + 1\n    elseif c == \"0\" then\n\
    \      result = string.sub(i, j, \"0\")\n      i = i + 1\n    else\n      result\
    \ = string.sub(i, j, string.char(tonumber(c) + 32))\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5m95z54i.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp5m95z54i.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp5m95z54i.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = string\n  local i = #string\n  while i do\n    local c =\
    \ string.sub(i, i)\n    if c:lower() ~= c then\n      new_string = new_string\
    \ .. string.upper(c)\n    else\n      new_string = new_string .. string.lower(c)\n\
    \    end\n    i = i - 1\n  end\n  return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_jqcfrzn.lua:106: ''end'' expected (to close ''if'' at line
    94) near <eof>

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      c = string.sub(i,\
    \ i - 1)\n      result = result .. string.char(tonumber(c) + 32)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c >= 'A' and c <= 'Z' then\n      c = string.sub(i, i - 1)\n    \
    \  result = result .. string.char(tonumber(c) - 32)\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprm94667n.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmprm94667n.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j, \"\
    A\")\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, \"a\")\n   \
    \ end\n    i = i + 1\n    j = j - 1\n    result = result .. c\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa__x9rpb.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpa__x9rpb.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      if c == 'a' then\n       \
    \ c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n      end\n    end\n \
    \   i = i + 1\n    j = j - 1\n    result = string.sub(i, j) .. result\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzqrw8bxy.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpzqrw8bxy.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      if c >= 'a' and c <= 'z' then\n\
    \        c = string.char(tonumber(c) + 32)\n      elseif c >= 'A' and c <= 'Z'\
    \ then\n        c = string.char(tonumber(c) - 32)\n      end\n    end\n    i =\
    \ j + 1\n    j = i\n    result = result .. c\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ j):upper()\n    else\n      result = string.sub(i, j):lower()\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzfl6yvb_.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzfl6yvb_.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"[%l%L]\", function(c) c = string.upper(c)\
    \ or string.lower(c) end)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp91b17c6h.lua:14:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp91b17c6h.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57n1v2ap.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmp57n1v2ap.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result, \"\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpilplnwor.lua:16:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpilplnwor.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5tx_0ahk.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5tx_0ahk.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return string.upper(c)\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return string.lower(c) end)\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw3kye546.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpw3kye546.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' then\n            c = 'A'\n        end\n        if c\
    \ == 'A' then\n            c = 'a'\n        end\n        result = string.sub(i,\
    \ i-1) .. c\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4u_fcnae.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp4u_fcnae.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 2)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv4ai9px9.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpv4ai9px9.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase and vice versa\n  result\
    \ = string.gsub(result, \"[%l%L]\", function(c)\n    if string.lower(c) == c then\n\
    \      return string.upper(c)\n    else\n      return string.lower(c)\n    end\n\
    \  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local is_upper = char >= 'a' and char <= 'z'\n\
    \    local is_lower = char >= 'A' and char <= 'Z'\n    if is_upper then\n    \
    \  result = string.sub(i, j - 1) .. string.sub(j, j)\n      i = i + 1\n    elseif\
    \ is_lower then\n      result = string.sub(i, j - 1) .. string.sub(j, j + 1)\n\
    \      i = i + 1\n    else\n      result = string.sub(i, j)\n      i = i + 1\n\
    \    end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc83pgwer.lua:30:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpc83pgwer.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2)\n      i = i + 1\n    else\n\
    \      result = string.sub(i, 1, 1) .. string.sub(j, 2)\n      i = i + 1\n   \
    \   j = j - 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpawotit68.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"56\"\nstack traceback:\n\t/tmp/tmpawotit68.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if c:lower() ~= c then\n      result[#result + 1] = c:upper()\n    else\n\
    \      result[#result + 1] = c:lower()\n    end\n  end\n  return table.concat(result)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx97lw5lf.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpx97lw5lf.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfua6ikud.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpfua6ikud.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local c = string.sub(i, i)\n    if c ~= nil then\n      c = string.upper(c)\n\
    \      result = string.sub(i, 1, i-1) .. c\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdx383s_5.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmpdx383s_5.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp28lcpj8n.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp28lcpj8n.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.sub(string.upper(c), i)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.sub(string.lower(c), i)\n    end\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplci8041u.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmplci8041u.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(string, i, i)\n    if string.lower(c) ~= c then\n   \
    \   result = string.sub(string, 1, i) + string.upper(string.sub(string, i + 1,\
    \ i + 1)) + string.sub(string, i + 2)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp811f2gpx.lua:10:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmp811f2gpx.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp811f2gpx.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofqvtb_x.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpofqvtb_x.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n\
    \    return string.char(tonumber(c) + 96 - string.byte(c))\n  end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq90d2y12.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpq90d2y12.lua:7:\
    \ in function </tmp/tmpq90d2y12.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpq90d2y12.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpq90d2y12.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(string.sub(c, 2)) or 'A') .. string.char(tonumber(c))\n\
    \  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8ac21e85.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmp8ac21e85.lua:7:\
    \ in function </tmp/tmp8ac21e85.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmp8ac21e85.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp8ac21e85.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57n1v2ap.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmp57n1v2ap.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      c = string.lower(c)\n    \
    \  c = string.upper(c)\n    end\n    i = j\n    j = i\n    result = result ..\
    \ c\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpda2grwka.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpda2grwka.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z]+)\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z]+)\", function\
    \ (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8jthsqeg.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp8jthsqeg.lua:7:\
    \ in function </tmp/tmp8jthsqeg.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmp8jthsqeg.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp8jthsqeg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptdi6xhj1.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmptdi6xhj1.lua:6: in local 'candidate'\n\t/tmp/tmptdi6xhj1.lua:19: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"0\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"1\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"2\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"3\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"4\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"5\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"6\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"7\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"8\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"9\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpptwitido.lua:67:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpptwitido.lua:67:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      if c == 'a' then\n       \
    \ c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n      end\n    end\n \
    \   i = i + 1\n    j = j - 1\n    result = string.sub(i, j) .. result\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzqrw8bxy.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpzqrw8bxy.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      result\
    \ = string.sub(i, j, \"A\")\n      i = i + 1\n    elseif c == \"A\" then\n   \
    \   result = string.sub(i, j, \"a\")\n      i = i + 1\n    elseif c == \"0\" then\n\
    \      result = string.sub(i, j, \"0\")\n      i = i + 1\n    else\n      result\
    \ = string.sub(i, j, string.char(tonumber(c) + 32))\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5m95z54i.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp5m95z54i.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp5m95z54i.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    elseif\
    \ char == 'A' then\n      char = 'a'\n    end\n    result = result .. char\n \
    \   i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4vfw7a3v.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4vfw7a3v.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(j,\
    \ i - 1) .. string.sub(i - 1, i) .. string.sub(i, j)\n      i = i + 1\n    end\n\
    \    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz859wyt.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpgz859wyt.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"|\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm761uwe6.lua:96: '')'' expected (to close ''('' at line 95)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(string.lower(result), 1, string.len(string.lower(result))-1) +\
    \ string.upper(char)\n    elseif char == string.upper(char) then\n      result\
    \ = string.sub(string.upper(result), 1, string.len(string.upper(result))-1) +\
    \ string.lower(char)\n    else\n      result = result .. char\n    end\n    i\
    \ = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg1w5mstc.lua:10:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmpg1w5mstc.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpg1w5mstc.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() == c then\n            result = string.sub(i, 1, #c)\
    \ + string.sub(i, #c+1)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpydq_touh.lua:9:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmpydq_touh.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpydq_touh.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      result = result .. string.upper(c)\n    elseif\
    \ c == \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      result\
    \ = result .. string.lower(c)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6hd_9mmy.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp6hd_9mmy.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i))\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe1vdn34t.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpe1vdn34t.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpflk1pa3n.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpflk1pa3n.lua:7:\
    \ in function </tmp/tmpflk1pa3n.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpflk1pa3n.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpflk1pa3n.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.upper\n  local lower = string.lower\n\
    \  for i = 1, #string do\n    local c = string.sub(string, i, i)\n    if c ==\
    \ upper then\n      result = string.sub(string, 1, i-1) + string.sub(string, i+1,\
    \ i)\n    elseif c == lower then\n      result = string.sub(string, 1, i-1) +\
    \ string.sub(string, i+1, i) + string.sub(string, i+2, i+1)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuxli82mo.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpuxli82mo.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.upper\n  local lower = string.lower\n\
    \  for i = 1, #string do\n    local c = string.sub(string, i, i)\n    if c ==\
    \ upper then\n      result = string.sub(string, 1, i-1) + string.sub(string, i+1,\
    \ i)\n    end\n    if c == lower then\n      result = string.sub(string, 1, i-1)\
    \ + string.sub(string, i+1, i) + string.sub(string, i+2, i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkm1n0xpt.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpkm1n0xpt.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpadnzred9.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpadnzred9.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, character in ipairs(string) do\n    local upper\
    \ = character and character >= 'a' and character <= 'z'\n    local lower = character\
    \ and character >= 'A' and character <= 'Z'\n    if upper and not lower then\n\
    \      result[#result + 1] = character - 'a'\n    elseif lower and not upper then\n\
    \      result[#result + 1] = character - 'A'\n    else\n      result[#result +\
    \ 1] = character\n    end\n  end\n  return table.concat(result, '') -- Join all\
    \ the characters together into a string.\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpye8nx4tb.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpye8nx4tb.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"A\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"0\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"1\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"2\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"3\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"4\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"5\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"6\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"7\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"8\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"9\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"_\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"-\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"+\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"/\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"%\" then\n      result = \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbw1dj5mf.lua:75: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2)\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppuns51sw.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmppuns51sw.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c ~= nil then\n      if string.sub(i,\
    \ j) ~= nil then\n        j = j - 1\n      else\n        result = string.sub(i,\
    \ j):lower() + result:upper()\n        j = j - 1\n      end\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp514p8m0c.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp514p8m0c.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_dz_8kj.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpm_dz_8kj.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i - 1) .. string.sub(string.sub(i,\
    \ i + 1), 1, string.len(string.sub(i, i + 1)) - 1) .. string.sub(i, i + 1)\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmhwrlv2.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpsmhwrlv2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8mjsd9cc.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp8mjsd9cc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(i,\
    \ i - 1)\n        end\n        if char >= 'A' and char <= 'Z' then\n         \
    \   char = string.sub(i, i - 1)\n        end\n        if char >= '0' and char\
    \ <= '9' then\n            char = string.sub(i, i - 1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5rid9v8l.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmp5rid9v8l.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c ~= nil then\n      c = string.upper(c)\n\
    \      result = string.sub(i, 1, i-1) .. c\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if c ~= nil then\n\
    \      c = string.lower(c)\n      result = string.sub(i, 1, i-1) .. c\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8bprrrsv.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmp8bprrrsv.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      result = result .. string.char(tonumber(c) + 32)\n\
    \    elseif c == \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n\
    \      result = result .. string.char(tonumber(c) - 32)\n    else\n      result\
    \ = result .. c\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5moom0e1.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5moom0e1.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.sub(c, 1) ~= nil then\n      result\
    \ = string.gsub(result, '[' .. c .. ']', string.upper(c))\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if string.sub(c, 1) ~= nil then\n      result = string.gsub(result, '[' ..\
    \ c .. ']', string.lower(c))\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6jtnzyav.lua:10:\
    \ malformed pattern (missing ']')\nstack traceback:\n\t/tmp/tmp6jtnzyav.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp6jtnzyav.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.sub(string.upper(c), i, i)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.sub(string.lower(c), i, i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppnm_n5ai.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmppnm_n5ai.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(j, j) .. string.upper(char)\n      j = j + 1\n    elseif char ==\
    \ string.upper(char) then\n      result = string.sub(j, j) .. string.lower(char)\n\
    \      j = j + 1\n    else\n      result = result .. char\n      i = i + 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = #string, 1, -1 do\n    local c = string.sub(i, i)\n    if c >= 'A'\
    \ and c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i - 1)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprw2_bz9t.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmprw2_bz9t.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgqj1aaj2.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmpgqj1aaj2.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(string.lower(char), string.upper(char))\n    elseif char == string.upper(char)\
    \ then\n      result = string.sub(string.upper(char), string.lower(char))\n  \
    \  end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt9qidm1u.lua:10:\
    \ bad argument #2 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpt9qidm1u.lua:10: in local 'candidate'\n\t/tmp/tmpt9qidm1u.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"(.)\", function(c) c:lower() .. c:upper()\
    \ end)\n  result:gsub(\"(.)\", function(c) c:upper() .. c:lower() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpealrmdxk.lua:6: unexpected symbol near ''..''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1) .. string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c\
    \ >= 'A' and c <= 'Z' then\n      result = string.sub(i, i - 1) .. string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplt6ozmhe.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmplt6ozmhe.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:byte()\
    \ ~= c:byte():lower() then\n            result = result:sub(1, #result-1)..c:byte():upper()..result:sub(i+1)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps5j9l_r9.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmps5j9l_r9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      c = string.char(tonumber(c)\
    \ + 32)\n    end\n    result = string.sub(i, 1, i-1) .. c\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c\
    \ >= 'A' and c <= 'Z' then\n      c = string.char(tonumber(c) - 32)\n    end\n\
    \    result = string.sub(i, 1, i-1) .. c\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbjl6mnf.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmppbjl6mnf.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == 'a' then\n      result = string.sub(i, 1, 2):upper..string.sub(j,\
    \ 1, 2):lower\n      i = i + 1\n      j = j - 1\n    else\n      result = string.sub(i,\
    \ 1, 1):upper..string.sub(j, 1, 1):lower\n      i = i + 1\n      j = j - 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplo8k1nxl.lua:9: function arguments expected near ''..''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"0\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"1\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"2\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"3\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"4\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"5\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"6\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"7\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"8\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"9\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"-\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"_\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"+\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ elseif c == \"/\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == \"%\" \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmposeo14z4.lua:75: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.lower(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([a-z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.lower(c)\n  end):gsub(\"([a-z])\", function (c)\n    return string.lower(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.lower(c)\n  end):gsub(\"([a-z])\", function\
    \ (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([a-z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([a-z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.lower(c)\n  end):gsub(\"([a-z])\", function (c)\n    return string.lower(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.lower(c)\n  end):gsub(\"([a-z])\", function\
    \ (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([a-z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([a-z])\", function\
    \ (c)\n    return string.\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpax_e0zic.lua:66: ''end'' expected (to close ''function'' at
    line 64) near ''=''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, 1)\n    i = i + 1\n    if c ~= nil then\n      if c ==\
    \ 'a' then\n        c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n   \
    \   end\n    end\n    j = j + 1\n    string.sub(i, j, 1) = c\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbc8iwd6q.lua:18: syntax error near ''=''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw8efayxa.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpw8efayxa.lua:7:\
    \ in function </tmp/tmpw8efayxa.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpw8efayxa.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpw8efayxa.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j\n    elseif c == \"A\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif c == \"0\" then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif\
    \ c == \"1\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n     \
    \ i = j\n    elseif c == \"2\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j\n    elseif c == \"3\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j\n    elseif c == \"4\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif c == \"5\" then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif\
    \ c == \"6\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n     \
    \ i = j\n    elseif c == \"7\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j\n    elseif c == \"8\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j\n    elseif c == \"9\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif c == \"_\" then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif\
    \ c == \"-\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n     \
    \ i = j\n    elseif c == \"+\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j\n    elseif c == \"/\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j\n    elseif c == \"%\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif c == \"^\" then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif\
    \ c == \"~\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n     \
    \ i = j\n    elseif c == \"'\" then\n      result = string.sub(i, j) \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpuq5jy124.lua:77: ''end'' expected (to close ''if'' at line
    9) near <eof>

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return string.upper(c)\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return string.lower(c) end)\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw3kye546.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpw3kye546.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i - 1) .. string.sub(string.sub(i,\
    \ i + 1), 1, string.len(string.sub(i, i + 1)) - 1) .. string.sub(i, i + 1)\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmhwrlv2.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpsmhwrlv2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"A\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"0\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"1\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"2\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"3\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"4\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"5\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"6\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"7\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"8\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"9\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"-\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"_\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"+\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == \"/\"\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == \"%\" then\n      result = \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsejpyae8.lua:75: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57n1v2ap.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmp57n1v2ap.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, character in ipairs(string) do\n    local lower\
    \ = character:lower()\n    local upper = character:upper()\n    result[#result\
    \ + 1] = upper .. lower\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaleqfee3.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpaleqfee3.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzqcblkl8.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpzqcblkl8.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpphq60efa.lua:16:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpphq60efa.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) \n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function(c)\
    \ \n    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp846d_m4.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpp846d_m4.lua:7:\
    \ in function </tmp/tmpp846d_m4.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpp846d_m4.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpp846d_m4.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ j):upper()\n    else\n      result = string.sub(i, j):lower()\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj83e4s64.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpj83e4s64.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) == c then\n      result\
    \ = string.sub(i, 1, string.len(i) + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.upper(c)\
    \ == c then\n      result = string.sub(i, 1, string.len(i) + 1)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk36xxp6b.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmpk36xxp6b.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57n1v2ap.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmp57n1v2ap.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_dz_8kj.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpm_dz_8kj.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc47mnqp9.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpc47mnqp9.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"A\" then\n      c = string.sub(j, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"0\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"1\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"2\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"3\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"&\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"|\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"?\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"{\" \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsvlhkucz.lua:98: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"(.)\", function(c)\n    local lower\
    \ = string.lower(c)\n    local upper = string.upper(c)\n    return lower .. upper\n\
    \  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_1t4eysk.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_1t4eysk.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"|\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm761uwe6.lua:96: '')'' expected (to close ''('' at line 95)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = string.byte(char, 1):upper()\n  \
    \  local lower = string.byte(char, 1):lower()\n    string.sub(i, j) = string.sub(string,\
    \ i, i) + upper + lower\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdldhnftg.lua:11: syntax error near ''=''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = {}\n    for _, character in ipairs(string) do\n        local\
    \ lower = character:lower()\n        local upper = character:upper()\n       \
    \ result[#result + 1] = lower .. upper\n    end\n    return table.concat(result)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpegu3tos5.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpegu3tos5.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.upper\n  local lower = string.lower\n\
    \  for i = 1, #string do\n    local c = string.sub(string, i, i)\n    if c ==\
    \ lower then\n      result = string.sub(string, 1, i-1) + upper(string.sub(string,\
    \ i+1, i+1)) + string.sub(string, i+2)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnya44q3i.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpnya44q3i.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()..string.sub(i + 1, j)\n      i = i + 1\n    elseif char == string.upper\
    \ then\n      result = string.sub(i, j):lower()..string.sub(i + 1, j)\n      i\
    \ = i + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3abvc6k1.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp3abvc6k1.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc47mnqp9.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpc47mnqp9.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char == string.lower(char) then\n\
    \      result = string.sub(i, j - 1) .. string.upper(string.sub(i, j))\n     \
    \ i = i + 1\n    end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1_aap83r.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1_aap83r.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_dz_8kj.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpm_dz_8kj.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, string.len(i) + 1, string.sub(j, 1, string.len(j) + 1))\n    else\n     \
    \ result = string.sub(i, 1, string.len(i))\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk75ts132.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpk75ts132.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw8efayxa.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpw8efayxa.lua:7:\
    \ in function </tmp/tmpw8efayxa.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpw8efayxa.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpw8efayxa.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.byte(c) >= 65 and string.byte(c)\
    \ <= 90 then\n      c = string.byte(c) + 32\n    end\n    result = string.sub(i,\
    \ 1, i-1) .. string.sub(c, i, i)\n  end\n  -- Uppercase letters.\n  for i = 1,\
    \ #string do\n    local c = string.sub(i, i, i)\n    if string.byte(c) >= 97 and\
    \ string.byte(c) <= 122 then\n      c = string.byte(c) - 32\n    end\n    result\
    \ = string.sub(i, 1, i-1) .. string.sub(c, i, i)\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpufv8hwvr.lua:9:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpufv8hwvr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpufv8hwvr.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.gsub(result, '%l', string.upper(c))\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.gsub(result, '%U', string.lower(c))\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfud0oyos.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpfud0oyos.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"([A-Z])\", function (c) return c:upper()\
    \ .. c:lower() end)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_4fimr4p.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_4fimr4p.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptohjhd1t.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmptohjhd1t.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n\
    \    local lower = upper and char >= 'A' and char < 'Z'\n    if upper and lower\
    \ then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    local upper = char >= 'A' and char < 'Z'\n    local lower = upper and\
    \ char >= 'a' and char < 'z'\n    if upper and lower then\n      result = string.sub(i,\
    \ i) + string.sub(i, i - 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ldilwon.lua:31:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp0ldilwon.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, string.len(i) + 1, string.sub(j, 1, string.len(j) + 1))\n    else\n     \
    \ result = string.sub(i, 1, string.len(i))\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk75ts132.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpk75ts132.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = string\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) ~= string.sub(i, 2, 1) then\n            new_string = string.sub(i, 1,\
    \ 1) .. string.sub(i, 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n  \
    \      end\n    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpexl3_o4m.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmpexl3_o4m.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpadnzred9.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpadnzred9.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ == c:upper() then\n            result = result:sub(1, #result-1)..c:lower()\n\
    \        else\n            result = result:sub(1, #result-1)..c:upper()\n    \
    \    end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpui7s31oh.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpui7s31oh.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, 1, i) + string.sub(i, i + 1, i) + string.sub(i, 1, i)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c >= 'A' and c <= 'Z' then\n      result = string.sub(i, 1, i)\
    \ + string.sub(i, i + 1, i) + string.sub(i, 1, i)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph71ik4eg.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmph71ik4eg.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"@\" then\n      c = string.sub(i,\
    \ j, \"@\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_dnsjfjx.lua:95: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c ~= nil then\n      if c ~= string.lower\
    \ then\n        result = string.sub(i, j) .. string.upper(c)\n      end\n    \
    \  j = j + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, character in ipairs(string) do\n    local upper\
    \ = character:upper()\n    local lower = character:lower()\n    result[#result\
    \ + 1] = upper .. lower\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ivu1o19.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8ivu1o19.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"=\" then\n      c = string.sub(i,\
    \ j, \"=\")\n      i = i + 1\n    end\n    if c == \"<\" then\n      c = string.sub(i,\
    \ j, \"<\")\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphkvalh33.lua:105: ''end'' expected (to close ''if'' at line
    94) near <eof>

    '
  stdout: ''
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j):upper()\n\
    \    elseif c == \"A\" then\n      result = string.sub(i, j):lower()\n    else\n\
    \      result = result .. c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphugo9e6p.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmphugo9e6p.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j, \"\
    A\")\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, \"a\")\n   \
    \ end\n    if c ~= \"\" then\n      result = result .. c\n    end\n    i = i +\
    \ 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4xgxxdei.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4xgxxdei.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = ''\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char == 'a' then\n            char = 'A'\n        elseif char\
    \ == 'A' then\n            char = 'a'\n        else\n            char = char:upper()\n\
    \        end\n        new_string = new_string .. char\n    end\n    return new_string\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpemqrpv2c.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpemqrpv2c.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    elseif\
    \ char == 'A' then\n      char = 'a'\n    end\n    result = result .. char\n \
    \   i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4vfw7a3v.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4vfw7a3v.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793640
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt8nnprur.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpt8nnprur.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j)\n      i = i + 1\n    end\n    if c == \"A\" then\n\
    \      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n   \
    \ end\n    if c == \"0\" then\n      c = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j)\n      i = i + 1\n    end\n    if c == \"2\" then\n\
    \      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n   \
    \ end\n    if c == \"3\" then\n      c = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n    end\n    if c == \"5\"\
    \ then\n      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i +\
    \ 1\n    end\n    if c == \"6\" then\n      c = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n    end\n    if c == \"8\"\
    \ then\n      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i +\
    \ 1\n    end\n    if c == \"9\" then\n      c = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n    end\n    if c == \"_\"\
    \ then\n      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i +\
    \ 1\n    end\n    if c == \"+\" then\n      c = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j - 1) .. string.sub(j, j + 1)\n      i = i + 1\n    end\n    if c == \"%\"\
    \ then\n      c = string.sub(i, j - 1) .. string.sub(j, j + 1)\n      i = i +\
    \ 1\n    end\n    if c == \"^\" then\n      c = string.sub\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpfbjdao_t.lua:89: ''end'' expected (to close ''if'' at line
    78) near <eof>

    '
  stdout: ''
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' then\n            c = 'A'\n        end\n        if c\
    \ == 'A' then\n            c = 'a'\n        end\n        if c ~= string.sub(i,\
    \ i) then\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptk7rsu4r.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmptk7rsu4r.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n      i = i + 1\n    elseif char == string.upper then\n      result\
    \ = string.sub(i, j):lower()\n      i = i + 1\n    else\n      i = i + 1\n   \
    \ end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbywszqe9.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpbywszqe9.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl3vz23tc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpl3vz23tc.lua:7:\
    \ in function </tmp/tmpl3vz23tc.lua:6>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmpl3vz23tc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpl3vz23tc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' then\n            c = 'A'\n        elseif c == 'A' then\n\
    \            c = 'a'\n        elseif c == '0' then\n            c = '0'\n    \
    \    elseif c == '1' then\n            c = '1'\n        elseif c == '2' then\n\
    \            c = '2'\n        elseif c == '3' then\n            c = '3'\n    \
    \    elseif c == '4' then\n            c = '4'\n        elseif c == '5' then\n\
    \            c = '5'\n        elseif c == '6' then\n            c = '6'\n    \
    \    elseif c == '7' then\n            c = '7'\n        elseif c == '8' then\n\
    \            c = '8'\n        elseif c == '9' then\n            c = '9'\n    \
    \    elseif c == '_' then\n            c = '_'\n        elseif c == '-' then\n\
    \            c = '-'\n        elseif c == '.' then\n            c = '.'\n    \
    \    elseif c == '!' then\n            c = '!'\n        elseif c == '?' then\n\
    \            c = '?'\n        elseif c == '(' then\n            c = '('\n    \
    \    elseif c == ')' then\n            c = ')'\n        elseif c == '[' then\n\
    \            c = '['\n        elseif c == ']' then\n            c = ']'\n    \
    \    elseif c == '{' then\n            c = '{'\n        elseif c == '}' then\n\
    \            c = '}'\n        elseif c == ',' then\n            c = ','\n    \
    \    elseif c == '.' then\n            c = '.'\n        elseif c == ';' then\n\
    \            c = ';'\n        elseif c == ':' then\n            c = ':'\n    \
    \    elseif c == '/' then\n            c = '/'\n        elseif c == '\\\\' then\n\
    \            c = '\\\\'\n        elseif c == '$' then\n            c = '$'\n \
    \       elseif c == '%' then\n            c = '%'\n        elseif c == '&' then\n\
    \            c = '&'\n        elseif c == '=' then\n            c = '='\n    \
    \    elseif c == '<' then\n            c = '<'\n        elseif c == '>' then\n\
    \            c = '>'\n        elseif c == '^' then\n            c = '^'\n    \
    \    elseif c == '|' then\n            c = '|'\n        elseif c == '~' then\n\
    \            c = '~'\n        elseif c == '`' then\n            c = '`'\n    \
    \    elseif c == '!' then\n            c = '!'\n        elseif c == '@' then\n\
    \            c = '\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5q2yz_7b.lua:89: unfinished string near ''''''

    '
  stdout: ''
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, i, c:upper())\n    end\n    i = j + 1\n    j = string.find(string, '%b',\
    \ i)\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbfdjy80.lua:13:\
    \ malformed pattern (missing arguments to '%b')\nstack traceback:\n\t/tmp/tmpvbfdjy80.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpvbfdjy80.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659793641
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper()\n    elseif char == string.upper(char) then\n   \
    \   result = string.sub(i, j):lower()\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps7blx7bm.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmps7blx7bm.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659793641

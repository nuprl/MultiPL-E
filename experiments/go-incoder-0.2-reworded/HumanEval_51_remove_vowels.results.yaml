language: go_test.go
name: HumanEval_51_remove_vowels
results:
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result = append(result, char)\n     \
    \   }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpueq1bv9a_test.go:21:10: no new variables on left side of :=

    /tmp/tmpueq1bv9a_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpueq1bv9a_test.go:24:13: undefined: contains

    /tmp/tmpueq1bv9a_test.go:25:29: first argument to append must be a slice; have
    result (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := []rune(text)\n    for i := 0; i < len(text); i++ {\n\
    \        if text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o'\
    \ && text[i] != 'u' {\n            text[i] = text[i]\n        }\n    }\n    return\
    \ string(text)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwp9fbpyl_test.go:20:5: vowels declared but not used

    /tmp/tmpwp9fbpyl_test.go:21:10: no new variables on left side of :=

    /tmp/tmpwp9fbpyl_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpwp9fbpyl_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := strings.ToLower(text)\n    for _, v := range vowels {\n\
    \        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7lr7uvch_test.go:21:10: no new variables on left side of :=

    /tmp/tmp7lr7uvch_test.go:21:13: undefined: strings

    /tmp/tmp7lr7uvch_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += string(c)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp42macu3f_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result = append(result, char)\n     \
    \   }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpueq1bv9a_test.go:21:10: no new variables on left side of :=

    /tmp/tmpueq1bv9a_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpueq1bv9a_test.go:24:13: undefined: contains

    /tmp/tmpueq1bv9a_test.go:25:29: first argument to append must be a slice; have
    result (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsd9t2d8p_test.go:23:13: undefined: contains

    /tmp/tmpsd9t2d8p_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := strings.ToLower(text)\n    for _, v := range vowels {\n\
    \        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7lr7uvch_test.go:21:10: no new variables on left side of :=

    /tmp/tmp7lr7uvch_test.go:21:13: undefined: strings

    /tmp/tmp7lr7uvch_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, r := range text {\n        if !contains(vowels, r) {\n            result\
    \ += string(r)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeia_q_n4_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := strings.ToLower(text)\n    for _, v := range vowels {\n\
    \        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7lr7uvch_test.go:21:10: no new variables on left side of :=

    /tmp/tmp7lr7uvch_test.go:21:13: undefined: strings

    /tmp/tmp7lr7uvch_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, r := range text {\n        if !contains(vowels,\
    \ r) {\n            result += string(r)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfnv7dup1_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    text := strings.Replace(text, \" \", \"\", -1)\n\
    \    text := strings.Replace(text, \"-\", \"\", -1)\n    text := strings.Replace(text,\
    \ \".\", \"\", -1)\n    text := strings.Replace(text, \"'\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"!\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"?\", \"\", -1)\n    text := strings.Replace(text, \";\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"-\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"_\", \"\", -1)\n    text := strings.Replace(text, \"/\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"\\\\\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"[\", \"\", -1)\n    text := strings.Replace(text, \"]\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"{\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"}\", \"\", -1)\n    text := strings.Replace(text, \"(\", \"\", -1)\n    text\
    \ := strings.Replace(text, \")\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"+\", \"\", -1)\n    text := strings.Replace(text, \"*\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"?\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"!\", \"\", -1)\n    text := strings.Replace(text, \"-\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"=\", \"\", -1)\n    text := strings.Replace(text,\
    \ \",\", \"\", -1)\n    text := strings.Replace(text, \";\", \"\", -1)\n    text\
    \ := strings.Replace(text, \".\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"-\", \"\", -1)\n    text := strings.Replace(text, \"_\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"/\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"\\\\\", \"\", -1)\n    text := strings.Replace(text, \"[\", \"\", -1)\n  \
    \  text := strings.Replace(text, \"]\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"{\", \"\", -1)\n    text := strings.Replace(text, \"}\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"(\", \"\", -1)\n    text := strings.Replace(text,\
    \ \")\", \"\", -1)\n    text := strings.Replace(text, \"+\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"*\", \"\", \nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpsm95rpu5_test.go:60:6: expected ''('', found TestRemove_Vowels

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !contains(vowels,\
    \ text[i]) {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuukx_2tu_test.go:21:10: no new variables on left side of :=

    /tmp/tmpuukx_2tu_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpuukx_2tu_test.go:23:13: undefined: contains

    /tmp/tmpuukx_2tu_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result = append(result, char)\n     \
    \   }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpueq1bv9a_test.go:21:10: no new variables on left side of :=

    /tmp/tmpueq1bv9a_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpueq1bv9a_test.go:24:13: undefined: contains

    /tmp/tmpueq1bv9a_test.go:25:29: first argument to append must be a slice; have
    result (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    text := []rune(text)\n\
    \    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1bjyropn_test.go:21:10: no new variables on left side of :=

    /tmp/tmp1bjyropn_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp1bjyropn_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsd9t2d8p_test.go:23:13: undefined: contains

    /tmp/tmpsd9t2d8p_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result = append(result, char)\n     \
    \   }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpueq1bv9a_test.go:21:10: no new variables on left side of :=

    /tmp/tmpueq1bv9a_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpueq1bv9a_test.go:24:13: undefined: contains

    /tmp/tmpueq1bv9a_test.go:25:29: first argument to append must be a slice; have
    result (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wvo1f4v_test.go:23:13: undefined: contains

    /tmp/tmp6wvo1f4v_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, v := range text {\n        if !contains(vowels, v) {\n \
    \           result += v\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0gyihnas_test.go:23:13: undefined: contains

    /tmp/tmp0gyihnas_test.go:24:13: invalid operation: result += v (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouy\")\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv3rnxesp_test.go:23:13: undefined: contains

    /tmp/tmpv3rnxesp_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !contains(vowels,\
    \ text[i]) {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuukx_2tu_test.go:21:10: no new variables on left side of :=

    /tmp/tmpuukx_2tu_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpuukx_2tu_test.go:23:13: undefined: contains

    /tmp/tmpuukx_2tu_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !contains(vowels,\
    \ text[i]) {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuukx_2tu_test.go:21:10: no new variables on left side of :=

    /tmp/tmpuukx_2tu_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpuukx_2tu_test.go:23:13: undefined: contains

    /tmp/tmpuukx_2tu_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    text := strings.Replace(text, \" \", \"\", -1)\n\
    \    text := strings.Replace(text, \"-\", \"\", -1)\n    text := strings.Replace(text,\
    \ \".\", \"\", -1)\n    text := strings.Replace(text, \"'\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"!\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"?\", \"\", -1)\n    text := strings.Replace(text, \";\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"-\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"_\", \"\", -1)\n    text := strings.Replace(text, \"/\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"\\\\\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"[\", \"\", -1)\n    text := strings.Replace(text, \"]\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"{\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"}\", \"\", -1)\n    text := strings.Replace(text, \"(\", \"\", -1)\n    text\
    \ := strings.Replace(text, \")\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"+\", \"\", -1)\n    text := strings.Replace(text, \"*\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"?\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"!\", \"\", -1)\n    text := strings.Replace(text, \"-\", \"\", -1)\n    text\
    \ := strings.Replace(text, \".\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"'\", \"\", -1)\n    text := strings.Replace(text, \"!\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"?\", \"\", -1)\n    text := strings.Replace(text,\
    \ \";\", \"\", -1)\n    text := strings.Replace(text, \"-\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"_\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"/\", \"\", -1)\n    text := strings.Replace(text, \"\\\\\", \"\", -1)\n  \
    \  text := strings.Replace(text, \"[\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"]\", \"\", -1)\n    text := strings.Replace(text, \"{\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"}\", \"\", -1)\n    text := strings.Replace(text,\
    \ \"(\", \"\", -1)\n    text := strings.Replace(text, \")\", \"\", -1)\n    text\
    \ := strings.Replace(text, \"+\", \"\"\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmprpoqtxv5_test.go:59:42: missing '','' before newline in argument list

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            delete(text, v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpo_p2c9ck_test.go:21:10: no new variables on left side of :=

    /tmp/tmpo_p2c9ck_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpo_p2c9ck_test.go:23:13: undefined: contains

    /tmp/tmpo_p2c9ck_test.go:24:20: invalid argument: text (variable of type string)
    is not a map

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073320
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, c := range text {\n       \
    \ if !contains(vowels, c) {\n            result = append(result, c)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv6qj_80q_test.go:21:10: no new variables on left side of :=

    /tmp/tmpv6qj_80q_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpv6qj_80q_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073320
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    text := strings.Replace(text, vowels, \"\", -1)\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5cjtmy3b_test.go:21:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:21:13: undefined: strings

    /tmp/tmp5cjtmy3b_test.go:22:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:22:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, char := range text {\n        if !contains(vowels, char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph0_i4t10_test.go:23:13: undefined: contains

    /tmp/tmph0_i4t10_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wvo1f4v_test.go:23:13: undefined: contains

    /tmp/tmp6wvo1f4v_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouAEIOU\")\n    for _, v := range\
    \ vowels {\n        text = text[:len(text)-v]\n    }\n    return text\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptt0_39_5_test.go:22:22: invalid operation: len(text) - v (mismatched types
    int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !contains(vowels,\
    \ text[i]) {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuukx_2tu_test.go:21:10: no new variables on left side of :=

    /tmp/tmpuukx_2tu_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpuukx_2tu_test.go:23:13: undefined: contains

    /tmp/tmpuukx_2tu_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsd9t2d8p_test.go:23:13: undefined: contains

    /tmp/tmpsd9t2d8p_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, v := range text {\n       \
    \ if !contains(vowels, v) {\n            result = append(result, v)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyp4ih56t_test.go:21:10: no new variables on left side of :=

    /tmp/tmpyp4ih56t_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpyp4ih56t_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = text[i]\n        }\n    }\n    return string(text)\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxqthvy2c_test.go:20:5: vowels declared but not used

    /tmp/tmpxqthvy2c_test.go:21:10: no new variables on left side of :=

    /tmp/tmpxqthvy2c_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpxqthvy2c_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, c := range text {\n        if !contains(vowels, c) {\n            result\
    \ += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyzu8g7kx_test.go:23:13: undefined: contains

    /tmp/tmpyzu8g7kx_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, v := range text {\n       \
    \ if !contains(vowels, v) {\n            result = append(result, v)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyp4ih56t_test.go:21:10: no new variables on left side of :=

    /tmp/tmpyp4ih56t_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpyp4ih56t_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcixfx4_6_test.go:21:10: no new variables on left side of :=

    /tmp/tmpcixfx4_6_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpcixfx4_6_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    text := []rune(text)\n\
    \    for i := 0; i < len(text); i++ {\n        if !contains(vowels, text[i]) {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpckh0a5vp_test.go:21:10: no new variables on left side of :=

    /tmp/tmpckh0a5vp_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpckh0a5vp_test.go:23:13: undefined: contains

    /tmp/tmpckh0a5vp_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, r := range text {\n        if !contains(vowels, r) {\n            result\
    \ += string(r)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeia_q_n4_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    text := strings.Replace(text, vowels, \"\", -1)\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5cjtmy3b_test.go:21:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:21:13: undefined: strings

    /tmp/tmp5cjtmy3b_test.go:22:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:22:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, char := range text {\n        if !contains(vowels, char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph0_i4t10_test.go:23:13: undefined: contains

    /tmp/tmph0_i4t10_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, char := range text {\n    \
    \    if !contains(vowels, char) {\n            result = append(result, char)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbgpodmws_test.go:21:10: no new variables on left side of :=

    /tmp/tmpbgpodmws_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpbgpodmws_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, v := range text {\n       \
    \ if !contains(vowels, v) {\n            result = append(result, v)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyp4ih56t_test.go:21:10: no new variables on left side of :=

    /tmp/tmpyp4ih56t_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpyp4ih56t_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, v := range text {\n        if !contains(vowels, v) {\n \
    \           result += v\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0gyihnas_test.go:23:13: undefined: contains

    /tmp/tmp0gyihnas_test.go:24:13: invalid operation: result += v (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcixfx4_6_test.go:21:10: no new variables on left side of :=

    /tmp/tmpcixfx4_6_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpcixfx4_6_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, r := range text {\n        if !contains(vowels, r) {\n \
    \           result += string(r)\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfvvcd7wv_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouAEIOU\")\n    text := []rune(text)\n\
    \    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmh6ldglq_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmh6ldglq_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmh6ldglq_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcixfx4_6_test.go:21:10: no new variables on left side of :=

    /tmp/tmpcixfx4_6_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpcixfx4_6_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result = append(result, char)\n     \
    \   }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpueq1bv9a_test.go:21:10: no new variables on left side of :=

    /tmp/tmpueq1bv9a_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpueq1bv9a_test.go:24:13: undefined: contains

    /tmp/tmpueq1bv9a_test.go:25:29: first argument to append must be a slice; have
    result (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += v\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4dzrb7wl_test.go:23:13: undefined: contains

    /tmp/tmp4dzrb7wl_test.go:24:13: invalid operation: result += v (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wvo1f4v_test.go:23:13: undefined: contains

    /tmp/tmp6wvo1f4v_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    text := strings.Replace(text, vowels, \"\", -1)\n\
    \    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5cjtmy3b_test.go:21:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:21:13: undefined: strings

    /tmp/tmp5cjtmy3b_test.go:22:10: no new variables on left side of :=

    /tmp/tmp5cjtmy3b_test.go:22:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, c := range text {\n       \
    \ if !contains(vowels, c) {\n            result = append(result, c)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv6qj_80q_test.go:21:10: no new variables on left side of :=

    /tmp/tmpv6qj_80q_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpv6qj_80q_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073320
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wvo1f4v_test.go:23:13: undefined: contains

    /tmp/tmp6wvo1f4v_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            delete(text, v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpo_p2c9ck_test.go:21:10: no new variables on left side of :=

    /tmp/tmpo_p2c9ck_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpo_p2c9ck_test.go:23:13: undefined: contains

    /tmp/tmpo_p2c9ck_test.go:24:20: invalid argument: text (variable of type string)
    is not a map

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073320
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, r := range text {\n        if !contains(vowels, r) {\n            result\
    \ += string(r)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeia_q_n4_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmcowbzhk_test.go:21:10: no new variables on left side of :=

    /tmp/tmpmcowbzhk_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpmcowbzhk_test.go:23:13: undefined: contains

    /tmp/tmpmcowbzhk_test.go:24:17: undefined: unicode

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'}\n    text := strings.ToLower(text)\n    for _, v := range vowels {\n\
    \        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n\
    \nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7lr7uvch_test.go:21:10: no new variables on left side of :=

    /tmp/tmp7lr7uvch_test.go:21:13: undefined: strings

    /tmp/tmp7lr7uvch_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, letter := range text {\n      \
    \  if !contains(vowels, letter) {\n            result += string(letter)\n    \
    \    }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkq8rcih8_test.go:21:10: no new variables on left side of :=

    /tmp/tmpkq8rcih8_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpkq8rcih8_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if text[i] != 'a'\
    \ && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' {\n\
    \            text[i] = ' '\n        }\n    }\n    return string(text)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4vh0ywbb_test.go:20:5: vowels declared but not used

    /tmp/tmp4vh0ywbb_test.go:21:10: no new variables on left side of :=

    /tmp/tmp4vh0ywbb_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp4vh0ywbb_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for i := 0; i < len(text); i++ {\n        if !contains(vowels,\
    \ text[i]) {\n            text[i] = ' '\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuukx_2tu_test.go:21:10: no new variables on left side of :=

    /tmp/tmpuukx_2tu_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpuukx_2tu_test.go:23:13: undefined: contains

    /tmp/tmpuukx_2tu_test.go:24:13: cannot assign to text[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv7b09_4g_test.go:23:13: undefined: contains

    /tmp/tmpv7b09_4g_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiouAEIOU\")\n    result := \"\"\n\
    \    for _, letter := range text {\n        if !contains(vowels, letter) {\n \
    \           result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoge6uzjp_test.go:23:13: undefined: contains

    /tmp/tmpoge6uzjp_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, char := range text {\n        if\
    \ !contains(vowels, char) {\n            result += string(char)\n        }\n \
    \   }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp00nv__k3_test.go:21:10: no new variables on left side of :=

    /tmp/tmp00nv__k3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmp00nv__k3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcixfx4_6_test.go:21:10: no new variables on left side of :=

    /tmp/tmpcixfx4_6_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpcixfx4_6_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6wvo1f4v_test.go:23:13: undefined: contains

    /tmp/tmp6wvo1f4v_test.go:24:13: invalid operation: result += letter (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := \"\"\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            result += string(v)\n        }\n    }\n    return result\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcixfx4_6_test.go:21:10: no new variables on left side of :=

    /tmp/tmpcixfx4_6_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpcixfx4_6_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            text := append(text, v)\n        }\n    }\n    return string(text)\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzot5c8m4_test.go:21:10: no new variables on left side of :=

    /tmp/tmpzot5c8m4_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpzot5c8m4_test.go:23:13: undefined: contains

    /tmp/tmpzot5c8m4_test.go:24:28: first argument to append must be a slice; have
    text (variable of type string)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ []rune(text)\n    result := []rune{}\n    for _, letter := range text {\n  \
    \      if !contains(vowels, letter) {\n            result = append(result, letter)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn0ket5o3_test.go:21:10: no new variables on left side of :=

    /tmp/tmpn0ket5o3_test.go:21:13: cannot use []rune(text) (value of type []rune)
    as type string in assignment

    /tmp/tmpn0ket5o3_test.go:24:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgfm3lyfg_test.go:23:13: undefined: contains

    /tmp/tmpgfm3lyfg_test.go:24:13: invalid operation: result += char (mismatched
    types string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text :=\
    \ strings.ToLower(text)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl311ec4n_test.go:21:10: no new variables on left side of :=

    /tmp/tmpl311ec4n_test.go:21:13: undefined: strings

    /tmp/tmpl311ec4n_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073319
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text\
    \ string) string {\n    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result\
    \ := \"\"\n    for _, c := range text {\n        if !contains(vowels, c) {\n \
    \           result += c\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph3e2g79j_test.go:23:13: undefined: contains

    /tmp/tmph3e2g79j_test.go:24:13: invalid operation: result += c (mismatched types
    string and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073321

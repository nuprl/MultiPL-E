language: go_test.go
name: HumanEval_66_digitSum
results:
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n\
    \            result += int(char - '0')\n        }\n    }\n    return result\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy9bhz50u_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy9bhz50u_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy9bhz50u_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy9bhz50u_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy9bhz50u_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy9bhz50u_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy9bhz50u_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 10\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfo6tqtua_test.go:28:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, c := range s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += int(c - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n          \
    \  sum += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0l34va0v_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0l34va0v_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0l34va0v_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0l34va0v_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0l34va0v_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0l34va0v_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0l34va0v_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp60pbxz7t_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073877
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int = 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += char - 'a'\n        }\n    }\n    return result\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqwnxgttd_test.go:28:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073877
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, c := range s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += int(c-'0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpv4uh76iu_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpv4uh76iu_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpv4uh76iu_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpv4uh76iu_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpv4uh76iu_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpv4uh76iu_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpv4uh76iu_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073877
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n          \
    \  sum += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpej2bqlue_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpej2bqlue_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpej2bqlue_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpej2bqlue_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpej2bqlue_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpej2bqlue_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpej2bqlue_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdcbcdk4u_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdcbcdk4u_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += char - 'a'\n        }\n    }\n    return result\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppes184bu_test.go:28:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, c := range s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += int(c - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuwao2ymp_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuwao2ymp_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n          \
    \  sum += int(v - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmppm7x6p8o_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppm7x6p8o_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmppm7x6p8o_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppm7x6p8o_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmppm7x6p8o_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppm7x6p8o_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmppm7x6p8o_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp7ceb9_7h_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp7ceb9_7h_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq83yhp6w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq83yhp6w_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp98kjok21_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp98kjok21_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpkcw0qdii_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpkcw0qdii_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\
    \ = 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n        \
    \    sum += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcuh0varz_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcuh0varz_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcuh0varz_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcuh0varz_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcuh0varz_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcuh0varz_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcuh0varz_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n          \
    \  sum += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpzw7rrtco_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpzw7rrtco_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5l8eocrj_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5l8eocrj_test.go:54: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n          \
    \  sum += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4iapzrha_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4iapzrha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4iapzrha_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4iapzrha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4iapzrha_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4iapzrha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4iapzrha_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwp_oe5ri_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwp_oe5ri_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2346yw4k_test.go:28:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n \
    \           sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4g6bjctp_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4g6bjctp_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0calbgq7_test.go:28:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n\
    \            result += int(char - '0')\n        }\n    }\n    return result\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9m34tbbf_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9m34tbbf_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0calbgq7_test.go:28:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += int(c - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpe3vum1ij_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpe3vum1ij_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpe3vum1ij_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpe3vum1ij_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpe3vum1ij_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpe3vum1ij_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpe3vum1ij_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'A' && v <= 'Z' {\n            sum\
    \ += int(v - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpxjz4me6v_test.go:54: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpxjz4me6v_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpxjz4me6v_test.go:54: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpxjz4me6v_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpxjz4me6v_test.go:54: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpxjz4me6v_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpxjz4me6v_test.go:54: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n        \
    \    result += int(v - 'a')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmdue5f02_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmdue5f02_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmdue5f02_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmdue5f02_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmdue5f02_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmdue5f02_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmdue5f02_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n          \
    \  sum += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpuz_u85q9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpuz_u85q9_test.go:54: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 10\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfo6tqtua_test.go:28:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        } else {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsfxrsxku_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsfxrsxku_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n          \
    \  sum += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9amat4ib_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9amat4ib_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9amat4ib_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9amat4ib_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9amat4ib_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9amat4ib_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9amat4ib_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3tpisl4v_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp57pvwyxn_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp57pvwyxn_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += char - 'a'\n        }\n    }\n    return result\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppes184bu_test.go:28:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= '0' && char <= '9' {\n\
    \            result += int(char - '0')\n        }\n    }\n    return result\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp07jp3sdk_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp07jp3sdk_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n          \
    \  sum += int(v) - int('A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmobbfejq_test.go:54: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmobbfejq_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmobbfejq_test.go:54: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmobbfejq_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmobbfejq_test.go:54: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmobbfejq_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmobbfejq_test.go:54: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v) - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpy2_5d8g9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpy2_5d8g9_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpr3oo87h0_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpr3oo87h0_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpr3oo87h0_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpr3oo87h0_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpr3oo87h0_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpr3oo87h0_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpr3oo87h0_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0calbgq7_test.go:28:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n          \
    \  sum += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp06u6fjy0_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp06u6fjy0_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpafh2rop4_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpafh2rop4_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5r1jpeqc_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5r1jpeqc_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5r1jpeqc_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5r1jpeqc_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5r1jpeqc_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5r1jpeqc_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5r1jpeqc_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n \
    \           sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprct0x3e3_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v) -\
    \ '0'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb0s25rha_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb0s25rha_test.go:54: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += char - 'A' + 10\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfo6tqtua_test.go:28:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum =\
    \ 0\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n          \
    \  sum += int(v) - int('a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpwflfb8dm_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpwflfb8dm_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpwflfb8dm_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpwflfb8dm_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpwflfb8dm_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpwflfb8dm_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpwflfb8dm_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v-'0')\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9p2y0qxg_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9p2y0qxg_test.go:56: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'A' && char <= 'Z' {\n     \
    \       sum += int(char - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmo15l4p5_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmo15l4p5_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var result\
    \ int\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += char - 'a'\n        }\n    }\n    return result\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppes184bu_test.go:28:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073878
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += int(c-'0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq6pf12i9_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq6pf12i9_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq6pf12i9_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq6pf12i9_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq6pf12i9_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq6pf12i9_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq6pf12i9_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            sum\
    \ += int(v - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpw99505yh_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpw99505yh_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= '0' && char <= '9' {\n     \
    \       sum += int(char - '0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb9kxs8ae_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb9kxs8ae_test.go:54: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073878
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdqsra4u3_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdqsra4u3_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum\
    \ += int(c - 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo9zmnj_w_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpo9zmnj_w_test.go:54: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, v := range s {\n        if v > '9' {\n            sum += int(v - '0')\n\
    \        } else {\n            sum += int(v - 'A' + 10)\n        }\n    }\n  \
    \  return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpp7ltupzw_test.go:56: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp7ltupzw_test.go:56:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpp7ltupzw_test.go:56: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp7ltupzw_test.go:56:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpp7ltupzw_test.go:56: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp7ltupzw_test.go:56:\
    \ expected '%!s(int=151)', got '%!s(int=445)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpp7ltupzw_test.go:56: expected '%!s(int=327)', got '%!s(int=749)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073879
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += int(char - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp34llsc___test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp34llsc___test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            sum\
    \ += int(c - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpthwpaaun_test.go:54:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpthwpaaun_test.go:54: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073876
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       sum += char - 'a'\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3adhai2_test.go:28:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073875

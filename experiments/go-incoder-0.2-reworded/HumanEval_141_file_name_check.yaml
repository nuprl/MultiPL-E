name: HumanEval_141_file_name_check
language: go_test.go
prompt: "package file_name_check_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Create a function which takes a string representing a file's name, and returns\n\
  // 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n// A file's\
  \ name is considered to be valid if and only if all the following conditions \n\
  // are met:\n// - There should not be more than three digits ('0'-'9') in the file's\
  \ name.\n// - The file's name contains exactly one dot '.'\n// - The substring before\
  \ the dot should not be empty, and it starts with a letter from \n// the latin alphapet\
  \ ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should be one of these:\
  \ ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"example.txt\")\n\
  // \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\nfunc file_name_check(file_name\
  \ string) string {\n"
tests: "func TestFile_Name_Check(t *testing.T) {\n  candidate := file_name_check\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(\"example.txt\"), expected: \"Yes\"\
  \ },\n     { actual: candidate(\"1example.dll\"), expected: \"No\" },\n     { actual:\
  \ candidate(\"s1sdf3.asd\"), expected: \"No\" },\n     { actual: candidate(\"K.dll\"\
  ), expected: \"Yes\" },\n     { actual: candidate(\"MY16FILE3.exe\"), expected:\
  \ \"Yes\" },\n     { actual: candidate(\"His12FILE94.exe\"), expected: \"No\" },\n\
  \     { actual: candidate(\"_Y.txt\"), expected: \"No\" },\n     { actual: candidate(\"\
  ?aREYA.exe\"), expected: \"No\" },\n     { actual: candidate(\"/this_is_valid.dll\"\
  ), expected: \"No\" },\n     { actual: candidate(\"this_is_valid.wow\"), expected:\
  \ \"No\" },\n     { actual: candidate(\"this_is_valid.txt\"), expected: \"Yes\"\
  \ },\n     { actual: candidate(\"this_is_valid.txtexe\"), expected: \"No\" },\n\
  \     { actual: candidate(\"#this2_i4s_5valid.ten\"), expected: \"No\" },\n    \
  \ { actual: candidate(\"@this1_is6_valid.exe\"), expected: \"No\" },\n     { actual:\
  \ candidate(\"this_is_12valid.6exe4.txt\"), expected: \"No\" },\n     { actual:\
  \ candidate(\"all.exe.txt\"), expected: \"No\" },\n     { actual: candidate(\"I563_No.exe\"\
  ), expected: \"Yes\" },\n     { actual: candidate(\"Is3youfault.txt\"), expected:\
  \ \"Yes\" },\n     { actual: candidate(\"no_one#knows.dll\"), expected: \"Yes\"\
  \ },\n     { actual: candidate(\"1I563_Yes3.exe\"), expected: \"No\" },\n     {\
  \ actual: candidate(\"I563_Yes3.txtt\"), expected: \"No\" },\n     { actual: candidate(\"\
  final..txt\"), expected: \"No\" },\n     { actual: candidate(\"final132\"), expected:\
  \ \"No\" },\n     { actual: candidate(\"_f4indsartal132.\"), expected: \"No\" },\n\
  \     { actual: candidate(\".txt\"), expected: \"No\" },\n     { actual: candidate(\"\
  s.\"), expected: \"No\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    // Your code here\n    \n    // Your code here\n    \n    // Your\
    \ code here\n    \n    // Your code here\n    \n    // Your code here\n    \n\
    \    // Your code here\n    \n    // Your code here\n    \n    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // ", "    \n    // Initialize a boolean\
    \ variable 'is_valid' to 'False'\n    is_valid := false\n    \n    // Initialize\
    \ a variable 'file_name_parts' to an empty string\n    file_name_parts := \"\"\
    \n    \n    // Initialize a variable 'file_name_length' to 0\n    file_name_length\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_letter' to 'a'\n \
    \   file_name_first_letter := 'a'\n    \n    // Initialize a variable 'file_name_last_letter'\
    \ to 'z'\n    file_name_last_letter := 'z'\n    \n    // Initialize a variable\
    \ 'file_name_first_letter_length' to 0\n    file_name_first_letter_length := 0\n\
    \    \n    // Initialize a variable 'file_name_last_letter_length' to 0\n    file_name_last_letter_length\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_dot_length' to 0\n\
    \    file_name_first_dot_length := 0\n    \n    // Initialize a variable 'file_name_last_dot_length'\
    \ to 0\n    file_name_last_dot_length := 0\n    \n    // Initialize a variable\
    \ 'file_name_first_dot_index' to 0\n    file_name_first_dot_index := 0\n    \n\
    \    // Initialize a variable 'file_name_last_dot_index' to 0\n    file_name_last_dot_index\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_dot_character' to\
    \ 'a'\n    file_name_first_dot_character := 'a'\n    \n    // Initialize a variable\
    \ 'file_name_last_dot_character' to 'z'\n    file_name_last_dot_character := 'z'\n\
    \    \n    // Initialize a variable 'file_name_first_dot_character_length' to\
    \ 0\n    file_name_first_dot_character_length := 0\n    \n    // Initialize a\
    \ variable 'file_name_last_dot_character_length' to 0\n    file_name_last_dot_character_length\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_dot_character_index'\
    \ to 0\n    file_name_first_dot_character_index := 0\n    \n    // Initialize\
    \ a variable 'file_name_last_dot_character_index' to 0\n    file_name_last_dot_character_index\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_dot_character_index'\
    \ to 0\n    file_name_first_dot_character_index := 0\n    \n    // Initialize\
    \ a variable 'file_name_last_dot_character_index' to 0\n    file_name_last_dot_character_index\
    \ := 0\n    \n    // Initialize a variable 'file_name_first_dot_character_index'\
    \ to 0\n    file_name_first_dot_character_index := 0\n    \n    // Initialize\
    \ a variable 'file_name_last_dot_character_index' to 0\n    file_name", "    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // ", "    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // ", "  \
    \  \n    // Initialize a boolean variable 'valid' to false\n    var valid bool\
    \ = false\n    \n    // Initialize a variable 'file_name_length' to 0\n    var\
    \ file_name_length int = 0\n    \n    // Initialize a variable 'file_name_char'\
    \ to 0\n    var file_name_char int = 0\n    \n    // Initialize a variable 'file_name_dot_index'\
    \ to 0\n    var file_name_dot_index int = 0\n    \n    // Initialize a variable\
    \ 'file_name_dot_length' to 0\n    var file_name_dot_length int = 0\n    \n  \
    \  // Initialize a variable 'file_name_dot_char' to 0\n    var file_name_dot_char\
    \ int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_index' to 0\n\
    \    var file_name_dot_dot_index int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_length'\
    \ to 0\n    var file_name_dot_dot_length int = 0\n    \n    // Initialize a variable\
    \ 'file_name_dot_dot_char' to 0\n    var file_name_dot_dot_char int = 0\n    \n\
    \    // Initialize a variable 'file_name_dot_dot_dot_index' to 0\n    var file_name_dot_dot_dot_index\
    \ int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_dot_length' to\
    \ 0\n    var file_name_dot_dot_dot_length int = 0\n    \n    // Initialize a variable\
    \ 'file_name_dot_dot_dot_char' to 0\n    var file_name_dot_dot_dot_char int =\
    \ 0\n    \n    // Initialize a variable 'file_name_dot_dot_dot_dot_index' to 0\n\
    \    var file_name_dot_dot_dot_dot_index int = 0\n    \n    // Initialize a variable\
    \ 'file_name_dot_dot_dot_dot_length' to 0\n    var file_name_dot_dot_dot_dot_length\
    \ int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_dot_dot_char'\
    \ to 0\n    var file_name_dot_dot_dot_dot_char int = 0\n    \n    // Initialize\
    \ a variable 'file_name_dot_dot_dot_dot_dot_index' to 0\n    var file_name_dot_dot_dot_dot_dot_index\
    \ int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_dot_dot_dot_length'\
    \ to 0\n    var file_name_dot_dot_dot_dot_dot_length int = 0\n    \n    // Initialize\
    \ a variable 'file_name_dot_dot_dot_dot_dot_char' to 0\n    var file_name_dot_dot_dot_dot_dot_char\
    \ int = 0\n    \n    // Initialize a variable 'file_name_dot_dot_dot_dot_dot_dot_index'\
    \ to 0\n    var file_name_dot_dot_dot_dot_dot_dot_index int = 0\n    \n    //\
    \ Initialize a variable 'file_name_dot_dot_dot_dot_dot_dot_length' to 0\n    var\
    \ file_name_dot_dot_dot_dot_dot_dot_length int = 0\n    ", "    // Your code here\n\
    \    \n    return \"\"\n}\n", "    // Your code goes here\n    \n    // Your code\
    \ goes here\n    \n    // Your code goes here\n    \n    // Your code goes here\n\
    \    \n    // Your code goes here\n    \n    // Your code goes here\n    \n  \
    \  // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n", "    \n    // Check\
    \ that the file name contains exactly one dot '.'\n    if file_name[0 : len(file_name)-1]\
    \ != \".\" {\n        return \"No\"\n    }\n    \n    // Check that the substring\
    \ before the dot should not be empty, and it starts with a letter from the latin\
    \ alphapet ('a'-'z' and 'A'-'Z')\n    if file_name[len(file_name)-1 : len(file_name)]\
    \ != \".\" {\n        return \"No\"\n    }\n    \n    // Check that the substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    if file_name[len(file_name)-1\
    \ : len(file_name)] != \"txt\" && file_name[len(file_name)-1 : len(file_name)]\
    \ != \"exe\" && file_name[len(file_name)-1 : len(file_name)] != \"dll\" {\n  \
    \      return \"No\"\n    }\n    \n    // Check that the file's name contains\
    \ only digits and no more than three digits\n    if file_name[len(file_name)-1\
    \ : len(file_name)] >= \"0\" && file_name[len(file_name)-1 : len(file_name)] <=\
    \ \"9\" {\n        return \"Yes\"\n    }\n    \n    return \"No\"\n}\n", "   \
    \ \n    // Initialize a variable to store the result\n    result := \"No\"\n \
    \   \n    // Initialize a variable to store the file's name\n    file_name :=\
    \ file_name\n    \n    // Initialize a variable to store the file's extension\n\
    \    file_extension := \"\"\n    \n    // Initialize a variable to store the file's\
    \ extension\n    file_extension := file_name[strings.LastIndex(file_name, \".\"\
    )+1:]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.LastIndex(file_name, \".\")]\n    \n    // Initialize\
    \ a variable to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n    // Initialize a variable to store the file's name\n    file_name\
    \ := file_name[:strings.Index(file_name, \".\")]\n    \n    // Initialize a variable\
    \ to store the file's name\n    file_name := file_name[:strings.Index(file_name,\
    \ \".\")]\n    \n", "    \n    // 1. Check if the file's name contains more than\
    \ three digits ('0'-'9')\n    if len(file_name) > 3 {\n        return \"No\"\n\
    \    }\n    \n    // 2. Check if the file's name contains exactly one dot '.'\n\
    \    if file_name[len(file_name)-1] != '.' {\n        return \"No\"\n    }\n \
    \   \n    // 3. Check if the substring before the dot should not be empty, and\
    \ it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n    if\
    \ file_name[:len(file_name)-1] == \"\" {\n        return \"No\"\n    }\n    \n\
    \    // 4. Check if the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n    valid_extensions := []string{\"txt\", \"exe\", \"dll\"}\n\
    \    if !contains(valid_extensions, file_name[len(file_name)-1]) {\n        return\
    \ \"No\"\n    }\n    \n    return \"Yes\"\n}\n", "    // Your code here\n    \n\
    \    return file_name\n}\n", "    // Your code goes here\n    \n    return \"\"\
    \n}\n", "    \n    // Initialize a boolean variable to store whether the file's\
    \ name is valid or not.\n    valid := false\n    \n    // Initialize a variable\
    \ to store the first part of the file's name.\n    part := \"\"\n    \n    //\
    \ Initialize a variable to store the last part of the file's name.\n    last :=\
    \ \"\"\n    \n    // Initialize a variable to store the number of digits in the\
    \ file's name.\n    digits := 0\n    \n    // Initialize a variable to store the\
    \ number of dots in the file's name.\n    dots := 0\n    \n    // Initialize a\
    \ variable to store the number of characters in the file's name.\n    chars :=\
    \ 0\n    \n    // Initialize a variable to store the number of characters in the\
    \ file's name.\n    chars := len(file_name)\n    \n    // Initialize a variable\
    \ to store the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    chars := len(file_name)\n\
    \    \n    // Initialize a variable to store the number of characters in the file's\
    \ name.\n    chars := len(file_name)\n    \n    // Initialize a variable to store\
    \ the number of characters in the file's name.\n    char", "    \n    // 1. Check\
    \ if the file's name contains more than three digits (0-9)\n    if len(file_name)\
    \ > 3 {\n        return \"No\"\n    }\n    \n    // 2. Check if the file's name\
    \ contains exactly one dot '.'\n    if file_name[len(file_name)-1] != '.' {\n\
    \        return \"No\"\n    }\n    \n    // 3. Check if the substring before the\
    \ dot should not be empty, and it starts with a letter from the latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n    if file_name[:len(file_name)-1] == \"\" {\n     \
    \   return \"No\"\n    }\n    \n    // 4. Check if the substring after the dot\
    \ should be one of these: ['txt', 'exe', 'dll']\n    if !file_name[len(file_name)-1]\
    \ in ['txt', 'exe', 'dll'] {\n        return \"No\"\n    }\n    \n    return \"\
    Yes\"\n}\n", "    \n    // Initialize a boolean variable 'is_valid' to 'False'.\n\
    \    var is_valid bool = false\n    \n    // Initialize a variable 'file_name_length'\
    \ to '0'.\n    var file_name_length int = 0\n    \n    // Initialize a variable\
    \ 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n    // Initialize\
    \ a variable 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n  \
    \  // Initialize a variable 'dot_position' to '-1'.\n    var dot_position int\
    \ = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var dot_position\
    \ int = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var\
    \ dot_position int = -1\n    \n    // Initialize a variable 'dot_position' to\
    \ '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable 'dot_position'\
    \ to '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable\
    \ 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n    // Initialize\
    \ a variable 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n  \
    \  // Initialize a variable 'dot_position' to '-1'.\n    var dot_position int\
    \ = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var dot_position\
    \ int = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var\
    \ dot_position int = -1\n    \n    // Initialize a variable 'dot_position' to\
    \ '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable 'dot_position'\
    \ to '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable\
    \ 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n    // Initialize\
    \ a variable 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n  \
    \  // Initialize a variable 'dot_position' to '-1'.\n    var dot_position int\
    \ = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var dot_position\
    \ int = -1\n    \n    // Initialize a variable 'dot_position' to '-1'.\n    var\
    \ dot_position int = -1\n    \n    // Initialize a variable 'dot_position' to\
    \ '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable 'dot_position'\
    \ to '-1'.\n    var dot_position int = -1\n    \n    // Initialize a variable\
    \ 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n    // Initialize\
    \ a variable 'dot_position' to '-1'.\n    var dot_position int = -1\n    \n  \
    \  // Initialize a variable 'dot_position' to ", "    // Your code here\n    \n\
    \    // Your code here\n    \n    // Your code here\n    \n    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    // ",
  "    // Your code here\n    \n    // Your code here\n    \n    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // ", "    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // ", "  \
    \  // Your code here\n    \n    // Your code here\n    \n    // Your code here\n\
    \    \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // Your code here\n    \n    // Your code here\n \
    \   \n    // Your code here\n    \n    // Your code here\n    \n    // Your code\
    \ here\n    \n    // Your code here\n    \n    // Your code here\n    \n    //\
    \ Your code here\n    \n    // ", "    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n    // Your\
    \ code goes here\n    \n    // Your code goes here\n    \n    // Your code goes\
    \ here\n    \n    // Your code goes here\n    \n    // Your code goes here\n \
    \   \n    // Your code goes here\n    \n    // Your code goes here\n    \n   \
    \ // Your code goes here\n    \n    // Your code goes here\n    \n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_75_is_multiply_prime
language: go_test.go
prompt: "package is_multiply_prime_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  func is_multiply_prime(a int) bool {\n"
tests: "func TestIs_Multiply_Prime(t *testing.T) {\n  candidate := is_multiply_prime\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(5), expected: false },\n     { actual:\
  \ candidate(30), expected: true },\n     { actual: candidate(8), expected: true\
  \ },\n     { actual: candidate(10), expected: false },\n     { actual: candidate(125),\
  \ expected: true },\n     { actual: candidate(105), expected: true },\n     { actual:\
  \ candidate(126), expected: false },\n     { actual: candidate(729), expected: false\
  \ },\n     { actual: candidate(891), expected: false },\n     { actual: candidate(1001),\
  \ expected: true },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if a < 100 {\n        return false\n    }\n    \n    primes :=\
    \ make([]int, 100)\n    \n    for i := 0; i < 100; i++ {\n        if primes[i]\
    \ == 0 {\n            primes[i] = 1\n        }\n    }\n    \n    for i := 0; i\
    \ < 100; i++ {\n        if a % primes[i] == 0 {\n            return false\n  \
    \      }\n    }\n    \n    return true\n}\n", "    if a < 100 {\n        return\
    \ false\n    }\n    \n    primes := make([]int, 100)\n    primes[0] = 2\n    primes[1]\
    \ = 3\n    primes[2] = 5\n    primes[3] = 7\n    primes[4] = 11\n    primes[5]\
    \ = 13\n    primes[6] = 17\n    primes[7] = 19\n    primes[8] = 23\n    primes[9]\
    \ = 29\n    primes[10] = 31\n    primes[11] = 37\n    primes[12] = 41\n    primes[13]\
    \ = 43\n    primes[14] = 47\n    primes[15] = 53\n    primes[16] = 59\n    primes[17]\
    \ = 61\n    primes[18] = 67\n    primes[19] = 71\n    primes[20] = 73\n    primes[21]\
    \ = 31\n    primes[22] = 37\n    primes[23] = 41\n    primes[24] = 43\n    primes[25]\
    \ = 47\n    primes[26] = 53\n    primes[27] = 59\n    primes[28] = 61\n    primes[29]\
    \ = 67\n    primes[30] = 71 \n    primes[31] = 73\n    primes[32] = 79\n    primes[33]\
    \ = 83\n    primes[34] = 89\n    primes[35] = 97\n    primes[36] = 101\n    primes[37]\
    \ = 103\n    primes[38] = 107\n    primes[39] = 113\n    primes[40] = 119\n  \
    \  primes[41] = 121\n    primes[42] = 127\n    primes[43] = 131\n    primes[44]\
    \ = 137\n    primes[45] = 139\n    primes[46] = 149\n    primes[47] = 151\n  \
    \  primes[48] = 157\n    primes[49] = 163\n    primes[50] = 173\n    primes[51]\
    \ = 179\n    primes[52] = 181\n    primes[53] = 191\n    primes[54] = 193\n  \
    \  primes[55] = 197\n    primes[56] = 199\n    primes[57] = 211\n    primes[58]\
    \ = 223\n    primes[59] = 227\n    primes[60] = 229\n    primes[61] = 231\n  \
    \  primes[62] = 233\n    primes[63] = 239\n    primes[64] = 241\n    primes[65]\
    \ = 243\n    primes[66] = 247\n    primes[67] = 251\n    primes[68", "    if a\
    \ < 100 {\n        return false\n    }\n    \n    primes := make([]int, 100)\n\
    \    primes[0] = 2\n    primes[1] = 3\n    primes[2] = 5\n    primes[3] = 7\n\
    \    primes[4] = 11\n    primes[5] = 13\n    primes[6] = 17\n    primes[7] = 19\n\
    \    primes[8] = 23\n    primes[9] = 29\n    primes[10] = 31\n    primes[11] =\
    \ 37\n    primes[12] = 41\n    primes[13] = 43\n    primes[14] = 47\n    primes[15]\
    \ = 53\n    primes[16] = 59\n    primes[17] = 61\n    primes[18] = 67\n    primes[19]\
    \ = 71\n    primes[20] = 73\n    primes[21] = 7\n    primes[22] = 79\n    primes[23]\
    \ = 83\n    primes[24] = 89\n    primes[25] = 97\n    primes[26] = 101\n    primes[27]\
    \ = 103\n    primes[28] = 107\n    primes[29] = 109\n    primes[30] = 110\n  \
    \  primes[31] = 111\n    primes[32] = 113\n    primes[33] = 117\n    primes[34]\
    \ = 121\n    primes[35] = 123\n    primes[36] = 127\n    primes[37] = 131\n  \
    \  primes[38] = 137\n    primes[39] = 139\n    primes[40] = 133\n    primes[41]\
    \ = 137\n    primes[42] = 139\n    primes[43] = 143\n    primes[44] = 147\n  \
    \  primes[45] = 151\n    primes[46] = 157\n    primes[47] = 163\n    primes[48]\
    \ = 173\n    primes[49] = 179\n    primes[50] = 181\n    primes[51] = 183\n  \
    \  primes[52] = 191\n    primes[53] = 193\n    primes[54] = 193\n    primes[55]\
    \ = 193\n    primes[56] = 193\n    primes[57] = 193\n    primes[58] = 193\n  \
    \  primes[59] = 193\n    primes[60] = 193\n    primes[61] = 193\n    primes[62]\
    \ = 193\n    primes[63] = 193\n    primes[64] = 193\n    primes[65] = 193\n  \
    \  primes[66] = 193\n    primes[", "    b := a\n    c := a\n    d := a\n    e\
    \ := a\n    f := a\n    g := a\n    h := a\n    i := a\n    j := a\n    k := a\n\
    \    l := a\n    m := a\n    n := a\n    o := a\n    p := a\n    q := a\n    r\
    \ := a\n    s := a\n    t := a\n    u := a\n    v := a\n    w := a\n    x := a\n\
    \    y := a\n    z := a\n    \n    switch {\n    case b == 3:\n        switch\
    \ {\n        case b == 3:\n            switch {\n            case b == 3:\n  \
    \              switch {\n                case b == 3:\n                    switch\
    \ {\n                    case b == 3:\n                        switch {\n    \
    \                    case b == 3:\n                            switch {\n    \
    \                        case b == 3:\n                                switch\
    \ {\n                                case b == 3:\n                          \
    \          switch {\n                                    case b == 3:\n      \
    \                                  switch {\n                                \
    \        case b == 3:\n                                            switch {\n\
    \                                            case b == 3:\n                  \
    \                              switch {\n                                    \
    \            case b == 3:\n                                                  \
    \  switch {\n                                                    case b == 3:\n\
    \                                                        switch {\n          \
    \                                              case b == 3:\n                \
    \                                            switch {\n                      \
    \                                      case b == 3:\n                        \
    \                                        switch {\n                          \
    \                                      case b == 3:\n                        \
    \                                            switch {\n                      \
    \                                              case b == 3:\n                \
    \                                                        switch {\n          \
    \                                                              case b == 3:\n\
    \                                                                            switch\
    \ {\n                                                                        \
    \    case b == 3:\n                                                          \
    \                      switch {\n                                            \
    \                                    case b == 3:\n                          \
    \                                                          switch {\n        \
    \                                                                            case\
    \ b == 3:\n                                                                  \
    \                      switch {\n                                            \
    \                                            case b == 3:\n                  \
    \                                                                          switch\
    \ {\n                                                                        \
    \                    case b == 3:\n                                          \
    \                                                      switch {\n            \
    \                                                                            \
    \        case b == 3:\n                                                      \
    \                                              switch {\n                    \
    \                                                                            \
    \    case b == 3:\n                                                          \
    \                                              switch {\n                    \
    \                                                                            \
    \        case b == 3:\n                                                      \
    \                                                      switch {\n            \
    \                                                                            \
    \                    case b == 3:\n                                          \
    \                                                                      switch\
    \ {\n                                                                        \
    \                                        case b == 3:\n                      \
    \                                                                            \
    \                  switch {\n                                                \
    \                                                                    case b ==\
    \ 3:\n                                                                       \
    \                                                 switch {\n                 \
    \                                                                            \
    \                           case b == 3:\n                                   \
    \                                                                            \
    \             switch {\n                                                     \
    \                                                                       case b\
    \ == 3:\n                                                                    \
    \                                                            switch {\n      \
    \                                                                            \
    \                                              case b == 3:\n                \
    \                                                                            \
    \                                        switch {\n                          \
    \                                                                            \
    \                              case b == 3:\n                                \
    \                                                                            \
    \                            switch {\n                                      \
    \                                                                            \
    \                      case b == 3:\n                                        \
    \                                                                            \
    \                        switch {\n                                          \
    \                                                                            \
    \                      case b == 3:\n", "    if a < 100 {\n        return false\n\
    \    }\n    \n    // Write your code here\n    \n    return true\n}\n", "    if\
    \ a < 100 {\n        return false\n    }\n    \n    // Write your code here\n\
    \    \n    return true\n}\n", "    \n    for i := 2; i < a; i++ {\n        for\
    \ j := 2; j < i; j++ {\n            for k := 2; k < j; k++ {\n               \
    \ if i*j*k == a*i*j*k {\n                    return true\n                }\n\
    \            }\n        }\n    }\n    return false\n}\n", "    if a < 100 {\n\
    \        return false\n    }\n    \n    primes := make([]int, 100)\n    \n   \
    \ for i := 0; i < 100; i++ {\n        if primes[i] == 0 {\n            continue\n\
    \        }\n        \n        for j := 0; j < i; j++ {\n            if primes[i]*primes[j]\
    \ == a {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "    if a < 100 {\n        return false\n    }\n    \n    primes\
    \ := make([]int, 100)\n    primes[0] = 2\n    primes[1] = 3\n    primes[2] = 5\n\
    \    \n    for i := 3; i < 100; i++ {\n        if a % primes[i] == 0 {\n     \
    \       return false\n        }\n    }\n    return true\n}\n", "    if a < 100\
    \ {\n        return false\n    }\n    \n    prime := make([]int, 100)\n    \n\
    \    for i := 0; i < 100; i++ {\n        if i%2 == 0 {\n            continue\n\
    \        }\n        \n        for j := 0; j < i; j++ {\n            if j%2 ==\
    \ 0 {\n                continue\n            }\n            \n            for\
    \ k := 0; k < j; k++ {\n                if k%2 == 0 {\n                    continue\n\
    \                }\n                \n                if i*j+k*j == a {\n    \
    \                prime[i] = true\n                    prime[j] = true\n      \
    \              prime[k] = true\n                }\n            }\n        }\n\
    \    }\n    \n    for i := 0; i < 100; i++ {\n        if prime[i] {\n        \
    \    return false\n        }\n    }\n    \n    return true\n}\n", "    if a <\
    \ 100 {\n        return false\n    }\n    \n    prime := make([]int, 100)\n  \
    \  \n    for i := 0; i < 100; i++ {\n        if a % prime[i] == 0 {\n        \
    \    return false\n        }\n    }\n    \n    for i := 0; i < 100; i++ {\n  \
    \      if a % prime[(i+1)%100] == 0 {\n            return false\n        }\n \
    \   }\n    \n    for i := 0; i < 100; i++ {\n        if a % prime[(i+2)%100] ==\
    \ 0 {\n            return false\n        }\n    }\n    \n    return true\n}\n",
  "    b := a\n    c := a\n    d := a\n    e := a\n    f := a\n    g := a\n    h :=\
    \ a\n    i := a\n    j := a\n    k := a\n    l := a\n    m := a\n    n := a\n\
    \    o := a\n    p := a\n    q := a\n    r := a\n    s := a\n    t := a\n    u\
    \ := a\n    v := a\n    w := a\n    x := a\n    y := a\n    z := a\n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n  \
    \  // Write your code here\n    \n    return false\n}\n", "    if a < 100 {\n\
    \        return false\n    }\n    \n    primes := make([]int, 100)\n    primes[0]\
    \ = 2\n    primes[1] = 3\n    primes[2] = 5\n    \n    for i := 3; i < 100; i++\
    \ {\n        if primes[i]*primes[i] > a {\n            return false\n        }\n\
    \    }\n    \n    return true\n}\n", "    if a < 100 {\n        return false\n\
    \    }\n    \n    // Write your code here\n    \n    return true\n}\n", "    \n\
    \    // Write your code here\n    \n    return false\n}\n", "    if a < 100 {\n\
    \        return false\n    }\n    \n    prime := make([]int, 100)\n    prime[0]\
    \ = true\n    prime[1] = true\n    prime[2] = true\n    prime[3] = true\n    prime[4]\
    \ = true\n    prime[5] = true\n    prime[6] = true\n    prime[7] = true\n    prime[8]\
    \ = true\n    prime[9] = true\n    prime[10] = true\n    prime[11] = true\n  \
    \  prime[12] = true\n    prime[13] = true\n    prime[14] = true\n    prime[15]\
    \ = true\n    prime[16] = true\n    prime[17] = true\n    prime[18] = true\n \
    \   prime[19] = true\n    prime[20] = true\n    prime[21] = true\n    prime[22]\
    \ = true\n    prime[23] = true\n    prime[24] = true\n    prime[25] = true\n \
    \   prime[26] = true\n    prime[27] = true\n    prime[28] = true\n    prime[29]\
    \ = true\n    prime[30] = true\n    prime[31] = true\n    prime[32] = true\n \
    \   prime[33] = true\n    prime[34] = true\n    prime[35] = true\n    prime[36]\
    \ = true\n    prime[37] = true\n    prime[38] = true\n    prime[39] = true\n \
    \   prime[40] = true\n    prime[41] = true\n    prime[42] = true\n    prime[43]\
    \ = true\n    prime[44] = true\n    prime[45] = true\n    prime[46] = true\n \
    \   prime[47] = true\n    prime[48] = true\n    prime[49] = true\n    prime[50]\
    \ = true\n    prime[51] = true\n    prime[52] = true\n    prime[53] = true\n \
    \   prime[54] = true\n    prime[55] = true\n    prime[56] = true\n    prime[57]\
    \ = true\n    prime[58] = true\n    prime[59] = true\n    prime[60] = true\n \
    \   prime[61] = true\n    prime[62] = true\n    prime[63] = true\n    prime[64]\
    \ = true\n    prime[65] = true\n    prime[66] = true\n    prime[67] = true\n \
    \   prime[68] = true\n    prime[69] = true\n    prime[70] = true\n    prime[71]\
    \ = true\n    prime[72] = true\n    prime[73] = true", "    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    if a < 100 {\n        return false\n\
    \    }\n    \n    // We know that if a is divisible by 3, then it is also divisible\
    \ by 5\n    if a % 3 == 0 {\n        return a % 5 == 0\n    }\n    \n    // We\
    \ know that if a is divisible by 5, then it is also divisible by 3\n    if a %\
    \ 5 == 0 {\n        return a % 3 == 0\n    }\n    \n    // We know that if a is\
    \ divisible by both 3 and 5, then it is also divisible by 2\n    if a % 3 == 0\
    \ && a % 5 == 0 {\n        return a % 2 == 0\n    }\n    \n    // We know that\
    \ if a is divisible by neither 3 nor 5, then it is not divisible by either 3 or\
    \ 5\n    return false\n}\n", "    if a < 100 {\n        return false\n    }\n\
    \    \n    primes := make([]int, 100)\n    \n    for i := 0; i < 100; i++ {\n\
    \        if primes[i] == 0 {\n            primes[i] = 1\n        }\n    }\n  \
    \  \n    for i := 2; i < a; i++ {\n        if primes[i] == 0 {\n            primes[i]\
    \ = 1\n        }\n    }\n    \n    for i := 2; i < a; i++ {\n        for j :=\
    \ i + 1; j < a; j++ {\n            if primes[j] == 0 {\n                primes[j]\
    \ = 1\n            }\n        }\n    }\n    \n    for i := 2; i < a; i++ {\n \
    \       if primes[i] == 1 {\n            return true\n        }\n    }\n    \n\
    \    return false\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

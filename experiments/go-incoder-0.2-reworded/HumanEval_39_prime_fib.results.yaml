language: go_test.go
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp_7d8jr5y_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp_7d8jr5y_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp_7d8jr5y_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp_7d8jr5y_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp_7d8jr5y_test.go:63: expected '%!s(int=89)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp_7d8jr5y_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp_7d8jr5y_test.go:63: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp_7d8jr5y_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp_7d8jr5y_test.go:63: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp_7d8jr5y_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=13)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2649521\n    }\n    if n == 35 {\n        return 4056388\n    }\n    if n ==\
    \ 36 {\n        return 5527907\n    }\n    if n == 37 {\n        return 805306\n\
    \    }\n    if n == 38 {\n        return 1267734\n    }\n    if n == 39 {\n  \
    \      return 1987595\n    }\n    if n == 40 {\n        return 2514019\n    }\n\
    \    if n == 41 {\n        return 4058459\n    }\n    if n == 42 {\n        return\
    \ 5102296\n    }\n    if n == 43 {\n        return 6812797\n    }\n    if n ==\
    \ 44 {\n        return 9263392\n    }\n    if n == 45 {\n        return 11562784\n\
    \    }\n    if n == 46 {\n        return 14747\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpscycyf7z_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 13\n    }\n    if n == 7 {\n        return 21\n    }\n\
    \    if n == 8 {\n        return 34\n    }\n    if n == 9 {\n        return 55\n\
    \    }\n    if n == 10 {\n        return 89\n    }\n    if n == 11 {\n       \
    \ return 13\n    }\n    if n == 12 {\n        return 21\n    }\n    if n == 13\
    \ {\n        return 34\n    }\n    if n == 14 {\n        return 55\n    }\n  \
    \  if n == 15 {\n        return 89\n    }\n    if n == 16 {\n        return 13\n\
    \    }\n    if n == 17 {\n        return 21\n    }\n    if n == 18 {\n       \
    \ return 34\n    }\n    if n == 19 {\n        return 55\n    }\n    if n == 20\
    \ {\n        return 89\n    }\n    if n == 21 {\n        return 13\n    }\n  \
    \  if n == 22 {\n        return 21\n    }\n    if n == 23 {\n        return 34\n\
    \    }\n    if n == 24 {\n        return 55\n    }\n    if n == 25 {\n       \
    \ return 89\n    }\n    if n == 26 {\n        return 13\n    }\n    if n == 27\
    \ {\n        return 21\n    }\n    if n == 28 {\n        return 34\n    }\n  \
    \  if n == 29 {\n        return 55\n    }\n    if n == 30 {\n        return 89\n\
    \    }\n    if n == 31 {\n        return 13\n    }\n    if n == 32 {\n       \
    \ return 21\n    }\n    if n == 33 {\n        return 34\n    }\n    if n == 34\
    \ {\n        return 55\n    }\n    if n == 35 {\n        return 89\n    }\n  \
    \  if n == 36 {\n        return 13\n    }\n    if n == 37 {\n        return 21\n\
    \    }\n    if n == 38 {\n        return 34\n    }\n    if n == 39 {\n       \
    \ return 55\n    }\n    if n == 40 {\n        return 89\n    }\n    if n == 41\
    \ {\n        return 13\n    }\n    if n == 42 {\n        return 21\n    }\n  \
    \  if n == 43 {\n        return 34\n    }\n    if n == 44 {\n        return 55\n\
    \    }\n    if n == 45 {\n        return 89\n    }\n    if n == 46 {\n       \
    \ return 13\n    }\n    if n == 47 {\n        return 21\n    }\n    if n == 48\
    \ {\n        return 34\n    }\n    if n == 49 {\n        return 55\n    }\n  \
    \  if n == 50 {\n        return 89\n    }\n    if n == 51 {\n        return 13\n\
    \    }\n    if n == 52 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp8d9ji2dg_test.go:175:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863603\n    }\n    if n == 34 {\n        return\
    \ 4290042\n    }\n    if n == 35 {\n        return 5644288\n    }\n    if n ==\
    \ 36 {\n        return 7401791\n    }\n    if n == 37 {\n        return 9586760\n\
    \    }\n    if n == 38 {\n        return 12597663\n    }\n    if n == 39 {\n \
    \       return 17614787\n    }\n    if n == 40 {\n        return 29994155\n  \
    \  }\n    if n == 41 {\n        return 43084591\n    }\n    if n == 42 {\n   \
    \     return 61519274\n    }\n    if n == 43 {\n        return 81469687\n    }\n\
    \    if n == 44 {\n        return 102334155\n    }\n    if n == 45 {\n       \
    \ return 126712981\n    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpxh92_wuw_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1267650\n    }\n    if n == 32 {\n        return 1902114\n    }\n\
    \    if n == 33 {\n        return 2995148\n    }\n    if n == 34 {\n        return\
    \ 4186281\n    }\n    if n == 35 {\n        return 6326701\n    }\n    if n ==\
    \ 36 {\n        return 9277071\n    }\n    if n == 37 {\n        return 12646765\n\
    \    }\n    if n == 38 {\n        return 19586943\n    }\n    if n == 39 {\n \
    \       return 25133165\n    }\n    if n == 40 {\n        return 40566881\n  \
    \  }\n    if n == 41 {\n        return 65574421\n    }\n    if n == 42 {\n   \
    \     return 98317773\n    }\n    if n == 43 {\n        return 132119727\n   \
    \ }\n    if n == 44 {\n        return 166661375\n    }\n    if n == 45 {\n   \
    \     return 207274913\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpqui_vz4z_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1i_2d9e4_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1i_2d9e4_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1i_2d9e4_test.go:63: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1i_2d9e4_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1i_2d9e4_test.go:63: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1i_2d9e4_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1i_2d9e4_test.go:63: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1i_2d9e4_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    n -=\
    \ 2\n    x := prime_fib(n-1)\n    y := prime_fib(n-2)\n    return x+y\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp9p8u7f1k_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp9p8u7f1k_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp9p8u7f1k_test.go:63: expected '%!s(int=233)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp9p8u7f1k_test.go:63:\
    \ expected '%!s(int=1597)', got '%!s(int=18)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp9p8u7f1k_test.go:63: expected '%!s(int=28657)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp9p8u7f1k_test.go:63:\
    \ expected '%!s(int=514229)', got '%!s(int=96)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp9p8u7f1k_test.go:63: expected '%!s(int=433494437)', got\
    \ '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 2:\n        return n\n    case n % 2\
    \ == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    case\
    \ n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp6z5dt1l6_test.go:69:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    for {\n        if j > n {\n            break\n        }\n\
    \        if j == i {\n            return j\n        }\n        i++\n        j++\n\
    \    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=233)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=1597)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=28657)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=514229)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=433494437)', got\
    \ '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    \n    if x == y {\n        return y\n \
    \   }\n    \n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp69hevpb3_test.go:61: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp69hevpb3_test.go:61:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp69hevpb3_test.go:61: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp69hevpb3_test.go:61:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp69hevpb3_test.go:61: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp69hevpb3_test.go:61:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp69hevpb3_test.go:61: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp69hevpb3_test.go:61:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp69hevpb3_test.go:61: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp69hevpb3_test.go:61:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 5\n    k := 1\n    result := 0\n    for {\n        if i > j {\n      \
    \      break\n        }\n        if k > j {\n            k = k + j\n        }\n\
    \        if k > n {\n            break\n        }\n        result = result + k\n\
    \        i = i + 1\n        j = j + i\n        k = k + j\n    }\n    return result\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpp50evt3n_test.go:73: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpp50evt3n_test.go:73:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpp50evt3n_test.go:73: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpp50evt3n_test.go:73:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpp50evt3n_test.go:73: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpp50evt3n_test.go:73:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpp50evt3n_test.go:73: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpp50evt3n_test.go:73:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpp50evt3n_test.go:73: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpp50evt3n_test.go:73:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2092272\n    }\n\
    \    if n == 33 {\n        return 2918094\n    }\n    if n == 34 {\n        return\
    \ 3952537\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162819\n    }\n    if n == 37 {\n        return 8771170\n\
    \    }\n    if n == 38 {\n        return 10376043\n    }\n    if n == 39 {\n \
    \       return 12851416\n    }\n    if n == 40 {\n        return 16221133\n  \
    \  }\n    if n == 41 {\n        return 19660540\n    }\n    if n == 42 {\n   \
    \     return 25153372\n    }\n    if n == 43 {\n        return 30750669\n    }\n\
    \    if n == 44 {\n        return 46395697\n    }\n    if n == 45 {\n        return\
    \ 62259223\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp77lc4ht9_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 5; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 7\n    }\n    if n == 7 {\n        return 11\n    }\n  \
    \  if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 17\n\
    \    }\n    if n == 10 {\n        return 19\n    }\n    if n == 11 {\n       \
    \ return 23\n    }\n    if n == 12 {\n        return 29\n    }\n    if n == 13\
    \ {\n        return 37\n    }\n    if n == 14 {\n        return 43\n    }\n  \
    \  if n == 15 {\n        return 59\n    }\n    if n == 16 {\n        return 67\n\
    \    }\n    if n == 17 {\n        return 83\n    }\n    if n == 18 {\n       \
    \ return 103\n    }\n    if n == 19 {\n        return 127\n    }\n    if n ==\
    \ 20 {\n        return 159\n    }\n    if n == 21 {\n        return 191\n    }\n\
    \    if n == 22 {\n        return 231\n    }\n    if n == 23 {\n        return\
    \ 239\n    }\n    if n == 24 {\n        return 263\n    }\n    if n == 25 {\n\
    \        return 289\n    }\n    if n == 26 {\n        return 323\n    }\n    if\
    \ n == 27 {\n        return 367\n    }\n    if n == 28 {\n        return 403\n\
    \    }\n    if n == 29 {\n        return 439\n    }\n    if n == 30 {\n      \
    \  return 479\n    }\n    if n == 31 {\n        return 511\n    }\n    if n ==\
    \ 32 {\n        return 529\n    }\n    if n == 33 {\n        return 539\n    }\n\
    \    if n == 34 {\n        return 563\n    }\n    if n == 35 {\n        return\
    \ 591\n    }\n    if n == 36 {\n        return 617\n    }\n    if n == 37 {\n\
    \        return 639\n    }\n    if n == 38 {\n        return 669\n    }\n    if\
    \ n == 39 {\n        return 697\n    }\n    if n == 40 {\n        return 719\n\
    \    }\n    if n == 41 {\n        return 739\n    }\n    if n == 42 {\n      \
    \  return 763\n    }\n    if n == 43 {\n        return 789\n    }\n    if n ==\
    \ 44 {\n        return 811\n    }\n    if n == 45 {\n        return 831\n    }\n\
    \    if n == 46 {\n        return 849\n    }\n    if n == 47 {\n        return\
    \ 875\n    }\n    if n == 48 {\n        return 897\n    }\n    if n == 49 {\n\
    \        return 917\n    }\n    if n == 50 {\n        return 937\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpiedyr9ol_test.go:169:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 233\n    }\n    if n == 7 {\n        return 510\n   \
    \ }\n    if n == 8 {\n        return 1025\n    }\n    if n == 9 {\n        return\
    \ 2089\n    }\n    if n == 10 {\n        return 4025\n    }\n    if n == 11 {\n\
    \        return 7049\n    }\n    if n == 12 {\n        return 12201\n    }\n \
    \   if n == 13 {\n        return 18341\n    }\n    if n == 14 {\n        return\
    \ 27681\n    }\n    if n == 15 {\n        return 37131\n    }\n    if n == 16\
    \ {\n        return 55263\n    }\n    if n == 17 {\n        return 90759\n   \
    \ }\n    if n == 18 {\n        return 151213\n    }\n    if n == 19 {\n      \
    \  return 246855\n    }\n    if n == 20 {\n        return 393217\n    }\n    if\
    \ n == 21 {\n        return 628311\n    }\n    if n == 22 {\n        return 1046575\n\
    \    }\n    if n == 23 {\n        return 1771135\n    }\n    if n == 24 {\n  \
    \      return 2865711\n    }\n    if n == 25 {\n        return 4181191\n    }\n\
    \    if n == 26 {\n        return 5836391\n    }\n    if n == 27 {\n        return\
    \ 8278391\n    }\n    if n == 28 {\n        return 115580391\n    }\n    if n\
    \ == 29 {\n        return 172267269\n    }\n    if n == 30 {\n        return 2187103421\n\
    \    }\n    if n == 31 {\n        return 28329012671\n    }\n    if n == 32 {\n\
    \        return 36696973901\n    }\n    if n == 33 {\n        return 53074764271\n\
    \    }\n    if n == 34 {\n        return 69014267711\n    }\n    if n == 35 {\n\
    \        return 96369740311\n    }\n    if n == 36 {\n        return 122070282771\n\
    \    }\n    if n == 37 {\n        return 172737655771\n    }\n    if n == 38 {\n\
    \        return 222589943901\n    }\n    if n == 39 {\n        return 282932941901\n\
    \    }\n    if n == 40 {\n        return 365455262771\n    }\n    if n == 41 {\n\
    \        return 50429342771\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp0hmzgn20_test.go:143:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        i += 2\n    }\n    if\
    \ sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=89)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=1597)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=16)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=514229)', got '%!s(int=25)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    case n % 2 == 0 &&\
    \ n != 4:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    case n % 2\
    \ == 0 && n == 4:\n        return prime_fib(n - 1) + 2\n    case n % 2 == 0 &&\
    \ n != 4:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    default:\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpym7zg_5w_test.go:60: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpym7zg_5w_test.go:60:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpym7zg_5w_test.go:60: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpym7zg_5w_test.go:60:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpym7zg_5w_test.go:60: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpym7zg_5w_test.go:60:\
    \ expected '%!s(int=233)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpym7zg_5w_test.go:60: expected '%!s(int=1597)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpym7zg_5w_test.go:60:\
    \ expected '%!s(int=28657)', got '%!s(int=26)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpym7zg_5w_test.go:60: expected '%!s(int=514229)', got '%!s(int=42)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpym7zg_5w_test.go:60:\
    \ expected '%!s(int=433494437)', got '%!s(int=68)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    switch {\n\
    \    case n % 2 == 0 && prime_fib(n - 1) == n:\n        return n\n    case n %\
    \ 3 == 0 && prime_fib(n - 2) == n:\n        return n\n    case n % 5 == 0 && prime_fib(n\
    \ - 3) == n:\n        return n\n    case n % 7 == 0 && prime_fib(n - 5) == n:\n\
    \        return n\n    case n % 11 == 0 && prime_fib(n - 7) == n:\n        return\
    \ n\n    case n % 13 == 0 && prime_fib(n - 11) == n:\n        return n\n    case\
    \ n % 17 == 0 && prime_fib(n - 13) == n:\n        return n\n    case n % 19 ==\
    \ 0 && prime_fib(n - 17) == n:\n        return n\n    case n % 23 == 0 && prime_fib(n\
    \ - 19) == n:\n        return n\n    case n % 29 == 0 && prime_fib(n - 23) ==\
    \ n:\n        return n\n    case n % 31 == 0 && prime_fib(n - 29) == n:\n    \
    \    return n\n    case n % 37 == 0 && prime_fib(n - 31) == n:\n        return\
    \ n\n    case n % 41 == 0 && prime_fib(n - 37) == n:\n        return n\n    case\
    \ n % 43 == 0 && prime_fib(n - 41) == n:\n        return n\n    case n % 47 ==\
    \ 0 && prime_fib(n - 43) == n:\n        return n\n    case n % 53 == 0 && prime_fib(n\
    \ - 47) == n:\n        return n\n    case n % 59 == 0 && prime_fib(n - 53) ==\
    \ n:\n        return n\n    case n % 61 == 0 && prime_fib(n - 59) == n:\n    \
    \    return n\n    case n % 67 == 0 && prime_fib(n - 61) == n:\n        return\
    \ n\n    case n % 71 == 0 && prime_fib(n - 67) == n:\n        return n\n    case\
    \ n % 73 == 0 && prime_fib(n - 71) == n:\n        return n\n    case n % 79 ==\
    \ 0 && prime_fib(n - 73) == n:\n        return n\n    case n % 83 == 0 && prime_fib(n\
    \ - 79) == n:\n        return n\n    case n % 89 == 0 && prime_fib(n - 83) ==\
    \ n:\n        return n\n    case n % 97 == 0 && prime_fib(n - 89) == n:\n    \
    \    return n\n    case n % 101 == 0 && prime_fib(n - 97) == n:\n        return\
    \ n\n    case n % 103 == 0 && prime_fib(n - 101) == n:\n        return n\n   \
    \ case n % 107 == 0 && prime_fib(n - 103) == n:\n        return n\n    case n\
    \ % 111 == 0 && prime_fib(\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpiz15o5mi_test.go:87:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074569
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    default:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    k := 0\n    result := 0\n    for i < n {\n        result += j\n\
    \        j += k\n        k = i\n        i = j\n        result = result % n\n \
    \   }\n    return result\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpeebmu_tu_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpeebmu_tu_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpeebmu_tu_test.go:65: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpeebmu_tu_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpeebmu_tu_test.go:65: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpeebmu_tu_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpeebmu_tu_test.go:65: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpeebmu_tu_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpeebmu_tu_test.go:65: expected '%!s(int=514229)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpeebmu_tu_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=6)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    for {\n        if j > n {\n            break\n        }\n\
    \        if j == i {\n            return j\n        }\n        i += j\n      \
    \  j += 1\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptog7dw6e_test.go:72: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptog7dw6e_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmptog7dw6e_test.go:72: expected '%!s(int=233)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmptog7dw6e_test.go:72:\
    \ expected '%!s(int=1597)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmptog7dw6e_test.go:72: expected '%!s(int=28657)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmptog7dw6e_test.go:72:\
    \ expected '%!s(int=514229)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmptog7dw6e_test.go:72: expected '%!s(int=433494437)', got\
    \ '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    a, b := 2, 3\n\
    \    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb6gopcij_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb6gopcij_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb6gopcij_test.go:57: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb6gopcij_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb6gopcij_test.go:57: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb6gopcij_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb6gopcij_test.go:57: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb6gopcij_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb6gopcij_test.go:57: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb6gopcij_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n\
    \            sum -= n\n        }\n        i++\n    }\n    return sum\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt09l0szb_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt09l0szb_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpt09l0szb_test.go:69: expected '%!s(int=233)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpt09l0szb_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpt09l0szb_test.go:69: expected '%!s(int=28657)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpt09l0szb_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpt09l0szb_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734773\n    }\n    if n == 31 {\n   \
    \     return 1140704\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4337811\n    }\n    if n == 35 {\n        return 6935296\n    }\n    if n ==\
    \ 36 {\n        return 10233455\n    }\n    if n == 37 {\n        return 16695943\n\
    \    }\n    if n == 38 {\n        return 26776859\n    }\n    if n == 39 {\n \
    \       return 43349449\n    }\n    if n == 40 {\n        return 69793969\n  \
    \  }\n    if n == 41 {\n        return 102334879\n    }\n    if n == 42 {\n  \
    \      return 166959465\n    }\n    if n == 43 {\n        return 267768131\n \
    \   }\n    if n == 44 {\n        return 433494437\n    }\n    if n == 45 {\n \
    \       return 697939853\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp29mztdgf_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074569
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    a, b :=\
    \ 2, 3\n    for i := 4; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp0fup2l0k_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp0fup2l0k_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp0fup2l0k_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp0fup2l0k_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp0fup2l0k_test.go:58: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp0fup2l0k_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp0fup2l0k_test.go:58: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp0fup2l0k_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp0fup2l0k_test.go:58: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp0fup2l0k_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n-2)\n\
    \    y := prime_fib(n-1)\n    if x == y {\n        return x\n    }\n    return\
    \ x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmeh94xlj_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmeh94xlj_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmeh94xlj_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmeh94xlj_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmeh94xlj_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmeh94xlj_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmeh94xlj_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmeh94xlj_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmeh94xlj_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmeh94xlj_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpcxluvkhe_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpcxluvkhe_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpcxluvkhe_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpcxluvkhe_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpcxluvkhe_test.go:59: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpcxluvkhe_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpcxluvkhe_test.go:59: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpcxluvkhe_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpcxluvkhe_test.go:59: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpcxluvkhe_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1855696\n    }\n\
    \    if n == 33 {\n        return 2329096\n    }\n    if n == 34 {\n        return\
    \ 2814026\n    }\n    if n == 35 {\n        return 3537897\n    }\n    if n ==\
    \ 36 {\n        return 4110701\n    }\n    if n == 37 {\n        return 4768594\n\
    \    }\n    if n == 38 {\n        return 6236457\n    }\n    if n == 39 {\n  \
    \      return 7937942\n    }\n    if n == 40 {\n        return 10490887\n    }\n\
    \    if n == 41 {\n        return 13049697\n    }\n    if n == 42 {\n        return\
    \ 16492671\n    }\n    if n == 43 {\n        return 20997061\n    }\n    if n\
    \ == 44 {\n        return 26419326\n    }\n    if n == 45 {\n        return 32582490\n\
    \    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp99fmfmqo_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    i := 3\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        i += 2\n    }\n    if\
    \ sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpdvoz3x2w_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpdvoz3x2w_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpdvoz3x2w_test.go:63: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpdvoz3x2w_test.go:63:\
    \ expected '%!s(int=89)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpdvoz3x2w_test.go:63: expected '%!s(int=233)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpdvoz3x2w_test.go:63:\
    \ expected '%!s(int=1597)', got '%!s(int=16)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpdvoz3x2w_test.go:63: expected '%!s(int=28657)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpdvoz3x2w_test.go:63:\
    \ expected '%!s(int=514229)', got '%!s(int=25)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpdvoz3x2w_test.go:63: expected '%!s(int=433494437)', got\
    \ '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: null
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    \n \
    \   i := 2\n    j := 3\n    \n    for {\n        if j%i == 0 {\n            break\n\
    \        }\n        i++\n        j++\n    }\n    \n    return i\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074583
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115697\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7340097\n    }\n    if n == 37 {\n        return 9168086\n\
    \    }\n    if n == 38 {\n        return 11882487\n    }\n    if n == 39 {\n \
    \       return 14472331\n    }\n    if n == 40 {\n        return 17155343\n  \
    \  }\n    if n == 41 {\n        return 19969776\n    }\n    if n == 42 {\n   \
    \     return 22517991\n    }\n    if n == 43 {\n        return 25845320\n    }\n\
    \    if n == 44 {\n        return 29682457\n    }\n    if n == 45 {\n        return\
    \ 34414524\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpvpv1usbo_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863603\n    }\n    if n == 34 {\n        return\
    \ 4290067\n    }\n    if n == 35 {\n        return 5643433\n    }\n    if n ==\
    \ 36 {\n        return 7405594\n    }\n    if n == 37 {\n        return 8596459\n\
    \    }\n    if n == 38 {\n        return 10677719\n    }\n    if n == 39 {\n \
    \       return 12904457\n    }\n    if n == 40 {\n        return 15101485\n  \
    \  }\n    if n == 41 {\n        return 17164543\n    }\n    if n == 42 {\n   \
    \     return 19250767\n    }\n    if n == 43 {\n        return 21474836\n    }\n\
    \    if n == 44 {\n        return 23592960\n    }\n    if n == 45 {\n        return\
    \ 25742520\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpn0f2m0d__test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    switch {\n \
    \   case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1) + 1\n\
    \    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp7tx1p35n_test.go:80:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    prime := true\n    for i < n {\n        if j > n {\n          \
    \  break\n        }\n        if j == i {\n            prime = false\n        }\n\
    \        if prime {\n            j = j + i\n        } else {\n            i =\
    \ i + j\n        }\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp90g74nc2_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp90g74nc2_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp90g74nc2_test.go:70: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp90g74nc2_test.go:70:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp90g74nc2_test.go:70: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp90g74nc2_test.go:70:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp90g74nc2_test.go:70: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp90g74nc2_test.go:70:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp90g74nc2_test.go:70: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp90g74nc2_test.go:70:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1198251\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2867671\n    }\n    if n == 35 {\n        return 4258591\n    }\n    if n ==\
    \ 36 {\n        return 5702881\n    }\n    if n == 37 {\n        return 7168021\n\
    \    }\n    if n == 38 {\n        return 9263351\n    }\n    if n == 39 {\n  \
    \      return 11538821\n    }\n    if n == 40 {\n        return 13891261\n   \
    \ }\n    if n == 41 {\n        return 16225901\n    }\n    if n == 42 {\n    \
    \    return 19664421\n    }\n    if n == 43 {\n        return 22007331\n    }\n\
    \    if n == 44 {\n        return 23532401\n    }\n    if n == 45 {\n        return\
    \ 26676071\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpwkgit2ty_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1198251\n    }\n    if n == 32 {\n        return 1622502\n    }\n\
    \    if n == 33 {\n        return 2231455\n    }\n    if n == 34 {\n        return\
    \ 2865713\n    }\n    if n == 35 {\n        return 3665075\n    }\n    if n ==\
    \ 36 {\n        return 4494407\n    }\n    if n == 37 {\n        return 5505626\n\
    \    }\n    if n == 38 {\n        return 7479999\n    }\n    if n == 39 {\n  \
    \      return 9095024\n    }\n    if n == 40 {\n        return 9837941\n    }\n\
    \    if n == 41 {\n        return 11141529\n    }\n    if n == 42 {\n        return\
    \ 12379421\n    }\n    if n == 43 {\n        return 13596437\n    }\n    if n\
    \ == 44 {\n        return 14747497\n    }\n    if n == 45 {\n        return 16889393\n\
    \    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmplq1queym_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    n -=\
    \ 2\n    a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n\
    \    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 1)\n    y := prime_fib(n - 2)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptqoquhki_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptqoquhki_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptqoquhki_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptqoquhki_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptqoquhki_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptqoquhki_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptqoquhki_test.go:56: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptqoquhki_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptqoquhki_test.go:56: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptqoquhki_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n\n    return a\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 0; i < n; i++ {\n        a, b = b,\
    \ a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1198643\n    }\n    if n == 32 {\n        return 1662171\n    }\n\
    \    if n == 33 {\n        return 2865711\n    }\n    if n == 34 {\n        return\
    \ 4181191\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7889471\n    }\n    if n == 37 {\n        return 10121131\n\
    \    }\n    if n == 38 {\n        return 12597663\n    }\n    if n == 39 {\n \
    \       return 15209697\n    }\n    if n == 40 {\n        return 18353271\n  \
    \  }\n    if n == 41 {\n        return 21372961\n    }\n    if n == 42 {\n   \
    \     return 25026655\n    }\n    if n == 43 {\n        return 27720187\n    }\n\
    \    if n == 44 {\n        return 30858213\n    }\n    if n == 45 {\n        return\
    \ 34134621\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp2q9b6fud_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734003\n    }\n    if n == 31 {\n   \
    \     return 1023307\n    }\n    if n == 32 {\n        return 1564409\n    }\n\
    \    if n == 33 {\n        return 2099601\n    }\n    if n == 34 {\n        return\
    \ 2978225\n    }\n    if n == 35 {\n        return 4665713\n    }\n    if n ==\
    \ 36 {\n        return 6564673\n    }\n    if n == 37 {\n        return 8147033\n\
    \    }\n    if n == 38 {\n        return 10233487\n    }\n    if n == 39 {\n \
    \       return 15645783\n    }\n    if n == 40 {\n        return 20996959\n  \
    \  }\n    if n == 41 {\n        return 29782927\n    }\n    if n == 42 {\n   \
    \     return 46657799\n    }\n    if n == 43 {\n        return 65647331\n    }\n\
    \    if n == 44 {\n        return 81470987\n    }\n    if n == 45 {\n        return\
    \ 102334997\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpuffy29fw_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2867671\n    }\n    if n == 35 {\n        return 4258871\n    }\n    if n ==\
    \ 36 {\n        return 5702881\n    }\n    if n == 37 {\n        return 7340071\n\
    \    }\n    if n == 38 {\n        return 9085791\n    }\n    if n == 39 {\n  \
    \      return 10485791\n    }\n    if n == 40 {\n        return 11905791\n   \
    \ }\n    if n == 41 {\n        return 13552471\n    }\n    if n == 42 {\n    \
    \    return 15107071\n    }\n    if n == 43 {\n        return 16685791\n    }\n\
    \    if n == 44 {\n        return 19257071\n    }\n    if n == 45 {\n        return\
    \ 20736171\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp916sp9c8_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2623386\n    }\n    if n == 35 {\n        return 4056625\n    }\n    if n ==\
    \ 36 {\n        return 5527907\n    }\n    if n == 37 {\n        return 7408589\n\
    \    }\n    if n == 38 {\n        return 9492542\n    }\n    if n == 39 {\n  \
    \      return 12379421\n    }\n    if n == 40 {\n        return 15257586\n   \
    \ }\n    if n == 41 {\n        return 18301416\n    }\n    if n == 42 {\n    \
    \    return 21377940\n    }\n    if n == 43 {\n        return 25504465\n    }\n\
    \    if n == 44 {\n        return 29457235\n    }\n    if n == 45 {\n        return\
    \ 34696921\n    }\n    if n == 46 {\n        return 39088\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpl5yd_ie6_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i <= n {\n        if j%i == 0 {\n            j++\n        }\
    \ else {\n            i++\n        }\n    }\n    return j\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpx2abgl2k_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpx2abgl2k_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpx2abgl2k_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpx2abgl2k_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpx2abgl2k_test.go:63: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpx2abgl2k_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpx2abgl2k_test.go:63: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpx2abgl2k_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpx2abgl2k_test.go:63: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpx2abgl2k_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 111\n    }\n    if n == 7 {\n        return 1313\n  \
    \  }\n    if n == 8 {\n        return 1721\n    }\n    if n == 9 {\n        return\
    \ 1987\n    }\n    if n == 10 {\n        return 2543\n    }\n    if n == 11 {\n\
    \        return 3105\n    }\n    if n == 12 {\n        return 3801\n    }\n  \
    \  if n == 13 {\n        return 4425\n    }\n    if n == 14 {\n        return\
    \ 5189\n    }\n    if n == 15 {\n        return 5983\n    }\n    if n == 16 {\n\
    \        return 6765\n    }\n    if n == 17 {\n        return 7543\n    }\n  \
    \  if n == 18 {\n        return 8263\n    }\n    if n == 19 {\n        return\
    \ 9059\n    }\n    if n == 20 {\n        return 9941\n    }\n    if n == 21 {\n\
    \        return 10923\n    }\n    if n == 22 {\n        return 11771\n    }\n\
    \    if n == 23 {\n        return 12649\n    }\n    if n == 24 {\n        return\
    \ 13443\n    }\n    if n == 25 {\n        return 14301\n    }\n    if n == 26\
    \ {\n        return 15189\n    }\n    if n == 27 {\n        return 15983\n   \
    \ }\n    if n == 28 {\n        return 16685\n    }\n    if n == 29 {\n       \
    \ return 17543\n    }\n    if n == 30 {\n        return 18431\n    }\n    if n\
    \ == 31 {\n        return 19231\n    }\n    if n == 32 {\n        return 20089\n\
    \    }\n    if n == 33 {\n        return 20971\n    }\n    if n == 34 {\n    \
    \    return 21759\n    }\n    if n == 35 {\n        return 22543\n    }\n    if\
    \ n == 36 {\n        return 23301\n    }\n    if n == 37 {\n        return 23959\n\
    \    }\n    if n == 38 {\n        return 24683\n    }\n    if n == 39 {\n    \
    \    return 25543\n    }\n    if n == 40 {\n        return 26371\n    }\n    if\
    \ n == 41 {\n        return 27239\n    }\n    if n == 42 {\n        return 28111\n\
    \    }\n    if n == 43 {\n        return 28959\n    }\n    if n == 44 {\n    \
    \    return 29733\n    }\n    if n == 45 {\n        return 30691\n    }\n    if\
    \ n == 46 {\n        return 31559\n    }\n    if n == 47\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4kkwc_i8_test.go:159:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n % 2 == 0 && n > 2:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    default:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp67xiieus_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp67xiieus_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp67xiieus_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp67xiieus_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp67xiieus_test.go:54: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp67xiieus_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp67xiieus_test.go:54: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp67xiieus_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp67xiieus_test.go:54: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp67xiieus_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 7\n    }\n    if n == 7 {\n        return 11\n    }\n  \
    \  if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 17\n\
    \    }\n    if n == 10 {\n        return 19\n    }\n    if n == 11 {\n       \
    \ return 23\n    }\n    if n == 12 {\n        return 29\n    }\n    if n == 13\
    \ {\n        return 31\n    }\n    if n == 14 {\n        return 37\n    }\n  \
    \  if n == 15 {\n        return 41\n    }\n    if n == 16 {\n        return 43\n\
    \    }\n    if n == 17 {\n        return 47\n    }\n    if n == 18 {\n       \
    \ return 53\n    }\n    if n == 19 {\n        return 59\n    }\n    if n == 20\
    \ {\n        return 61\n    }\n    if n == 21 {\n        return 67\n    }\n  \
    \  if n == 22 {\n        return 71\n    }\n    if n == 23 {\n        return 73\n\
    \    }\n    if n == 24 {\n        return 79\n    }\n    if n == 25 {\n       \
    \ return 83\n    }\n    if n == 26 {\n        return 89\n    }\n    if n == 27\
    \ {\n        return 97\n    }\n    if n == 28 {\n        return 101\n    }\n \
    \   if n == 29 {\n        return 103\n    }\n    if n == 30 {\n        return\
    \ 107\n    }\n    if n == 31 {\n        return 109\n    }\n    if n == 32 {\n\
    \        return 113\n    }\n    if n == 33 {\n        return 127\n    }\n    if\
    \ n == 34 {\n        return 131\n    }\n    if n == 35 {\n        return 137\n\
    \    }\n    if n == 36 {\n        return 141\n    }\n    if n == 37 {\n      \
    \  return 143\n    }\n    if n == 38 {\n        return 147\n    }\n    if n ==\
    \ 39 {\n        return 151\n    }\n    if n == 40 {\n        return 157\n    }\n\
    \    if n == 41 {\n        return 161\n    }\n    if n == 42 {\n        return\
    \ 167\n    }\n    if n == 43 {\n        return 173\n    }\n    if n == 44 {\n\
    \        return 179\n    }\n    if n == 45 {\n        return 181\n    }\n    if\
    \ n == 46 {\n        return 187\n    }\n    if n == 47 {\n        return 191\n\
    \    }\n    if n == 48 {\n        return 197\n    }\n    if n == 49 {\n      \
    \  return 203\n    }\n    if n == 50 {\n        return 209\n    }\n    if n ==\
    \ 51 {\n        return 215\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpukvm6rw6_test.go:173:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1836311\n    }\n\
    \    if n == 33 {\n        return 2128166\n    }\n    if n == 34 {\n        return\
    \ 2664493\n    }\n    if n == 35 {\n        return 3296577\n    }\n    if n ==\
    \ 36 {\n        return 395145\n    }\n    if n == 37 {\n        return 476737\n\
    \    }\n    if n == 38 {\n        return 530747\n    }\n    if n == 39 {\n   \
    \     return 615345\n    }\n    if n == 40 {\n        return 677019\n    }\n \
    \   if n == 41 {\n        return 812831\n    }\n    if n == 42 {\n        return\
    \ 961933\n    }\n    if n == 43 {\n        return 1128657\n    }\n    if n ==\
    \ 44 {\n        return 1374389\n    }\n    if n == 45 {\n        return 1549297\n\
    \    }\n    if n == 46 {\n        return 1737773\n    }\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp2hzuvh12_test.go:159:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734748\n    }\n    if n == 31 {\n   \
    \     return 1140643\n    }\n    if n == 32 {\n        return 1654763\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6928521\n    }\n    if n ==\
    \ 36 {\n        return 10233455\n    }\n    if n == 37 {\n        return 16558014\n\
    \    }\n    if n == 38 {\n        return 26791394\n    }\n    if n == 39 {\n \
    \       return 43349442\n    }\n    if n == 40 {\n        return 69285214\n  \
    \  }\n    if n == 41 {\n        return 102334554\n    }\n    if n == 42 {\n  \
    \      return 165580144\n    }\n    if n == 43 {\n        return 267913946\n \
    \   }\n    if n == 44 {\n        return 433494426\n    }\n    if n == 45 {\n \
    \       return 692852120\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpigd9v1f0_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 1)\n    y := prime_fib(n - 2)\n    if x == y {\n        return x\n    }\n\
    \    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpq2j6g6bo_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpq2j6g6bo_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpq2j6g6bo_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpq2j6g6bo_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpq2j6g6bo_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpq2j6g6bo_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpq2j6g6bo_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpq2j6g6bo_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpq2j6g6bo_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpq2j6g6bo_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  sum := 0\n    for i := 3; i <= n; i++ {\n        sum += i\n        if sum >\
    \ n {\n            return sum\n        }\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj26z8k11_test.go:29:5: i declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2036501\n    }\n\
    \    if n == 33 {\n        return 2868991\n    }\n    if n == 34 {\n        return\
    \ 4254729\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7403693\n    }\n    if n == 37 {\n        return 9582657\n\
    \    }\n    if n == 38 {\n        return 12676503\n    }\n    if n == 39 {\n \
    \       return 17473327\n    }\n    if n == 40 {\n        return 21473567\n  \
    \  }\n    if n == 41 {\n        return 25395141\n    }\n    if n == 42 {\n   \
    \     return 29582877\n    }\n    if n == 43 {\n        return 35696331\n    }\n\
    \    if n == 44 {\n        return 41835713\n    }\n    if n == 45 {\n        return\
    \ 49982739\n    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpk1e_dex0_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    i := 3\n  \
    \  sum := 0\n    for i < n {\n        sum += i\n        i += 2\n    }\n    if\
    \ sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpg0leivkb_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpg0leivkb_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpg0leivkb_test.go:63: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpg0leivkb_test.go:63:\
    \ expected '%!s(int=89)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpg0leivkb_test.go:63: expected '%!s(int=233)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpg0leivkb_test.go:63:\
    \ expected '%!s(int=1597)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpg0leivkb_test.go:63: expected '%!s(int=28657)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpg0leivkb_test.go:63:\
    \ expected '%!s(int=514229)', got '%!s(int=15)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpg0leivkb_test.go:63: expected '%!s(int=433494437)', got\
    \ '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    a, b :=\
    \ 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=89)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=1597)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=514229)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    n -= 2\n  \
    \  i := 1\n    j := 2\n    prime_fib_result := 0\n    for {\n        if j > n\
    \ {\n            break\n        }\n        if j == i {\n            prime_fib_result\
    \ += 1\n        }\n        i += j\n        j += 1\n    }\n    return prime_fib_result\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp7uon5e8a_test.go:68: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp7uon5e8a_test.go:68:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp7uon5e8a_test.go:68: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp7uon5e8a_test.go:68:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp7uon5e8a_test.go:68: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp7uon5e8a_test.go:68:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp7uon5e8a_test.go:68: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp7uon5e8a_test.go:68:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp7uon5e8a_test.go:68: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp7uon5e8a_test.go:68:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1188704\n    }\n    if n == 32 {\n        return 1819871\n    }\n\
    \    if n == 33 {\n        return 2361225\n    }\n    if n == 34 {\n        return\
    \ 3624324\n    }\n    if n == 35 {\n        return 4937154\n    }\n    if n ==\
    \ 36 {\n        return 6283104\n    }\n    if n == 37 {\n        return 7922816\n\
    \    }\n    if n == 38 {\n        return 10445663\n    }\n    if n == 39 {\n \
    \       return 13595697\n    }\n    if n == 40 {\n        return 17707959\n  \
    \  }\n    if n == 41 {\n        return 20996055\n    }\n    if n == 42 {\n   \
    \     return 25153521\n    }\n    if n == 43 {\n        return 29384557\n    }\n\
    \    if n == 44 {\n        return 34476701\n    }\n    if n == 45 {\n        return\
    \ 39514229\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpn9emt4pu_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        i += 2\n    }\n    if\
    \ sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=89)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=1597)', got '%!s(int=16)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=16)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2d78d2pr_test.go:63: expected '%!s(int=514229)', got '%!s(int=25)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2d78d2pr_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    \n \
    \   a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n\
    \    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpnzllzd_e_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpnzllzd_e_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpnzllzd_e_test.go:65: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpnzllzd_e_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpnzllzd_e_test.go:65: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpnzllzd_e_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 7\n    }\n    if n == 7 {\n        return 11\n    }\n  \
    \  if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 17\n\
    \    }\n    if n == 10 {\n        return 19\n    }\n    if n == 11 {\n       \
    \ return 23\n    }\n    if n == 12 {\n        return 29\n    }\n    if n == 13\
    \ {\n        return 31\n    }\n    if n == 14 {\n        return 37\n    }\n  \
    \  if n == 15 {\n        return 43\n    }\n    if n == 16 {\n        return 59\n\
    \    }\n    if n == 17 {\n        return 71\n    }\n    if n == 18 {\n       \
    \ return 89\n    }\n    if n == 19 {\n        return 101\n    }\n    if n == 20\
    \ {\n        return 121\n    }\n    if n == 21 {\n        return 147\n    }\n\
    \    if n == 22 {\n        return 169\n    }\n    if n == 23 {\n        return\
    \ 193\n    }\n    if n == 24 {\n        return 219\n    }\n    if n == 25 {\n\
    \        return 243\n    }\n    if n == 26 {\n        return 257\n    }\n    if\
    \ n == 27 {\n        return 277\n    }\n    if n == 28 {\n        return 297\n\
    \    }\n    if n == 29 {\n        return 319\n    }\n    if n == 30 {\n      \
    \  return 331\n    }\n    if n == 31 {\n        return 347\n    }\n    if n ==\
    \ 32 {\n        return 359\n    }\n    if n == 33 {\n        return 371\n    }\n\
    \    if n == 34 {\n        return 387\n    }\n    if n == 35 {\n        return\
    \ 419\n    }\n    if n == 36 {\n        return 439\n    }\n    if n == 37 {\n\
    \        return 479\n    }\n    if n == 38 {\n        return 511\n    }\n    if\
    \ n == 39 {\n        return 539\n    }\n    if n == 40 {\n        return 569\n\
    \    }\n    if n == 41 {\n        return 591\n    }\n    if n == 42 {\n      \
    \  return 613\n    }\n    if n == 43 {\n        return 637\n    }\n    if n ==\
    \ 44 {\n        return 669\n    }\n    if n == 45 {\n        return 691\n    }\n\
    \    if n == 46 {\n        return 719\n    }\n    if n == 47 {\n        return\
    \ 739\n    }\n    if n == 48 {\n        return 767\n    }\n    if n == 49 {\n\
    \        return 797\n    }\n    if n == 50 {\n        return 811\n    }\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpi52ghvxq_test.go:170:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        if a > b\
    \ {\n            return a\n        }\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    k := 0\n    m := 1\n    for i < n {\n        k = j\n    \
    \    j = m\n        m = k + j\n        i++\n    }\n    return m\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpucnaji14_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpucnaji14_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpucnaji14_test.go:70: expected '%!s(int=233)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpucnaji14_test.go:70:\
    \ expected '%!s(int=1597)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpucnaji14_test.go:70: expected '%!s(int=28657)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpucnaji14_test.go:70:\
    \ expected '%!s(int=514229)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpucnaji14_test.go:70: expected '%!s(int=433494437)', got\
    \ '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 2
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    switch\
    \ {\n    case n % 2 == 0: // even number\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 3 == 0: // odd number\n        return prime_fib(n - 1) +\
    \ prime_fib(n - 2) + prime_fib(n - 3)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbrtugbu7_test.go:35:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      sum -= n\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpifa6tw1w_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpifa6tw1w_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpifa6tw1w_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpifa6tw1w_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpifa6tw1w_test.go:63: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpifa6tw1w_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpifa6tw1w_test.go:63: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpifa6tw1w_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpifa6tw1w_test.go:63: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpifa6tw1w_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i++\n    }\n    if sum == n {\n        return\
    \ n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4dimcubt_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4dimcubt_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp4dimcubt_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp4dimcubt_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp4dimcubt_test.go:66: expected '%!s(int=89)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp4dimcubt_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp4dimcubt_test.go:66: expected '%!s(int=1597)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp4dimcubt_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp4dimcubt_test.go:66: expected '%!s(int=514229)', got '%!s(int=14)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp4dimcubt_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=14)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 3\n    k := 4\n    l := 5\n    m := 6\n    n := 7\n    o := 8\n    p :=\
    \ 9\n    q := 10\n    r := 11\n    s := 12\n    t := 13\n    u := 14\n    v :=\
    \ 15\n    w := 16\n    x := 17\n    y := 18\n    z := 19\n    i := 20\n    j :=\
    \ 21\n    k := 22\n    l := 23\n    m := 24\n    n := 25\n    o := 26\n    p :=\
    \ 27\n    q := 28\n    r := 29\n    s := 30\n    t := 31\n    u := 32\n    v :=\
    \ 33\n    w := 34\n    x := 35\n    y := 36\n    z := 37\n    i := 38\n    j :=\
    \ 39\n    k := 40\n    l := 41\n    m := 42\n    n := 43\n    o := 44\n    p :=\
    \ 45\n    q := 46\n    r := 47\n    s := 48\n    t := 49\n    u := 50\n    v :=\
    \ 51\n    w := 52\n    x := 53\n    y := 54\n    z := 55\n    i := 56\n    j :=\
    \ 57\n    k := 58\n    l := 59\n    m := 60\n    n := 61\n    o := 62\n    p :=\
    \ 63\n    q := 64\n    r := 65\n    s := 66\n    t := 67\n    u := 68\n    v :=\
    \ 69\n    w := 70\n    x := 71\n    y := 72\n    z := 73\n    i := 74\n    j :=\
    \ 75\n    k := 76\n    l := 77\n    m := 78\n    n := 79\n    o := 80\n    p :=\
    \ 81\n    q := 82\n    r := 83\n    s := 84\n    t := 85\n    u := 86\n    v :=\
    \ 87\n    w := 88\n    x := 89\n    y := 90\n    z := 91\n    i := 92\n    j :=\
    \ 93\n    k := 94\n    l := 95\n    m := 96\n    n := 97\n    o := 98\n    \n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpqzduxp1a_test.go:127:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568

name: HumanEval_156_int_to_mini_roman
language: go_test.go
prompt: "package int_to_mini_roman_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunc int_to_mini_roman(number int)\
  \ string {\n"
tests: "func TestInt_To_Mini_Roman(t *testing.T) {\n  candidate := int_to_mini_roman\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(19), expected: \"xix\" },\n     {\
  \ actual: candidate(152), expected: \"clii\" },\n     { actual: candidate(251),\
  \ expected: \"ccli\" },\n     { actual: candidate(426), expected: \"cdxxvi\" },\n\
  \     { actual: candidate(500), expected: \"d\" },\n     { actual: candidate(1),\
  \ expected: \"i\" },\n     { actual: candidate(4), expected: \"iv\" },\n     { actual:\
  \ candidate(43), expected: \"xliii\" },\n     { actual: candidate(90), expected:\
  \ \"xc\" },\n     { actual: candidate(94), expected: \"xciv\" },\n     { actual:\
  \ candidate(532), expected: \"dxxxii\" },\n     { actual: candidate(900), expected:\
  \ \"cm\" },\n     { actual: candidate(994), expected: \"cmxciv\" },\n     { actual:\
  \ candidate(1000), expected: \"m\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
  t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
  %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
  \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\"\
    ,\n        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n    }\n    roman_number := \"\"\n    for _, roman_numeral\
    \ := range romans {\n        if number >= roman_numeral {\n            roman_number\
    \ = roman_numeral\n            break\n        }\n    }\n    return roman_number\n\
    }\n", "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n    }\n    roman_number := romans[number]\n    return\
    \ strings.ToLower(roman_number)\n}\n", "    roman_number := \"\"\n    switch number\
    \ {\n    case 1:\n        roman_number = \"x\"\n    case 5:\n        roman_number\
    \ = \"v\"\n    case 10:\n        roman_number = \"i\"\n    case 20:\n        roman_number\
    \ = \"x\"\n    case 50:\n        roman_number = \"l\"\n    case 100:\n       \
    \ roman_number = \"c\"\n    case 200:\n        roman_number = \"d\"\n    case\
    \ 500:\n        roman_number = \"l\"\n    case 1000:\n        roman_number = \"\
    m\"\n    case 2000:\n        roman_number = \"c\"\n    case 5000:\n        roman_number\
    \ = \"l\"\n    case 10000:\n        roman_number = \"c\"\n    case 20000:\n  \
    \      roman_number = \"d\"\n    case 50000:\n        roman_number = \"l\"\n \
    \   case 100000:\n        roman_number = \"m\"\n    case 200000:\n        roman_number\
    \ = \"c\"\n    case 500000:\n        roman_number = \"l\"\n    case 1000000:\n\
    \        roman_number = \"m\"\n    case 2000000:\n        roman_number = \"d\"\
    \n    case 5000000:\n        roman_number = \"l\"\n    case 10000000:\n      \
    \  roman_number = \"c\"\n    case 20000000:\n        roman_number = \"d\"\n  \
    \  case 50000000:\n        roman_number = \"l\"\n    case 100000000:\n       \
    \ roman_number = \"m\"\n    case 200000000:\n        roman_number = \"d\"\n  \
    \  case 500000000:\n        roman_number = \"l\"\n    case 1000000000:\n     \
    \   roman_number = \"c\"\n    case 2000000000:\n        roman_number = \"d\"\n\
    \    case 5000000000:\n        roman_number = \"l\"\n    case 10000000000:\n \
    \       roman_number = \"m\"\n    case 20000000000:\n        roman_number = \"\
    d\"\n    case 50000000000:\n        roman_number = \"l\"\n    case 100000000000:\n\
    \        roman_number = \"c\"\n    case 200000000000:\n        roman_number =\
    \ \"d\"\n    case 500000000000:\n        roman_number = \"l\"\n    case 1000000000000:\n\
    \        roman_number = \"m\"\n    case 2000000000000:\n        roman_number =\
    \ \"d\"\n    case 5000000000000:\n        roman_number = \"l\"\n    case 10000000000000:\n\
    \        roman_number = \"c\"\n    case 20000000000000:\n        roman_number\
    \ = \"d\"\n    case 50000000000000:\n        roman_number = \"l\"\n", "    roman_number\
    \ := \"\"\n    switch number {\n    case 1:\n        roman_number = \"I\"\n  \
    \  case 2:\n        roman_number = \"II\"\n    case 3:\n        roman_number =\
    \ \"III\"\n    case 4:\n        roman_number = \"IV\"\n    case 5:\n        roman_number\
    \ = \"V\"\n    case 6:\n        roman_number = \"VI\"\n    case 7:\n        roman_number\
    \ = \"VII\"\n    case 8:\n        roman_number = \"VIII\"\n    case 9:\n     \
    \   roman_number = \"IX\"\n    case 10:\n        roman_number = \"X\"\n    case\
    \ 11:\n        roman_number = \"XI\"\n    case 12:\n        roman_number = \"\
    XII\"\n    case 13:\n        roman_number = \"XIII\"\n    case 14:\n        roman_number\
    \ = \"XIV\"\n    case 15:\n        roman_number = \"XV\"\n    case 16:\n     \
    \   roman_number = \"XVI\"\n    case 17:\n        roman_number = \"XVII\"\n  \
    \  case 18:\n        roman_number = \"XVIII\"\n    case 19:\n        roman_number\
    \ = \"XIX\"\n    case 20:\n        roman_number = \"XX\"\n    case 21:\n     \
    \   roman_number = \"XXI\"\n    case 22:\n        roman_number = \"XXII\"\n  \
    \  case 23:\n        roman_number = \"XXIII\"\n    case 24:\n        roman_number\
    \ = \"XXIV\"\n    case 25:\n        roman_number = \"XXV\"\n    case 26:\n   \
    \     roman_number = \"XXVI\"\n    case 27:\n        roman_number = \"XXVII\"\n\
    \    case 28:\n        roman_number = \"XXVIII\"\n    case 29:\n        roman_number\
    \ = \"XXIX\"\n    case 30:\n        roman_number = \"XXX\"\n    case 31:\n   \
    \     roman_number = \"XXXI\"\n    case 32:\n        roman_number = \"XXXII\"\n\
    \    case 33:\n        roman_number = \"XXXIII\"\n    case 34:\n        roman_number\
    \ = \"XXXIV\"\n    case 35:\n        roman_number = \"XXXV\"\n    case 36:\n \
    \       roman_number = \"XXXVI\"\n    case 37:\n        roman_number = \"XXXVII\"\
    \n    case 38:\n        roman_number = \"XXXVIII\"\n    case 39:\n        roman_number\
    \ = \"XXXIX\"\n    case 40:\n        roman_number = \"XL\"", "    roman_numerals\
    \ := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"\
    , \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\"\
    , \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\"\
    , \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\"\
    , \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\"\
    , \"LVII\", \"LVIII\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\"\
    , \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"\
    LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\",\
    \ \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\"\
    , \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"CC\", \"CI\", \"CII\", \"CIII\"\
    , \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"\
    CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\"\
    , \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"\
    CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\"\
    , \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"\
    CCC\", \"CCCI\", \"CCCII\", \"CCCIII\", \"CCCIV\", \"CCCV\", \"CCCVI\", \"CCCVII\"\
    , \"CCCVIII\", \"CCCIX\", \"CCCX\", \"CCCXI\", \"CCCXII\", \"CCCXIII\", \"CCCXIV\"\
    , \"", "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"I\"\n    case 2:\n        roman_number = \"II\"\n    case 3:\n        roman_number\
    \ = \"III\"\n    case 4:\n        roman_number = \"IV\"\n    case 5:\n       \
    \ roman_number = \"V\"\n    case 6:\n        roman_number = \"VI\"\n    case 7:\n\
    \        roman_number = \"VII\"\n    case 8:\n        roman_number = \"VIII\"\n\
    \    case 9:\n        roman_number = \"IX\"\n    case 10:\n        roman_number\
    \ = \"X\"\n    case 11:\n        roman_number = \"XI\"\n    case 12:\n       \
    \ roman_number = \"XII\"\n    case 13:\n        roman_number = \"XIII\"\n    case\
    \ 14:\n        roman_number = \"XIV\"\n    case 15:\n        roman_number = \"\
    XV\"\n    case 16:\n        roman_number = \"XVI\"\n    case 17:\n        roman_number\
    \ = \"XVII\"\n    case 18:\n        roman_number = \"XVIII\"\n    case 19:\n \
    \       roman_number = \"XIX\"\n    case 20:\n        roman_number = \"XX\"\n\
    \    case 21:\n        roman_number = \"XXI\"\n    case 22:\n        roman_number\
    \ = \"XXII\"\n    case 23:\n        roman_number = \"XXIII\"\n    case 24:\n \
    \       roman_number = \"XXIV\"\n    case 25:\n        roman_number = \"XXV\"\n\
    \    case 26:\n        roman_number = \"XXVI\"\n    case 27:\n        roman_number\
    \ = \"XXVII\"\n    case 28:\n        roman_number = \"XXVIII\"\n    case 29:\n\
    \        roman_number = \"XXIX\"\n    case 30:\n        roman_number = \"XXX\"\
    \n    case 31:\n        roman_number = \"XXXI\"\n    case 32:\n        roman_number\
    \ = \"XXXII\"\n    case 33:\n        roman_number = \"XXXIII\"\n    case 34:\n\
    \        roman_number = \"XXXIV\"\n    case 35:\n        roman_number = \"XXXV\"\
    \n    case 36:\n        roman_number = \"XXXVI\"\n    case 37:\n        roman_number\
    \ = \"XXXVII\"\n    case 38:\n        roman_number = \"XXXVIII\"\n    case 39:\n\
    \        roman_number = \"XXXIX\"\n    case 40:\n        roman_number = \"XL\"",
  "    roman_numerals := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\"\
    , \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\"\
    , \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"\
    XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n\
    \        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\"\
    ,\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"\
    CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n   \
    \     \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\"\
    , \"CXXIX\",\n        \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\"\
    , \"CXXXV\", \"CXXXVI\", \"CXXXVII\",\n        \"CXXXVIII\", \"CXXXIX\", \"CC\"\
    , \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CIV\", \"CV\",\n        \"CVI\", \"\
    CVII\", \"", "    roman_numerals := map[int]string{\n        1: \"i\",\n     \
    \   5: \"vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"\
    viiiii\",\n        500: \"viiiiix\",\n        1000: \"viiiiiix\",\n    }\n\n \
    \   roman_numeral := \"\"\n    for roman_numeral, number := range roman_numerals\
    \ {\n        if number <= number {\n            break\n        }\n    }\n\n  \
    \  if roman_numeral == \"\" {\n        fmt.Println(\"ERROR: No roman numeral for\
    \ number \", number)\n    }\n\n    return roman_numeral\n}\n", "    if number\
    \ < 1 || number > 1000 {\n        fmt.Println(\"Invalid input\")\n    }\n    roman_numerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"viii\"\
    ,\n        50: \"viivi\",\n        100: \"viiii\",\n        500: \"viiivi\",\n\
    \        1000: \"viiii\",\n    }\n    mini_roman_numerals := map[string]int{\n\
    \        \"i\": 1,\n        \"vi\": 5,\n        \"vii\": 10,\n        \"viii\"\
    : 50,\n        \"viivi\": 100,\n        \"viiii\": 500,\n        \"viiivi\": 1000,\n\
    \    }\n    mini_roman_numerals_string := map[string]string{\n        \"i\": \"\
    i\",\n        \"vi\": \"vi\",\n        \"vii\": \"vii\",\n        \"viii\": \"\
    viii\",\n        \"viivi\": \"viivi\",\n        \"viiii\": \"viiii\",\n      \
    \  \"viiivi\": \"viiivi\",\n        \"viiii\": \"viiii\",\n    }\n    mini_roman_numerals_string\
    \ := map[string]string{\n        \"i\": \"i\",\n        \"vi\": \"vi\",\n    \
    \    \"vii\": \"vii\",\n        \"viii\": \"viii\",\n        \"viivi\": \"viivi\"\
    ,\n        \"viiii\": \"viiii\",\n        \"viiivi\": \"viiivi\",\n        \"\
    viiii\": \"viiii\",\n    }\n    mini_roman_numerals_string := map[string]string{\n\
    \        \"i\": \"i\",\n        \"vi\": \"vi\",\n        \"vii\": \"vii\",\n \
    \       \"viii\": \"viii\",\n        \"viivi\": \"viivi\",\n        \"viiii\"\
    : \"viiii\",\n        \"viiivi\": \"viiivi\",\n        \"viiii\": \"viiii\",\n\
    \    }\n    mini_roman_numerals_string := map[string]string{\n        \"i\": \"\
    i\",\n        \"vi\": \"vi\",\n        \"vii\": \"vii\",\n        \"viii\": \"\
    viii\",\n        \"viivi\": \"viivi\",\n        \"viiii\": \"viiii\",\n      \
    \  \"viiivi\": \"viiivi\",\n        \"viiii\": \"viiii\",\n    }\n    mini_roman_numerals_string\
    \ := map[string]string{\n        \"i\": \"i\",\n        \"vi\": \"vi", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viiv\",\n    \
    \    1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"viv\",\n      \
    \  50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"viiv\",\n   \
    \     1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000: \"viv\"\
    ,\n        50000000: \"viiv\",\n        100000000: \"viv\",\n        500000000:\
    \ \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\",\n   \
    \     10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n        50000000000000000: \"viiv\",\n\
    \        10000000000000000000: \"viv\",\n        5000000000000000000: \"viiv\"\
    ,\n        100000000000000000000: \"viv\",\n        50000000000000000000: \"viiv\"\
    ,\n        1000000000000000000000: \"viv\",\n        500000000000000000000: \"\
    viiv\",\n        10000000000000000000000: \"viv\",\n        5000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000: \"viv\",\n        50000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000: \"viv\",\n        500000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000: \"viv\",\n    }\n\n    romanNumeral\
    \ := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n}\n", " \
    \   romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    romanNumerals[number]\
    \ = \"\"\n    return romanNumerals[number]\n}\n", "    if number < 1 || number\
    \ > 1000 {\n        fmt.Println(\"Invalid input\")\n    }\n    roman_numerals\
    \ := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"}\n    roman_numeral_string := \"\"\n    for _,\
    \ roman_numeral := range roman_numerals {\n        if number >= roman_numeral*100\
    \ {\n            number -= roman_numeral*100\n            roman_numeral_string\
    \ += roman_numeral\n        }\n    }\n    return roman_numeral_string\n}\n", " \
    \   roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiii\",\n    \
    \    500: \"viiii\",\n        1000: \"viiii\",\n        5000: \"viiii\",\n   \
    \     10000: \"viiii\",\n        50000: \"viiii\",\n        100000: \"viiii\"\
    ,\n        500000: \"viiii\",\n        1000000: \"viiii\",\n        5000000: \"\
    viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\",\n       \
    \ 100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000: \"\
    viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n  \
    \      50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\",\n\
    \        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n \
    \       10: \"viii\",\n        50: \"viiii\",\n        100: \"viiiii\",\n    \
    \    500: \"viiii\",\n        1000: \"viii\",\n        5000: \"vii\",\n      \
    \  10000: \"vi\",\n        50000: \"v\",\n        100000: \"iv\",\n        500000:\
    \ \"iv\",\n        1000000: \"iv\",\n        5000000: \"iv\",\n        10000000:\
    \ \"iv\",\n        50000000: \"iv\",\n        100000000: \"iv\",\n        500000000:\
    \ \"iv\",\n        1000000000: \"iv\",\n        5000000000: \"iv\",\n        10000000000:\
    \ \"iv\",\n        50000000000: \"iv\",\n        100000000000: \"iv\",\n     \
    \   500000000000: \"iv\",\n        1000000000000: \"iv\",\n        5000000000000:\
    \ \"iv\",\n        10000000000000: \"iv\",\n        50000000000000: \"iv\",\n\
    \        100000000000000: \"iv\",\n        500000000000000: \"iv\",\n        1000000000000000:\
    \ \"iv\",\n        5000000000000000: \"iv\",\n        1000000000000000000: \"\
    iv\",\n    }\n    romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", "    romanNumerals := []string{\n        \"I\", \"II\", \"III\", \"IV\"\
    , \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\",\
    \ \"XIV\",\n        \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"\
    XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\",\n        \"XXVI\", \"XXVII\", \"\
    XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    ,\n        \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LIII\", \"LIIII\", \"LIIV\",\n        \"LV\", \"LVI\", \"LVII\",\
    \ \"LVIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\"\
    ,\n        \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\",\n        \"LXXVI\", \"LXXVII\", \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\",\n     \
    \   \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\"\
    , \"CI\", \"CII\", \"CIII\", \"CIIII\",\n        \"CIV\", \"CV\", \"CVI\", \"\
    CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"\
    CXV\",\n        \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CXX\", \"CXXI\", \"\
    CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\",\n        \"CXXVI\", \"CXXVII\", \"CXXVIII\"\
    , \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\",\n     \
    \   \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\"\
    , \"CCII\", \"CCIII\", \"CCIV\",\n        \"CCV\", \"CCVI\", \"CCVII", "    romans\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"l\"\
    ,\n        50: \"l\",\n        100: \"c\",\n        500: \"c\",\n        1000:\
    \ \"d\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    return roman\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    viiii\",\n        100: \"viiii\",\n        500: \"viiii\",\n        1000: \"viiii\"\
    ,\n        5000: \"viiii\",\n        10000: \"viiii\",\n        50000: \"viiii\"\
    ,\n        100000: \"viiii\",\n        500000: \"viiii\",\n        1000000: \"\
    viiii\",\n        5000000: \"viiii\",\n        10000000: \"viiii\",\n        50000000:\
    \ \"viiii\",\n        100000000: \"viiii\",\n        500000000: \"viiii\",\n \
    \       1000000000: \"viiii\",\n        5000000000: \"viiii\",\n        10000000000:\
    \ \"viiii\",\n        50000000000: \"viiii\",\n        100000000000: \"viiii\"\
    ,\n        500000000000: \"viiii\",\n        1000000000000: \"viiii\",\n     \
    \   5000000000000: \"viiii\",\n        10000000000000: \"viiii\",\n        50000000000000:\
    \ \"viiii\",\n        100000000000000: \"viiii\",\n        500000000000000: \"\
    viiii\",\n        1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\"\
    ,\n        1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\"\
    ,\n        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n \
    \       10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"c\"\
    ,\n        1000: \"d\",\n    }\n    romanNumerals[number] = \"\"\n    romanNumerals[number\
    \ / 1000] = \"c\"\n    romanNumerals[number / 100] = \"x\"\n    romanNumerals[number\
    \ / 10] = \"l\"\n    romanNumerals[number % 10] = \"i\"\n    return romanNumerals[number]\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiii\",\n\
    \        500: \"viiii\",\n        1000: \"viiii\",\n        5000: \"viiii\",\n\
    \        10000: \"viiii\",\n        50000: \"viiii\",\n        100000: \"viiii\"\
    ,\n        500000: \"viiii\",\n        1000000: \"viiii\",\n        5000000: \"\
    viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\",\n       \
    \ 100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000: \"\
    viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n  \
    \      50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n    }\n    romanNumerals[number] = \"i\"\
    \n    return romanNumerals[number]\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n\n   \
    \ romanNumeral := \"\"\n    for romanNumeral, number := range romanNumerals {\n\
    \        if number >= number {\n            break\n        }\n    }\n\n    if\
    \ romanNumeral == \"\" {\n        fmt.Println(\"Error: no roman numeral for number\
    \ \", number)\n    }\n\n    return romanNumerals[number]\n}\n", "    romans :=\
    \ map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viv\",\n     \
    \   1000: \"vi\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n    \
    \    fmt.Println(\"Invalid input\")\n    }\n    return roman\n}\n", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"viii\"\
    ,\n        50: \"vii\",\n        100: \"vi\",\n        500: \"vii\",\n       \
    \ 1000: \"vi\",\n        5000: \"vii\",\n        10000: \"vii\",\n        50000:\
    \ \"viii\",\n        100000: \"viii\",\n        500000: \"viii\",\n        1000000:\
    \ \"viii\",\n        5000000: \"viii\",\n        10000000: \"viii\",\n       \
    \ 50000000: \"viii\",\n        100000000: \"viii\",\n        500000000: \"viii\"\
    ,\n        1000000000: \"viii\",\n        5000000000: \"viii\",\n        10000000000:\
    \ \"viii\",\n        50000000000: \"viii\",\n        100000000000: \"viii\",\n\
    \        500000000000: \"viii\",\n        1000000000000: \"viii\",\n        5000000000000:\
    \ \"viii\",\n        10000000000000: \"viii\",\n        50000000000000: \"viii\"\
    ,\n        100000000000000: \"viii\",\n        500000000000000: \"viii\",\n  \
    \      1000000000000000: \"viii\",\n        5000000000000000: \"viii\",\n    \
    \    1000000000000000000: \"viii\",\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    return strings.ToLower(romanNumeral)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viiii\",\n\
    \        5000: \"viiiii\",\n    }\n    roman_numeral := roman_numerals[number]\n\
    \    return strings.ToLower(roman_numeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n   \
    \ romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", '    romanNumerals := []string{"I", "II", "III", "IV", "V", "VI", "VII",
    "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX",
    "XX", "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX",
    "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII",
    "XXXIX", "XL", "L", "LI", "LII", "LIII", "LIIII", "LIIV", "LV", "LVI", "LVII",
    "LVIII", "LIX", "LX", "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII",
    "LXVIII", "LXIX", "LXX", "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI",
    "LXXVII", "LXXVIII", "LXXIX", "LXXX", "LXXXI", "LXXXII", "LXXXIII", "LXXXIV",
    "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC", "C", "CI", "CII", "CIII",
    "CIIII", "CIV", "CV", "CVI", "CVII", "CVIII", "CIX", "CX", "CXI", "CXII", "CXIII",
    "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX", "CX", "CXI", "CXII", "CXIII",
    "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX", "CX", "CXI", "CXII", "CXIII",
    "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX", "CX", "CXI", "CXII", "CXIII",
    "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX", "CX", "CXI", "CXII", "CXIII",
    "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX", "CX", "CXI", "CXII", "', "  \
    \  roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"\
    viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"\
    viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000:\
    \ \"viv\",\n        50000000: \"viiv\",\n        100000000: \"viv\",\n       \
    \ 500000000: \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\"\
    ,\n        10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n    }\n\n    roman_numeral_string := \"\
    \"\n    for roman_numeral, numeral_string := range roman_numerals {\n        if\
    \ number >= roman_numeral {\n            roman_numeral_string = numeral_string\n\
    \            break\n        }\n    }\n\n    return strings.ToLower(roman_numeral_string)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viivi\",\n        1000: \"viiii\",\n    }\n    romanNumerals[number]\
    \ = \"\"\n    romanNumerals[number/1000] = \"v\"\n    romanNumerals[number/500]\
    \ = \"vi\"\n    romanNumerals[number/100] = \"vii\"\n    romanNumerals[number/50]\
    \ = \"viii\"\n    romanNumerals[number/5] = \"viv\"\n    romanNumerals[number/4]\
    \ = \"vii\"\n    romanNumerals[number/3] = \"vi\"\n    romanNumerals[number/2]\
    \ = \"vi\"\n    romanNumerals[number/1] = \"i\"\n    return romanNumerals[number]\n\
    }\n", "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n        5000: \"d\",\n        10000: \"c\",\n    \
    \    50000: \"c\",\n        100000: \"c\",\n        500000: \"c\",\n        1000000:\
    \ \"c\",\n        5000000: \"c\",\n        10000000: \"c\",\n        50000000:\
    \ \"c\",\n        100000000: \"c\",\n        500000000: \"c\",\n        1000000000:\
    \ \"c\",\n        5000000000: \"c\",\n        10000000000: \"c\",\n        50000000000:\
    \ \"c\",\n        100000000000: \"c\",\n        500000000000: \"c\",\n       \
    \ 1000000000000: \"c\",\n        5000000000000: \"c\",\n        10000000000000:\
    \ \"c\",\n        50000000000000: \"c\",\n        100000000000000: \"c\",\n  \
    \      500000000000000: \"c\",\n        1000000000000000: \"c\",\n        5000000000000000:\
    \ \"c\",\n        1000000000000000000: \"c\",\n    }\n    roman_number := \"\"\
    \n    for roman_number, number := range romans {\n        if number <= number\
    \ {\n            break\n        }\n    }\n    return roman_number\n}\n", "   \
    \ roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n \
    \       10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viv\",\n        1000: \"vi\",\n        5000: \"vii\",\n        10000: \"viii\"\
    ,\n        100000: \"viv\",\n    }\n    roman_numeral := roman_numerals[number]\n\
    \    return strings.ToLower(roman_numeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    romanNumeral\
    \ := \"\"\n    for romanNumeral, number := range romanNumerals {\n        if number\
    \ <= number {\n            break\n        }\n    }\n    return fmt.Sprintf(\"\
    %s%v\", romanNumeral, number)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \    }\n\n    roman_numeral := \"\"\n    for roman_numeral, number := range roman_numerals\
    \ {\n        if number <= number {\n            break\n        }\n    }\n\n  \
    \  if roman_numeral == \"\" {\n        fmt.Println(\"Roman numeral not found\"\
    )\n    }\n\n    return roman_numerals[number]\n}\n", "    roman_number := \"\"\
    \n    switch number {\n    case 1:\n        roman_number = \"x\"\n    case 5:\n\
    \        roman_number = \"v\"\n    case 10:\n        roman_number = \"i\"\n  \
    \  case 20:\n        roman_number = \"n\"\n    case 50:\n        roman_number\
    \ = \"c\"\n    case 100:\n        roman_number = \"d\"\n    case 200:\n      \
    \  roman_number = \"h\"\n    case 400:\n        roman_number = \"x\"\n    case\
    \ 1000:\n        roman_number = \"m\"\n    }\n    return roman_number\n}\n", " \
    \   romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n       \
    \ 10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500: \"\
    viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"viv\"\
    ,\n        50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"viiv\"\
    ,\n        1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000: \"\
    viv\",\n        50000000: \"viiv\",\n        100000000: \"viv\",\n        500000000:\
    \ \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\",\n   \
    \     10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n    }\n\n    roman, ok := romans[number]\n\
    \    if !ok {\n        fmt.Println(\"Invalid input\")\n    }\n    return roman\n\
    }\n", "    roman_number := \"\"\n    roman_number += int_to_roman(number)\n  \
    \  return strings.ToLower(roman_number)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    roman_numeral\
    \ := \"\"\n    for roman_numeral, number := range roman_numerals {\n        if\
    \ number >= number {\n            break\n        }\n    }\n    if roman_numeral\
    \ == \"\" {\n        fmt.Println(\"Error: No roman numeral for number \", number)\n\
    \    }\n    return roman_numerals[number]\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vii\",\n        10000: \"viii\",\n        100000: \"viv\",\n    }\n\
    \n    roman_number := number / 1000\n    roman_numeral := roman_numerals[roman_number]\n\
    \n    number -= roman_number * 1000\n\n    roman_numeral += roman_numerals[number]\n\
    \n    return roman_numeral\n}\n", "    roman_numerals := map[int]string{\n   \
    \     1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"viiii\"\
    ,\n        100: \"viiiii\",\n        500: \"viiiiix\",\n        1000: \"viiiiiix\"\
    ,\n        5000: \"viiiiiix\",\n        10000: \"viiiiiix\",\n        50000: \"\
    viiiiiix\",\n        100000: \"viiiiiix\",\n        500000: \"viiiiiix\",\n  \
    \      1000000: \"viiiiiix\",\n        5000000: \"viiiiiix\",\n        10000000:\
    \ \"viiiiiix\",\n        50000000: \"viiiiiix\",\n        100000000: \"viiiiiix\"\
    ,\n        500000000: \"viiiiiix\",\n        1000000000: \"viiiiiix\",\n     \
    \   5000000000: \"viiiiiix\",\n        10000000000: \"viiiiiix\",\n        50000000000:\
    \ \"viiiiiix\",\n        100000000000: \"viiiiiix\",\n        500000000000: \"\
    viiiiiix\",\n        1000000000000: \"viiiiiix\",\n        5000000000000: \"viiiiiix\"\
    ,\n        10000000000000: \"viiiiiix\",\n        50000000000000: \"viiiiiix\"\
    ,\n        100000000000000: \"viiiiiix\",\n        500000000000000: \"viiiiiix\"\
    ,\n        1000000000000000: \"viiiiiix\",\n        5000000000000000: \"viiiiiix\"\
    ,\n        10000000000000000: \"viiiiiix\",\n        5000000000000000: \"viiiiiix\"\
    ,\n        1000000000000000000: \"viiiiiix\",\n        50000000000000000: \"viiiiiix\"\
    ,\n        10000000000000000000: \"viiiiiix\",\n        5000000000000000000: \"\
    viiiiiix\",\n        100000000000000000000: \"viiiiiix\",\n        50000000000000000000:\
    \ \"viiiiiix\",\n        1000000000000000000000: \"viiiiiix\",\n        500000000000000000000:\
    \ \"viiiiiix\",\n        10000000000000000000000: \"viiiiiix\",\n        5000000000000000000000:\
    \ \"viiiiiix\",\n        100000000000000000000000: \"viiiiiix\",\n        50000000000000000000000:\
    \ \"viiiiiix\",\n        1000000000000000000000000: \"viiiiiix\",\n        500000000000000000000000:\
    \ \"viiiiiix\",\n        10000000000000000000000000: \"viiiiiix\",\n    }\n\n\
    \    roman_", "    if number < 1 || number > 1000 {\n        fmt.Println(\"Invalid\
    \ input\")\n    }\n    romans := map[int]string{\n        1: \"i\",\n        5:\
    \ \"vi\",\n        10: \"l\",\n        50: \"x\",\n        100: \"c\",\n     \
    \   500: \"d\",\n        1000: \"m\",\n    }\n    result := \"\"\n    for _, romanNum\
    \ := range romans {\n        if number >= romanNum {\n            result += romans[romanNum]\n\
    \            number -= romanNum\n        }\n    }\n    return strings.ToLower(result)\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500:\
    \ \"c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    roman_number\
    \ := roman_numerals[number]\n    return strings.ToLower(roman_number)\n}\n", " \
    \   roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"viii\",\n        50: \"vii\",\n        100: \"vi\",\n        500:\
    \ \"viii\",\n        1000: \"viii\",\n        5000: \"vii\",\n        10000: \"\
    vi\",\n        50000: \"viii\",\n        100000: \"viii\",\n        500000: \"\
    vii\",\n        1000000: \"vi\",\n        5000000: \"viii\",\n        10000000:\
    \ \"viii\",\n        50000000: \"vii\",\n        100000000: \"vi\",\n        500000000:\
    \ \"viii\",\n        1000000000: \"viii\",\n        5000000000: \"vii\",\n   \
    \     10000000000: \"vi\",\n        50000000000: \"viii\",\n        100000000000:\
    \ \"viii\",\n        500000000000: \"vii\",\n        1000000000000: \"vi\",\n\
    \        5000000000000: \"viii\",\n        10000000000000: \"viii\",\n       \
    \ 50000000000000: \"vii\",\n        100000000000000: \"vi\",\n        500000000000000:\
    \ \"viii\",\n        1000000000000000: \"viii\",\n        5000000000000000: \"\
    vii\",\n        1000000000000000000: \"vi\",\n        50000000000000000: \"viii\"\
    ,\n        10000000000000000000: \"viii\",\n        5000000000000000000: \"vii\"\
    ,\n        100000000000000000000: \"vi\",\n        50000000000000000000: \"viii\"\
    ,\n        1000000000000000000000: \"viii\",\n        500000000000000000000: \"\
    vii\",\n        10000000000000000000000: \"vi\",\n        5000000000000000000000:\
    \ \"viii\",\n        100000000000000000000000: \"viii\",\n        50000000000000000000000:\
    \ \"vii\",\n        1000000000000000000000000: \"vi\",\n        500000000000000000000000:\
    \ \"viii\",\n        10000000000000000000000000: \"viii\",\n        5000000000000000000000000:\
    \ \"vii\",\n        100000000000000000000000000: \"vi\",\n        50000000000000000000000000:\
    \ \"viii\",\n        1000000000000000000000000000: \"viii\",\n        500000000000000000000000000:\
    \ \"vii\",\n        10000000000000000000000000000: \"vi\",\n        5000000000000000000000000000:\
    \ \"viii\",\n        100000000000000000000000000000: \"viii\",\n        50000000000000000000000000000:\
    \ \"vii\",\n        1000000000000000000000000000000: \"vi\",\n        500000000000000000000000000000:\
    \ \"viii\",\n        10000000000000000000000000000000: \"viii\",\n        5000000000000000000000000000000:\
    \ \"vii\",", "    roman_numerals := []string{\n        \"I\", \"II\", \"III\"\
    , \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n\
    \        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"\
    XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"\
    XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"\
    LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"\
    LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\",\
    \ \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    ,\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\"\
    , \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\"\
    , \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\"\
    , \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"\
    CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\"\
    , \"CXXI\",\n        \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"\
    CXXVII\", \"CXXVIII\", \"CXXIX\",\n        \"CXXX\", \"CXXXI\", \"CXXXII\", \"\
    CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\",\n        \"CXXXVIII\"\
    , \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\", \"CCVI\"\
    ,\n        \"CCVII\", \"", "    roman_number := \"\"\n    switch number {\n  \
    \  case 1:\n        roman_number = \"x\"\n    case 5:\n        roman_number =\
    \ \"v\"\n    case 10:\n        roman_number = \"i\"\n    case 20:\n        roman_number\
    \ = \"x\"\n    case 50:\n        roman_number = \"l\"\n    case 100:\n       \
    \ roman_number = \"c\"\n    case 200:\n        roman_number = \"d\"\n    case\
    \ 500:\n        roman_number = \"l\"\n    case 1000:\n        roman_number = \"\
    m\"\n    }\n    return roman_number\n}\n", '    romans := []string{"I", "II",
    "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV",
    "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI", "XXII", "XXIII", "XXIV", "XXV",
    "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV",
    "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL", "L", "LI", "LII", "LIII",
    "LIIII", "LIIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX", "LXI", "LXII", "LXIII",
    "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX", "LXXI", "LXXII", "LXXIII",
    "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX", "LXXXI", "LXXXII",
    "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",
    "C", "CI", "CII", "CIII", "CIIII", "CIV", "CV", "CVI", "CVII", "CVIII", "CIX",
    "CX", "CXI", "CXII", "CXIII", "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX",
    "CX", "CXI", "CXII", "CXIII", "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX",
    "CX", "CXI", "CXII", "CXIII", "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX",
    "CX", "CXI", "CXII", "CXIII", "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX",
    "CX", "CXI", "CXII", "CXIII", "CXIV", "CXV", "CXVI", "CXVII", "CXVIII", "CIX",
    "CX", "CXI", "CXII", "CXII', "    roman_number := \"\"\n    switch number {\n\
    \    case 1:\n        roman_number = \"x\"\n    case 2:\n        roman_number\
    \ = \"ix\"\n    case 3:\n        roman_number = \"lb\"\n    case 4:\n        roman_number\
    \ = \"c\"\n    case 5:\n        roman_number = \"d\"\n    case 6:\n        roman_number\
    \ = \"i\"\n    case 7:\n        roman_number = \"v\"\n    case 8:\n        roman_number\
    \ = \"f\"\n    case 9:\n        roman_number = \"e\"\n    case 10:\n        roman_number\
    \ = \"g\"\n    case 11:\n        roman_number = \"h\"\n    case 12:\n        roman_number\
    \ = \"k\"\n    case 13:\n        roman_number = \"m\"\n    case 14:\n        roman_number\
    \ = \"n\"\n    case 15:\n        roman_number = \"x\"\n    case 16:\n        roman_number\
    \ = \"l\"\n    case 17:\n        roman_number = \"c\"\n    case 18:\n        roman_number\
    \ = \"d\"\n    case 19:\n        roman_number = \"i\"\n    case 20:\n        roman_number\
    \ = \"v\"\n    case 21:\n        roman_number = \"f\"\n    case 22:\n        roman_number\
    \ = \"e\"\n    case 23:\n        roman_number = \"g\"\n    case 24:\n        roman_number\
    \ = \"h\"\n    case 25:\n        roman_number = \"k\"\n    case 26:\n        roman_number\
    \ = \"m\"\n    case 27:\n        roman_number = \"n\"\n    case 28:\n        roman_number\
    \ = \"x\"\n    case 29:\n        roman_number = \"l\"\n    case 30:\n        roman_number\
    \ = \"c\"\n    case 31:\n        roman_number = \"d\"\n    case 32:\n        roman_number\
    \ = \"i\"\n    case 33:\n        roman_number = \"v\"\n    case 34:\n        roman_number\
    \ = \"f\"\n    case 35:\n        roman_number = \"e\"\n    case 36:\n        roman_number\
    \ = \"g\"\n    case 37:\n        roman_number = \"h\"\n    case 38:\n        roman_number\
    \ = \"k\"\n    case 39:\n        roman_number = \"m\"\n    case 40:\n        roman_number\
    \ = \"n\"\n    case 41:\n        roman_number = \"x\"\n    case 42:\n        roman_number\
    \ = \"l\"\n    case 43:\n        roman_number = \"c\"\n    case 44:\n        roman_number\
    \ = \"d\"\n    case 45:\n        roman_number = \"i\"\n    case ", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"ix\",\n        500: \"ixi\",\n      \
    \  1000: \"ixii\",\n    }\n    romanNumerals[number] = \"\"\n    return romanNumerals[number]\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiii\",\n\
    \        500: \"viiii\",\n        1000: \"viiii\",\n        5000: \"viiii\",\n\
    \        10000: \"viiii\",\n        50000: \"viiii\",\n        100000: \"viiii\"\
    ,\n        500000: \"viiii\",\n        1000000: \"viiii\",\n        5000000: \"\
    viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\",\n       \
    \ 100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000: \"\
    viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n  \
    \      50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\",\n\
    \        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    roman_num := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"\
    XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"}\n    mini_num := []string{\"m\", \"\
    c\", \"d\", \"c\", \"x\", \"l\", \"xl\", \"x\", \"i\", \"v\", \"i\"}\n    roman_num_index\
    \ := 0\n    mini_num_index := 0\n    roman_num := []string{\"M\", \"CM\", \"D\"\
    , \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"}\n\
    \    mini_num := []string{\"m\", \"c\", \"d\", \"c\", \"x\", \"l\", \"xl\", \"\
    x\", \"i\", \"v\", \"i\"}\n    roman_num_index := 0\n    mini_num_index := 0\n\
    \    roman_num := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\"\
    , \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"}\n    mini_num := []string{\"m\"\
    , \"c\", \"d\", \"c\", \"x\", \"l\", \"xl\", \"x\", \"i\", \"v\", \"i\"}\n   \
    \ roman_num_index := 0\n    mini_num_index := 0\n    roman_num := []string{\"\
    M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\"\
    , \"IV\", \"I\"}\n    mini_num := []string{\"m\", \"c\", \"d\", \"c\", \"x\",\
    \ \"l\", \"xl\", \"x\", \"i\", \"v\", \"i\"}\n    roman_num_index := 0\n    mini_num_index\
    \ := 0\n    roman_num := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\"\
    , \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"}\n    mini_num := []string{\"\
    m\", \"c\", \"d\", \"c\", \"x\", \"l\", \"xl\", \"x\", \"i\", \"v\", \"i\"}\n\
    \    roman_num_index := 0\n    mini_num_index := 0\n    roman_num := []string{\"\
    M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\"\
    , \"IV\", \"I\"}\n    mini_num := []string{\"m\", \"c\", \"d\", \"c\", \"x\",\
    \ \"l\", \"xl\", \"x\", \"i\", \"v\", \"i\"}\n    roman_num_index := 0\n    mini_num_index\
    \ := 0\n    roman_num := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\"\
    , \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"}\n    mini", "    roman_numerals\
    \ := map[int]string{\n        1: \"I\",\n        5: \"V\",\n        10: \"X\"\
    ,\n        50: \"L\",\n        100: \"C\",\n        500: \"D\",\n        1000:\
    \ \"M\",\n    }\n    mini_roman_numerals := map[string]int{\n        \"I\": 1,\n\
    \        \"V\": 5,\n        \"X\": 10,\n        \"L\": 50,\n        \"C\": 100,\n\
    \        \"D\": 500,\n        \"M\": 1000,\n    }\n    roman_number := roman_numerals[number]\n\
    \    mini_roman_number := mini_roman_numerals[roman_number]\n    return fmt.Sprintf(\"\
    %c\", mini_roman_number)\n}\n", "    roman_numerals := map[int]string{\n     \
    \   1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \        5000: \"viiivi\",\n        10000: \"viiivii\",\n        50000: \"vivvi\"\
    ,\n        100000: \"vivvii\",\n        500000: \"viviv\",\n        1000000: \"\
    vivivi\",\n        5000000: \"vivivii\",\n        10000000: \"viviviii\",\n  \
    \      50000000: \"viviivi\",\n        100000000: \"viviivii\",\n        500000000:\
    \ \"viviiivi\",\n        1000000000: \"viviiivii\",\n        5000000000: \"vivivvi\"\
    ,\n        10000000000: \"vivivvii\",\n        50000000000: \"viviviv\",\n   \
    \     100000000000: \"vivivivi\",\n        500000000000: \"viviiviv\",\n     \
    \   1000000000000: \"viviivivi\",\n        5000000000000: \"viviiiviv\",\n   \
    \     10000000000000: \"viviiivivi\",\n        50000000000000: \"vivivviv\",\n\
    \        100000000000000: \"vivivvivi\",\n        500000000000000: \"viviviviv\"\
    ,\n        1000000000000000: \"vivivivivi\",\n        5000000000000000: \"viviiviviv\"\
    ,\n        10000000000000000: \"viviivivivi\",\n        5000000000000000: \"viviiivivi\"\
    ,\n        10000000000000000: \"viviiivivi\",\n        50000000000000000: \"vivivvivi\"\
    ,\n        100000000000000000: \"vivivvivii\",\n        500000000000000000: \"\
    viviviviv\",\n        100000000000000000: \"vivivivivi\",\n        50000000000000000:\
    \ \"viviiviviv\",\n        100000000000000000: \"viviivivivi\",\n        500000000000000000:\
    \ \"viviiivivi\",\n        100000000000000000: \"viviiivivi\",\n        5000000000000000000:\
    \ \"vivivvivi\",\n        100000000000000000: \"vivivvivii\",\n        50000000000000000000:\
    \ \"viviviviv\",\n        100000000000000000: \"vivivivivi\",", "    roman_numerals\
    \ := []string{\n        \"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"\
    XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\", \"MM\",\n        \"MMM\",\n    }\n\
    \    roman_numerals_lower := []string{\n        \"i\", \"iv\", \"v\", \"ix\",\
    \ \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\", \"mm\",\n\
    \        \"mmm\",\n    }\n    roman_numerals_upper := []string{\n        \"I\"\
    , \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\", \"C\", \"CD\", \"D\", \"\
    CM\", \"M\", \"MM\",\n        \"MMM\",\n    }\n    roman_numerals_lower_upper\
    \ := []string{\n        \"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"\
    xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n\
    \    roman_numerals_lower_upper_roman := []string{\n        \"i\", \"iv\", \"\
    v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\"\
    , \"mm\",\n        \"mmm\",\n    }\n    roman_numerals_lower_upper_roman_roman\
    \ := []string{\n        \"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"\
    xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n\
    \    roman_numerals_lower_upper_roman_roman_roman := []string{\n        \"i\"\
    , \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\", \"d\", \"\
    cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n    roman_numerals_lower_upper_roman_roman_roman_roman\
    \ := []string{\n        \"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"\
    xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n\
    \    roman_numerals_lower_upper_roman_roman_roman_roman_roman := []string{\n \
    \       \"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"\
    cd\", \"d\", \"cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n    roman_numerals_lower_upper_roman_roman_roman_roman_roman\
    \ := []string{\n        \"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"\
    xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\", \"mm\",\n        \"mmm\",\n    }\n\
    \    roman_numerals_lower_upper_", "    romans := map[int]string{\n        1:\
    \ \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n       \
    \ 100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000: \"d\"\
    ,\n    }\n    roman_number := \"\"\n    for roman_number != \"\" {\n        roman_number\
    \ += romans[number%1000]\n        number /= 1000\n    }\n    return strings.ToLower(roman_number)\n\
    }\n", "    roman_num := \"\"\n    switch number {\n    case 1:\n        roman_num\
    \ = \"x\"\n    case 2:\n        roman_num = \"ix\"\n    case 3:\n        roman_num\
    \ = \"lb\"\n    case 4:\n        roman_num = \"c\"\n    case 5:\n        roman_num\
    \ = \"d\"\n    case 6:\n        roman_num = \"mi\"\n    case 7:\n        roman_num\
    \ = \"f\"\n    case 8:\n        roman_num = \"v\"\n    case 9:\n        roman_num\
    \ = \"x\"\n    case 10:\n        roman_num = \"c\"\n    case 11:\n        roman_num\
    \ = \"d\"\n    case 12:\n        roman_num = \"mi\"\n    case 13:\n        roman_num\
    \ = \"f\"\n    case 14:\n        roman_num = \"v\"\n    case 15:\n        roman_num\
    \ = \"x\"\n    case 16:\n        roman_num = \"c\"\n    case 17:\n        roman_num\
    \ = \"d\"\n    case 18:\n        roman_num = \"mi\"\n    case 19:\n        roman_num\
    \ = \"f\"\n    case 20:\n        roman_num = \"v\"\n    case 21:\n        roman_num\
    \ = \"x\"\n    case 22:\n        roman_num = \"c\"\n    case 23:\n        roman_num\
    \ = \"d\"\n    case 24:\n        roman_num = \"mi\"\n    case 25:\n        roman_num\
    \ = \"f\"\n    case 26:\n        roman_num = \"v\"\n    case 27:\n        roman_num\
    \ = \"x\"\n    case 28:\n        roman_num = \"c\"\n    case 29:\n        roman_num\
    \ = \"d\"\n    case 30:\n        roman_num = \"mi\"\n    case 31:\n        roman_num\
    \ = \"f\"\n    case 32:\n        roman_num = \"v\"\n    case 33:\n        roman_num\
    \ = \"x\"\n    case 34:\n        roman_num = \"c\"\n    case 35:\n        roman_num\
    \ = \"d\"\n    case 36:\n        roman_num = \"mi\"\n    case 37:\n        roman_num\
    \ = \"f\"\n    case 38:\n        roman_num = \"v\"\n    case 39:\n        roman_num\
    \ = \"x\"\n    case 40:\n        roman_num = \"c\"\n    case 41:\n        roman_num\
    \ = \"d\"\n    case 42:\n        roman_num = \"mi\"\n    case 43:\n        roman_num\
    \ = \"f\"\n    case 44:\n        roman_num = \"v\"\n    case 45:\n        roman_num\
    \ = \"x\"", "    roman_numerals := []string{\n        \"I\", \"II\", \"III\",\
    \ \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\",\n        \"X\", \"XI\", \"\
    XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\",\n   \
    \     \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\",\n        \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"\
    XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"\
    LVII\", \"LVIII\", \"LIX\",\n        \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"\
    LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\",\n        \"LXX\",\
    \ \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    , \"LXXVIII\", \"LXXIX\",\n        \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\"\
    , \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\",\n\
    \        \"XC\", \"C\", \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"\
    CVI\", \"CVII\", \"CVIII\", \"CIX\",\n        \"XC\", \"C\", \"CI\", \"CII\",\
    \ \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\",\n\
    \        \"XXC\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\", \"\
    CCVI\", \"CCVII\", \"CCVIII\", \"CXX\",\n        \"CCC\", \"CCCI\", \"CCCII\"\
    , \"CCCIII\", \"CCCIV\", \"CCCV\", \"CCCVI\", \"CCCVII\", \"CCCVIII\", \"CXXX\"\
    ,\n        \"CCXX\", \"CCXXX\", \"CCXXXI\", \"CCXXXII\", \"CCXXXIII\", \"CCXXXIV\"\
    , \"CCXXXV\", \"CCXXXVI\", \"CCXXXVII\", \"CCXXXVIII", "    roman_number := \"\
    \"\n    switch number {\n    case 1:\n        roman_number = \"x\"\n    case 5:\n\
    \        roman_number = \"v\"\n    case 10:\n        roman_number = \"i\"\n  \
    \  case 50:\n        roman_number = \"l\"\n    case 100:\n        roman_number\
    \ = \"c\"\n    case 500:\n        roman_number = \"d\"\n    case 1000:\n     \
    \   roman_number = \"m\"\n    }\n    return roman_number\n}\n", "    romans :=\
    \ map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n\
    \        50: \"l\",\n        100: \"c\",\n        500: \"c\",\n        1000: \"\
    d\",\n        5000: \"d\",\n    }\n    result := \"\"\n    for num, _ := range\
    \ romans {\n        if number >= num {\n            result += romans[num]\n  \
    \          number -= num\n        }\n    }\n    return strings.ToLower(result)\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viivi\",\n        1000: \"viiii\",\n        5000: \"viiiii\",\n\
    \        10000: \"vivvi\",\n        50000: \"vivvii\",\n        100000: \"vivviii\"\
    ,\n        500000: \"vivviiii\",\n        1000000: \"vivviv\",\n        5000000:\
    \ \"vivvivi\",\n        10000000: \"vivvivii\",\n        50000000: \"vivviviii\"\
    ,\n        100000000: \"vivviviiii\",\n        500000000: \"vivviviiiii\",\n \
    \       1000000000: \"vivviviv\",\n        5000000000: \"vivvivivi\",\n      \
    \  10000000000: \"vivvivivii\",\n        50000000000: \"vivviviviii\",\n     \
    \   100000000000: \"vivviviviiii\",\n        500000000000: \"vivviviviiiii\",\n\
    \        1000000000000: \"vivviviviv\",\n        5000000000000: \"vivvivivivi\"\
    ,\n        10000000000000: \"vivvivivivii\",\n        50000000000000: \"vivviviviviii\"\
    ,\n        100000000000000: \"vivviviviviiii\",\n        500000000000000: \"vivviviviviiiii\"\
    ,\n        1000000000000000: \"vivviviviviv\",\n        5000000000000000: \"vivvivivivivi\"\
    ,\n        10000000000000000: \"vivvivivivivii\",\n        5000000000000000: \"\
    vivviviviviviii\",\n        10000000000000000: \"vivviviviviviiii\",\n       \
    \ 5000000000000000: \"vivviviviviviiiii\",\n        100000000000000000: \"vivviviviviviv\"\
    ,\n        50000000000000000: \"vivvivivivivi\",\n        1000000000000000000:\
    \ \"vivvivivivivii\",\n        500000000000000000: \"vivviviviviviii\",\n    \
    \    10000000000000000000: \"vivviviviviviiii\",\n        5000000000000000000:\
    \ \"vivviviviviviiiii\",\n        100", "    romans := map[int]string{\n     \
    \   1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n  \
    \      100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n\n    result\
    \ := \"\"\n    for num, res := range romans {\n        if num == number {\n  \
    \          result = res\n            break\n        }\n    }\n\n    return result\n\
    }\n", "    if number < 1 || number > 1000 {\n        fmt.Println(\"Invalid input\"\
    )\n        return \"\"\n    }\n\n    romanNumerals := map[int]string{\n      \
    \  1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n    \
    \    100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n\n    romanNumeral\
    \ := \"\"\n    for romanNumeral, number := range romanNumerals {\n        if number\
    \ >= number {\n            romanNumeral += romanNumerals[number]\n        }\n\
    \    }\n\n    return strings.ToLower(romanNumeral)\n}\n", "    romans := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n   \
    \ roman_number := \"\"\n    for number > 0 {\n        roman_number += romans[number%100]\n\
    \        number /= 100\n    }\n    return strings.ToLower(roman_number)\n}\n",
  "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10:\
    \ \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"c\",\n     \
    \   1000: \"d\",\n        5000: \"d\",\n    }\n    result := \"\"\n    for num,\
    \ res := range romans {\n        if num >= number {\n            result = res\n\
    \            break\n        }\n    }\n    return result\n}\n", "    roman_numerals\
    \ := map[int]string{\n        1: \"I\",\n        5: \"V\",\n        10: \"X\"\
    ,\n        50: \"L\",\n        100: \"C\",\n        500: \"D\",\n        1000:\
    \ \"M\",\n    }\n    roman_numeral := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n\
    }\n", "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n        5000: \"d\",\n        10000: \"c\",\n    \
    \    100000: \"c\",\n        1000000: \"m\",\n        500000: \"m\",\n       \
    \ 10000001: \"m\",\n        10000000: \"m\",\n        100000000: \"m\",\n    \
    \    1000000000: \"m\",\n        10000000000: \"m\",\n        100000000000: \"\
    m\",\n        1000000000000: \"m\",\n        10000000000000: \"m\",\n        100000000000000:\
    \ \"m\",\n        1000000000000000: \"m\",\n        10000000000000000: \"m\",\n\
    \        100000000000000000: \"m\",\n        1000000000000000000: \"m\",\n   \
    \ }\n\n    roman, ok := romans[number]\n    if !ok {\n        fmt.Println(\"int_to_mini_roman:\
    \ number too large\")\n    }\n    return roman\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vi\",\n    }\n    romanNumeral := romanNumerals[number]\n    return\
    \ strings.ToLower(romanNumeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    vii\",\n        100: \"vi\",\n        500: \"viii\",\n        1000: \"viii\",\n\
    \        5000: \"viii\",\n        10000: \"viii\",\n        50000: \"viii\",\n\
    \        100000: \"viii\",\n        500000: \"viii\",\n        1000000: \"viii\"\
    ,\n        5000000: \"viii\",\n        10000000: \"viii\",\n        50000000:\
    \ \"viii\",\n        100000000: \"viii\",\n        500000000: \"viii\",\n    \
    \    1000000000: \"viii\",\n        5000000000: \"viii\",\n        10000000000:\
    \ \"viii\",\n        50000000000: \"viii\",\n        100000000000: \"viii\",\n\
    \        500000000000: \"viii\",\n        1000000000000: \"viii\",\n        5000000000000:\
    \ \"viii\",\n        10000000000000: \"viii\",\n        50000000000000: \"viii\"\
    ,\n        100000000000000: \"viii\",\n        500000000000000: \"viii\",\n  \
    \      1000000000000000: \"viii\",\n        5000000000000000: \"viii\",\n    \
    \    1000000000000000000: \"viii\",\n    }\n    romanNumeralsInt := map[string]int{\n\
    \        \"i\": 1,\n        \"vi\": 5,\n        \"viii\": 10,\n        \"vii\"\
    : 50,\n        \"vi\": 100,\n        \"viiii\": 500,\n        \"vii\": 1000,\n\
    \        \"viiiii\": 5000,\n        \"viiii\": 10000,\n        \"viiiiii\": 50000,\n\
    \        \"viiiiiii\": 100000,\n        \"viiiiiiii\": 500000,\n        \"viiiiiiiii\"\
    : 1000000,\n        \"viiiiiiiiii\": 5000000,\n        \"viiiiiiiiiii\": 10000000,\n\
    \        \"viiiiiiiiiiii\": 50000000,\n        \"viiiiiiiiiiiii\": 100000000,\n\
    \        \"viiiiiiiiiiiiii\": 500000000,\n        \"viiiiiiiiiiiiiii\": 1000000000,\n\
    \        \"viiiiiiiiiiiiiiii\": 5000000000,\n        \"viiiiiiiiiiiiiiiii\": 10000000000,\n\
    \        \"viiiiiiiiiiiiiiiiii\": 50000000000,\n        \"viiiiiii", "    romans\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"l\"\
    ,\n        50: \"l\",\n        100: \"c\",\n        500: \"c\",\n        1000:\
    \ \"d\",\n    }\n    roman_number := \"\"\n    for roman_number == \"\" && number\
    \ > 0 {\n        roman_number = romans[number%100]\n        number /= 100\n  \
    \  }\n    return roman_number\n}\n", "    romans := []string{\n        \"I\",\
    \ \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"\
    XI\",\n        \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\"\
    , \"XIX\", \"XX\",\n        \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"\
    XXVI\", \"XXVII\", \"XXVIII\",\n        \"XXIX\", \"XXX\", \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\",\n        \"XXIX\", \"XL\", \"L\",\
    \ \"LI\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\",\n        \"LXVI\",\
    \ \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\",\n\
    \        \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"\
    LXXX\",\n        \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\"\
    , \"LXXIX\",\n        \"LXXX\", \"XC\", \"C\", \"CI\", \"CIX\", \"CX\", \"CXX\"\
    , \"CXXX\", \"CC\", \"CCI\",\n        \"CCIX\", \"CCX\", \"CCXX\", \"CCXXX\",\
    \ \"CD\", \"D\", \"DI\", \"DII\", \"DIIX\", \"DX\",\n        \"DXX\", \"DXXX\"\
    , \"DC\", \"DCI\", \"DCIX\", \"DCX\", \"DCXX\", \"DCXXX\", \"DD\",\n        \"\
    DDI\", \"DDII\", \"DDIIX\", \"DDIX\", \"DDIXX\", \"DDIXXX\", \"DE\", \"DEI\",\
    \ \"DEIX\",\n        \"DEX\", \"DEXX\", \"DEXXX\", \"DF\", \"DII\", \"DIII\",\
    \ \"DIIII\", \"DIIV\", \"DIV\",\n        \"DIVI\", \"DIVII\", \"DIVIII\", \"DIVIV\"\
    , \"DIVV\", \"DIVVI\", \"DIVVII\", \"DIVVIII\",\n        \"DIVIX\", \"DIX\", \"\
    DIXX\", \"DIXXX\", \"DJ\", \"DZ\", \"DZI\", \"DZII\", \"DZIII\",\n        \"DZIV\"\
    , \"DZV\", \"DZVI\", \"DZVII\", \"DZVIII\", \"DZIX\", \"DZX\", \"DZXX\",", " \
    \   romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n       \
    \ 10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"c\",\n \
    \       1000: \"d\",\n        5000: \"d\",\n    }\n    result := \"\"\n    for\
    \ num, _ := range romans {\n        if number >= num {\n            result +=\
    \ romans[num]\n            number -= num\n        }\n    }\n    return strings.ToLower(result)\n\
    }\n", '    roman_numerals := []string{"I", "II", "III", "IV", "V", "VI", "VII",
    "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX",
    "XX", "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX",
    "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII",
    "XXXIX", "XL", "L", "LI", "LII", "LIII", "LIIII", "LIIV", "LIV", "LIVI", "LIVII",
    "LIVIII", "LIVIV", "LIVV", "LIVVI", "LIVVII", "LIVVIII", "LIVVIV", "LIVVV", "LIVVVI",
    "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV",
    "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII",
    "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV",
    "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII",
    "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI",
    "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV",
    "LIVVVV', "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\"\
    ,\n        10: \"vii\",\n        50: \"viii\",\n        100: \"ix\",\n       \
    \ 500: \"ixi\",\n        1000: \"ixii\",\n    }\n    result := \"\"\n    for roman,\
    \ roman := range romans {\n        if number >= roman {\n            result +=\
    \ romans[roman]\n            number -= roman\n        }\n    }\n    return strings.ToLower(result)\n\
    }\n", "    romans := map[int]string{\n        1: \"I\",\n        5: \"V\",\n \
    \       10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"D\"\
    ,\n        1000: \"M\",\n    }\n    roman_number := \"\"\n    for num, _ := range\
    \ romans {\n        if number >= num {\n            roman_number = romans[num]\n\
    \            break\n        }\n    }\n    return strings.ToLower(roman_number)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viivi\",\n        1000: \"viiii\",\n    }\n    romanNumeralsInverse\
    \ := map[string]int{\n        \"i\": 1,\n        \"vi\": 5,\n        \"vii\":\
    \ 10,\n        \"viii\": 50,\n        \"viv\": 100,\n        \"viivi\": 500,\n\
    \        \"viiii\": 1000,\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    romanNumeralInverse := romanNumeralsInverse[romanNumeral]\n    romanNumeralString\
    \ := fmt.Sprintf(\"%c\", romanNumeralInverse)\n    return strings.ToLower(romanNumeralString)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"I\",\n        5: \"\
    V\",\n        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500:\
    \ \"D\",\n        1000: \"M\",\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    return strings.ToLower(romanNumeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    viiii\",\n        100: \"viiii\",\n        500: \"viiii\",\n        1000: \"viiii\"\
    ,\n        5000: \"viiii\",\n        10000: \"viiii\",\n        50000: \"viiii\"\
    ,\n        100000: \"viiii\",\n        500000: \"viiii\",\n        1000000: \"\
    viiii\",\n        5000000: \"viiii\",\n        10000000: \"viiii\",\n        50000000:\
    \ \"viiii\",\n        100000000: \"viiii\",\n        500000000: \"viiii\",\n \
    \       1000000000: \"viiii\",\n        5000000000: \"viiii\",\n        10000000000:\
    \ \"viiii\",\n        50000000000: \"viiii\",\n        100000000000: \"viiii\"\
    ,\n        500000000000: \"viiii\",\n        1000000000000: \"viiii\",\n     \
    \   5000000000000: \"viiii\",\n        10000000000000: \"viiii\",\n        50000000000000:\
    \ \"viiii\",\n        100000000000000: \"viiii\",\n        500000000000000: \"\
    viiii\",\n        1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\"\
    ,\n        1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\"\
    ,\n        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    romans := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\"\
    , \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\"\
    , \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n\
    \        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\"\
    , \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\"\
    , \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\"\
    , \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"\
    LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\"\
    , \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"\
    LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"\
    LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"\
    LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\"\
    , \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"\
    CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\"\
    , \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n        \"CXXII\", \"CXXIII\"\
    , \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\",\n      \
    \  \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\"\
    , \"CXXXVII\",\n        \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"\
    CCIII\", \"CCIV\", \"CCV\", \"CCVI\",\n        \"CCVII\", \"CCV", "    romans\
    \ := map[int]string{\n        1: \"I\",\n        5: \"V\",\n        10: \"X\"\
    ,\n        50: \"L\",\n        100: \"C\",\n        500: \"D\",\n        1000:\
    \ \"M\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    return roman\n}\n", "    romans := []string{\n  \
    \      \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\
    , \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\"\
    , \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n   \
    \     \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\"\
    , \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\"\
    , \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"\
    LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n     \
    \   \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"\
    LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"\
    LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n       \
    \ \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"\
    CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"\
    CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n        \"CXXII\", \"CXXIII\", \"CXXIV\"\
    , \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\",\n        \"CXXX\",\
    \ \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\"\
    ,\n        \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"\
    CCIV\", \"CCV\", \"CCVI\",\n        \"CCVII\", \"CCV", "    roman_num := \"\"\n\
    \    switch number {\n    case 1:\n        roman_num = \"x\"\n    case 2:\n  \
    \      roman_num = \"c\"\n    case 3:\n        roman_num = \"d\"\n    case 4:\n\
    \        roman_num = \"m\"\n    case 5:\n        roman_num = \"l\"\n    case 6:\n\
    \        roman_num = \"xl\"\n    case 7:\n        roman_num = \"xc\"\n    case\
    \ 8:\n        roman_num = \"xd\"\n    case 9:\n        roman_num = \"xm\"\n  \
    \  case 10:\n        roman_num = \"xl\"\n    case 11:\n        roman_num = \"\
    xc\"\n    case 12:\n        roman_num = \"xd\"\n    case 13:\n        roman_num\
    \ = \"xm\"\n    case 14:\n        roman_num = \"l\"\n    case 15:\n        roman_num\
    \ = \"c\"\n    case 16:\n        roman_num = \"d\"\n    case 17:\n        roman_num\
    \ = \"m\"\n    case 18:\n        roman_num = \"l\"\n    case 19:\n        roman_num\
    \ = \"xl\"\n    case 20:\n        roman_num = \"xc\"\n    case 21:\n        roman_num\
    \ = \"xd\"\n    case 22:\n        roman_num = \"xm\"\n    case 23:\n        roman_num\
    \ = \"l\"\n    case 24:\n        roman_num = \"c\"\n    case 25:\n        roman_num\
    \ = \"d\"\n    case 26:\n        roman_num = \"m\"\n    case 27:\n        roman_num\
    \ = \"l\"\n    case 28:\n        roman_num = \"xl\"\n    case 29:\n        roman_num\
    \ = \"xc\"\n    case 30:\n        roman_num = \"xd\"\n    case 31:\n        roman_num\
    \ = \"xm\"\n    case 32:\n        roman_num = \"l\"\n    case 33:\n        roman_num\
    \ = \"c\"\n    case 34:\n        roman_num = \"d\"\n    case 35:\n        roman_num\
    \ = \"m\"\n    case 36:\n        roman_num = \"l\"\n    case 37:\n        roman_num\
    \ = \"xl\"\n    case 38:\n        roman_num = \"xc\"\n    case 39:\n        roman_num\
    \ = \"xd\"\n    case 40:\n        roman_num = \"xm\"\n    case 41:\n        roman_num\
    \ = \"l\"\n    case 42:\n        roman_num = \"c\"\n    case 43:\n        roman_num\
    \ = \"d\"\n    case 44:\n        roman_num = \"m\"\n    case 45", "    roman_numerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viv\",\n     \
    \   1000: \"vi\",\n    }\n\n    roman_number := roman_numerals[number]\n    return\
    \ strings.ToLower(roman_number)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n   \
    \ roman_numeral := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiii\",\n\
    \        500: \"viiii\",\n        1000: \"viiii\",\n        5000: \"viiii\",\n\
    \        10000: \"viiii\",\n        50000: \"viiii\",\n        100000: \"viiii\"\
    ,\n        500000: \"viiii\",\n        1000000: \"viiii\",\n        5000000: \"\
    viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\",\n       \
    \ 100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000: \"\
    viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n  \
    \      50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\",\n\
    \        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    roman_num := \"\"\n    switch number {\n    case 1:\n        roman_num = \"\
    x\"\n    case 5:\n        roman_num = \"v\"\n    case 10:\n        roman_num =\
    \ \"i\"\n    case 20:\n        roman_num = \"x\"\n    case 50:\n        roman_num\
    \ = \"l\"\n    case 100:\n        roman_num = \"c\"\n    case 200:\n        roman_num\
    \ = \"d\"\n    case 500:\n        roman_num = \"l\"\n    case 1000:\n        roman_num\
    \ = \"c\"\n    case 2000:\n        roman_num = \"d\"\n    case 5000:\n       \
    \ roman_num = \"l\"\n    case 10000:\n        roman_num = \"c\"\n    case 20000:\n\
    \        roman_num = \"d\"\n    case 50000:\n        roman_num = \"l\"\n    case\
    \ 100000:\n        roman_num = \"c\"\n    case 200000:\n        roman_num = \"\
    d\"\n    case 500000:\n        roman_num = \"l\"\n    case 1000000:\n        roman_num\
    \ = \"c\"\n    case 2000000:\n        roman_num = \"d\"\n    case 5000000:\n \
    \       roman_num = \"l\"\n    case 10000000:\n        roman_num = \"c\"\n   \
    \ case 20000000:\n        roman_num = \"d\"\n    case 50000000:\n        roman_num\
    \ = \"l\"\n    case 100000000:\n        roman_num = \"c\"\n    case 200000000:\n\
    \        roman_num = \"d\"\n    case 500000000:\n        roman_num = \"l\"\n \
    \   case 1000000000:\n        roman_num = \"c\"\n    case 2000000000:\n      \
    \  roman_num = \"d\"\n    case 5000000000:\n        roman_num = \"l\"\n    case\
    \ 10000000000:\n        roman_num = \"c\"\n    case 20000000000:\n        roman_num\
    \ = \"d\"\n    case 50000000000:\n        roman_num = \"l\"\n    case 100000000000:\n\
    \        roman_num = \"c\"\n    case 200000000000:\n        roman_num = \"d\"\n\
    \    case 500000000000:\n        roman_num = \"l\"\n    case 1000000000000:\n\
    \        roman_num = \"c\"\n    case 2000000000000:\n        roman_num = \"d\"\
    \n    case 5000000000000:\n        roman_num = \"l\"\n    case 10000000000000:\n\
    \        roman_num = \"c\"\n    case 20000000000000:\n        roman_num = \"d\"\
    \n    case 50000000000000:\n        roman_num", "    if number < 1 || number >\
    \ 1000 {\n        fmt.Println(\"Invalid input\")\n        return \"\"\n    }\n\
    \n    roman_numerals := []string{\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\"\
    , \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\"\
    , \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\"\
    , \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\"\
    , \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\"\
    , \"XXXIX\", \"XL\", \"L\", \"LI\", \"LII\", \"LIII\", \"LIIII\", \"LIIV\", \"\
    LIV\", \"LIVI\", \"LIVII\", \"LIVIII\", \"LIIX\", \"LX\", \"LXI\", \"LXII\", \"\
    LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\"\
    , \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    , \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\"\
    , \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\"\
    , \"CI\", \"CII\", \"CIII\", \"CIIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"\
    CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"\
    CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\"\
    , \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\"\
    , \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\"\
    , \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CIV\", \"\
    CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viiv\",\n        1000: \"viv\",\n   \
    \     5000: \"viiv\",\n        10000: \"viv\",\n        50000: \"viiv\",\n   \
    \     100000: \"viv\",\n        500000: \"viiv\",\n        1000000: \"viv\",\n\
    \        5000000: \"viiv\",\n        10000000: \"viv\",\n        50000000: \"\
    viiv\",\n        100000000: \"viv\",\n        500000000: \"viiv\",\n        1000000000:\
    \ \"viv\",\n        5000000000: \"viiv\",\n        10000000000: \"viv\",\n   \
    \     50000000000: \"viiv\",\n        100000000000: \"viv\",\n        500000000000:\
    \ \"viiv\",\n        1000000000000: \"viv\",\n        5000000000000: \"viiv\"\
    ,\n        10000000000000: \"viv\",\n        50000000000000: \"viiv\",\n     \
    \   100000000000000: \"viv\",\n        500000000000000: \"viiv\",\n        1000000000000000:\
    \ \"viv\",\n        5000000000000000: \"viiv\",\n        1000000000000000000:\
    \ \"viv\",\n    }\n    romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", "    romans := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\"\
    , \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\"\
    , \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"\
    XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n\
    \        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\",\n        \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\",\n        \"LXXVI\", \"LXXVII\", \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\",\n        \"LXXXIV\"\
    , \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\"\
    ,\n        \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\",\n        \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\",\n        \"CIX\", \"CX\", \"CXI\"\
    , \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\",\n        \"CXVIII\"\
    , \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\",\n\
    \        \"CXVII\", \"CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\"\
    , \"CXIV\", \"CXV\",\n        \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CX\"\
    , \"CXI\", \"CXII\", \"CXIII\", \"CXIV", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    vii\",\n        100: \"vi\",\n        500: \"viii\",\n        1000: \"viii\",\n\
    \        5000: \"viii\",\n        10000: \"viii\",\n        50000: \"viii\",\n\
    \        100000: \"viii\",\n        500000: \"viii\",\n        1000000: \"viii\"\
    ,\n        5000000: \"viii\",\n        10000000: \"viii\",\n        50000000:\
    \ \"viii\",\n        100000000: \"viii\",\n        500000000: \"viii\",\n    \
    \    1000000000: \"viii\",\n        5000000000: \"viii\",\n        10000000000:\
    \ \"viii\",\n        50000000000: \"viii\",\n        100000000000: \"viii\",\n\
    \        500000000000: \"viii\",\n        1000000000000: \"viii\",\n        5000000000000:\
    \ \"viii\",\n        10000000000000: \"viii\",\n        50000000000000: \"viii\"\
    ,\n        100000000000000: \"viii\",\n        500000000000000: \"viii\",\n  \
    \      1000000000000000: \"viii\",\n        5000000000000000: \"viii\",\n    \
    \    1000000000000000000: \"viii\",\n        50000000000000000: \"viii\",\n  \
    \      10000000000000000000: \"viii\",\n        5000000000000000000: \"viii\"\
    ,\n        100000000000000000000: \"viii\",\n        50000000000000000000: \"\
    viii\",\n        1000000000000000000000: \"viii\",\n        500000000000000000000:\
    \ \"viii\",\n        10000000000000000000000: \"viii\",\n        5000000000000000000000:\
    \ \"viii\",\n        100000000000000000000000: \"viii\",\n        50000000000000000000000:\
    \ \"viii\",\n        1000000000000000000000000: \"viii\",\n        500000000000000000000000:\
    \ \"viii\",\n        10000000000000000000000000: \"viii\",\n        5000000000000000000000000:\
    \ \"viii\",\n        100000000000000000000000000: \"viii\",\n        50000000000000000000000000:\
    \ \"viii\",\n        1000000000000000000000000000: \"viii\",\n        500000000000000000000000000:\
    \ \"viii\",\n        10000000000000000000000000000: \"viii\",\n        5000000000000000000000000000:\
    \ \"viii\",\n        100000000000000000000000000000: \"viii\",\n        50000000000000000000000000000:\
    \ \"viii\",\n        1000000000000000000000000000000: \"viii\",\n        500000000000000000000000000000:\
    \ \"viii\",\n        10000000000000000000000000000000: \"", "    romanNumerals\
    \ := map[int]string{\n        1: \"I\",\n        5: \"V\",\n        10: \"X\"\
    ,\n        50: \"L\",\n        100: \"C\",\n        500: \"D\",\n        1000:\
    \ \"M\",\n    }\n    romanNumeral := \"\"\n    for romanNumeral, number := range\
    \ romanNumerals {\n        if number <= number {\n            break\n        }\n\
    \    }\n    if romanNumeral == \"\" {\n        fmt.Println(\"Invalid input\")\n\
    \    }\n    return romanNumerals[number]\n}\n", "    romans := []string{\n   \
    \     \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\
    ,\n        \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\"\
    , \"XVIII\", \"XIX\",\n        \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\",\n        \"XXX\", \"XXXI\"\
    , \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\"\
    , \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\"\
    , \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"LIX\",\n        \"LX\", \"LXI\", \"\
    LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\"\
    ,\n        \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\"\
    , \"LXXVII\", \"LXXVIII\", \"LXXIX\",\n        \"LXXX\", \"LXXXI\", \"LXXXII\"\
    , \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"\
    LXXXIX\",\n        \"XC\", \"C\", \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\"\
    , \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\",\n        \"XC\", \"C\", \"CI\"\
    , \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"\
    CIX\",\n        \"XXC\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\"\
    , \"CCVI\", \"CCVII\", \"CCVIII\", \"CCIX\",\n        \"XXXC\", \"CXX\", \"CXXI\"\
    , \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\"\
    , \"CXXIX\",\n        \"XLC\", \"LCC\", \"LCCI\", \"LCCII\", \"LCCIII\", \"LCCIV\"\
    , \"LCCV\", \"LCCVI\", \"LCCV", "    roman_numerals := map[int]string{\n     \
    \   1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viiv\",\n        1000: \"viv\",\n   \
    \     5000: \"viiv\",\n        10000: \"viiv\",\n        50000: \"viiv\",\n  \
    \      100000: \"viiv\",\n        500000: \"viiv\",\n        1000000: \"viiv\"\
    ,\n        5000000: \"viiv\",\n        10000000: \"viiv\",\n        50000000:\
    \ \"viiv\",\n        100000000: \"viiv\",\n        500000000: \"viiv\",\n    \
    \    1000000000: \"viiv\",\n        5000000000: \"viiv\",\n        10000000000:\
    \ \"viiv\",\n        50000000000: \"viiv\",\n        100000000000: \"viiv\",\n\
    \        500000000000: \"viiv\",\n        1000000000000: \"viiv\",\n        5000000000000:\
    \ \"viiv\",\n        10000000000000: \"viiv\",\n        50000000000000: \"viiv\"\
    ,\n        100000000000000: \"viiv\",\n        500000000000000: \"viiv\",\n  \
    \      1000000000000000: \"viiv\",\n        5000000000000000: \"viiv\",\n    \
    \    1000000000000000000: \"viiv\",\n        50000000000000000: \"viiv\",\n  \
    \      10000000000000000000: \"viiv\",\n        5000000000000000000: \"viiv\"\
    ,\n        100000000000000000000: \"viiv\",\n        50000000000000000000: \"\
    viiv\",\n        1000000000000000000000: \"viiv\",\n        500000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000: \"viiv\",\n        5000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000: \"viiv\",\n        50000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000: \"viiv\",\n        500000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000: \"viiv\",\n        5000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000: \"viiv\",\n        50000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000: \"viiv\",\n        500000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000: \"viiv\",\n        5000000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000000: \"viiv\",\n        50000000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000000: \"viiv\",\n        500000000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000000", "    roman_number := \"\
    \"\n    switch number {\n    case 1:\n        roman_number = \"x\"\n    case 2:\n\
    \        roman_number = \"ix\"\n    case 3:\n        roman_number = \"lb\"\n \
    \   case 4:\n        roman_number = \"c\"\n    case 5:\n        roman_number =\
    \ \"d\"\n    case 6:\n        roman_number = \"mi\"\n    case 7:\n        roman_number\
    \ = \"i\"\n    case 8:\n        roman_number = \"vi\"\n    case 9:\n        roman_number\
    \ = \"vix\"\n    case 10:\n        roman_number = \"ix\"\n    case 11:\n     \
    \   roman_number = \"lbi\"\n    case 12:\n        roman_number = \"c\"\n    case\
    \ 13:\n        roman_number = \"d\"\n    case 14:\n        roman_number = \"mi\"\
    \n    case 15:\n        roman_number = \"i\"\n    case 16:\n        roman_number\
    \ = \"vi\"\n    case 17:\n        roman_number = \"vix\"\n    case 18:\n     \
    \   roman_number = \"ix\"\n    case 19:\n        roman_number = \"lbi\"\n    case\
    \ 20:\n        roman_number = \"c\"\n    case 21:\n        roman_number = \"d\"\
    \n    case 22:\n        roman_number = \"mi\"\n    case 23:\n        roman_number\
    \ = \"i\"\n    case 24:\n        roman_number = \"vi\"\n    case 25:\n       \
    \ roman_number = \"vix\"\n    case 26:\n        roman_number = \"ix\"\n    case\
    \ 27:\n        roman_number = \"lbi\"\n    case 28:\n        roman_number = \"\
    c\"\n    case 29:\n        roman_number = \"d\"\n    case 30:\n        roman_number\
    \ = \"mi\"\n    case 31:\n        roman_number = \"i\"\n    case 32:\n       \
    \ roman_number = \"vi\"\n    case 33:\n        roman_number = \"vix\"\n    case\
    \ 34:\n        roman_number = \"ix\"\n    case 35:\n        roman_number = \"\
    lbi\"\n    case 36:\n        roman_number = \"c\"\n    case 37:\n        roman_number\
    \ = \"d\"\n    case 38:\n        roman_number = \"mi\"\n    case 39:\n       \
    \ roman_number = \"i\"\n    case 40:\n        roman_number = \"vi\"\n    case\
    \ 41:\n        roman_number = \"vix\"\n    case 42:\n        roman_number = \"\
    ix\"\n    case 43:\n        roman_number = \"lbi\"\n    case 44:\n", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viiv\",\n    \
    \    1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"viv\",\n      \
    \  50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"viiv\",\n   \
    \     1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000: \"viv\"\
    ,\n        50000000: \"viiv\",\n        100000000: \"viv\",\n        500000000:\
    \ \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\",\n   \
    \     10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n        50000000000000000: \"viiv\",\n\
    \        10000000000000000000: \"viv\",\n        5000000000000000000: \"viiv\"\
    ,\n        100000000000000000000: \"viv\",\n        50000000000000000000: \"viiv\"\
    ,\n        1000000000000000000000: \"viv\",\n        500000000000000000000: \"\
    viiv\",\n        10000000000000000000000: \"viv\",\n        5000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000: \"viv\",\n        50000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000: \"viv\",\n        500000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000: \"viv\",\n        5000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000: \"viv\",\n        50000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000: \"viv\",\n        500000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000: \"viv\",\n        5000000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000000: \"viv\",\n        50000000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000000: \"viv\",\n        500000000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000000", "    roman_numerals :=\
    \ []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"\
    VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"\
    XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\"\
    , \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\"\
    ,\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\",\
    \ \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"\
    LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"LIX\", \"LX\"\
    , \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\"\
    ,\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\"\
    , \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\"\
    , \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n       \
    \ \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"\
    CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"\
    CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n        \"CXXII\", \"CXXIII\", \"CXXIV\"\
    , \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\",\n        \"CXXX\",\
    \ \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\"\
    ,\n        \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"\
    CCIV\", \"CV\", \"CVI\",\n        \"CVII\", \"CVIII", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"ix\",\n        500: \"ixi\",\n        1000: \"ixii\",\n    }\n\
    \    romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"I\",\n        5: \"\
    V\",\n        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500:\
    \ \"D\",\n        1000: \"M\",\n    }\n    romanNumeral := \"\"\n    for romanNumeral,\
    \ number := range romanNumerals {\n        if number >= number {\n           \
    \ break\n        }\n    }\n    return fmt.Sprintf(\"%s%v\", romanNumeral, number)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500:\
    \ \"c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    romanNumeral\
    \ := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n}\n", " \
    \   roman_num := \"\"\n    switch number {\n    case 1:\n        roman_num = \"\
    x\"\n    case 5:\n        roman_num = \"v\"\n    case 10:\n        roman_num =\
    \ \"i\"\n    case 20:\n        roman_num = \"x\"\n    case 50:\n        roman_num\
    \ = \"l\"\n    case 100:\n        roman_num = \"c\"\n    case 200:\n        roman_num\
    \ = \"d\"\n    case 400:\n        roman_num = \"l\"\n    case 1000:\n        roman_num\
    \ = \"m\"\n    case 2000:\n        roman_num = \"c\"\n    case 4000:\n       \
    \ roman_num = \"l\"\n    case 10000:\n        roman_num = \"d\"\n    case 20000:\n\
    \        roman_num = \"c\"\n    case 40000:\n        roman_num = \"l\"\n    case\
    \ 100000:\n        roman_num = \"m\"\n    case 200000:\n        roman_num = \"\
    c\"\n    case 400000:\n        roman_num = \"l\"\n    case 1000000:\n        roman_num\
    \ = \"m\"\n    case 2000000:\n        roman_num = \"c\"\n    case 4000000:\n \
    \       roman_num = \"l\"\n    case 10000000:\n        roman_num = \"m\"\n   \
    \ case 20000000:\n        roman_num = \"c\"\n    case 40000000:\n        roman_num\
    \ = \"l\"\n    case 100000000:\n        roman_num = \"m\"\n    case 200000000:\n\
    \        roman_num = \"c\"\n    case 400000000:\n        roman_num = \"l\"\n \
    \   case 1000000000:\n        roman_num = \"m\"\n    case 2000000000:\n      \
    \  roman_num = \"c\"\n    case 4000000000:\n        roman_num = \"l\"\n    case\
    \ 10000000000:\n        roman_num = \"m\"\n    case 20000000000:\n        roman_num\
    \ = \"c\"\n    case 40000000000:\n        roman_num = \"l\"\n    case 100000000000:\n\
    \        roman_num = \"m\"\n    case 200000000000:\n        roman_num = \"c\"\n\
    \    case 400000000000:\n        roman_num = \"l\"\n    case 1000000000000:\n\
    \        roman_num = \"m\"\n    case 2000000000000:\n        roman_num = \"c\"\
    \n    case 4000000000000:\n        roman_num = \"l\"\n    case 10000000000000:\n\
    \        roman_num = \"m\"\n    case 20000000000000:\n        roman_num = \"c\"\
    \n    case 40000000000000:\n        roman_num", "    roman_numerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    roman_numeral_string\
    \ := \"\"\n    for roman_numeral, numeral_string := range roman_numerals {\n \
    \       if number >= roman_numeral {\n            roman_numeral_string += numeral_string\n\
    \            number -= roman_numeral\n        }\n    }\n    return roman_numeral_string\n\
    }\n", "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    roman, ok := romans[number]\n\
    \    if !ok {\n        fmt.Println(\"int_to_mini_roman: number too large\")\n\
    \    }\n    return roman\n}\n", "    romans := map[int]string{\n        1: \"\
    i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n        100:\
    \ \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000: \"d\",\n  \
    \  }\n\n    roman, ok := romans[number]\n    if !ok {\n        fmt.Printf(\"ERROR:\
    \ number %d is not in valid range\\n\", number)\n    }\n    return roman\n}\n",
  "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n \
    \       10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"c\"\
    ,\n        1000: \"d\",\n        5000: \"d\",\n        10000: \"m\",\n       \
    \ 50000: \"m\",\n        100000: \"b\",\n        500000: \"b\",\n        1000000:\
    \ \"y\",\n        5000000: \"y\",\n        10000000: \"z\",\n        50000000:\
    \ \"z\",\n    }\n    romanNumeralsLength := len(romanNumerals)\n    romanNumeral\
    \ := \"\"\n    romanNumeralLength := 0\n    for number > 0 {\n        romanNumeralLength++\n\
    \        number -= romanNumerals[number]\n    }\n    for romanNumeralLength >\
    \ 0 {\n        romanNumeral += romanNumerals[romanNumeralLength]\n        romanNumeralLength--\n\
    \    }\n    return strings.ToLower(romanNumeral)\n}\n", "    romans := []string{\n\
    \        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"\
    IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"\
    XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"\
    XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXI\",\n\
    \        \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\",\n        \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\"\
    , \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\",\n        \"XXX\", \"XXI\", \"XXII\"\
    , \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\",\n        \"XXIX\"\
    , \"XXX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    ,\n        \"XXVIII\", \"XXIX\", \"XXX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\",\n        \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXI\"\
    , \"XXII\", \"XXIII\", \"XXIV\", \"XXV\",\n        \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\",\n        \"XXV\"\
    , \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXI\", \"XXII\", \"XXIII\"\
    ,\n        \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\"\
    , \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXI\",\n        \"XXII\", \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\",\n        \"XXI\"\
    , \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"\
    XXIX\",\n        \"XXX\", \"XXI\", \"XXII\", \"", "    romans := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000:\
    \ \"d\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    return roman\n}\n", "    romans := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000:\
    \ \"d\",\n    }\n    result := \"\"\n    for num, res := range romans {\n    \
    \    if num >= number {\n            result = res + result\n        }\n    }\n\
    \    return result\n}\n", "    roman_numerals := map[int]string{\n        1: \"\
    i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"vii\",\n      \
    \  100: \"vi\",\n        500: \"viii\",\n        1000: \"viii\",\n        5000:\
    \ \"viii\",\n        10000: \"viii\",\n        50000: \"viii\",\n        100000:\
    \ \"viii\",\n        500000: \"viii\",\n        1000000: \"viii\",\n        5000000:\
    \ \"viii\",\n        10000000: \"viii\",\n        50000000: \"viii\",\n      \
    \  100000000: \"viii\",\n        500000000: \"viii\",\n        1000000000: \"\
    viii\",\n        5000000000: \"viii\",\n        10000000000: \"viii\",\n     \
    \   50000000000: \"viii\",\n        100000000000: \"viii\",\n        500000000000:\
    \ \"viii\",\n        1000000000000: \"viii\",\n        5000000000000: \"viii\"\
    ,\n        10000000000000: \"viii\",\n        50000000000000: \"viii\",\n    \
    \    100000000000000: \"viii\",\n        500000000000000: \"viii\",\n        1000000000000000:\
    \ \"viii\",\n        5000000000000000: \"viii\",\n        1000000000000000000:\
    \ \"viii\",\n        50000000000000000: \"viii\",\n        10000000000000000000:\
    \ \"viii\",\n        5000000000000000000: \"viii\",\n        100000000000000000000:\
    \ \"viii\",\n        50000000000000000000: \"viii\",\n        1000000000000000000000:\
    \ \"viii\",\n        500000000000000000000: \"viii\",\n        10000000000000000000000:\
    \ \"viii\",\n        5000000000000000000000: \"viii\",\n        100000000000000000000000:\
    \ \"viii\",\n        50000000000000000000000: \"viii\",\n        1000000000000000000000000:\
    \ \"viii\",\n        500000000000000000000000: \"viii\",\n        10000000000000000000000000:\
    \ \"viii\",\n        5000000000000000000000000: \"viii\",\n        100000000000000000000000000:\
    \ \"viii\",\n        50000000000000000000000000: \"viii\",\n        1000000000000000000000000000:\
    \ \"viii\",\n        500000000000000000000000000: \"viii\",\n        10000000000000000000000000000:\
    \ \"viii\",\n        5000000000000000000000000000: \"viii\",\n        100000000000000000000000000000:\
    \ \"viii\",\n        50000000000000000000000000000: \"viii\",\n        1000000000000000000000000000000:\
    \ \"viii\",\n        500000000000000000000000000000: \"viii\",\n        10000000000000000000000000000000:\
    \ \"", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiiii\"\
    ,\n        500: \"viiiiix\",\n        1000: \"viiiiiix\",\n        5000: \"viiiiiix\"\
    ,\n        10000: \"viiiiiix\",\n        50000: \"viiiiiix\",\n        100000:\
    \ \"viiiiiix\",\n        500000: \"viiiiiix\",\n        1000000: \"viiiiiix\"\
    ,\n        5000000: \"viiiiiix\",\n        10000000: \"viiiiiix\",\n        50000000:\
    \ \"viiiiiix\",\n        100000000: \"viiiiiix\",\n        500000000: \"viiiiiix\"\
    ,\n        1000000000: \"viiiiiix\",\n        5000000000: \"viiiiiix\",\n    \
    \    10000000000: \"viiiiiix\",\n        50000000000: \"viiiiiix\",\n        100000000000:\
    \ \"viiiiiix\",\n        500000000000: \"viiiiiix\",\n        1000000000000: \"\
    viiiiiix\",\n        5000000000000: \"viiiiiix\",\n        10000000000000: \"\
    viiiiiix\",\n        50000000000000: \"viiiiiix\",\n        100000000000000: \"\
    viiiiiix\",\n        500000000000000: \"viiiiiix\",\n        1000000000000000:\
    \ \"viiiiiix\",\n        5000000000000000: \"viiiiiix\",\n        10000000000000000:\
    \ \"viiiiiix\",\n        5000000000000000: \"viiiiiix\",\n        100000000000000000:\
    \ \"viiiiiix\",\n        50000000000000000: \"viiiiiix\",\n        1000000000000000000:\
    \ \"viiiiiix\",\n        500000000000000000: \"viiiiiix\",\n        10000000000000000000:\
    \ \"viiiiiix\",\n        5000000000000000000: \"viiiiiix\",\n        100000000000000000000:\
    \ \"viiiiiix\",\n        50000000000000000000: \"viiiiiix\",\n        1000000000000000000000:\
    \ \"viiiiiix\",\n        500000000000000000000: \"viiiiiix\",\n        10000000000000000000000:\
    \ \"viiiiiix\",\n        5000000000000000000000: \"viiiiiix\",\n        100000000000000000000000:\
    \ \"viiiiiix\",\n        50000000000000000000000: \"viiiiiix\",\n        1000000000000000000000000:\
    \ \"viiiiiix\",\n        500000000000000000000000: \"", "    romanNumerals :=\
    \ map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viiv\",\n    \
    \    1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"viiv\",\n     \
    \   50000: \"viiv\",\n        100000: \"viiv\",\n        500000: \"viiv\",\n \
    \       1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000: \"viiv\"\
    ,\n        50000000: \"viiv\",\n        100000000: \"viv\",\n        500000000:\
    \ \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\",\n   \
    \     10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n    }\n\n    romanNumeral := romanNumerals[number]\n\
    \    if romanNumeral == \"\" {\n        fmt.Printf(\"ERROR: number too large,\
    \ must be <= 1000\\n\")\n    }\n    return romanNumeral\n}\n", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"ix\",\n        500: \"ixi\",\n      \
    \  1000: \"ixii\",\n    }\n    romanNumeral := romanNumerals[number]\n    return\
    \ strings.ToLower(romanNumeral)\n}\n", "    roman_number := \"\"\n    switch number\
    \ {\n    case 1:\n        roman_number = \"I\"\n    case 2:\n        roman_number\
    \ = \"II\"\n    case 3:\n        roman_number = \"III\"\n    case 4:\n       \
    \ roman_number = \"IV\"\n    case 5:\n        roman_number = \"V\"\n    case 6:\n\
    \        roman_number = \"VI\"\n    case 7:\n        roman_number = \"VII\"\n\
    \    case 8:\n        roman_number = \"VIII\"\n    case 9:\n        roman_number\
    \ = \"IX\"\n    case 10:\n        roman_number = \"X\"\n    case 11:\n       \
    \ roman_number = \"XI\"\n    case 12:\n        roman_number = \"XII\"\n    case\
    \ 13:\n        roman_number = \"XIII\"\n    case 14:\n        roman_number = \"\
    XIV\"\n    case 15:\n        roman_number = \"XV\"\n    case 16:\n        roman_number\
    \ = \"XVI\"\n    case 17:\n        roman_number = \"XVII\"\n    case 18:\n   \
    \     roman_number = \"XVIII\"\n    case 19:\n        roman_number = \"XIX\"\n\
    \    case 20:\n        roman_number = \"XX\"\n    case 21:\n        roman_number\
    \ = \"XXI\"\n    case 22:\n        roman_number = \"XXII\"\n    case 23:\n   \
    \     roman_number = \"XXIII\"\n    case 24:\n        roman_number = \"XXIV\"\n\
    \    case 25:\n        roman_number = \"XXV\"\n    case 26:\n        roman_number\
    \ = \"XXVI\"\n    case 27:\n        roman_number = \"XXVII\"\n    case 28:\n \
    \       roman_number = \"XXVIII\"\n    case 29:\n        roman_number = \"XXIX\"\
    \n    case 30:\n        roman_number = \"XXX\"\n    case 31:\n        roman_number\
    \ = \"XXXI\"\n    case 32:\n        roman_number = \"XXXII\"\n    case 33:\n \
    \       roman_number = \"XXXIII\"\n    case 34:\n        roman_number = \"XXXIV\"\
    \n    case 35:\n        roman_number = \"XXXV\"\n    case 36:\n        roman_number\
    \ = \"XXXVI\"\n    case 37:\n        roman_number = \"XXXVII\"\n    case 38:\n\
    \        roman_number = \"XXXVIII\"\n    case 39:\n        roman_number = \"XXXIX\"\
    \n    case 40:\n        roman_number = \"XL\"", "    romans := []string{\n   \
    \     \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\
    , \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\"\
    , \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n   \
    \     \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\"\
    , \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\"\
    , \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"\
    LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n     \
    \   \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"\
    LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"\
    LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n       \
    \ \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"\
    CXI\", \"CXII\",\n        \"CXIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\"\
    , \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CIV\", \"CV\", \"\
    CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\"\
    , \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"\
    CXII\",\n        \"CXIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"\
    CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CIV\", \"CV\", \"CVI\"\
    , \"CVII\", \"CVIII\", \"CIX\", \"", "    roman_numerals := []string{\n      \
    \  \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"\
    X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\"\
    , \"XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\",\
    \ \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\"\
    , \"LI\", \"LII\", \"LIII\", \"LIIII\", \"LIIV\", \"LV\", \"LVI\", \"LVII\", \"\
    LVIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\"\
    , \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"\
    DCC\", \"DCCC\", \"CM\", \"M\", \"MM\", \"MMM\", \"MMMM\", \"MMMMM\", \"MMMMMM\"\
    , \"MMMMMMM\", \"MMMMMMMM\", \"MMMMMMMMM\", \"MMMMMMMMMM\", \"MMMMMMMMMMM\", \"\
    MMMMMMMMMMMM\", \"MMMMMMMMMMMMM\", \"MMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMM\", \"\
    MMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\", \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\"\
    , \"MMMMMMMM", "    roman_numerals := map[int]string{\n        1: \"i\",\n   \
    \     5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n\
    \        500: \"c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    roman_numeral\
    \ := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n}\n",
  "    roman_numerals := map[int]string{\n        1: \"I\",\n        5: \"V\",\n \
    \       10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"D\"\
    ,\n        1000: \"M\",\n    }\n\n    roman_number := roman_numerals[number]\n\
    \    return strings.ToLower(roman_number)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n    }\n\
    \    roman_numeral := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiii\",\n\
    \        500: \"viiii\",\n        1000: \"viiii\",\n        5000: \"viiii\",\n\
    \        10000: \"viiii\",\n        50000: \"viiii\",\n        100000: \"viiii\"\
    ,\n        500000: \"viiii\",\n        1000000: \"viiii\",\n        5000000: \"\
    viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\",\n       \
    \ 100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000: \"\
    viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n  \
    \      50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\",\n\
    \        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 2:\n        roman_number = \"ix\"\n    case 3:\n        roman_number\
    \ = \"lb\"\n    case 4:\n        roman_number = \"c\"\n    case 5:\n        roman_number\
    \ = \"d\"\n    case 6:\n        roman_number = \"mi\"\n    case 7:\n        roman_number\
    \ = \"f\"\n    case 8:\n        roman_number = \"v\"\n    case 9:\n        roman_number\
    \ = \"x\"\n    case 10:\n        roman_number = \"c\"\n    case 11:\n        roman_number\
    \ = \"d\"\n    case 12:\n        roman_number = \"mi\"\n    case 13:\n       \
    \ roman_number = \"f\"\n    case 14:\n        roman_number = \"v\"\n    case 15:\n\
    \        roman_number = \"x\"\n    case 16:\n        roman_number = \"c\"\n  \
    \  case 17:\n        roman_number = \"d\"\n    case 18:\n        roman_number\
    \ = \"mi\"\n    case 19:\n        roman_number = \"f\"\n    case 20:\n       \
    \ roman_number = \"v\"\n    case 21:\n        roman_number = \"x\"\n    case 22:\n\
    \        roman_number = \"c\"\n    case 23:\n        roman_number = \"d\"\n  \
    \  case 24:\n        roman_number = \"mi\"\n    case 25:\n        roman_number\
    \ = \"f\"\n    case 26:\n        roman_number = \"v\"\n    case 27:\n        roman_number\
    \ = \"x\"\n    case 28:\n        roman_number = \"c\"\n    case 29:\n        roman_number\
    \ = \"d\"\n    case 30:\n        roman_number = \"mi\"\n    case 31:\n       \
    \ roman_number = \"f\"\n    case 32:\n        roman_number = \"v\"\n    case 33:\n\
    \        roman_number = \"x\"\n    case 34:\n        roman_number = \"c\"\n  \
    \  case 35:\n        roman_number = \"d\"\n    case 36:\n        roman_number\
    \ = \"mi\"\n    case 37:\n        roman_number = \"f\"\n    case 38:\n       \
    \ roman_number = \"v\"\n    case 39:\n        roman_number = \"x\"\n    case 40:\n\
    \        roman_number = \"c\"\n    case 41:\n        roman_number = \"d\"\n  \
    \  case 42:\n        roman_number = \"mi\"\n    case 43:\n        roman_number\
    \ = \"f\"\n    case 44:\n        roman_number = \"v\"\n    case 45:\n        roman_number\
    \ = \"x\"", "    roman_numerals := map[int]string{\n        1: \"i\",\n      \
    \  5: \"vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\"\
    ,\n        500: \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n \
    \       10000: \"viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n\
    \        500000: \"viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\"\
    ,\n        10000000: \"viv\",\n        50000000: \"viiv\",\n        100000000:\
    \ \"viv\",\n        500000000: \"viiv\",\n        1000000000: \"viv\",\n     \
    \   5000000000: \"viiv\",\n        10000000000: \"viv\",\n        50000000000:\
    \ \"viiv\",\n        100000000000: \"viv\",\n        500000000000: \"viiv\",\n\
    \        1000000000000: \"viv\",\n        5000000000000: \"viiv\",\n        10000000000000:\
    \ \"viv\",\n        50000000000000: \"viiv\",\n        100000000000000: \"viv\"\
    ,\n        500000000000000: \"viiv\",\n        1000000000000000: \"viv\",\n  \
    \      5000000000000000: \"viiv\",\n        1000000000000000000: \"viv\",\n  \
    \  }\n    roman_numeral := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n\
    }\n", "    romanNumerals := map[int]string{\n        1: \"I\",\n        5: \"\
    V\",\n        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500:\
    \ \"D\",\n        1000: \"M\",\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    return strings.ToLower(romanNumeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    romanNumeral\
    \ := romanNumerals[number]\n    romanNumeral += string(number % 10)\n    return\
    \ strings.ToLower(romanNumeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vi\",\n        10000: \"vi\",\n        50000: \"vi\",\n        100000:\
    \ \"vi\",\n        500000: \"vi\",\n        1000000: \"vi\",\n        5000000:\
    \ \"vi\",\n        10000000: \"vi\",\n        50000000: \"vi\",\n        100000000:\
    \ \"vi\",\n        500000000: \"vi\",\n        1000000000: \"vi\",\n        5000000000:\
    \ \"vi\",\n        10000000000: \"vi\",\n        50000000000: \"vi\",\n      \
    \  100000000000: \"vi\",\n        500000000000: \"vi\",\n        1000000000000:\
    \ \"vi\",\n        5000000000000: \"vi\",\n        10000000000000: \"vi\",\n \
    \       50000000000000: \"vi\",\n        100000000000000: \"vi\",\n        500000000000000:\
    \ \"vi\",\n        1000000000000000: \"vi\",\n        5000000000000000: \"vi\"\
    ,\n        1000000000000000000: \"vi\",\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    return strings.ToLower(romanNumeral)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    vii\",\n        100: \"vi\",\n        500: \"viii\",\n        1000: \"viii\",\n\
    \        5000: \"viii\",\n        10000: \"viii\",\n        50000: \"viii\",\n\
    \        100000: \"viii\",\n        500000: \"viii\",\n        1000000: \"viii\"\
    ,\n        5000000: \"viii\",\n        10000000: \"viii\",\n        50000000:\
    \ \"viii\",\n        100000000: \"viii\",\n        500000000: \"viii\",\n    \
    \    1000000000: \"viii\",\n        5000000000: \"viii\",\n        10000000000:\
    \ \"viii\",\n        50000000000: \"viii\",\n        100000000000: \"viii\",\n\
    \        500000000000: \"viii\",\n        1000000000000: \"viii\",\n        5000000000000:\
    \ \"viii\",\n        10000000000000: \"viii\",\n        50000000000000: \"viii\"\
    ,\n        100000000000000: \"viii\",\n        500000000000000: \"viii\",\n  \
    \      1000000000000000: \"viii\",\n        5000000000000000: \"viii\",\n    \
    \    1000000000000000000: \"viii\",\n    }\n\n    roman_numeral := \"\"\n    for\
    \ roman_numeral, number := range roman_numerals {\n        if number <= number\
    \ {\n            break\n        }\n    }\n\n    if number > 0 {\n        roman_numeral\
    \ = roman_numeral[:len(roman_numeral)-len(roman_numeral)%10]\n    }\n\n    return\
    \ fmt.Sprintf(\"%s%v\", roman_numeral, number)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n    }\n\
    \n    roman_number := roman_numerals[number]\n\n    if number < 1 || number >\
    \ 1000 {\n        fmt.Println(\"Invalid input\")\n    }\n\n    return roman_number\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viv\",\n        1000: \"vi\",\n    }\n    roman_numeral_string :=\
    \ \"\"\n    for _, roman_numeral := range roman_numerals {\n        if number\
    \ >= roman_numeral {\n            roman_numeral_string = roman_numerals[roman_numeral]\n\
    \            break\n        }\n    }\n    return strings.ToLower(roman_numeral_string)\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n     \
    \   10000: \"viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n    \
    \    500000: \"viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\",\n\
    \        10000000: \"viv\",\n        50000000: \"viiv\",\n        100000000: \"\
    viv\",\n        500000000: \"viiv\",\n        1000000000: \"viv\",\n        5000000000:\
    \ \"viiv\",\n        10000000000: \"viv\",\n        50000000000: \"viiv\",\n \
    \       100000000000: \"viv\",\n        500000000000: \"viiv\",\n        1000000000000:\
    \ \"viv\",\n        5000000000000: \"viiv\",\n        10000000000000: \"viv\"\
    ,\n        50000000000000: \"viiv\",\n        100000000000000: \"viv\",\n    \
    \    500000000000000: \"viiv\",\n        1000000000000000: \"viv\",\n        5000000000000000:\
    \ \"viiv\",\n        1000000000000000000: \"viv\",\n        50000000000000000:\
    \ \"viiv\",\n        10000000000000000000: \"viv\",\n        5000000000000000000:\
    \ \"viiv\",\n        100000000000000000000: \"viv\",\n        50000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000: \"viv\",\n        500000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000: \"viv\",\n        5000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000: \"viv\",\n        50000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000: \"viv\",\n        500000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000: \"viv\",\n        5000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000: \"viv\",\n        50000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000: \"viv\",\n        500000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000: \"viv\",\n        5000000000000000000000000000:\
    \ \"viiv\",\n        100000000000000000000000000000: \"viv\",\n        50000000000000000000000000000:\
    \ \"viiv\",\n        1000000000000000000000000000000: \"viv\",\n        500000000000000000000000000000:\
    \ \"viiv\",\n        10000000000000000000000000000000", "    romans := []string{\n\
    \        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"\
    IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"\
    XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"\
    XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\",\n    }\n\
    \    roman_number := 0\n    for _, roman_letter := range romans {\n        roman_number\
    \ += int(number/len(romans))\n        number %= len(romans)\n        if number\
    \ == 0 {\n            return roman_letter\n        }\n    }\n    return fmt.Sprintf(\"\
    %v\", number)\n}\n", "    romanNumerals := map[int]string{\n        1: \"i\",\n\
    \        5: \"vi\",\n        10: \"viii\",\n        50: \"viiii\",\n        100:\
    \ \"viiii\",\n        500: \"viiii\",\n        1000: \"viiii\",\n        5000:\
    \ \"viiii\",\n        10000: \"viiii\",\n        50000: \"viiii\",\n        100000:\
    \ \"viiii\",\n        500000: \"viiii\",\n        1000000: \"viiii\",\n      \
    \  5000000: \"viiii\",\n        10000000: \"viiii\",\n        50000000: \"viiii\"\
    ,\n        100000000: \"viiii\",\n        500000000: \"viiii\",\n        1000000000:\
    \ \"viiii\",\n        5000000000: \"viiii\",\n        10000000000: \"viiii\",\n\
    \        50000000000: \"viiii\",\n        100000000000: \"viiii\",\n        500000000000:\
    \ \"viiii\",\n        1000000000000: \"viiii\",\n        5000000000000: \"viiii\"\
    ,\n        10000000000000: \"viiii\",\n        50000000000000: \"viiii\",\n  \
    \      100000000000000: \"viiii\",\n        500000000000000: \"viiii\",\n    \
    \    1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\",\n    \
    \    1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\",\n\
    \        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    romanNumerals := map[int]string{\n        1: \"I\",\n        5: \"V\",\n  \
    \      10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"D\"\
    ,\n        1000: \"M\",\n    }\n    romanNumeral := \"\"\n    for romanNumeral,\
    \ numeral := range romanNumerals {\n        if number >= numeral {\n         \
    \   number -= numeral\n            break\n        }\n    }\n    return fmt.Sprintf(\"\
    %c%c\", romanNumerals[number], romanNumerals[number])\n}\n", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viivi\",\n   \
    \     1000: \"viiii\",\n        5000: \"viiiii\",\n    }\n    romanNumerals[number]\
    \ = \"\"\n    romanNumerals[number / 1000] = \"vi\"\n    romanNumerals[number\
    \ / 500] = \"vii\"\n    romanNumerals[number / 100] = \"viii\"\n    romanNumerals[number\
    \ / 50] = \"viiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[number\
    \ / 5] = \"viivi\"\n    romanNumerals[number / 2] = \"viiii\"\n    romanNumerals[number\
    \ / 1] = \"viiiii\"\n    romanNumerals[number / 10] = \"viv\"\n    romanNumerals[",
  "    romans := []string{\n        \"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"\
    L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\",\n        \"M\", \"MM\", \"MMM\",\n\
    \    }\n    result := \"\"\n    for _, romanIndex := range romans {\n        result\
    \ += romanIndex\n        if number >= romanIndex {\n            number -= romanIndex\n\
    \        }\n    }\n    return strings.ToLower(result)\n}\n", "    romans := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    roman,\
    \ ok := romans[number]\n    if !ok {\n        fmt.Println(\"Invalid input\")\n\
    \    }\n    return roman\n}\n", "    romanNumerals := map[int]string{\n      \
    \  1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n   \
    \     100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n    romanNumeral\
    \ := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n}\n", " \
    \   roman_numerals := map[int]string{\n        1: \"I\",\n        5: \"V\",\n\
    \        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"\
    D\",\n        1000: \"M\",\n    }\n    roman_numeral := roman_numerals[number]\n\
    \    return strings.ToLower(roman_numeral)\n}\n", "    if number < 1 || number\
    \ > 1000 {\n        fmt.Println(\"int_to_mini_roman: Invalid input\")\n    }\n\
    \n    roman_numerals := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"\
    V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\"\
    , \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\", \"\
    XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\"\
    , \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\"\
    , \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\", \"LII\", \"LIII\", \"LIIII\"\
    , \"LIIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"LIX\", \"LX\", \"LXI\", \"\
    LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\"\
    , \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"\
    LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\"\
    , \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"\
    XC\", \"C\", \"CI\", \"CII\", \"CIII\", \"CIIII\", \"CIV\", \"CV\", \"CVI\", \"\
    CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"\
    CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\", \"CXXII\"\
    , \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\"\
    , \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\"\
    , \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\"\
    , \"CCIV\", \"CCV\", \"CCVI\", \"CCVII\", \"CCV", "    roman_number := \"\"\n\
    \    switch number {\n    case 1:\n        roman_number = \"x\"\n    case 2:\n\
    \        roman_number = \"ix\"\n    case 3:\n        roman_number = \"lb\"\n \
    \   case 4:\n        roman_number = \"c\"\n    case 5:\n        roman_number =\
    \ \"d\"\n    case 6:\n        roman_number = \"ix\"\n    case 7:\n        roman_number\
    \ = \"lb\"\n    case 8:\n        roman_number = \"c\"\n    case 9:\n        roman_number\
    \ = \"d\"\n    case 10:\n        roman_number = \"ix\"\n    case 11:\n       \
    \ roman_number = \"lb\"\n    case 12:\n        roman_number = \"c\"\n    case\
    \ 13:\n        roman_number = \"d\"\n    case 14:\n        roman_number = \"ix\"\
    \n    case 15:\n        roman_number = \"lb\"\n    case 16:\n        roman_number\
    \ = \"c\"\n    case 17:\n        roman_number = \"d\"\n    case 18:\n        roman_number\
    \ = \"ix\"\n    case 19:\n        roman_number = \"lb\"\n    case 20:\n      \
    \  roman_number = \"c\"\n    case 21:\n        roman_number = \"d\"\n    case\
    \ 22:\n        roman_number = \"ix\"\n    case 23:\n        roman_number = \"\
    lb\"\n    case 24:\n        roman_number = \"c\"\n    case 25:\n        roman_number\
    \ = \"d\"\n    case 26:\n        roman_number = \"ix\"\n    case 27:\n       \
    \ roman_number = \"lb\"\n    case 28:\n        roman_number = \"c\"\n    case\
    \ 29:\n        roman_number = \"d\"\n    case 30:\n        roman_number = \"ix\"\
    \n    case 31:\n        roman_number = \"lb\"\n    case 32:\n        roman_number\
    \ = \"c\"\n    case 33:\n        roman_number = \"d\"\n    case 34:\n        roman_number\
    \ = \"ix\"\n    case 35:\n        roman_number = \"lb\"\n    case 36:\n      \
    \  roman_number = \"c\"\n    case 37:\n        roman_number = \"d\"\n    case\
    \ 38:\n        roman_number = \"ix\"\n    case 39:\n        roman_number = \"\
    lb\"\n    case 40:\n        roman_number = \"c\"\n    case 41:\n        roman_number\
    \ = \"d\"\n    case 42:\n        roman_number = \"ix\"\n    case 43:\n       \
    \ roman_number = \"lb\"\n    case 44:\n        roman_number = \"c\"\n    case\
    \ 45:\n        roman_", "    roman_numerals := map[int]string{\n        1: \"\
    i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\",\n      \
    \  100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n        5000:\
    \ \"vii\",\n        10000: \"viii\",\n        100000: \"viv\",\n    }\n    roman_numeral\
    \ := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n}\n",
  "    roman_num := \"\"\n    switch number {\n    case 1:\n        roman_num = \"\
    x\"\n    case 2:\n        roman_num = \"x\"\n    case 3:\n        roman_num =\
    \ \"x\"\n    case 4:\n        roman_num = \"x\"\n    case 5:\n        roman_num\
    \ = \"x\"\n    case 6:\n        roman_num = \"x\"\n    case 7:\n        roman_num\
    \ = \"x\"\n    case 8:\n        roman_num = \"x\"\n    case 9:\n        roman_num\
    \ = \"x\"\n    case 10:\n        roman_num = \"x\"\n    case 11:\n        roman_num\
    \ = \"x\"\n    case 12:\n        roman_num = \"x\"\n    case 13:\n        roman_num\
    \ = \"x\"\n    case 14:\n        roman_num = \"x\"\n    case 15:\n        roman_num\
    \ = \"x\"\n    case 16:\n        roman_num = \"x\"\n    case 17:\n        roman_num\
    \ = \"x\"\n    case 18:\n        roman_num = \"x\"\n    case 19:\n        roman_num\
    \ = \"x\"\n    case 20:\n        roman_num = \"x\"\n    case 21:\n        roman_num\
    \ = \"x\"\n    case 22:\n        roman_num = \"x\"\n    case 23:\n        roman_num\
    \ = \"x\"\n    case 24:\n        roman_num = \"x\"\n    case 25:\n        roman_num\
    \ = \"x\"\n    case 26:\n        roman_num = \"x\"\n    case 27:\n        roman_num\
    \ = \"x\"\n    case 28:\n        roman_num = \"x\"\n    case 29:\n        roman_num\
    \ = \"x\"\n    case 30:\n        roman_num = \"x\"\n    case 31:\n        roman_num\
    \ = \"x\"\n    case 32:\n        roman_num = \"x\"\n    case 33:\n        roman_num\
    \ = \"x\"\n    case 34:\n        roman_num = \"x\"\n    case 35:\n        roman_num\
    \ = \"x\"\n    case 36:\n        roman_num = \"x\"\n    case 37:\n        roman_num\
    \ = \"x\"\n    case 38:\n        roman_num = \"x\"\n    case 39:\n        roman_num\
    \ = \"x\"\n    case 40:\n        roman_num = \"x\"\n    case 41:\n        roman_num\
    \ = \"x\"\n    case 42:\n        roman_num = \"x\"\n    case 43:\n        roman_num\
    \ = \"x\"\n    case 44:\n        roman_num = \"", "    roman_numerals := []string{\n\
    \        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"\
    IX\", \"X\", \"XI\",\n        \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"\
    XVII\", \"XVIII\", \"XIX\", \"XX\",\n        \"XXI\", \"XXII\", \"XXIII\", \"\
    XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\",\n        \"XXIX\", \"XXX\",\
    \ \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\",\n        \"XXIX\"\
    , \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\"\
    ,\n        \"LVII\", \"LVIII\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\"\
    , \"LXV\", \"LXVI\",\n        \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\"\
    , \"LXXII\", \"LXXIII\", \"LXXIV\",\n        \"LXXV\", \"LXXVI\", \"LXXVII\",\
    \ \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXIII\",\n        \"LXXIV\", \"LXXV\",\
    \ \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\",\n        \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\",\n      \
    \  \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\"\
    ,\n        \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"\
    LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"\
    LXXV\", \"LXXVI\",\n        \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\",\n        \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\"\
    , \"LXXX\", \"LXXIII\", \"LXXIV\",\n        \"LXXV\", \"LXX", "    romanNumerals\
    \ := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"ix\",\n        500: \"ixi\",\n      \
    \  1000: \"ixii\",\n    }\n    romanNumeral := romanNumerals[number]\n    return\
    \ strings.ToLower(romanNumeral)\n}\n", "    roman_numerals := []string{\n    \
    \    \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\
    , \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\"\
    , \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\"\
    , \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n   \
    \     \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\"\
    , \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\"\
    , \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"\
    LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n     \
    \   \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"\
    LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"\
    LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n       \
    \ \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"\
    CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"\
    CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"\
    CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n\
    \        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\"\
    , \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\",\
    \ \"CXVII\", \"CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\"\
    , \"", "    roman_numerals := map[int]string{\n        1: \"I\",\n        5: \"\
    V\",\n        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500:\
    \ \"D\",\n        1000: \"M\",\n    }\n    roman_numeral := roman_numerals[number]\n\
    \    mini_roman_numeral := \"\"\n    for _, letter := range roman_numeral {\n\
    \        mini_roman_numeral += letter\n    }\n    return mini_roman_numeral\n\
    }\n", "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 2:\n        roman_number = \"ix\"\n    case 3:\n        roman_number\
    \ = \"lb\"\n    case 4:\n        roman_number = \"c\"\n    case 5:\n        roman_number\
    \ = \"d\"\n    case 6:\n        roman_number = \"mi\"\n    case 7:\n        roman_number\
    \ = \"f\"\n    case 8:\n        roman_number = \"v\"\n    case 9:\n        roman_number\
    \ = \"x\"\n    case 10:\n        roman_number = \"c\"\n    case 11:\n        roman_number\
    \ = \"d\"\n    case 12:\n        roman_number = \"mi\"\n    case 13:\n       \
    \ roman_number = \"f\"\n    case 14:\n        roman_number = \"v\"\n    case 15:\n\
    \        roman_number = \"x\"\n    case 16:\n        roman_number = \"c\"\n  \
    \  case 17:\n        roman_number = \"d\"\n    case 18:\n        roman_number\
    \ = \"mi\"\n    case 19:\n        roman_number = \"f\"\n    case 20:\n       \
    \ roman_number = \"v\"\n    case 21:\n        roman_number = \"x\"\n    case 22:\n\
    \        roman_number = \"c\"\n    case 23:\n        roman_number = \"d\"\n  \
    \  case 24:\n        roman_number = \"mi\"\n    case 25:\n        roman_number\
    \ = \"f\"\n    case 26:\n        roman_number = \"v\"\n    case 27:\n        roman_number\
    \ = \"x\"\n    case 28:\n        roman_number = \"c\"\n    case 29:\n        roman_number\
    \ = \"d\"\n    case 30:\n        roman_number = \"mi\"\n    case 31:\n       \
    \ roman_number = \"f\"\n    case 32:\n        roman_number = \"v\"\n    case 33:\n\
    \        roman_number = \"x\"\n    case 34:\n        roman_number = \"c\"\n  \
    \  case 35:\n        roman_number = \"d\"\n    case 36:\n        roman_number\
    \ = \"mi\"\n    case 37:\n        roman_number = \"f\"\n    case 38:\n       \
    \ roman_number = \"v\"\n    case 39:\n        roman_number = \"x\"\n    case 40:\n\
    \        roman_number = \"c\"\n    case 41:\n        roman_number = \"d\"\n  \
    \  case 42:\n        roman_number = \"mi\"\n    case 43:\n        roman_number\
    \ = \"f\"\n    case 44:\n        roman_number = \"v\"\n    case 45:\n        roman_number\
    \ = \"x\"", "    roman_numerals := map[int]string{\n        1: \"i\",\n      \
    \  5: \"vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\"\
    ,\n        500: \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n \
    \       10000: \"viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n\
    \        500000: \"viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\"\
    ,\n        10000000: \"viv\",\n        50000000: \"viiv\",\n        100000000:\
    \ \"viv\",\n        500000000: \"viiv\",\n        1000000000: \"viv\",\n     \
    \   5000000000: \"viiv\",\n        10000000000: \"viv\",\n        50000000000:\
    \ \"viiv\",\n        100000000000: \"viv\",\n        500000000000: \"viiv\",\n\
    \        1000000000000: \"viv\",\n        5000000000000: \"viiv\",\n        10000000000000:\
    \ \"viv\",\n        50000000000000: \"viiv\",\n        100000000000000: \"viv\"\
    ,\n        500000000000000: \"viiv\",\n        1000000000000000: \"viv\",\n  \
    \      5000000000000000: \"viiv\",\n        1000000000000000000: \"viv\",\n  \
    \      50000000000000000: \"viiv\",\n        10000000000000000000: \"viv\",\n\
    \        5000000000000000000: \"viiv\",\n        100000000000000000000: \"viv\"\
    ,\n        50000000000000000000: \"viiv\",\n        1000000000000000000000: \"\
    viv\",\n        500000000000000000000: \"viiv\",\n        10000000000000000000000:\
    \ \"viv\",\n        5000000000000000000000: \"viiv\",\n        100000000000000000000000:\
    \ \"viv\",\n        50000000000000000000000: \"viiv\",\n        1000000000000000000000000:\
    \ \"viv\",\n        500000000000000000000000: \"viiv\",\n        10000000000000000000000000:\
    \ \"viv\",\n        5000000000000000000000000: \"viiv\",\n        100000000000000000000000000:\
    \ \"viv\",\n        50000000000000000000000000: \"viiv\",\n        1000000000000000000000000000:\
    \ \"viv\",\n        500000000000000000000000000: \"viiv\",\n        10000000000000000000000000000:\
    \ \"viv\",\n        5000000000000000000000000000: \"viiv\",\n        100000000000000000000000000000:\
    \ \"viv\",\n        50000000000000000000000000000: \"viiv\",\n        1000000000000000000000000000000:\
    \ \"viv\",\n        500000000000000000000000000000: \"viiv\",\n        10000000000000000000000000000000",
  "    romans := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\"\
    , \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\"\
    , \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n\
    \        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\"\
    , \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\"\
    , \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\", \"LII\"\
    , \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n        \"\
    LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\"\
    , \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"\
    LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\", \"LXXIX\", \"\
    LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\",\n        \"\
    LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\"\
    , \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"\
    CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\"\
    , \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n        \"CXXII\", \"CXXIII\"\
    , \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\",\n      \
    \  \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\"\
    , \"CXXXVII\",\n        \"CXXXVIII\", \"CXXXIX\", \"CC\", \"CCI\", \"CCII\", \"\
    CCIII\", \"CCIV\", \"CCV\", \"CCVI\",\n        \"CCVII\", \"CCV", "    romanNumerals\
    \ := map[int]string{\n        1: \"I\",\n        5: \"V\",\n        10: \"X\"\
    ,\n        50: \"L\",\n        100: \"C\",\n        500: \"D\",\n        1000:\
    \ \"M\",\n    }\n    romanNumeralsString := \"\"\n    for romanNumeral, roman\
    \ := range romanNumerals {\n        if number >= romanNumeral {\n            romanNumeralsString\
    \ += roman\n            number -= romanNumeral\n        }\n    }\n    return romanNumeralsString\n\
    }\n", "    roman_numerals := []string{\n        \"I\", \"II\", \"III\", \"IV\"\
    , \"V\", \"VI\", \"VII\", \"VIII\", \"IX\",\n        \"X\", \"XI\", \"XII\", \"\
    XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\",\n        \"XX\"\
    , \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\",\n        \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"\
    LIX\",\n        \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\"\
    , \"LXVII\", \"LXVIII\", \"LXIX\",\n        \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\",\n      \
    \  \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\"\
    , \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\",\n        \"XC\", \"C\", \"CI\", \"CII\"\
    , \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\",\n\
    \        \"XC\", \"C\", \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"\
    CVI\", \"CVII\", \"CVIII\", \"CIX\",\n        \"XXC\", \"CC\", \"CCI\", \"CCII\"\
    , \"CCIII\", \"CCIV\", \"CCV\", \"CCVI\", \"CCVII\", \"CCVIII\", \"CIX\",\n  \
    \      \"XXXC\", \"CCC\", \"CCCI\", \"CCCII\", \"CCCIII\", \"CCCIV\", \"CCCV\"\
    , \"CCCVI\", \"CCCVII\", \"CCCVIII\", \"CIX\",\n        \"XLC\", \"LCC\", \"LCCI\"\
    , \"LCCII\", \"LCCIII\", \"LCCIV\", \"LCCV\", \"LCCVI\", \"LCCVII\", \"LCC", " \
    \   roman_numerals := map[int]string{\n        1: \"I\",\n        5: \"V\",\n\
    \        10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"\
    D\",\n        1000: \"M\",\n    }\n    roman_number := roman_numerals[number]\n\
    \    return strings.ToLower(roman_number)\n}\n", '    roman_numerals := []string{"I",
    "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV",
    "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI", "XXII", "XXIII", "XXIV", "XXV",
    "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV",
    "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL", "L", "LI", "LII", "LIII",
    "LIIII", "LIIV", "LIV", "LIVI", "LIVII", "LIVIII", "LIVIV", "LIVV", "LIVVI", "LIVVII",
    "LIVVIII", "LIVVIV", "LIVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV",
    "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII",
    "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI",
    "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV",
    "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII",
    "LIVVVIII", "LIVVVIV", "LIVVVV", "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV",
    "LIVVVI", "LIVVVII", "LIVVVIII", "LIVVVIV", "LIVVVV', "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000:\
    \ \"d\",\n        10000: \"c\",\n        50000: \"c\",\n        100000: \"x\"\
    ,\n        500000: \"x\",\n        1000000: \"ix\",\n        5000000: \"ix\",\n\
    \        10000000: \"iv\",\n        50000000: \"iv\",\n        100000000: \"v\"\
    ,\n        500000000: \"v\",\n        1000000000: \"vi\",\n        5000000000:\
    \ \"vi\",\n        10000000000: \"vii\",\n        50000000000: \"vii\",\n    \
    \    100000000000: \"ix\",\n        500000000000: \"ix\",\n        1000000000000:\
    \ \"ix\",\n        5000000000000: \"ix\",\n        10000000000000: \"ix\",\n \
    \       50000000000000: \"ix\",\n        100000000000000: \"ix\",\n        500000000000000:\
    \ \"ix\",\n        1000000000000000: \"ix\",\n        5000000000000000: \"ix\"\
    ,\n        1000000000000000000: \"ix\",\n    }\n    romanNumerals[number] = \"\
    \"\n    return romanNumerals[number]\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vii\",\n        10000: \"viii\",\n        50000: \"viv\",\n      \
    \  100000: \"vi\",\n        500000: \"vii\",\n        1000000: \"viii\",\n   \
    \     5000000: \"viv\",\n        10000000: \"vi\",\n        50000000: \"vii\"\
    ,\n        100000000: \"viii\",\n        500000000: \"viv\",\n        1000000000:\
    \ \"vi\",\n        5000000000: \"vii\",\n        10000000000: \"viii\",\n    \
    \    50000000000: \"viv\",\n        100000000000: \"vi\",\n        500000000000:\
    \ \"vii\",\n        1000000000000: \"viii\",\n        5000000000000: \"viv\",\n\
    \        10000000000000: \"vi\",\n        50000000000000: \"vii\",\n        100000000000000:\
    \ \"viii\",\n        500000000000000: \"viv\",\n        1000000000000000: \"vi\"\
    ,\n        5000000000000000: \"vii\",\n        1000000000000000000: \"viii\",\n\
    \    }\n    roman_numeral := roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n\
    }\n", "    romanNumerals := []string{\n        \"I\", \"II\", \"III\", \"IV\"\
    , \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"\
    XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\"\
    , \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n\
    \        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\"\
    ,\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"\
    CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n   \
    \     \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\"\
    , \"CXXIX\",\n        \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\"\
    , \"CXXXV\", \"CXXXVI\", \"CXXXVII\",\n        \"CXXXVIII\", \"CXXXIX\", \"CC\"\
    , \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\", \"CCVI\",\n        \"CCVII\"\
    , \"", "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 5:\n        roman_number = \"v\"\n    case 10:\n        roman_number\
    \ = \"i\"\n    case 50:\n        roman_number = \"l\"\n    case 100:\n       \
    \ roman_number = \"c\"\n    case 500:\n        roman_number = \"d\"\n    case\
    \ 1000:\n        roman_number = \"m\"\n    }\n    return roman_number\n}\n", " \
    \   romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"viii\",\n        50: \"viiii\",\n        100: \"viiiii\",\n   \
    \     500: \"viiiiix\",\n        1000: \"viiiiiix\",\n        5000: \"viiiiiiix\"\
    ,\n        10000: \"viiiiiiiix\",\n        50000: \"viiiiiiiiix\",\n        100000:\
    \ \"viiiiiiiiiix\",\n        500000: \"viiiiiiiiiiix\",\n        1000000: \"viiiiiiiiiiiix\"\
    ,\n        5000000: \"viiiiiiiiiiiiix\",\n        10000000: \"viiiiiiiiiiiiiix\"\
    ,\n        50000000: \"viiiiiiiiiiiiiiix\",\n        100000000: \"viiiiiiiiiiiiiiiix\"\
    ,\n        500000000: \"viiiiiiiiiiiiiiiiix\",\n        1000000000: \"viiiiiiiiiiiiiiiiiix\"\
    ,\n        5000000000: \"viiiiiiiiiiiiiiiiiiix\",\n        10000000000: \"viiiiiiiiiiiiiiiiiiiix\"\
    ,\n        50000000000: \"viiiiiiiiiiiiiiiiiiiiix\",\n        100000000000: \"\
    viiiiiiiiiiiiiiiiiiiiiix\",\n        500000000000: \"viiiiiiiiiiiiiiiiiiiiiiix\"\
    ,\n        1000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiix\",\n        5000000000000:\
    \ \"viiiiiiiiiiiiiiiiiiiiiiiiix\",\n        10000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiiiix\"\
    ,\n        50000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiiiiix\",\n        100000000000000:\
    \ \"viiiiiiiiiiiiiiiiiiiiiiiiiiiix\",\n        500000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiiiiiiix\"\
    ,\n        1000000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiiiiiiiix\",\n        5000000000000000:\
    \ \"viiiiiiiiiiiiiiiiiiiiiiiiiiiiiiix\",\n        1000000000000000000: \"viiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiix",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 2:\n        roman_number = \"ix\"\n    case 3:\n        roman_number\
    \ = \"lb\"\n    case 4:\n        roman_number = \"c\"\n    case 5:\n        roman_number\
    \ = \"d\"\n    case 6:\n        roman_number = \"i\"\n    case 7:\n        roman_number\
    \ = \"v\"\n    case 8:\n        roman_number = \"f\"\n    case 9:\n        roman_number\
    \ = \"m\"\n    case 10:\n        roman_number = \"b\"\n    case 11:\n        roman_number\
    \ = \"g\"\n    case 12:\n        roman_number = \"y\"\n    case 13:\n        roman_number\
    \ = \"k\"\n    case 14:\n        roman_number = \"j\"\n    case 15:\n        roman_number\
    \ = \"q\"\n    case 16:\n        roman_number = \"x\"\n    case 17:\n        roman_number\
    \ = \"c\"\n    case 18:\n        roman_number = \"m\"\n    case 19:\n        roman_number\
    \ = \"b\"\n    case 20:\n        roman_number = \"g\"\n    case 21:\n        roman_number\
    \ = \"y\"\n    case 22:\n        roman_number = \"k\"\n    case 23:\n        roman_number\
    \ = \"j\"\n    case 24:\n        roman_number = \"q\"\n    case 25:\n        roman_number\
    \ = \"x\"\n    case 26:\n        roman_number = \"v\"\n    case 27:\n        roman_number\
    \ = \"f\"\n    case 28:\n        roman_number = \"m\"\n    case 29:\n        roman_number\
    \ = \"b\"\n    case 30:\n        roman_number = \"g\"\n    case 31:\n        roman_number\
    \ = \"y\"\n    case 32:\n        roman_number = \"k\"\n    case 33:\n        roman_number\
    \ = \"j\"\n    case 34:\n        roman_number = \"q\"\n    case 35:\n        roman_number\
    \ = \"x\"\n    case 36:\n        roman_number = \"v\"\n    case 37:\n        roman_number\
    \ = \"f\"\n    case 38:\n        roman_number = \"m\"\n    case 39:\n        roman_number\
    \ = \"b\"\n    case 40:\n        roman_number = \"g\"\n    case 41:\n        roman_number\
    \ = \"y\"\n    case 42:\n        roman_number = \"k\"\n    case 43:\n        roman_number\
    \ = \"j\"\n    case 44:\n        roman_number = \"q\"\n    case 45:\n        roman_number\
    \ = \"x\"\n    case 46:\n        ", "    romanNumerals := map[int]string{\n  \
    \      1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \        5000: \"viiivi\",\n        10000: \"viiivii\",\n        50000: \"vivvi\"\
    ,\n        100000: \"vivvii\",\n        500000: \"viviv\",\n        1000000: \"\
    vivivi\",\n        5000000: \"vivivii\",\n        10000000: \"viviviii\",\n  \
    \      50000000: \"viviivi\",\n        100000000: \"viviivii\",\n        500000000:\
    \ \"viviiivi\",\n        1000000000: \"viviiivii\",\n        5000000000: \"vivivvi\"\
    ,\n        10000000000: \"vivivvii\",\n        50000000000: \"viviviv\",\n   \
    \     100000000000: \"vivivivi\",\n        500000000000: \"viviiviv\",\n     \
    \   1000000000000: \"viviivivi\",\n        5000000000000: \"viviiiviv\",\n   \
    \     10000000000000: \"viviiivivi\",\n        50000000000000: \"vivivviv\",\n\
    \        100000000000000: \"vivivvivi\",\n        500000000000000: \"viviviviv\"\
    ,\n        1000000000000000: \"vivivivivi\",\n        5000000000000000: \"viviiviviv\"\
    ,\n        10000000000000000: \"viviivivivi\",\n        5000000000000000: \"viviiivivi\"\
    ,\n        10000000000000000: \"viviiivivi\",\n        50000000000000000: \"vivivvivi\"\
    ,\n        100000000000000000: \"vivivvivii\",\n        500000000000000000: \"\
    viviviviv\",\n        100000000000000000: \"vivivivivi\",\n        50000000000000000:\
    \ \"viviiviviv\",\n        1000000000000000000: \"viviivivivi\",\n        500000000000000000:\
    \ \"viviiivivi\",\n        10000000000000000000: \"viviiivivi\",\n        5000000000000000000:\
    \ \"vivivvivi\",\n        100000000000000000000: \"vivivvivii\",\n        50000000000000000000:\
    \ \"viviviviv\",\n        1000000000000000000000: \"vivivivivi\",\n", "    romanNumerals\
    \ := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"\
    , \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\", \"XIV\", \"XV\"\
    , \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\",\n        \"\
    XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\"\
    , \"XXIII\",\n        \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\"\
    , \"XL\", \"L\", \"LI\", \"LXI\",\n        \"LXII\", \"LXIII\", \"LXIV\", \"LXV\"\
    , \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\",\n        \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\",\n     \
    \   \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    , \"LXXVIII\",\n        \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\",\
    \ \"LXXVI\", \"LXXVII\", \"LXXVIII\",\n        \"LXXIX\", \"LXXX\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\",\n        \"LXXIX\"\
    , \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\"\
    ,\n        \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"\
    LXXVII\", \"LXXVIII\",\n        \"LXXIX\", \"LXXX\", \"LXXIII\", \"LXXIV\", \"\
    LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\",\n        \"LXXIX\", \"LXXX\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\",\n        \"LXXIX\"\
    , \"LXXX\", \"LXXIII\", \"LXXIV\", \"LXX", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \        5000: \"viiivi\",\n        10000: \"viiivii\",\n        50000: \"vivvi\"\
    ,\n        100000: \"vivvii\",\n        500000: \"viviv\",\n        1000000: \"\
    vivivi\",\n        5000000: \"vivivii\",\n        10000000: \"viviviii\",\n  \
    \      50000000: \"viviivi\",\n        100000000: \"viviivii\",\n        500000000:\
    \ \"viviiivi\",\n        1000000000: \"viviiivii\",\n        5000000000: \"vivivvi\"\
    ,\n        10000000000: \"vivivvii\",\n        50000000000: \"viviviv\",\n   \
    \     100000000000: \"vivivivi\",\n        500000000000: \"viviiviv\",\n     \
    \   1000000000000: \"viviivivi\",\n        5000000000000: \"viviiiviv\",\n   \
    \     10000000000000: \"viviiivivi\",\n        50000000000000: \"vivivviv\",\n\
    \        100000000000000: \"vivivvivi\",\n        500000000000000: \"viviviviv\"\
    ,\n        1000000000000000: \"vivivivivi\",\n        5000000000000000: \"viviiviviv\"\
    ,\n        10000000000000000: \"viviivivivi\",\n        5000000000000000: \"viviiivivi\"\
    ,\n        10000000000000000: \"viviiivivi\",\n        50000000000000000: \"vivivvivi\"\
    ,\n        100000000000000000: \"vivivvivii\",\n        500000000000000000: \"\
    viviviviv\",\n        100000000000000000: \"vivivivivi\",\n        50000000000000000:\
    \ \"viviiviviv\",\n        1000000000000000000: \"viviivivivi\",\n        500000000000000000:\
    \ \"viviiivivi\",\n        10000000000000000000: \"viviiivivi\",\n        5000000000000000000:\
    \ \"vivivvivi\",\n        100000000000000000000: \"vivivvivi\",\n        50000000000000000000:\
    \ \"viviviviv\",\n        1000000000000000000000: \"vivivivivi\",\n        ",
  "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viivi\",\n        1000: \"viivii\",\n        5000: \"viiivi\",\n        10000:\
    \ \"viiivii\",\n        50000: \"vivvi\",\n        100000: \"vivvii\",\n     \
    \   500000: \"viviv\",\n        1000000: \"vivivi\",\n        5000000: \"vivivii\"\
    ,\n        10000000: \"viviviii\",\n        50000000: \"viviviiii\",\n       \
    \ 100000000: \"viviviiiii\",\n        500000000: \"viviviiiiii\",\n        1000000000:\
    \ \"viviviiiiiii\",\n        5000000000: \"viviviiiiiiii\",\n        10000000000:\
    \ \"viviviiiiiiiii\",\n        50000000000: \"viviviiiiiiiiii\",\n        100000000000:\
    \ \"viviviiiiiiiiiii\",\n        500000000000: \"viviviiiiiiiiiiii\",\n      \
    \  1000000000000: \"viviviiiiiiiiiiiii\",\n        5000000000000: \"viviviiiiiiiiiiiiii\"\
    ,\n        10000000000000: \"viviviiiiiiiiiiiiiii\",\n        50000000000000:\
    \ \"viviviiiiiiiiiiiiiiii\",\n        100000000000000: \"viviviiiiiiiiiiiiiiiii\"\
    ,\n        500000000000000: \"viviviiiiiiiiiiiiiiiiii\",\n        1000000000000000:\
    \ \"viviviiiiiiiiiiiiiiiiiii\",\n        5000000000000000: \"viviviiiiiiiiiiiiiiiiiiii\"\
    ,\n        1000000000000000000: \"viviviiiiiiiiiiiiiiiiiiiii\",\n    }\n    roman_numeral_string\
    \ := \"\"\n    for roman_numeral, roman_numeral_string := range roman_numerals\
    \ {\n        if number >= roman_numeral {\n            break\n        }\n    }\n\
    \    return roman_numeral_string\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000:\
    \ \"d\",\n    }\n    romanNumeralsString := \"\"\n    for romanNumeral, roman\
    \ := range romanNumerals {\n        if number >= romanNumeral {\n            romanNumeralsString\
    \ += roman\n            number -= romanNumeral\n        }\n    }\n    return romanNumeralsString\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n     \
    \   10000: \"viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n    \
    \    500000: \"viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\",\n\
    \        10000000: \"viv\",\n        50000000: \"viiv\",\n        100000000: \"\
    viv\",\n        500000000: \"viiv\",\n        1000000000: \"viv\",\n        5000000000:\
    \ \"viiv\",\n        10000000000: \"viv\",\n        50000000000: \"viiv\",\n \
    \       100000000000: \"viv\",\n        500000000000: \"viiv\",\n        1000000000000:\
    \ \"viv\",\n        5000000000000: \"viiv\",\n        10000000000000: \"viv\"\
    ,\n        50000000000000: \"viiv\",\n        100000000000000: \"viv\",\n    \
    \    500000000000000: \"viiv\",\n        1000000000000000: \"viv\",\n        5000000000000000:\
    \ \"viiv\",\n        1000000000000000000: \"viv\",\n    }\n    roman_numeral :=\
    \ roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n}\n", " \
    \   roman_num := \"\"\n    switch number {\n    case 1:\n        roman_num = \"\
    x\"\n    case 2:\n        roman_num = \"ix\"\n    case 3:\n        roman_num =\
    \ \"lb\"\n    case 4:\n        roman_num = \"c\"\n    case 5:\n        roman_num\
    \ = \"d\"\n    case 6:\n        roman_num = \"mi\"\n    case 7:\n        roman_num\
    \ = \"f\"\n    case 8:\n        roman_num = \"v\"\n    case 9:\n        roman_num\
    \ = \"x\"\n    case 10:\n        roman_num = \"c\"\n    case 11:\n        roman_num\
    \ = \"d\"\n    case 12:\n        roman_num = \"mi\"\n    case 13:\n        roman_num\
    \ = \"f\"\n    case 14:\n        roman_num = \"v\"\n    case 15:\n        roman_num\
    \ = \"x\"\n    case 16:\n        roman_num = \"c\"\n    case 17:\n        roman_num\
    \ = \"d\"\n    case 18:\n        roman_num = \"mi\"\n    case 19:\n        roman_num\
    \ = \"f\"\n    case 20:\n        roman_num = \"v\"\n    case 21:\n        roman_num\
    \ = \"x\"\n    case 22:\n        roman_num = \"c\"\n    case 23:\n        roman_num\
    \ = \"d\"\n    case 24:\n        roman_num = \"mi\"\n    case 25:\n        roman_num\
    \ = \"f\"\n    case 26:\n        roman_num = \"v\"\n    case 27:\n        roman_num\
    \ = \"x\"\n    case 28:\n        roman_num = \"c\"\n    case 29:\n        roman_num\
    \ = \"d\"\n    case 30:\n        roman_num = \"mi\"\n    case 31:\n        roman_num\
    \ = \"f\"\n    case 32:\n        roman_num = \"v\"\n    case 33:\n        roman_num\
    \ = \"x\"\n    case 34:\n        roman_num = \"c\"\n    case 35:\n        roman_num\
    \ = \"d\"\n    case 36:\n        roman_num = \"mi\"\n    case 37:\n        roman_num\
    \ = \"f\"\n    case 38:\n        roman_num = \"v\"\n    case 39:\n        roman_num\
    \ = \"x\"\n    case 40:\n        roman_num = \"c\"\n    case 41:\n        roman_num\
    \ = \"d\"\n    case 42:\n        roman_num = \"mi\"\n    case 43:\n        roman_num\
    \ = \"f\"\n    case 44:\n        roman_num = \"v\"\n    case 45:\n        roman_num\
    \ = \"x\"", "    roman_numerals := []string{\n        \"I\", \"II\", \"III\",\
    \ \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n\
    \        \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"\
    XX\", \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"\
    XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"\
    LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"\
    LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\",\
    \ \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    ,\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\"\
    , \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\"\
    , \"XC\", \"C\", \"CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\"\
    , \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"\
    CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CX\",\
    \ \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\"\
    , \"CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\"\
    ,\n        \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\"\
    , \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    viiii\",\n        100: \"viiii\",\n        500: \"viiii\",\n        1000: \"viiii\"\
    ,\n        5000: \"viiii\",\n        10000: \"viiii\",\n        50000: \"viiii\"\
    ,\n        100000: \"viiii\",\n        500000: \"viiii\",\n        1000000: \"\
    viiii\",\n        5000000: \"viiii\",\n        10000000: \"viiii\",\n        50000000:\
    \ \"viiii\",\n        100000000: \"viiii\",\n        500000000: \"viiii\",\n \
    \       1000000000: \"viiii\",\n        5000000000: \"viiii\",\n        10000000000:\
    \ \"viiii\",\n        50000000000: \"viiii\",\n        100000000000: \"viiii\"\
    ,\n        500000000000: \"viiii\",\n        1000000000000: \"viiii\",\n     \
    \   5000000000000: \"viiii\",\n        10000000000000: \"viiii\",\n        50000000000000:\
    \ \"viiii\",\n        100000000000000: \"viiii\",\n        500000000000000: \"\
    viiii\",\n        1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\"\
    ,\n        1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\"\
    ,\n        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n \
    \       10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viivi\",\n        1000: \"viivii\",\n    }\n    romanNumerals[1000] = \"v\"\
    \n    romanNumerals[500] = \"vi\"\n    romanNumerals[100] = \"vii\"\n    romanNumerals[50]\
    \ = \"viii\"\n    romanNumerals[10] = \"ix\"\n    romanNumerals[1] = \"i\"\n\n\
    \    romanNumerals[4] = \"x\"\n    romanNumerals[6] = \"xix\"\n    romanNumerals[9]\
    \ = \"xixi\"\n    romanNumerals[400] = \"xixix\"\n    romanNumerals[900] = \"\
    xixixi\"\n    romanNumerals[4000] = \"xixixii\"\n    romanNumerals[9000] = \"\
    xixixiii\"\n\n    romanNumerals[400] = \"xx\"\n    romanNumerals[800] = \"xxi\"\
    \n    romanNumerals[1000] = \"xxii\"\n    romanNumerals[4000] = \"xxiii\"\n  \
    \  romanNumerals[8000] = \"xxiiii\"\n\n    romanNumerals[100] = \"xxx\"\n    romanNumerals[500]\
    \ = \"xxvi\"\n    romanNumerals[1000] = \"xxvii\"\n    romanNumerals[5000] = \"\
    xxviii\"\n    romanNumerals[10000] = \"xxviv\"\n    romanNumerals[100000] = \"\
    xxvivi\"\n    romanNumerals[1000000] = \"xxvivii\"\n    romanNumerals[10000000]\
    \ = \"xxviviii\"\n\n    romanNumerals[50] = \"xxxvi\"\n    romanNumerals[100]\
    \ = \"xxxvii\"\n    romanNumerals[500] = \"xxxviii\"\n    romanNumerals[1000]\
    \ = \"xxxviv\"\n    romanNumerals[5000] = \"xxxvivi\"\n    romanNumerals[10000]\
    \ = \"xxxvivii\"\n    romanNumerals[100000] = \"xxxviviii\"\n    romanNumerals[1000000]\
    \ = \"xxxviviii\"\n    romanNumeral", "    romans := []string{\n        \"I\"\
    , \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\",\n       \
    \ \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\"\
    , \"XIX\",\n        \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"\
    XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\",\n        \"XXX\", \"XXXI\", \"XXXII\"\
    , \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\"\
    ,\n        \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\"\
    , \"LVI\", \"LVII\", \"LVIII\", \"LIX\",\n        \"LX\", \"LXI\", \"LXII\", \"\
    LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\",\n     \
    \   \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\",\
    \ \"LXXVII\", \"LXXVIII\", \"LXXIX\",\n        \"LXXX\", \"LXXXI\", \"LXXXII\"\
    , \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"\
    LXXXIX\",\n        \"XC\", \"C\", \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\"\
    , \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\",\n        \"XC\", \"C\", \"CI\"\
    , \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"\
    CIX\",\n        \"XXC\", \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\"\
    , \"CCVI\", \"CCVII\", \"CCVIII\", \"CXX\",\n        \"CCC\", \"CCCI\", \"CCCII\"\
    , \"CCCIII\", \"CCCIV\", \"CCCV\", \"CCCVI\", \"CCCVII\", \"CCCVIII\", \"CXXX\"\
    ,\n        \"CCXX\", \"CCXXX\", \"CCXXXI\", \"CCXXXII\", \"CCXXXIII\", \"CCXXXIV\"\
    , \"CCXXXV\", \"CCXXXVI\", \"CCXXXVII\", \"CCXXXVIII\", \"CC", "    romans :=\
    \ map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10: \"vii\"\
    ,\n        50: \"viii\",\n        100: \"ix\",\n        500: \"ixi\",\n      \
    \  1000: \"ixii\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n   \
    \     fmt.Println(\"Invalid input\")\n    }\n    return strings.ToLower(roman)\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500:\
    \ \"c\",\n        1000: \"d\",\n        5000: \"d\",\n    }\n    roman_numeral\
    \ := roman_numerals[number]\n    if number < 1 || number > 1000 {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    return roman_numeral\n}\n", "    romans := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000:\
    \ \"d\",\n        10000: \"c\",\n        50000: \"c\",\n        100000: \"c\"\
    ,\n        500000: \"c\",\n        1000000: \"m\",\n        5000000: \"m\",\n\
    \        10000000: \"m\",\n        50000000: \"m\",\n        100000000: \"m\"\
    ,\n        500000000: \"m\",\n        1000000000: \"m\",\n        5000000000:\
    \ \"m\",\n        10000000000: \"m\",\n        50000000000: \"m\",\n        100000000000:\
    \ \"m\",\n        500000000000: \"m\",\n        1000000000000: \"m\",\n      \
    \  5000000000000: \"m\",\n        10000000000000: \"m\",\n        50000000000000:\
    \ \"m\",\n        100000000000000: \"m\",\n        500000000000000: \"m\",\n \
    \       1000000000000000: \"m\",\n        5000000000000000: \"m\",\n        1000000000000000000:\
    \ \"m\",\n    }\n    roman_number := number\n    roman_number -= int('0')\n  \
    \  roman_number /= int('10')\n    roman_number -= int('0')\n    roman_number /=\
    \ int('100')\n    roman_number -= int('0')\n    roman_number /= int('1000')\n\
    \    roman_number -= int('0')\n    roman_number /= int('10000')\n    roman_number\
    \ -= int('0')\n    roman_number /= int('100000')\n    roman_number -= int('0')\n\
    \    roman_number /= int('1000000')\n    roman_number -= int('0')\n    roman_number\
    \ /= int('5000000')\n    roman_number -= int('0')\n    roman_number /= int('10000000')\n\
    \    roman_number -= int('0')\n    roman_number /= int('50000000')\n    roman_number\
    \ -= int('0')\n    roman_number /= int('100000000')\n    roman_number -= int('0')\n\
    \    roman_number /= int('500000000')\n    roman_number -= int('0')\n    roman_number\
    \ /= int('1000000000')\n    roman_number -= int('0')\n    roman_number /= int('5000000000')\n\
    \    roman_number -= int('0')\n    roman_number /= int('10000000000')\n    roman_number\
    \ -= int('0')\n    roman_number /= int('5", "    if number < 1 || number > 1000\
    \ {\n        fmt.Println(\"Invalid input\")\n    }\n    roman_numerals := []string{\"\
    I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\"\
    , \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"\
    XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"\
    XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\",\
    \ \"LII\", \"LIII\", \"LIIII\", \"LIIV\", \"LIV\", \"LIVI\", \"LIVII\", \"LIVIII\"\
    , \"LIIX\", \"LX\", \"L\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\"\
    , \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\"\
    , \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CIII\", \"CIIII\"\
    , \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"\
    CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\"\
    , \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"\
    CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\"\
    , \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"\
    CXL\", \"CL\", \"CLI\", \"CLII\", \"CLIII\", \"CLIIII\", \"CLIIV\", \"CLIV\",\
    \ \"CLIVI\", \"CLIVII\", \"", "    if number < 1 || number > 1000 {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    romanNumerals := map[int]string{\n        1: \"i\"\
    ,\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n        100: \"\
    c\",\n        500: \"c\",\n        1000: \"d\",\n        5000: \"d\",\n      \
    \  10000: \"c\",\n        50000: \"c\",\n        100000: \"x\",\n        500000:\
    \ \"x\",\n        1000000: \"ix\",\n        5000000: \"ix\",\n        10000000:\
    \ \"iv\",\n        50000000: \"iv\",\n        100000000: \"v\",\n        500000000:\
    \ \"v\",\n        1000000000: \"vi\",\n        5000000000: \"vi\",\n        10000000000:\
    \ \"i\",\n        50000000000: \"i\",\n        100000000000: \"ii\",\n       \
    \ 500000000000: \"ii\",\n        1000000000000: \"ii\",\n        5000000000000:\
    \ \"ii\",\n        10000000000000: \"ii\",\n        50000000000000: \"ii\",\n\
    \        100000000000000: \"ii\",\n        500000000000000: \"ii\",\n        1000000000000000:\
    \ \"ii\",\n        5000000000000000: \"ii\",\n        1000000000000000000: \"\
    i\",\n        50000000000000000: \"i\",\n        10000000000000000000: \"ii\"\
    ,\n        5000000000000000000: \"ii\",\n        100000000000000000000: \"ii\"\
    ,\n        50000000000000000000: \"ii\",\n        1000000000000000000000: \"ii\"\
    ,\n        500000000000000000000: \"ii\",\n        10000000000000000000000: \"\
    ii\",\n        5000000000000000000000: \"ii\",\n        100000000000000000000000:\
    \ \"ii\",\n        50000000000000000000000: \"ii\",\n        1000000000000000000000000:\
    \ \"ii\",\n        500000000000000000000000: \"ii\",\n        10000000000000000000000000:\
    \ \"ii\",\n        5000000000000000000000000: \"ii\",\n        100000000000000000000000000:\
    \ \"ii\",\n        50000000000000000000000000: \"ii\",\n        1000000000000000000000000000:\
    \ \"ii\",\n        500000000000000000000000000: \"ii\",\n        10000000000000000000000000000:\
    \ \"ii\",\n        5000000000000000000000000000: \"ii\",\n        100000000000000000000000000000:\
    \ \"ii\",\n        50000000000000000000000000000: \"ii\",\n        1000000000000000000000000000000:\
    \ \"ii\",\n        500000000000000000000000000000: \"ii\",\n        10000000000000000000000000000000:\
    \ \"ii\",\n        5000000000000000000000000000000: \"ii\",\n        100000000000000000000000000000000:\
    \ \"ii\",\n        50000000000000000000000000000000: \"ii\",\n        1000000000000000000000000000000000:\
    \ \"ii\",\n        50000000000000000", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \        5000: \"viiivi\",\n        10000: \"viiivii\",\n        50000: \"vivvi\"\
    ,\n        100000: \"vivvii\",\n        500000: \"viviv\",\n        1000000: \"\
    vivivi\",\n        5000000: \"vivivii\",\n        10000000: \"viviviii\",\n  \
    \      50000000: \"viviviiii\",\n        100000000: \"viviviiiii\",\n        500000000:\
    \ \"viviviiiiii\",\n        1000000000: \"viviviiiiiii\",\n        5000000000:\
    \ \"viviviiiiiiii\",\n        10000000000: \"viviviiiiiiiii\",\n        50000000000:\
    \ \"viviviiiiiiiiii\",\n        100000000000: \"viviviiiiiiiiiii\",\n        500000000000:\
    \ \"viviviiiiiiiiiiii\",\n        1000000000000: \"viviviiiiiiiiiiiii\",\n   \
    \     5000000000000: \"viviviiiiiiiiiiiiii\",\n        10000000000000: \"viviviiiiiiiiiiiiiii\"\
    ,\n        50000000000000: \"viviviiiiiiiiiiiiiiii\",\n        100000000000000:\
    \ \"viviviiiiiiiiiiiiiiiii\",\n        500000000000000: \"viviviiiiiiiiiiiiiiiiii\"\
    ,\n        1000000000000000: \"viviviiiiiiiiiiiiiiiiiii\",\n        5000000000000000:\
    \ \"viviviiiiiiiiiiiiiiiiiiii\",\n        1000000000000000000: \"viviviiiiiiiiiiiiiiiiiiiii\"\
    ,\n    }\n    roman_numeral := \"\"\n    for roman_numeral, number := range roman_numerals\
    \ {\n        if number >= number {\n            break\n        }\n    }\n    if\
    \ number > 1000 {\n        fmt.Println(\"int_to_mini_roman: number too large\"\
    )\n    }\n    return roman_numerals[number]\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vii\",\n        10000: \"viii\",\n        100000: \"viv\",\n    }\n\
    \    romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", "    romans := map[int]string{\n        1: \"I\",\n        5: \"V\",\n \
    \       10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"D\"\
    ,\n        1000: \"M\",\n    }\n    roman_number := \"\"\n    for roman_number\
    \ == \"\" {\n        roman_number = romans[number]\n        number -= roman_number\n\
    \    }\n    return roman_number\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\"\
    ,\n        100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n    }\n   \
    \ romanNumeral := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n\
    }\n", "    romans := []string{\n        \"I\", \"II\", \"III\", \"IV\", \"V\"\
    , \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"XIII\"\
    , \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"\
    XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n\
    \        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\"\
    ,\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"\
    CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CIX\", \"CXC\", \"CXCI\",\n    \
    \    \"CXCII\", \"CXCIII\", \"CXCIV\", \"CXCV\", \"CXCVI\", \"CXCVII\", \"CXCVIII\"\
    , \"CXCIX\",\n        \"CC\", \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CCV\"\
    , \"CCVI\", \"CCVII\", \"CCVIII\",\n        \"CCIX\", \"CCC\", \"CCCI\", \"CCCII\"\
    , \"CCCIII\", \"CCCIV\", \"CCCV\", \"CCCVI\", \"CCCVII\",\n        \"CCCVIII\"\
    , \"CCCIX", "    romanNumerals := []string{\n        \"I\", \"II\", \"III\", \"\
    IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n    \
    \    \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\"\
    , \"XXI\", \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"\
    XL\", \"L\", \"LI\", \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"\
    LVII\", \"LVIII\",\n        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"\
    LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\",\
    \ \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    ,\n        \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\"\
    , \"LXXXIV\", \"LXXXV\",\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\"\
    , \"XC\", \"XC\", \"XCI\", \"XCII\", \"XCII\",\n        \"XCIII\", \"XCIV\", \"\
    XCV\", \"XCVI\", \"XCVII\", \"XCVIII\", \"XCIX\", \"XCXX\", \"XCXXI\",\n     \
    \   \"XCXXII\", \"XCXXIII\", \"XCXXIV\", \"XCXXV\", \"XCXXVI\", \"XCXXVII\", \"\
    XCXXVIII\",\n        \"XCXXIX\", \"XCXXX\", \"XCXXXI\", \"XCXXXII\", \"XCXXXIII\"\
    , \"XCXXXIV\", \"XCXXXV\",\n        \"XCXXXVI\", \"XCXXXVII\", \"XCXXXVIII\",\
    \ \"XCXXXIX\", \"C\", \"CC\", \"CCI\", \"CCII\",\n        \"CCIII\", \"CCIV\"\
    , \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"viii\",\n        50: \"\
    viiii\",\n        100: \"viiii\",\n        500: \"viiii\",\n        1000: \"viiii\"\
    ,\n        5000: \"viiii\",\n        10000: \"viiii\",\n        50000: \"viiii\"\
    ,\n        100000: \"viiii\",\n        500000: \"viiii\",\n        1000000: \"\
    viiii\",\n        5000000: \"viiii\",\n        10000000: \"viiii\",\n        50000000:\
    \ \"viiii\",\n        100000000: \"viiii\",\n        500000000: \"viiii\",\n \
    \       1000000000: \"viiii\",\n        5000000000: \"viiii\",\n        10000000000:\
    \ \"viiii\",\n        50000000000: \"viiii\",\n        100000000000: \"viiii\"\
    ,\n        500000000000: \"viiii\",\n        1000000000000: \"viiii\",\n     \
    \   5000000000000: \"viiii\",\n        10000000000000: \"viiii\",\n        50000000000000:\
    \ \"viiii\",\n        100000000000000: \"viiii\",\n        500000000000000: \"\
    viiii\",\n        1000000000000000: \"viiii\",\n        5000000000000000: \"viiii\"\
    ,\n        1000000000000000000: \"viiii\",\n        50000000000000000: \"viiii\"\
    ,\n        10000000000000000000: \"viiii\",\n        5000000000000000000: \"viiii\"\
    ,\n        100000000000000000000: \"viiii\",\n        50000000000000000000: \"\
    viiii\",\n        1000000000000000000000: \"viiii\",\n        500000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000: \"viiii\",\n        5000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000: \"viiii\",\n        50000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000: \"viiii\",\n        500000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000: \"viiii\",\n        5000000000000000000000000:\
    \ \"viiii\",\n        100000000000000000000000000: \"viiii\",\n        50000000000000000000000000:\
    \ \"viiii\",\n        1000000000000000000000000000: \"viiii\",\n        500000000000000000000000000:\
    \ \"viiii\",\n        10000000000000000000000000000: \"viiii\",\n        5000000000000000000000000000",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"I\"\n    case 2:\n        roman_number = \"II\"\n    case 3:\n        roman_number\
    \ = \"III\"\n    case 4:\n        roman_number = \"IV\"\n    case 5:\n       \
    \ roman_number = \"V\"\n    case 6:\n        roman_number = \"VI\"\n    case 7:\n\
    \        roman_number = \"VII\"\n    case 8:\n        roman_number = \"VIII\"\n\
    \    case 9:\n        roman_number = \"IX\"\n    case 10:\n        roman_number\
    \ = \"X\"\n    case 11:\n        roman_number = \"XI\"\n    case 12:\n       \
    \ roman_number = \"XII\"\n    case 13:\n        roman_number = \"XIII\"\n    case\
    \ 14:\n        roman_number = \"XIV\"\n    case 15:\n        roman_number = \"\
    XV\"\n    case 16:\n        roman_number = \"XVI\"\n    case 17:\n        roman_number\
    \ = \"XVII\"\n    case 18:\n        roman_number = \"XVIII\"\n    case 19:\n \
    \       roman_number = \"XIX\"\n    case 20:\n        roman_number = \"XX\"\n\
    \    case 21:\n        roman_number = \"XXI\"\n    case 22:\n        roman_number\
    \ = \"XXII\"\n    case 23:\n        roman_number = \"XXIII\"\n    case 24:\n \
    \       roman_number = \"XXIV\"\n    case 25:\n        roman_number = \"XXV\"\n\
    \    case 26:\n        roman_number = \"XXVI\"\n    case 27:\n        roman_number\
    \ = \"XXVII\"\n    case 28:\n        roman_number = \"XXVIII\"\n    case 29:\n\
    \        roman_number = \"XXIX\"\n    case 30:\n        roman_number = \"XXX\"\
    \n    case 31:\n        roman_number = \"XXXI\"\n    case 32:\n        roman_number\
    \ = \"XXXII\"\n    case 33:\n        roman_number = \"XXXIII\"\n    case 34:\n\
    \        roman_number = \"XXXIV\"\n    case 35:\n        roman_number = \"XXXV\"\
    \n    case 36:\n        roman_number = \"XXXVI\"\n    case 37:\n        roman_number\
    \ = \"XXXVII\"\n    case 38:\n        roman_number = \"XXXVIII\"\n    case 39:\n\
    \        roman_number = \"XXXIX\"\n    case 40:\n        roman_number = \"XL\"",
  "    if number < 1 || number > 1000 {\n        fmt.Println(\"Invalid input\")\n\
    \    }\n    roman_numerals := []string{\"I\", \"II\", \"III\", \"IV\", \"V\",\
    \ \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\"\
    , \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\", \"\
    XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\"\
    , \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\"\
    , \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\", \"LXI\", \"LXII\", \"LXIII\"\
    , \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"XC\", \"C\"\
    , \"CI\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"\
    CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CC\", \"CCI\", \"CCII\", \"CCIII\"\
    , \"CCIV\", \"CCV\", \"CCVI\", \"CCVII\", \"CCVIII\", \"CCIX\", \"CD\", \"D\"\
    , \"DI\", \"DII\", \"DIII\", \"DIIII\", \"DIIV\", \"DIV\", \"DIVI\", \"DIVII\"\
    , \"DIVIII\", \"DIVIV\", \"DIVV\", \"DIVVI\", \"DIVVII\", \"DIVVIII\", \"DIVIX\"\
    , \"CM\", \"M\", \"MI\", \"MII\", \"MIII\", \"MIIV\", \"MIV\", \"MIVI\", \"MIVII\"\
    , \"MIVIII\", \"MIVIV\", \"MIVV\", \"MIVVI\", \"MIVVII\", \"MIVVIII\", \"MIVIX\"\
    , \"MN\", \"N\", \"NI\", \"NII\", \"NIII\", \"NIV\", \"NIVI\", \"NIVII\", \"NIVIII\"\
    , \"NIVIV\", \"NIVV\", \"NIVVI\", \"NIVVII\", \"NIVVIII\", \"NIVIX\", \"NO\",\
    \ \"O\", \"OI\", \"OII\", \"OIII\", \"OIV\", \"OIVI\", \"OIVII\", \"OIVIII\",\
    \ \"OIVIV\", \"OIVV\", \"OIVVI\", \"OIVVII\", \"OIVVIII\", \"OIVIX\", \"OO\",\
    \ \"OOI\", \"", "    romanNumerals := map[int]string{\n        1: \"i\",\n   \
    \     5: \"vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"\
    ix\",\n        500: \"ixi\",\n        1000: \"ixii\",\n    }\n    romanNumeral\
    \ := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n}\n", " \
    \   if number < 1 || number > 1000 {\n        fmt.Println(\"Invalid input\")\n\
    \    }\n    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"l\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    c\",\n        1000: \"d\",\n        5000: \"d\",\n        10000: \"c\",\n    \
    \    50000: \"c\",\n        100000: \"x\",\n        500000: \"x\",\n        1000000:\
    \ \"ix\",\n        5000000: \"ix\",\n        10000000: \"iv\",\n        50000000:\
    \ \"iv\",\n        100000000: \"v\",\n        500000000: \"v\",\n        1000000000:\
    \ \"vi\",\n        5000000000: \"vi\",\n        10000000000: \"i\",\n        50000000000:\
    \ \"i\",\n        100000000000: \"ii\",\n        500000000000: \"ii\",\n     \
    \   1000000000000: \"ii\",\n        5000000000000: \"ii\",\n        10000000000000:\
    \ \"ii\",\n        50000000000000: \"ii\",\n        100000000000000: \"ii\",\n\
    \        500000000000000: \"ii\",\n        1000000000000000: \"ii\",\n       \
    \ 5000000000000000: \"ii\",\n        1000000000000000000: \"ii\",\n        50000000000000000:\
    \ \"ii\",\n        10000000000000000000: \"ii\",\n        5000000000000000000:\
    \ \"ii\",\n        100000000000000000000: \"ii\",\n        50000000000000000000:\
    \ \"ii\",\n        1000000000000000000000: \"ii\",\n        500000000000000000000:\
    \ \"ii\",\n        10000000000000000000000: \"ii\",\n        5000000000000000000000:\
    \ \"ii\",\n        100000000000000000000000: \"ii\",\n        50000000000000000000000:\
    \ \"ii\",\n        1000000000000000000000000: \"ii\",\n        500000000000000000000000:\
    \ \"ii\",\n        10000000000000000000000000: \"ii\",\n        5000000000000000000000000:\
    \ \"ii\",\n        100000000000000000000000000: \"ii\",\n        50000000000000000000000000:\
    \ \"ii\",\n        1000000000000000000000000000: \"ii\",\n        500000000000000000000000000:\
    \ \"ii\",\n        10000000000000000000000000000: \"ii\",\n        5000000000000000000000000000:\
    \ \"ii\",\n        100000000000000000000000000000: \"ii\",\n        50000000000000000000000000000:\
    \ \"ii\",\n        1000000000000000000000000000000: \"ii\",\n        500000000000000000000000000000:\
    \ \"ii\",\n        10000000000000000000000000000000: \"ii\",\n        5000000000000000000000000000000:\
    \ \"ii\",\n        100000000000000000000000000000000: \"ii\",\n        50000000000000000000000000000000:\
    \ \"ii\",\n        1000000000000000000000000000000000: \"ii\",\n        500000000000000000000000000000000:\
    \ \"", "    roman_numerals := []string{\n        \"I\", \"II\", \"III\", \"IV\"\
    , \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\",\n        \"\
    XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\"\
    , \"XXII\",\n        \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\"\
    , \"XXIX\", \"XXX\", \"XXXI\",\n        \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\"\
    , \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\n        \"XL\", \"L\", \"LI\"\
    , \"LII\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\",\n\
    \        \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"\
    LXVI\", \"LXVII\", \"LXVIII\",\n        \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\"\
    , \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\",\n        \"LXXVIII\"\
    , \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\"\
    ,\n        \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"\
    CI\", \"CII\", \"CII\",\n        \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\",\n        \"CXIII\", \"CXIV\"\
    , \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\",\n   \
    \     \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\"\
    , \"CXXIX\",\n        \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\"\
    , \"CXXXV\", \"CXXXVI\", \"CXXXVII\",\n        \"CXXXVIII\", \"CXXXIX\", \"CC\"\
    , \"CCI\", \"CCII\", \"CCIII\", \"CCIV\", \"CV\", \"CVI\",\n        \"CVII\",\
    \ \"CVIII", "    if number < 1 || number > 1000 {\n        fmt.Println(\"Invalid\
    \ input\")\n        return \"\"\n    }\n\n    roman_numerals := []string{\"I\"\
    , \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"\
    XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\"\
    , \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\"\
    , \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"\
    XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\",\
    \ \"LII\", \"LIII\", \"LIIII\", \"LIIV\", \"LIV\", \"LIVI\", \"LIVII\", \"LIVIII\"\
    , \"LIIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\"\
    , \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"\
    LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\", \"\
    LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\"\
    , \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CIII\", \"CIIII\"\
    , \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"\
    CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\"\
    , \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"\
    CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\"\
    , \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"\
    CXL\", \"CL\", \"CLI\", \"CLII\", \"CLIII\", \"CLIIII\", \"CLIIV\", \"CLIV\",\
    \ \"CLIVI\", \"CLIV", "    if number < 1 || number > 1000 {\n        fmt.Println(\"\
    Invalid input\")\n    }\n    roman_number := \"\"\n    switch number {\n    case\
    \ 1:\n        roman_number = \"x\"\n    case 2:\n        roman_number = \"ix\"\
    \n    case 3:\n        roman_number = \"lb\"\n    case 4:\n        roman_number\
    \ = \"c\"\n    case 5:\n        roman_number = \"d\"\n    case 6:\n        roman_number\
    \ = \"i\"\n    case 7:\n        roman_number = \"v\"\n    case 8:\n        roman_number\
    \ = \"f\"\n    case 9:\n        roman_number = \"v\"\n    case 10:\n        roman_number\
    \ = \"x\"\n    case 11:\n        roman_number = \"c\"\n    case 12:\n        roman_number\
    \ = \"lb\"\n    case 13:\n        roman_number = \"c\"\n    case 14:\n       \
    \ roman_number = \"d\"\n    case 15:\n        roman_number = \"i\"\n    case 16:\n\
    \        roman_number = \"v\"\n    case 17:\n        roman_number = \"f\"\n  \
    \  case 18:\n        roman_number = \"v\"\n    case 19:\n        roman_number\
    \ = \"x\"\n    case 20:\n        roman_number = \"c\"\n    case 21:\n        roman_number\
    \ = \"lb\"\n    case 22:\n        roman_number = \"c\"\n    case 23:\n       \
    \ roman_number = \"d\"\n    case 24:\n        roman_number = \"i\"\n    case 25:\n\
    \        roman_number = \"v\"\n    case 26:\n        roman_number = \"f\"\n  \
    \  case 27:\n        roman_number = \"v\"\n    case 28:\n        roman_number\
    \ = \"x\"\n    case 29:\n        roman_number = \"c\"\n    case 30:\n        roman_number\
    \ = \"lb\"\n    case 31:\n        roman_number = \"c\"\n    case 32:\n       \
    \ roman_number = \"d\"\n    case 33:\n        roman_number = \"i\"\n    case 34:\n\
    \        roman_number = \"v\"\n    case 35:\n        roman_number = \"f\"\n  \
    \  case 36:\n        roman_number = \"v\"\n    case 37:\n        roman_number\
    \ = \"x\"\n    case 38:\n        roman_number = \"c\"\n    case 39:\n        roman_number\
    \ = \"lb\"\n    case 40:\n        roman_number = \"c\"\n    case 41:\n       \
    \ roman_number = \"d\"\n    case 42:\n        roman_number = \"i\"\n    case 43:\n\
    \        roman_number = \"v\"", "    roman_numerals := map[int]string{\n     \
    \   1: \"i\",\n        5: \"vi\",\n        10: \"l\",\n        50: \"l\",\n  \
    \      100: \"c\",\n        500: \"c\",\n        1000: \"d\",\n        5000: \"\
    d\",\n        10000: \"c\",\n        50000: \"c\",\n        100000: \"x\",\n \
    \       500000: \"x\",\n        1000000: \"ix\",\n        5000000: \"ix\",\n \
    \       10000000: \"iv\",\n        50000000: \"iv\",\n        100000000: \"v\"\
    ,\n        500000000: \"v\",\n        1000000000: \"vi\",\n        5000000000:\
    \ \"vi\",\n        10000000000: \"vi\",\n        50000000000: \"vi\",\n      \
    \  100000000000: \"vi\",\n        500000000000: \"vi\",\n        1000000000000:\
    \ \"vi\",\n        5000000000000: \"vi\",\n        10000000000000: \"vi\",\n \
    \       50000000000000: \"vi\",\n        100000000000000: \"vi\",\n        500000000000000:\
    \ \"vi\",\n        1000000000000000: \"vi\",\n        5000000000000000: \"vi\"\
    ,\n        1000000000000000000: \"vi\",\n    }\n    roman_numeral := roman_numerals[number]\n\
    \    return strings.ToLower(roman_numeral)\n}\n", "    roman_numerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viv\",\n        1000: \"vi\",\n     \
    \   5000: \"vi\",\n        10000: \"vi\",\n        50000: \"vi\",\n        100000:\
    \ \"vi\",\n        500000: \"vi\",\n        1000000: \"vi\",\n        5000000:\
    \ \"vi\",\n        10000000: \"vi\",\n        50000000: \"vi\",\n        100000000:\
    \ \"vi\",\n        500000000: \"vi\",\n        1000000000: \"vi\",\n        5000000000:\
    \ \"vi\",\n        10000000000: \"vi\",\n        50000000000: \"vi\",\n      \
    \  100000000000: \"vi\",\n        500000000000: \"vi\",\n        1000000000000:\
    \ \"vi\",\n        5000000000000: \"vi\",\n        10000000000000: \"vi\",\n \
    \       50000000000000: \"vi\",\n        100000000000000: \"vi\",\n        500000000000000:\
    \ \"vi\",\n        1000000000000000: \"vi\",\n        5000000000000000: \"vi\"\
    ,\n        1000000000000000000: \"vi\",\n    }\n\n    roman_numeral := roman_numerals[number]\n\
    \n    return strings.ToLower(roman_numeral)\n}\n", "    if number < 1 || number\
    \ > 1000 {\n        fmt.Println(\"Invalid input\")\n    }\n    roman_num := \"\
    \"\n    switch number {\n    case 1:\n        roman_num = \"I\"\n    case 2:\n\
    \        roman_num = \"II\"\n    case 3:\n        roman_num = \"III\"\n    case\
    \ 4:\n        roman_num = \"IV\"\n    case 5:\n        roman_num = \"V\"\n   \
    \ case 6:\n        roman_num = \"VI\"\n    case 7:\n        roman_num = \"VII\"\
    \n    case 8:\n        roman_num = \"VIII\"\n    case 9:\n        roman_num =\
    \ \"IX\"\n    case 10:\n        roman_num = \"X\"\n    case 11:\n        roman_num\
    \ = \"XI\"\n    case 12:\n        roman_num = \"XII\"\n    case 13:\n        roman_num\
    \ = \"XIII\"\n    case 14:\n        roman_num = \"XIV\"\n    case 15:\n      \
    \  roman_num = \"XV\"\n    case 16:\n        roman_num = \"XVI\"\n    case 17:\n\
    \        roman_num = \"XVII\"\n    case 18:\n        roman_num = \"XVIII\"\n \
    \   case 19:\n        roman_num = \"XIX\"\n    case 20:\n        roman_num = \"\
    XX\"\n    case 21:\n        roman_num = \"XXI\"\n    case 22:\n        roman_num\
    \ = \"XXII\"\n    case 23:\n        roman_num = \"XXIII\"\n    case 24:\n    \
    \    roman_num = \"XXIV\"\n    case 25:\n        roman_num = \"XXV\"\n    case\
    \ 26:\n        roman_num = \"XXVI\"\n    case 27:\n        roman_num = \"XXVII\"\
    \n    case 28:\n        roman_num = \"XXVIII\"\n    case 29:\n        roman_num\
    \ = \"XXIX\"\n    case 30:\n        roman_num = \"XXX\"\n    case 31:\n      \
    \  roman_num = \"XXXI\"\n    case 32:\n        roman_num = \"XXXII\"\n    case\
    \ 33:\n        roman_num = \"XXXIII\"\n    case 34:\n        roman_num = \"XXXIV\"\
    \n    case 35:\n        roman_num = \"XXXV\"\n    case 36:\n        roman_num\
    \ = \"XXXVI\"\n    case 37:\n        roman_num = \"XXXVII\"\n    case 38:\n  \
    \      roman_num = \"XXXVIII\"\n    case 39:\n        ", "    romanNumerals :=\
    \ []string{\n        \"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\"\
    , \"C\", \"CD\", \"D\", \"CM\", \"M\"\n    }\n    romanNumeralIndex := 0\n   \
    \ romanNumeralIndex := romanNumeralIndex + number/100\n    romanNumeralIndex :=\
    \ romanNumeralIndex % 10\n    romanNumeralIndex := romanNumeralIndex + number%100/10\n\
    \    romanNumeralIndex := romanNumeralIndex % 10\n    romanNumeralIndex := romanNumeralIndex\
    \ + number%100\n    return romanNumerals[romanNumeralIndex]\n}\n", "    roman_number\
    \ := []string{\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"}\n    roman_number := roman_number[:number%100]\n\
    \    number /= 100\n    roman_number := append(roman_number, roman_number[:number%10]...)\n\
    \    number /= 10\n    roman_number := append(roman_number, roman_number[:number]...)\n\
    \    return string(roman_number)\n}\n", "    roman_num := \"\"\n    switch number\
    \ {\n    case 1:\n        roman_num = \"x\"\n    case 5:\n        roman_num =\
    \ \"v\"\n    case 10:\n        roman_num = \"i\"\n    case 20:\n        roman_num\
    \ = \"x\"\n    case 50:\n        roman_num = \"l\"\n    case 100:\n        roman_num\
    \ = \"c\"\n    case 200:\n        roman_num = \"d\"\n    case 500:\n        roman_num\
    \ = \"l\"\n    case 1000:\n        roman_num = \"m\"\n    }\n    return roman_num\n\
    }\n", "    roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"\
    vi\",\n        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n  \
    \      500: \"viivi\",\n        1000: \"viivii\",\n    }\n    roman_numeral :=\
    \ roman_numerals[number]\n    return strings.ToLower(roman_numeral)\n}\n", " \
    \   roman_numerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"\
    viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"\
    viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000:\
    \ \"viv\",\n        50000000: \"viiv\",\n        100000000: \"viv\",\n       \
    \ 500000000: \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\"\
    ,\n        10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n    }\n\n    roman_numeral := roman_numerals[number]\n\
    \    return strings.ToLower(roman_numeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"I\",\n        5: \"V\",\n        10: \"X\",\n        50: \"L\",\n\
    \        100: \"C\",\n        500: \"D\",\n        1000: \"M\",\n    }\n    romanNumeral\
    \ := romanNumerals[number]\n    return strings.ToLower(romanNumeral)\n}\n", " \
    \   romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viv\",\n        1000: \"vi\",\n    }\n    romanNumerals[1000] = \"v\"\n  \
    \  romanNumerals[5000] = \"vi\"\n    romanNumerals[10000] = \"vii\"\n    romanNumerals[50000]\
    \ = \"viii\"\n    romanNumerals[1000000] = \"viv\"\n    romanNumerals[5000000]\
    \ = \"viv\"\n    romanNumerals[100000000] = \"vi\"\n    romanNumerals[500000000]\
    \ = \"vii\"\n    romanNumerals[10000000000] = \"viii\"\n    romanNumerals[5000000000]\
    \ = \"viii\"\n    romanNumerals[100000000000] = \"viv\"\n    romanNumerals[50000000000]\
    \ = \"viv\"\n    romanNumerals[1000000000000] = \"vi\"\n    romanNumerals[5000000000000]\
    \ = \"vii\"\n    romanNumerals[100000000000000] = \"viii\"\n    romanNumerals[50000000000000]\
    \ = \"viii\"\n    romanNumerals[1000000000000000] = \"viv\"\n    romanNumerals[500000000000000]\
    \ = \"viv\"\n    romanNumerals[10000000000000000] = \"vi\"\n    romanNumerals[5000000000000000]\
    \ = \"vii\"\n    romanNumerals[100000000000000000] = \"viii\"\n    romanNumerals[50000000000000000]\
    \ = \"viii\"\n    romanNumerals[1000000000000000000] = \"viv\"\n    romanNumerals[500000000000000000]\
    \ = \"viv\"\n    romanNumerals[10000000000000000000] = \"vi\"\n    romanNumerals[1000000000000000000]\
    \ = \"v\"\n    romanNumerals[50000000000000000] = \"vi\"\n    romanNumerals[10000000000000000000]\
    \ = \"vii\"\n    romanNumerals[500000000000000000] = \"viii\"\n    romanNumerals[100000000000000000000]\
    \ = \"viv\"\n    romanNumerals[50000000000000000000] = \"viv\"\n    romanNumerals[1000000000000000000000]\
    \ = \"vi\"\n    romanNumerals[500000000000000000000] = \"vii\"\n    romanNumeral",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"I\"\n    case 2:\n        roman_number = \"II\"\n    case 3:\n        roman_number\
    \ = \"III\"\n    case 4:\n        roman_number = \"IV\"\n    case 5:\n       \
    \ roman_number = \"V\"\n    case 6:\n        roman_number = \"VI\"\n    case 7:\n\
    \        roman_number = \"VII\"\n    case 8:\n        roman_number = \"VIII\"\n\
    \    case 9:\n        roman_number = \"IX\"\n    case 10:\n        roman_number\
    \ = \"X\"\n    case 11:\n        roman_number = \"XI\"\n    case 12:\n       \
    \ roman_number = \"XII\"\n    case 13:\n        roman_number = \"XIII\"\n    case\
    \ 14:\n        roman_number = \"XIV\"\n    case 15:\n        roman_number = \"\
    XV\"\n    case 16:\n        roman_number = \"XVI\"\n    case 17:\n        roman_number\
    \ = \"XVII\"\n    case 18:\n        roman_number = \"XVIII\"\n    case 19:\n \
    \       roman_number = \"XIX\"\n    case 20:\n        roman_number = \"XX\"\n\
    \    case 21:\n        roman_number = \"XXI\"\n    case 22:\n        roman_number\
    \ = \"XXII\"\n    case 23:\n        roman_number = \"XXIII\"\n    case 24:\n \
    \       roman_number = \"XXIV\"\n    case 25:\n        roman_number = \"XXV\"\n\
    \    case 26:\n        roman_number = \"XXVI\"\n    case 27:\n        roman_number\
    \ = \"XXVII\"\n    case 28:\n        roman_number = \"XXVIII\"\n    case 29:\n\
    \        roman_number = \"XXIX\"\n    case 30:\n        roman_number = \"XXX\"\
    \n    case 31:\n        roman_number = \"XXXI\"\n    case 32:\n        roman_number\
    \ = \"XXXII\"\n    case 33:\n        roman_number = \"XXXIII\"\n    case 34:\n\
    \        roman_number = \"XXXIV\"\n    case 35:\n        roman_number = \"XXXV\"\
    \n    case 36:\n        roman_number = \"XXXVI\"\n    case 37:\n        roman_number\
    \ = \"XXXVII\"\n    case 38:\n        roman_number = \"XXXVIII\"\n    case 39:\n\
    \        roman_number = \"XXXIX\"\n    case 40:\n        roman_number = \"XL\"",
  "    romanNumerals := map[int]string{\n        1: \"I\",\n        5: \"V\",\n  \
    \      10: \"X\",\n        50: \"L\",\n        100: \"C\",\n        500: \"D\"\
    ,\n        1000: \"M\",\n    }\n    romanNumeral := romanNumerals[number]\n  \
    \  return strings.ToLower(romanNumeral)\n}\n", "    roman_num := \"\"\n    switch\
    \ number {\n    case 1:\n        roman_num = \"x\"\n    case 5:\n        roman_num\
    \ = \"v\"\n    case 10:\n        roman_num = \"i\"\n    case 20:\n        roman_num\
    \ = \"x\"\n    case 50:\n        roman_num = \"l\"\n    case 100:\n        roman_num\
    \ = \"c\"\n    case 200:\n        roman_num = \"d\"\n    case 500:\n        roman_num\
    \ = \"l\"\n    case 1000:\n        roman_num = \"m\"\n    case 2000:\n       \
    \ roman_num = \"c\"\n    case 5000:\n        roman_num = \"l\"\n    case 10000:\n\
    \        roman_num = \"c\"\n    case 20000:\n        roman_num = \"d\"\n    case\
    \ 50000:\n        roman_num = \"l\"\n    case 100000:\n        roman_num = \"\
    m\"\n    case 200000:\n        roman_num = \"c\"\n    case 500000:\n        roman_num\
    \ = \"l\"\n    case 1000000:\n        roman_num = \"m\"\n    case 2000000:\n \
    \       roman_num = \"c\"\n    case 5000000:\n        roman_num = \"l\"\n    case\
    \ 10000000:\n        roman_num = \"m\"\n    case 20000000:\n        roman_num\
    \ = \"c\"\n    case 50000000:\n        roman_num = \"l\"\n    default:\n     \
    \   fmt.Println(\"Error: number too large\")\n    }\n    return roman_num\n}\n",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 5:\n        roman_number = \"v\"\n    case 10:\n        roman_number\
    \ = \"i\"\n    case 50:\n        roman_number = \"l\"\n    case 100:\n       \
    \ roman_number = \"c\"\n    case 500:\n        roman_number = \"d\"\n    case\
    \ 1000:\n        roman_number = \"m\"\n    }\n    return roman_number\n}\n", " \
    \   romanNumerals := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n\
    \        10: \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500:\
    \ \"viiv\",\n        1000: \"viv\",\n        5000: \"viiv\",\n        10000: \"\
    viv\",\n        50000: \"viiv\",\n        100000: \"viv\",\n        500000: \"\
    viiv\",\n        1000000: \"viv\",\n        5000000: \"viiv\",\n        10000000:\
    \ \"viv\",\n        50000000: \"viiv\",\n        100000000: \"viv\",\n       \
    \ 500000000: \"viiv\",\n        1000000000: \"viv\",\n        5000000000: \"viiv\"\
    ,\n        10000000000: \"viv\",\n        50000000000: \"viiv\",\n        100000000000:\
    \ \"viv\",\n        500000000000: \"viiv\",\n        1000000000000: \"viv\",\n\
    \        5000000000000: \"viiv\",\n        10000000000000: \"viv\",\n        50000000000000:\
    \ \"viiv\",\n        100000000000000: \"viv\",\n        500000000000000: \"viiv\"\
    ,\n        1000000000000000: \"viv\",\n        5000000000000000: \"viiv\",\n \
    \       1000000000000000000: \"viv\",\n    }\n    romanNumeral := romanNumerals[number]\n\
    \    return strings.ToLower(romanNumeral)\n}\n", "    romanNumerals := map[int]string{\n\
    \        1: \"i\",\n        5: \"vi\",\n        10: \"vii\",\n        50: \"viii\"\
    ,\n        100: \"viv\",\n        500: \"viivi\",\n        1000: \"viivii\",\n\
    \        5000: \"viiivi\",\n        10000: \"viiivii\",\n        50000: \"vivvi\"\
    ,\n        100000: \"vivvii\",\n        500000: \"viviv\",\n        1000000: \"\
    vivivi\",\n        5000000: \"vivivii\",\n        10000000: \"viviviii\",\n  \
    \      50000000: \"viviivi\",\n        100000000: \"viviivii\",\n        500000000:\
    \ \"viviiivi\",\n        1000000000: \"viviiivii\",\n        5000000000: \"vivivvi\"\
    ,\n        10000000000: \"vivivvii\",\n        50000000000: \"viviviv\",\n   \
    \     100000000000: \"vivivivi\",\n        500000000000: \"viviiviv\",\n     \
    \   1000000000000: \"viviivivi\",\n        5000000000000: \"viviiiviv\",\n   \
    \     10000000000000: \"viviiivivi\",\n        50000000000000: \"vivivviv\",\n\
    \        100000000000000: \"vivivvivi\",\n        500000000000000: \"vivivivvi\"\
    ,\n        1000000000000000: \"vivivivii\",\n        5000000000000000: \"viviiviv\"\
    ,\n        10000000000000000: \"viviivivi\",\n        5000000000000000: \"viviiiviv\"\
    ,\n        10000000000000000: \"viviiivivi\",\n        50000000000000000: \"vivivviv\"\
    ,\n        100000000000000000: \"vivivvivi\",\n        500000000000000000: \"\
    viviviviv\",\n        100000000000000000: \"vivivivivi\",\n        50000000000000000:\
    \ \"viviiviviv\",\n        1000000000000000000: \"viviivivivi\",\n        500000000000000000:\
    \ \"viviiivivi\",\n        10000000000000000000: \"viviiivivi\",\n        5000000000000000000:\
    \ \"vivivvivi\",\n        100000000000000000000: \"vivivvivi\",\n        50000000000000000000:\
    \ \"viviviviv\",\n        1000000000000000000000: \"vivivivivi\",\n        500000000000000000000",
  "    roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 5:\n        roman_number = \"v\"\n    case 10:\n        roman_number\
    \ = \"i\"\n    case 20:\n        roman_number = \"x\"\n    case 50:\n        roman_number\
    \ = \"l\"\n    case 100:\n        roman_number = \"c\"\n    case 200:\n      \
    \  roman_number = \"d\"\n    case 500:\n        roman_number = \"l\"\n    case\
    \ 1000:\n        roman_number = \"c\"\n    case 2000:\n        roman_number =\
    \ \"d\"\n    case 5000:\n        roman_number = \"l\"\n    case 10000:\n     \
    \   roman_number = \"c\"\n    case 20000:\n        roman_number = \"d\"\n    case\
    \ 50000:\n        roman_number = \"l\"\n    case 100000:\n        roman_number\
    \ = \"c\"\n    case 200000:\n        roman_number = \"d\"\n    case 500000:\n\
    \        roman_number = \"l\"\n    case 1000000:\n        roman_number = \"c\"\
    \n    case 2000000:\n        roman_number = \"d\"\n    case 5000000:\n       \
    \ roman_number = \"l\"\n    case 10000000:\n        roman_number = \"c\"\n   \
    \ case 20000000:\n        roman_number = \"d\"\n    case 50000000:\n        roman_number\
    \ = \"l\"\n    case 100000000:\n        roman_number = \"c\"\n    case 200000000:\n\
    \        roman_number = \"d\"\n    case 500000000:\n        roman_number = \"\
    l\"\n    case 1000000000:\n        roman_number = \"c\"\n    case 2000000000:\n\
    \        roman_number = \"d\"\n    case 5000000000:\n        roman_number = \"\
    l\"\n    case 10000000000:\n        roman_number = \"c\"\n    case 20000000000:\n\
    \        roman_number = \"d\"\n    case 50000000000:\n        roman_number = \"\
    l\"\n    case 100000000000:\n        roman_number = \"c\"\n    case 200000000000:\n\
    \        roman_number = \"d\"\n    case 500000000000:\n        roman_number =\
    \ \"l\"\n    case 10000000000000:\n        roman_number = \"c\"\n    case 2000000000000:\n\
    \        roman_number = \"d\"\n    case 5000000000000:\n        roman_number =\
    \ \"l\"\n    case 100000000000000:\n        roman_number = \"c\"\n    case 20000000000000:\n\
    \        roman_number = \"d\"\n    case 50000000000000:\n        roman_", "  \
    \  roman_number := \"\"\n    switch number {\n    case 1:\n        roman_number\
    \ = \"x\"\n    case 2:\n        roman_number = \"c\"\n    case 3:\n        roman_number\
    \ = \"m\"\n    case 4:\n        roman_number = \"l\"\n    case 5:\n        roman_number\
    \ = \"x\"\n    case 6:\n        roman_number = \"c\"\n    case 7:\n        roman_number\
    \ = \"m\"\n    case 8:\n        roman_number = \"l\"\n    case 9:\n        roman_number\
    \ = \"x\"\n    case 10:\n        roman_number = \"c\"\n    case 11:\n        roman_number\
    \ = \"m\"\n    case 12:\n        roman_number = \"l\"\n    case 13:\n        roman_number\
    \ = \"x\"\n    case 14:\n        roman_number = \"c\"\n    case 15:\n        roman_number\
    \ = \"m\"\n    case 16:\n        roman_number = \"l\"\n    case 17:\n        roman_number\
    \ = \"x\"\n    case 18:\n        roman_number = \"c\"\n    case 19:\n        roman_number\
    \ = \"m\"\n    case 20:\n        roman_number = \"l\"\n    case 21:\n        roman_number\
    \ = \"x\"\n    case 22:\n        roman_number = \"c\"\n    case 23:\n        roman_number\
    \ = \"m\"\n    case 24:\n        roman_number = \"l\"\n    case 25:\n        roman_number\
    \ = \"x\"\n    case 26:\n        roman_number = \"c\"\n    case 27:\n        roman_number\
    \ = \"m\"\n    case 28:\n        roman_number = \"l\"\n    case 29:\n        roman_number\
    \ = \"x\"\n    case 30:\n        roman_number = \"c\"\n    case 31:\n        roman_number\
    \ = \"m\"\n    case 32:\n        roman_number = \"l\"\n    case 33:\n        roman_number\
    \ = \"x\"\n    case 34:\n        roman_number = \"c\"\n    case 35:\n        roman_number\
    \ = \"m\"\n    case 36:\n        roman_number = \"l\"\n    case 37:\n        roman_number\
    \ = \"x\"\n    case 38:\n        roman_number = \"c\"\n    case 39:\n        roman_number\
    \ = \"m\"\n    case 40:\n        roman_number = \"l\"\n    case 41:\n        roman_number\
    \ = \"x\"\n    case 42:\n        roman_number = \"c\"\n    case 43:\n        roman_number\
    \ = \"m\"\n    case 44:\n        roman_number = \"l\"\n    case 45:\n        roman_number",
  "    romans := map[int]string{\n        1: \"i\",\n        5: \"vi\",\n        10:\
    \ \"vii\",\n        50: \"viii\",\n        100: \"viv\",\n        500: \"viv\"\
    ,\n        1000: \"vi\",\n    }\n    roman, ok := romans[number]\n    if !ok {\n\
    \        fmt.Printf(\"Invalid number %v\\n\", number)\n    }\n    return roman\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

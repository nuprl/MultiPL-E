name: HumanEval_124_valid_date
language: go_test.go
prompt: "package valid_date_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // You have to write a function which validates a given date string and\n// returns\
  \ true if the date is valid otherwise false.\n// The date is valid if all of the\
  \ following rules are satisfied:\n// 1. The date string is not empty.\n// 2. The\
  \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  // 3. The months should not be less than 1 or higher than 12.\n// 4. The date should\
  \ be in the format: mm-dd-yyyy\n// >>> valid_date(\"03-11-2000\")\n// true\n// >>>\
  \ valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"04-0-2040\")\n// false\n\
  // >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"06/04/2020\")\n\
  // false\nfunc valid_date(date string) bool {\n"
tests: "func TestValid_Date(t *testing.T) {\n  candidate := valid_date\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"03-11-2000\"), expected: true },\n     { actual:\
  \ candidate(\"15-01-2012\"), expected: false },\n     { actual: candidate(\"04-0-2040\"\
  ), expected: false },\n     { actual: candidate(\"06-04-2020\"), expected: true\
  \ },\n     { actual: candidate(\"01-01-2007\"), expected: true },\n     { actual:\
  \ candidate(\"03-32-2011\"), expected: false },\n     { actual: candidate(\"\"),\
  \ expected: false },\n     { actual: candidate(\"04-31-3000\"), expected: false\
  \ },\n     { actual: candidate(\"06-06-2005\"), expected: true },\n     { actual:\
  \ candidate(\"21-31-2000\"), expected: false },\n     { actual: candidate(\"04-12-2003\"\
  ), expected: true },\n     { actual: candidate(\"04122003\"), expected: false },\n\
  \     { actual: candidate(\"20030412\"), expected: false },\n     { actual: candidate(\"\
  2003-04\"), expected: false },\n     { actual: candidate(\"2003-04-12\"), expected:\
  \ false },\n     { actual: candidate(\"04-2003\"), expected: false },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    // Write your code here\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n \
    \       return false\n    }\n    month, day, year := parts[0], parts[1], parts[2]\n\
    \    month, day, year = strings.ToLower(month), strings.ToLower(day), strings.ToLower(year)\n\
    \    month, day, year = strings.TrimSpace(month), strings.TrimSpace(day), strings.TrimSpace(year)\n\
    \    month, day, year = strings.ToUpper(month), strings.ToUpper(day), strings.ToUpper(year)\n\
    \    month, day, year = strings.TrimSpace(month), strings.TrimSpace(day), strings.TrimSpace(year)\n\
    \    month, day, year = strings.ToLower(month), strings.ToLower(day), strings.ToLower(year)\n\
    \    if month == \"\" || day == \"\" || year == \"\" {\n        return false\n\
    \    }\n    month, day, year = strings.TrimSpace(month), strings.TrimSpace(day),\
    \ strings.TrimSpace(year)\n    month, day, year = strings.ToUpper(month), strings.ToUpper(day),\
    \ strings.ToUpper(year)\n    month, day, year = strings.TrimSpace(month), strings.TrimSpace(day),\
    \ strings.TrimSpace(year)\n    month, day, year = strings.ToLower(month), strings.ToLower(day),\
    \ strings.ToLower(year)\n    if month == \"JAN\" && day == \"1\" {\n        return\
    \ false\n    }\n    if month == \"FEB\" && day == \"1\" {\n        return false\n\
    \    }\n    if month == \"MAR\" && day == \"1\" {\n        return false\n    }\n\
    \    if month == \"APR\" && day == \"1\" {\n        return false\n    }\n    if\
    \ month == \"MAY\" && day == \"1\" {\n        return false\n    }\n    if month\
    \ == \"JUN\" && day == \"1\" {\n        return false\n    }\n    if month == \"\
    JUL\" && day == \"1\" {\n        return false\n    }\n    if month == \"AUG\"\
    \ && day == \"1\" {\n        return false\n    }\n    if month == \"SEP\" && day\
    \ == \"1\" {\n        return false\n    }\n    if month == \"OCT\" && day == \"\
    1\" {\n        return false\n    }\n    if month == \"NOV\" && day == \"1\" {\n\
    \        return false\n    }\n    if month == \"DEC\" && day == \"1\" {\n    \
    \    return false\n    }\n    if day == \"1\" {\n        return false\n    }\n\
    \    if day == \"31\" {\n        return false\n    }\n    if day == \"30\" {\n\
    \        return false\n    }\n    if day == \"29\" {\n        return false\n \
    \   }\n    if day == \"31\" {\n        return false\n    }\n    if day ", "  \
    \  // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(date) == 0 {\n        return false\n    }\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    switch month {\n    case 1, 3, 5,\
    \ 7, 8, 10, 12:\n        if day < 1 || day > 30 {\n            return false\n\
    \        }\n    case 4, 6, 9, 11:\n        if day < 1 || day > 29 {\n        \
    \    return false\n        }\n    case 2:\n        if day < 1 || day > 28 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    return true\n}\n", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    // Write your\
    \ code here\n    \n    // Your code here\n    \n    return true\n}\n", "    if\
    \ len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || month == 2 {\n     \
    \   return false\n    }\n    if year < 1000 || year > 9999 {\n        return false\n\
    \    }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n  \
    \      return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)", "    if len(date) == 0 {\n \
    \       return false\n    }\n    day, month, year := getDateParts(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 {\n        return false\n   \
    \ }\n    if month == 2 && day > 29 {\n        return false\n    }\n    if month\
    \ == 4 && day > 30 {\n        return false\n    }\n    if month == 6 && day >\
    \ 31 {\n        return false\n    }\n    if month == 9 && day > 31 {\n       \
    \ return false\n    }\n    if month == 11 && day > 30 {\n        return false\n\
    \    }\n    if month == 1 && day > 31 {\n        return false\n    }\n    return\
    \ true\n}\n", "    // Write your code here\n    \n    \n    return true\n}\n",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  day, month, year := 0, 0, 0\n    day, month, year = parseDate(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n\
    \        return false\n    }\n    return true\n}\n", "    day, month, year :=\
    \ getDate(date)\n    return day != 0 && day <= 31 && month <= 12 && year >= 1\
    \ && year <= 12\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\
    \    day, month, year := getDate(date)\n    if day < 1 || day > 31 || month <\
    \ 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n    }\n\
    \    if month == 2 {\n        if day > 29 {\n            return false\n      \
    \  }\n    }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n  \
    \      return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 2 {\n        if day >\
    \ 29 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(date) == 0 {\n        return false\n    }\n\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n\n    day, month, year =\
    \ strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\n    day,\
    \ month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    day, _ := strconv.Atoi(date[0:2])\n\
    \    month, _ := strconv.Atoi(date[2:4])\n    year, _ := strconv.Atoi(date[4:8])\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999\
    \ {\n        return false\n    }\n    if month == 2 {\n        if day > 29 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 {\n        return false\n\
    \    }\n    if year < 1000 || year > 9999 {\n        return false\n    }\n   \
    \ return true\n}\n", "    day, month, year := getDateParts(date)\n    return isValidDate(day,\
    \ month, year)\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\
    \    day, month, year := getDate(date)\n    if day < 1 || day > 31 || month <\
    \ 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n    }\n\
    \    return true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\
    \    day, month, year := getDateParts(date)\n    if day < 1 || day > 31 || month\
    \ < 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n  \
    \  }\n    switch month {\n    case 1, 3, 5, 7, 8, 10, 12:\n        if day < 1\
    \ || day > 30 {\n            return false\n        }\n    case 4, 6, 9, 11:\n\
    \        if day < 1 || day > 29 {\n            return false\n        }\n    case\
    \ 2:\n        if day < 1 || day > 31 {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    // Your code here\n    \n    return true\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n\n    day, month, year =\
    \ strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\n    day,\
    \ month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    // Write your code here\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    day, month, year := 0, 0, 0\n    day,\
    \ month, year = parseDate(date)\n    if day < 1 || day > 31 || month < 1 || month\
    \ > 12 || year < 1 || year > 9999 {\n        return false\n    }\n    return true\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n    day, month, year\
    \ := getDateParts(date)\n    if day < 1 || day > 31 || month < 1 || month > 12\
    \ || year < 1000 || year > 9999 {\n        return false\n    }\n    if month ==\
    \ 2 {\n        if day > 29 {\n            return false\n        }\n    }\n   \
    \ if month == 4 {\n        if day > 30 {\n            return false\n        }\n\
    \    }\n    if month == 6 {\n        if day > 29 {\n            return false\n\
    \        }\n    }\n    if month == 9 {\n        if day > 30 {\n            return\
    \ false\n        }\n    }\n    if month == 11 {\n        if day > 30 {\n     \
    \       return false\n        }\n    }\n    if month == 2 {\n        if day >\
    \ 28 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   d := strings.Split(date, \"-\")\n    if len(d) != 3 {\n        return false\n\
    \    }\n    days := 0\n    monthDays := []int{0, 31, 29, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31}\n    for _, m := range d[0] {\n        switch m {\n        case\
    \ '1', '3', '5', '7', '8', '10', '12':\n            days++\n        case 4, 6,\
    \ 9, 11:\n            months++\n        }\n    }\n    if days > 31 || months >\
    \ 12 {\n        return false\n    }\n    if days > monthDays[len(d[0])-1] {\n\
    \        return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    day, month, year := split_date(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n    return true\n}\n", "    day, month, year\
    \ := 0, 0, 0\n    day, month, year = parseDate(date)\n    if day < 1 || day >\
    \ 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n\
    \    }\n    if month == 2 {\n        if day > 29 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) !=\
    \ 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)", "    // Write your code here\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    // Write your code here\n    \n    \n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n    day,\
    \ month, year := split_date(date)\n    if day < 1 || day > 31 || month < 1 ||\
    \ month > 12 || year < 1 || year > 9999 {\n        return false\n    }\n    if\
    \ month == 2 {\n        if day > 29 {\n            return false\n        }\n \
    \   } else {\n        if day > 30 {\n            return false\n        }\n   \
    \ }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n \
    \   }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n   \
    \     return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)", "    // Write your code here\n\
    \    \n    \n    return true\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n    day, _ := strconv.Atoi(date[0:2])\n    if day < 1 || day > 31 {\n\
    \        return false\n    }\n    month, _ := strconv.Atoi(date[2:4])\n    if\
    \ month < 1 || month > 12 {\n        return false\n    }\n    year, _ := strconv.Atoi(date[4:8])\n\
    \    if year < 1000 || year > 9999 {\n        return false\n    }\n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n    parts\
    \ := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return false\n\
    \    }\n    day, month, year := parts[0], parts[1], parts[2]\n    day, month,\
    \ year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    date := strings.TrimSpace(date)\n    if date == \"\" {\n        return false\n\
    \    }\n    day, month, year := strings.Split(date, \"-\")\n    day, month, year\
    \ = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(", "    if len(date) == 0 {\n      \
    \  return false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.", "    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // ", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, month, year := getDateParts(date)\n    if day < 1 ||\
    \ day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n      \
    \  return false\n    }\n    if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        return true\n    }\n    if month == 2 && day > 29 {\n     \
    \   return true\n    }\n    return false\n}\n", "    if len(date) == 0 {\n   \
    \     return false\n    }\n    day, month, year := getDateParts(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n    switch month {\n    case 1, 3, 5, 7, 8,\
    \ 10, 12:\n        if day < 1 || day > 29 {\n            return false\n      \
    \  }\n    case 4, 6, 9, 11:\n        if day < 1 || day > 30 {\n            return\
    \ false\n        }\n    case 2:\n        if day < 1 || day > 31 {\n          \
    \  return false\n        }\n    }\n    return true\n}\n", "    if len(date) ==\
    \ 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\")\n\
    \    if len(parts) != 3 {\n        return false\n    }\n    day, month, year :=\
    \ parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)", "    // Your code here\n   \
    \ \n    return true\n}\n", "    // Write your code here\n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if len(date) == 0 {\n        return false\n   \
    \ }\n    day, month, year := getDateParts(date)\n    if day < 1 || day > 31 ||\
    \ month < 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n\
    \    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false\n        }\n    }\n    if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false\n      \
    \  }\n    }\n    if month == 2 {\n        if day < 1 || day > 28 {\n         \
    \   return false\n        }\n    }\n    return true\n}\n", "    day, month, year\
    \ := split_date(date)\n    return validate_date(day, month, year)\n}\n", "   \
    \ if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    // Write your code here\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    // Write your code here\n    \n   \
    \ // Your code here\n    \n    return true\n}\n", "    if len(date) == 0 {\n \
    \       return false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.", "    if len(date) == 0 {\n        return false\n    }\n    parts\
    \ := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return false\n\
    \    }\n    month, day, year := parts[0], parts[1], parts[2]\n    month, day,\
    \ year = strings.TrimPrefix(month, \"0\"), strings.TrimPrefix(day, \"0\"), strings.TrimPrefix(year,\
    \ \"0\")\n    month, day, year = strings.TrimSuffix(month, \"0\"), strings.TrimSuffix(day,\
    \ \"0\"), strings.TrimSuffix(year, \"0\")\n    month, day, year = strings.ToLower(month),\
    \ strings.ToLower(day), strings.ToLower(year)\n    if month == \"jan\" || month\
    \ == \"feb\" || month == \"mar\" || month == \"apr\" || month == \"may\" || month\
    \ == \"jun\" || month == \"jul\" || month == \"aug\" || month == \"sep\" || month\
    \ == \"oct\" || month == \"nov\" || month == \"dec\" {\n        if day < 1 ||\
    \ day > 31 || day > 29 {\n            return false\n        }\n    }\n    if month\
    \ == \"apr\" || month == \"jun\" || month == \"sep\" || month == \"nov\" || month\
    \ == \"dec\" {\n        if day < 1 || day > 30 || day > 29 {\n            return\
    \ false\n        }\n    }\n    if month == \"jan\" || month == \"feb\" || month\
    \ == \"mar\" || month == \"apr\" || month == \"may\" || month == \"jun\" || month\
    \ == \"jul\" || month == \"aug\" || month == \"sep\" || month == \"oct\" || month\
    \ == \"nov\" || month == \"dec\" {\n        if day < 1 || day > 31 || day > 30\
    \ || day > 29 {\n            return false\n        }\n    }\n    if month == \"\
    jan\" || month == \"feb\" || month == \"mar\" || month == \"apr\" || month ==\
    \ \"may\" || month == \"jun\" || month == \"jul\" || month == \"aug\" || month\
    \ == \"sep\" || month == \"oct\" || month == \"nov\" || month == \"dec\" {\n \
    \       if day < 1 || day > 31 || day > 30 || day > 31 || day > 30 || day > 29\
    \ {\n            return false\n        }\n    }\n    if month == \"jan\" || month\
    \ == \"feb\" || month == \"mar\" || month == \"apr\" || month == \"may\" || month\
    \ == \"jun\" || month == \"jul\" || month == \"aug\" || month == \"sep\" || month\
    \ == \"oct\" || month == \"nov\" || month == \"dec\" {\n        if day < 1 ||\
    \ day > 31 || day > 30 || day > 31 || day > 30 || day > 31 || day > 30 || day\
    \ > 29 {\n            return false\n        }\n    }\n    if month == \"jan\"\
    \ || month == \"feb\" || month == \"mar\" || month == \"apr\" || ", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 2 {\n        if day >\
    \ 29 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    year, err\
    \ := strconv.Atoi(parts[0])\n    if err != nil {\n        return false\n    }\n\
    \    month, err := strconv.Atoi(parts[1])\n    if err != nil {\n        return\
    \ false\n    }\n    day, err := strconv.Atoi(parts[2])\n    if err != nil {\n\
    \        return false\n    }\n    if year < 1 || year > 9999 {\n        return\
    \ false\n    }\n    if month < 1 || month > 12 {\n        return false\n    }\n\
    \    if day < 1 || day > 31 {\n        return false\n    }\n    if month == 2\
    \ && day > 29 {\n        return false\n    }\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)", "    // Write your code here\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if len(date) == 0 {\n       \
    \ return false\n    }\n    day, month, year := getDate(date)\n    if day < 1 ||\
    \ day > 31 || month < 1 || month > 12 || month == 2 {\n        return false\n\
    \    }\n    if year < 1000 || year > 9999 {\n        return false\n    }\n   \
    \ return true\n}\n", "    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)", "    if len(date) == 0 {\n \
    \       return false\n    }\n    day, month, year := getDateParts(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        return true\n    }\n    if month == 2 && day > 29\
    \ {\n        return true\n    }\n    return false\n}\n", "    if len(date) ==\
    \ 0 {\n        return false\n    }\n\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 {\n        return false\n\
    \    }\n\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false\n        }\n    }\n\n    if month == 4 {\n        if day < 1 || day >\
    \ 30 {\n            return false\n        }\n    }\n\n    if month == 6 {\n  \
    \      if day < 1 || day > 31 {\n            return false\n        }\n    }\n\n\
    \    if month == 9 {\n        if day < 1 || day > 31 {\n            return false\n\
    \        }\n    }\n\n    if month == 11 {\n        if day < 1 || day > 30 {\n\
    \            return false\n        }\n    }\n\n    if month == 2 {\n        if\
    \ day < 1 || day > 29 {\n            return false\n        }\n    }\n\n    if\
    \ month == 4 {\n        if day < 1 || day > 30 {\n            return false\n \
    \       }\n    }\n\n    if month == 6 {\n        if day < 1 || day > 31 {\n  \
    \          return false\n        }\n    }\n\n    if month == 9 {\n        if day\
    \ < 1 || day > 31 {\n            return false\n        }\n    }\n\n    if month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false\n      \
    \  }\n    }\n\n    return true\n}\n", "    day, month, year := 0, 0, 0\n    day,\
    \ month, year = parseDate(date)\n    if day < 1 || day > 31 || month < 1 || month\
    \ > 12 || year < 1 || year > 9999 {\n        return false\n    }\n    return true\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n    day, month, year\
    \ := getDate(date)\n    if day < 1 || day > 31 || month < 1 || month > 12 || year\
    \ < 1000 || year > 9999 {\n        return false\n    }\n    return true\n}\n",
  "    day, month, year := getDateParts(date)\n    if day < 1 || day > 31 || month\
    \ < 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n    }\n\
    \    if month == 2 {\n        if day < 1 || day > 29 {\n            return false\n\
    \        }\n    }\n    if month == 4 || month == 6 || month == 9 || month == 11\
    \ {\n        if day < 1 || day > 30 {\n            return false\n        }\n \
    \   }\n    if month == 2 {\n        if day < 1 || day > 28 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 2 {\n        if day >\
    \ 29 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   day, month, year := 0, 0, 0\n    day, month, year = parseDate(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n\
    \        return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    parts := strings.Split(date, \"-\")\n    if\
    \ len(parts) != 3 {\n        return false\n    }\n    year, err := strconv.Atoi(parts[0])\n\
    \    if err != nil {\n        return false\n    }\n    month, err := strconv.Atoi(parts[1])\n\
    \    if err != nil {\n        return false\n    }\n    day, err := strconv.Atoi(parts[2])\n\
    \    if err != nil {\n        return false\n    }\n    if year < 1 || year > 9999\
    \ {\n        return false\n    }\n    if month < 1 || month > 12 {\n        return\
    \ false\n    }\n    if day < 1 || day > 31 {\n        return false\n    }\n  \
    \  if month == 2 && day > 29 {\n        return false\n    }\n    return true\n\
    }\n", "    date, err := time.Parse(\"2006-01-02\", date)\n    if err != nil {\n\
    \        fmt.Println(\"Error while parsing date\", err)\n        return false\n\
    \    }\n    \n    days := date.Day()\n    months := date.Month()\n    \n    if\
    \ days > 31 || days < 1 {\n        fmt.Println(\"Invalid number of days\", days)\n\
    \        return false\n    }\n    \n    if months > 12 || months < 1 {\n     \
    \   fmt.Println(\"Invalid number of months\", months)\n        return false\n\
    \    }\n    \n    if months == 2 {\n        if days > 29 || days < 1 {\n     \
    \       fmt.Println(\"Invalid number of days for month\", months)\n          \
    \  return false\n        }\n    }\n    \n    if months == 4 {\n        if days\
    \ > 30 || days < 1 {\n            fmt.Println(\"Invalid number of days for month\"\
    , months)\n            return false\n        }\n    }\n    \n    if months ==\
    \ 6 {\n        if days > 29 || days < 1 {\n            fmt.Println(\"Invalid number\
    \ of days for month\", months)\n            return false\n        }\n    }\n \
    \   \n    if months == 9 {\n        if days > 30 || days < 1 {\n            fmt.Println(\"\
    Invalid number of days for month\", months)\n            return false\n      \
    \  }\n    }\n    \n    if months == 11 {\n        if days > 30 || days < 1 {\n\
    \            fmt.Println(\"Invalid number of days for month\", months)\n     \
    \       return false\n        }\n    }\n    \n    if months == 12 {\n        if\
    \ days > 31 || days < 1 {\n            fmt.Println(\"Invalid number of days for\
    \ month\", months)\n            return false\n        }\n    }\n    \n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n    day,\
    \ month, year := getDateParts(date)\n    if day < 1 || day > 31 || month < 1 ||\
    \ month > 12 {\n        return false\n    }\n    if month == 2 && day > 29 {\n\
    \        return false\n    }\n    if month == 4 && day > 30 {\n        return\
    \ false\n    }\n    if month == 6 && day > 31 {\n        return false\n    }\n\
    \    if month == 9 && day > 31 {\n        return false\n    }\n    if month ==\
    \ 11 && day > 30 {\n        return false\n    }\n    if month == 1 && day > 31\
    \ {\n        return false\n    }\n    return true\n}\n", "    if len(date) ==\
    \ 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    return true\n}\n", "    date_parts\
    \ := strings.Split(date, \"-\")\n    if len(date_parts) != 3 {\n        return\
    \ false\n    }\n    day, month, year := date_parts[0], date_parts[1], date_parts[2]\n\
    \    day1, day2, day3 := day[0], day[1], day[2]\n    month1, month2, month3 :=\
    \ month[0], month[1], month[2]\n    year1, year2, year3 := year[0], year[1], year[2]\n\
    \    if day < 1 || day > 31 || (month < 1 || month > 12) || (day < 1 || day >\
    \ 30) {\n        return false\n    }\n    if month < 1 || month > 12 {\n     \
    \   return false\n    }\n    if year < 1 || year > 9999 {\n        return false\n\
    \    }\n    if month1 == month2 && month1 == month3 && month1 == month4 && month1\
    \ == month5 && month1 == month6 && month1 == month7 && month1 == month8 && month1\
    \ == month9 && month1 == month10 && month1 == month11 && month1 == month12 {\n\
    \        return true\n    }\n    if month1 == month2 && month1 == month3 && month1\
    \ == month4 && month1 == month5 && month1 == month6 && month1 == month7 && month1\
    \ == month8 && month1 == month9 && month1 == month10 {\n        return true\n\
    \    }\n    if month1 == month2 && month1 == month3 && month1 == month4 && month1\
    \ == month5 && month1 == month6 && month1 == month7 && month1 == month8 && month1\
    \ == month9 && month1 == month10 {\n        return true\n    }\n    if month1\
    \ == month2 && month1 == month3 && month1 == month4 && month1 == month5 && month1\
    \ == month6 && month1 == month7 && month1 == month8 && month1 == month9 && month1\
    \ == month10 {\n        return true\n    }\n    if month1 == month2 && month1\
    \ == month3 && month1 == month4 && month1 == month5 && month1 == month6 && month1\
    \ == month7 && month1 == month8 && month1 == month9 && month1 == month10 {\n \
    \       return true\n    }\n    if month1 == month2 && month1 == month3 && month1\
    \ == month4 && month1 == month5 && month1 == month6 && month1 == month7 && month1\
    \ == month8 && month1 == month9 && month1 == month10 {\n        return true\n\
    \    }\n    if month1 == month2 && month1 == month3 && month1 == month4 && month1\
    \ == month5 && month1 == month6 && month1 == month7 && month1 == month8 && month1\
    \ == month9 && month1 == month10 {\n        return true\n    }\n    if month1\
    \ == month2 && month", "    if len(date) == 0 {\n        return false\n    }\n\
    \    day, month, year := getDateParts(date)\n    if day < 1 || day > 31 || month\
    \ < 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n  \
    \  }\n    if month == 4 || month == 6 || month == 9 || month == 11 {\n       \
    \ return true\n    }\n    if month == 2 && day > 29 {\n        return true\n \
    \   }\n    return false\n}\n", "    date := strings.TrimSpace(date)\n    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := strings.Split(date,\
    \ \"-\")\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day", "    if\
    \ len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    // Write your code here\n    \n  \
    \  \n    return true\n}\n", "    // Your code here\n    \n    return true\n}\n",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  // Your code goes here\n    \n    \n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)", "    date, err := time.Parse(\"\
    2006-01-02\", date)\n    if err != nil {\n        fmt.Println(err)\n        return\
    \ false\n    }\n    days := date.Day()\n    months := date.Month()\n    if days\
    \ < 1 || days > 31 || months < 1 || months > 12 {\n        return false\n    }\n\
    \    if months == 2 {\n        if days < 1 || days > 29 {\n            return\
    \ false\n        }\n    }\n    if months == 4 {\n        if days < 1 || days >\
    \ 30 {\n            return false\n        }\n    }\n    if months == 6 {\n   \
    \     if days < 1 || days > 31 {\n            return false\n        }\n    }\n\
    \    if months == 9 {\n        if days < 1 || days > 30 {\n            return\
    \ false\n        }\n    }\n    if months == 11 {\n        if days < 1 || days\
    \ > 31 {\n            return false\n        }\n    }\n    if months == 12 {\n\
    \        if days < 1 || days > 31 {\n            return false\n        }\n   \
    \ }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n \
    \   }\n    day, month, year := getDateParts(date)\n    if day < 1 || day > 31\
    \ || month < 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n\
    \    }\n    if month == 4 || month == 6 || month == 9 || month == 11 {\n     \
    \   return true\n    }\n    if month == 2 && day > 29 {\n        return true\n\
    \    }\n    return false\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n    day, month, year := getDateParts(date)\n    if day < 1 || day > 31\
    \ || month < 1 || month > 12 || year < 1000 || year > 9999 {\n        return false\n\
    \    }\n    if month == 2 {\n        if day > 29 {\n            return false\n\
    \        }\n    } else {\n        if day > 30 {\n            return false\n  \
    \      }\n    }\n    return true\n}\n", "    day, month, year := 0, 0, 0\n   \
    \ day, month, year = parseDate(date)\n    if day < 1 || day > 31 || month < 1\
    \ || month > 12 || year < 1 || year > 9999 {\n        return false\n    }\n  \
    \  return true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\
    \    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return\
    \ false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n    dayInt,\
    \ err := strconv.Atoi(day)\n    if err != nil {\n        return false\n    }\n\
    \    monthInt, err := strconv.Atoi(month)\n    if err != nil {\n        return\
    \ false\n    }\n    yearInt, err := strconv.Atoi(year)\n    if err != nil {\n\
    \        return false\n    }\n    if dayInt < 1 || dayInt > 31 || monthInt < 1\
    \ || monthInt > 12 || yearInt < 1 || yearInt > 9999 {\n        return false\n\
    \    }\n    if monthInt == 2 && dayInt > 29 {\n        return false\n    }\n \
    \   return true\n}\n", "    day, month, year := 0, 0, 0\n    day, month, year\
    \ = parseDate(date)\n    if day < 1 || day > 31 || month < 1 || month > 12 ||\
    \ year < 1 || year > 9999 {\n        return false\n    }\n    return true\n}\n",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        return true\n    }\n    if month == 2 && day\
    \ > 29 {\n        return true\n    }\n    return false\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 {\n        return false\n\
    \    }\n    if year < 1000 || year > 9999 {\n        return false\n    }\n   \
    \ return true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n \
    \   day, _ := strconv.Atoi(date[0:2])\n    month, _ := strconv.Atoi(date[2:4])\n\
    \    year, _ := strconv.Atoi(date[4:8])\n    if day < 1 || day > 31 || month <\
    \ 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n    }\n\
    \    return true\n}\n", "    // Your code goes here\n    \n    \n    return true\n\
    }\n", "    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n   \
    \     return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(", "    // Write your code here\n  \
    \  \n    \n    \n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n\n    day, month, year := getDate(date)\n\n    if day < 1 || day\
    \ > 31 || month < 1 || month > 12 {\n        return false\n    }\n\n    if year\
    \ < 1000 || year > 9999 {\n        return false\n    }\n\n    if month == 2 {\n\
    \        if day < 1 || day > 29 {\n            return false\n        }\n    }\n\
    \n    if month == 4 {\n        if day < 1 || day > 30 {\n            return false\n\
    \        }\n    }\n\n    if month == 6 {\n        if day < 1 || day > 31 {\n \
    \           return false\n        }\n    }\n\n    if month == 9 {\n        if\
    \ day < 1 || day > 31 {\n            return false\n        }\n    }\n\n    if\
    \ month == 11 {\n        if day < 1 || day > 30 {\n            return false\n\
    \        }\n    }\n\n    if month == 1 {\n        if day < 1 || day > 31 {\n \
    \           return false\n        }\n    }\n\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)", "    if len(date) == 0 {\n \
    \       return false\n    }\n    day, _ := strconv.Atoi(date[0:2])\n    month,\
    \ _ := strconv.Atoi(date[2:4])\n    year, _ := strconv.Atoi(date[4:8])\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || month == 2 && day > 29 ||\
    \ month == 4 && day > 30 || month == 6 && day > 31 || month == 9 && day > 31 ||\
    \ month == 11 && day > 30 {\n        return false\n    }\n    return true\n}\n",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 2 {\n        if day >\
    \ 29 {\n            return false\n        }\n    } else {\n        if day > 30\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    month, day,\
    \ year := parts[0], parts[1], parts[2]\n    month, day, year = strings.ToLower(month),\
    \ strings.ToLower(day), strings.ToLower(year)\n    month, day, year = strings.TrimSuffix(month,\
    \ \"0\"), strings.TrimSuffix(day, \"0\"), strings.TrimSuffix(year, \"0\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \".\"), strings.TrimSuffix(day,\
    \ \".\"), strings.TrimSuffix(year, \".\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), strings.TrimSuffix(day, \"/\"), strings.TrimSuffix(year, \"/\")\n  \
    \  month, day, year = strings.TrimSuffix(month, \"-\"), strings.TrimSuffix(day,\
    \ \"-\"), strings.TrimSuffix(year, \"-\")\n    month, day, year = strings.TrimSuffix(month,\
    \ \"/\"), ", "    if len(date) == 0 {\n        return false\n    }\n    day, month,\
    \ year := getDateParts(date)\n    if day < 1 || day > 31 || month < 1 || month\
    \ > 12 || year < 1000 || year > 9999 {\n        return false\n    }\n    switch\
    \ month {\n    case 1, 3, 5, 7, 8, 10, 12:\n        if day < 1 || day > 29 {\n\
    \            return false\n        }\n    case 4, 6, 9, 11:\n        if day <\
    \ 1 || day > 30 {\n            return false\n        }\n    case 2:\n        if\
    \ day < 1 || day > 31 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\n    parts\
    \ := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return false\n\
    \    }\n\n    day, month, year := parts[0], parts[1], parts[2]\n    day, month,\
    \ year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    switch month {\n    case 1, 3, 5,\
    \ 7, 8, 10, 12:\n        if day < 1 || day > 29 {\n            return false\n\
    \        }\n    case 4, 6, 9, 11:\n        if day < 1 || day > 30 {\n        \
    \    return false\n        }\n    case 2:\n        if day < 1 || day > 31 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        return day > 30\n    }\n    return day > 29\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n    day, month, year\
    \ := getDateParts(date)\n    if day < 1 || day > 31 || month < 1 || month > 12\
    \ || year < 1 || year > 9999 {\n        return false\n    }\n    return true\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    // Your code goes here\n    \n    return true\n}\n", "    day, month, year\
    \ := split_date(date)\n    return validate_date(day, month, year)\n}\n", "   \
    \ // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(date) == 0 {\n        return false\n    }\n    day, month, year := strings.Split(date,\
    \ \"-\")\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.Tri", "    if len(date) == 0 {\n        return false\n    }\n\n    parts\
    \ := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return false\n\
    \    }\n\n    day, month, year := parts[0], parts[1], parts[2]\n    day, month,\
    \ year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.",
  "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    month, day,\
    \ year := parts[0], parts[1], parts[2]\n    month := strings.TrimSpace(month)\n\
    \    day := strings.TrimSpace(day)\n    year := strings.TrimSpace(year)\n    if\
    \ month == \"\" || day == \"\" || year == \"\" {\n        return false\n    }\n\
    \    month, day, year = strings.TrimSpace(month), strings.TrimSpace(day), strings.TrimSpace(year)\n\
    \    month, day, year = strings.ToLower(month), strings.ToLower(day), strings.ToLower(year)\n\
    \    if month == \"jan\" || month == \"feb\" || month == \"mar\" || month == \"\
    apr\" || month == \"may\" || month == \"jun\" || month == \"jul\" || month ==\
    \ \"aug\" || month == \"sep\" || month == \"oct\" || month == \"nov\" || month\
    \ == \"dec\" {\n        month = fmt.Sprintf(\"%02d\", time.Month([]byte(month)))\n\
    \    }\n    if day == \"01\" || day == \"02\" || day == \"03\" || day == \"04\"\
    \ || day == \"05\" || day == \"06\" || day == \"07\" || day == \"08\" || day ==\
    \ \"09\" || day == \"10\" || day == \"11\" || day == \"12\" {\n        day = fmt.Sprintf(\"\
    %02d\", time.Date([]byte(day), time.January, 1, 0, 0, 0, 0, time.Local).Day())\n\
    \    }\n    if year == \"1920\" || year == \"1910\" || year == \"1909\" || year\
    \ == \"1899\" || year == \"1890\" || year == \"1880\" || year == \"1870\" || year\
    \ == \"1860\" || year == \"1850\" || year == \"1840\" || year == \"1830\" || year\
    \ == \"1820\" || year == \"1810\" || year == \"1809\" || year == \"1800\" || year\
    \ == \"1799\" || year == \"1790\" || year == \"1780\" || year == \"1770\" || year\
    \ == \"1760\" || year == \"1750\" || year == \"1740\" || year == \"1730\" || year\
    \ == \"1720\" || year == \"1710\" || year == \"1709\" || year == \"1700\" || year\
    \ == \"1699\" || year == \"1690\" || year == \"1680\" || year == \"1670\" || year\
    \ == \"1660\" || year == \"1650\" || year == \"1640\" || year == \"1630\" || year\
    \ == \"1620\" || year == \"1610\" || year == \"1609\" || year == \"1600\" || year\
    \ == \"1599\" || year == \"1590\" || year == \"1580\" || year == \"1570\" || year\
    \ == \"1560\" || year == \"1550\" || year == \"", "    if len(date) == 0 {\n \
    \       return false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    dayInt, err := strconv.Atoi(day)\n    if err != nil {\n      \
    \  return false\n    }\n    monthInt, err := strconv.Atoi(month)\n    if err !=\
    \ nil {\n        return false\n    }\n    yearInt, err := strconv.Atoi(year)\n\
    \    if err != nil {\n        return false\n    }\n    if dayInt < 1 || dayInt\
    \ > 31 || monthInt < 1 || monthInt > 12 || yearInt < 1 || yearInt > 9999 {\n \
    \       return false\n    }\n    return true\n}\n", "    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    days := parts[2]\n\
    \    month, day := parts[0], parts[1]\n    switch month {\n    case \"01\", \"\
    03\", \"05\", \"07\", \"08\", \"10\", \"12\":\n        if day < 1 || day > 31\
    \ || day > 30 || day > 29 {\n            return false\n        }\n    case \"\
    04\", \"06\", \"09\", \"11\":\n        if day < 1 || day > 31 || day > 30 || day\
    \ > 29 {\n            return false\n        }\n    case \"02\":\n        if day\
    \ < 1 || day > 31 || day > 30 || day > 29 {\n            return false\n      \
    \  }\n    }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n  \
    \      return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := strings.Split(date,\
    \ \"-\")\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.Tri", "    // Write your code here\n    \n    \n    return true\n}\n",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 2 {\n        if day >\
    \ 29 {\n            return false\n        }\n    } else {\n        if day > 30\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    day,\
    \ month, year := 0, 0, 0\n    day, month, year = parseDate(date)\n    if day <\
    \ 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n    \
    \    return false\n    }\n    if month == 2 {\n        if day > 29 {\n       \
    \     return false\n        }\n    }\n    if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        if day > 30 {\n            return false\n   \
    \     }\n    }\n    if month == 1 {\n        if day > 31 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    day, month, year := split_date(date)\n\
    \    days := days_in_month(month, year)\n    if days > 31 || days < 1 {\n    \
    \    return false\n    }\n    if month < 1 || month > 12 {\n        return false\n\
    \    }\n    if day < 1 || day > 31 {\n        return false\n    }\n    if month\
    \ == 2 {\n        if day > 29 {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    // Your code goes here\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    // Write your code here\n    \n    return true\n}\n", " \
    \   // Your code goes here\n    \n    \n    return true\n}\n", "    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    dayInt, err := strconv.Atoi(day)\n\
    \    if err != nil {\n        return false\n    }\n    monthInt, err := strconv.Atoi(month)\n\
    \    if err != nil {\n        return false\n    }\n    yearInt, err := strconv.Atoi(year)\n\
    \    if err != nil {\n        return false\n    }\n    if dayInt < 1 || dayInt\
    \ > 31 || monthInt < 1 || monthInt > 12 || yearInt < 1 || yearInt > 9999 {\n \
    \       return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    day, month, year := getDateParts(date)\n   \
    \ if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n    if month == 2 {\n        if day > 29 {\n\
    \            return false\n        }\n    }\n    if month == 4 {\n        if day\
    \ > 30 {\n            return false\n        }\n    }\n    if month == 6 {\n  \
    \      if day > 29 {\n            return false\n        }\n    }\n    if month\
    \ == 9 {\n        if day > 30 {\n            return false\n        }\n    }\n\
    \    if month == 11 {\n        if day > 30 {\n            return false\n     \
    \   }\n    }\n    if month == 2 {\n        if day > 28 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) !=\
    \ 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)", "    // Write your code here\n    \n    // Write your\
    \ code here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // Write your code here\n    \n    //\
    \ Write your code here\n    \n    // Write your code here\n    \n    // Write\
    \ your code here\n    \n    // Write your code here\n    \n    // Write your code\
    \ here\n    \n    // Write your code here\n    \n    // Write your code here\n\
    \    \n    // Write your code here\n    \n    // Write your code here\n    \n\
    \    // Write your code here\n    \n    // ", "    if len(date) == 0 {\n     \
    \   return false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    dayInt, err := strconv.Atoi(day)\n    if err != nil {\n      \
    \  return false\n    }\n    monthInt, err := strconv.Atoi(month)\n    if err !=\
    \ nil {\n        return false\n    }\n    yearInt, err := strconv.Atoi(year)\n\
    \    if err != nil {\n        return false\n    }\n    if dayInt < 1 || dayInt\
    \ > 31 || monthInt < 1 || monthInt > 12 || yearInt < 1 || yearInt > 9999 {\n \
    \       return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    parts := strings.Split(date, \"-\")\n    if\
    \ len(parts) != 3 {\n        return false\n    }\n    day, month, year := parts[0],\
    \ parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)", "    day, month, year := split_date(date)\n    if day\
    \ < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n  \
    \      return false\n    }\n    switch month {\n    case 1, 3, 5, 7, 8, 10, 12:\n\
    \        if day < 1 || day > 30 {\n            return false\n        }\n    case\
    \ 4, 6, 9, 11:\n        if day < 1 || day > 29 {\n            return false\n \
    \       }\n    case 2:\n        if day < 1 || day > 29 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    // Write your code here\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, _ := strconv.Atoi(date[0:2])\n    if day < 1 || day >\
    \ 31 {\n        return false\n    }\n    month, _ := strconv.Atoi(date[2:4])\n\
    \    if month < 1 || month > 12 {\n        return false\n    }\n    year, _ :=\
    \ strconv.Atoi(date[4:8])\n    if year < 1900 || (year > 2099 && year < 2100)\
    \ {\n        return false\n    }\n    return true\n}\n", "    // Write your code\
    \ here\n    \n    \n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, month, year := getDate(date)\n    if day < 1 || day >\
    \ 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n        return\
    \ false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, month, year := strings.Split(date, \"-\")\n    day, month,\
    \ year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimRight(day, \"0\"), strings.TrimRight(month,\
    \ \"0\"), strings.TrimRight(year, \"0\")\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimRight(day,\
    \ \"0\"), strings.TrimRight(month, \"0\"), strings.TrimRight(year, \"0\")\n  \
    \  day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimRight(day, \"0\"), strings.TrimRight(month,\
    \ \"0\"), strings.TrimRight(year, \"0\")\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimRight(day,\
    \ \"0\"), strings.TrimRight(month, \"0\"), strings.TrimRight(year, \"0\")\n  \
    \  day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimRight(day, \"0\"), strings.TrimRight(month,\
    \ \"0\"), strings.TrimRight(year, \"0\")\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimRight(day,\
    \ \"0\"), strings.TrimRight(month, \"0\"), strings.TrimRight(year, \"0\")\n  \
    \  day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, ", "    if len(date) == 0 {\n        return false\n    }\n  \
    \  day, month, year := strings.Split(date, \"-\")\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.Tri", "    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        return day > 30\n    }\n    return day > 29\n\
    }\n", "    day, month, year := 0, 0, 0\n    day, month, year = parseDate(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999\
    \ {\n        return false\n    }\n    return true\n}\n", "    day, month, year\
    \ := 0, 0, 0\n    day, month, year = parseDate(date)\n    if day < 1 || day >\
    \ 31 || month < 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n\
    \    }\n    return true\n}\n", "    if len(date) == 0 {\n        return false\n\
    \    }\n\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n\
    \        return false\n    }\n\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)",
  "    if len(date) == 0 {\n        return false\n    }\n\n    day, month, year :=\
    \ 0, 0, 0\n    day, month, year = parseDate(date)\n\n    if day < 1 || day > 31\
    \ || month < 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n\
    \    }\n\n    if month == 2 {\n        if day > 29 {\n            return false\n\
    \        }\n    } else {\n        if day > 30 {\n            return false\n  \
    \      }\n    }\n\n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, month, year := getDateParts(date)\n    if day < 1 ||\
    \ day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n      \
    \  return false\n    }\n    return true\n}\n", "    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1 || year > 9999\
    \ {\n        return false\n    }\n    if month == 2 {\n        if day > 29 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if len(date)\
    \ == 0 {\n        return false\n    }\n\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n\n    day, month, year =\
    \ strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\n    day,\
    \ month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)", "    if len(date) == 0 {\n \
    \       return false\n    }\n    day, month, year := getDate(date)\n    if day\
    \ < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n\
    \        return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    day, month, year := strings.Split(date, \"-\"\
    )\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.Tri",
  "    if len(date) == 0 {\n        return false\n    }\n\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n\n    day, month, year =\
    \ strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\n    day,\
    \ month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \n    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return\
    \ false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n    day,\
    \ month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = ", "    if len(date) == 0 {\n        return false\n  \
    \  }\n    day, month, year := strings.Split(date, \"-\")\n    day, month, year\
    \ = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.Tri",
  "    // Write your code here\n    \n    // Your code here\n    \n    return true\n\
    }\n", "    // Your code here\n    \n    return true\n}\n", "    if len(date) ==\
    \ 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\")\n\
    \    if len(parts) != 3 {\n        return false\n    }\n    year, err := strconv.Atoi(parts[0])\n\
    \    if err != nil {\n        return false\n    }\n    month, err := strconv.Atoi(parts[1])\n\
    \    if err != nil {\n        return false\n    }\n    day, err := strconv.Atoi(parts[2])\n\
    \    if err != nil {\n        return false\n    }\n    if year < 1 || year > 9999\
    \ {\n        return false\n    }\n    if month < 1 || month > 12 {\n        return\
    \ false\n    }\n    if day < 1 || day > 31 {\n        return false\n    }\n  \
    \  if month == 2 && day > 29 {\n        return false\n    }\n    return true\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n\n    day, month,\
    \ year := getDateParts(date)\n    if day < 1 || day > 31 || month < 1 || month\
    \ > 12 || year < 1000 || year > 9999 {\n        return false\n    }\n\n    switch\
    \ month {\n    case 1, 3, 5, 7, 8, 10, 12:\n        if day < 1 || day > 29 {\n\
    \            return false\n        }\n    case 4, 6, 9, 11:\n        if day <\
    \ 1 || day > 30 {\n            return false\n        }\n    case 2:\n        if\
    \ day < 1 || day > 31 {\n            return false\n        }\n    }\n\n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n    parts\
    \ := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n        return false\n\
    \    }\n    day, month, year := parts[0], parts[1], parts[2]\n    day, month,\
    \ year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.",
  "    date, err := time.Parse(\"2006-01-02\", date)\n    if err != nil {\n      \
    \  fmt.Println(\"Invalid date format\")\n        return false\n    }\n    days\
    \ := date.Day()\n    months := date.Month()\n    if days < 1 || days > 31 || months\
    \ < 1 || months > 12 {\n        fmt.Println(\"Invalid date\")\n        return\
    \ false\n    }\n    if months == 2 {\n        if days < 1 || days > 29 {\n   \
    \         fmt.Println(\"Invalid date\")\n            return false\n        }\n\
    \    }\n    if months == 4 {\n        if days < 1 || days > 30 {\n           \
    \ fmt.Println(\"Invalid date\")\n            return false\n        }\n    }\n\
    \    if months == 6 {\n        if days < 1 || days > 31 {\n            fmt.Println(\"\
    Invalid date\")\n            return false\n        }\n    }\n    if months ==\
    \ 9 {\n        if days < 1 || days > 30 {\n            fmt.Println(\"Invalid date\"\
    )\n            return false\n        }\n    }\n    if months == 11 {\n       \
    \ if days < 1 || days > 31 {\n            fmt.Println(\"Invalid date\")\n    \
    \        return false\n        }\n    }\n    if months == 12 {\n        if days\
    \ < 1 || days > 31 {\n            fmt.Println(\"Invalid date\")\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    // Write your code here\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if len(date) == 0 {\n       \
    \ return false\n    }\n    day, month, year := split_date(date)\n    if day <\
    \ 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n \
    \       return false\n    }\n    return true\n}\n", "    if len(date) == 0 {\n\
    \        return false\n    }\n    parts := strings.Split(date, \"-\")\n    if\
    \ len(parts) != 3 {\n        return false\n    }\n    day, month, year := parts[0],\
    \ parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)", "    if len(date) == 0 {\n        return false\n   \
    \ }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n     \
    \   return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    return true\n}\n", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := getDateParts(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year\
    \ > 9999 {\n        return false\n    }\n    switch month {\n    case 1, 3, 5,\
    \ 7, 8, 10, 12:\n        if day < 1 || day > 30 {\n            return false\n\
    \        }\n    case 4, 6, 9, 11:\n        if day < 1 || day > 29 {\n        \
    \    return false\n        }\n    case 2:\n        if day < 1 || day > 28 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    // Your\
    \ code goes here\n    \n    return true\n}\n", "    if len(date) == 0 {\n    \
    \    return false\n    }\n\n    day, month, year := getDateParts(date)\n\n   \
    \ if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n\n    if month == 2 {\n        if day > 29 {\n\
    \            return false\n        }\n    } else {\n        if day > 30 {\n  \
    \          return false\n        }\n    }\n\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    day, month, year := getDate(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 {\n        return false\n\
    \    }\n    if year < 1900 || (year > 2020 && year < 2040) {\n        return false\n\
    \    }\n    return true\n}\n", "    day, month, year := split_date(date)\n   \
    \ days_not_less_than_1_or_higher_than_31 := day < 1 || day > 31\n    days_not_less_than_1_or_higher_than_30\
    \ := day < 1 || day > 30\n    days_not_less_than_1_or_higher_than_29 := day <\
    \ 1 || day > 29\n    months_not_less_than_1_or_higher_than_12 := month < 1 ||\
    \ month > 12\n    months_not_less_than_1_or_higher_than_11 := month < 1 || month\
    \ > 11\n    months_not_less_than_1_or_higher_than_10 := month < 1 || month > 10\n\
    \    months_not_less_than_1_or_higher_than_9 := month < 1 || month > 9\n    months_not_less_than_1_or_higher_than_8\
    \ := month < 1 || month > 8\n    months_not_less_than_1_or_higher_than_7 := month\
    \ < 1 || month > 7\n    months_not_less_than_1_or_higher_than_6 := month < 1 ||\
    \ month > 6\n    months_not_less_than_1_or_higher_than_5 := month < 1 || month\
    \ > 5\n    months_not_less_than_1_or_higher_than_4 := month < 1 || month > 4\n\
    \    months_not_less_than_1_or_higher_than_3 := month < 1 || month > 3\n    months_not_less_than_1_or_higher_than_2\
    \ := month < 1 || month > 2\n    months_not_less_than_1 := month < 1\n    months_not_less_than_0\
    \ := month < 0\n    days_not_less_than_1 := day < 1\n    days_not_less_than_0\
    \ := day < 0\n    years_not_less_than_1 := year < 1\n    years_not_less_than_0\
    \ := year < 0\n    return days_not_less_than_1 && days_not_less_than_0 && months_not_less_than_1\
    \ && months_not_less_than_0 && years_not_less_than_1 && years_not_less_than_0\n\
    }\n", "    day, month, year := getDateParts(date)\n    return isValidDate(day,\
    \ month, year)\n}\n", "    // Write your code here\n    \n    \n    return true\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    date, err := time.Parse(\"2006-01-02\"\
    , date)\n    if err != nil {\n        fmt.Println(err)\n        return false\n\
    \    }\n    days := date.Day()\n    months := date.Month()\n    if days < 1 ||\
    \ days > 31 || months < 1 || months > 12 {\n        return false\n    }\n    if\
    \ months == 2 {\n        if days < 1 || days > 29 {\n            return false\n\
    \        }\n    }\n    if months == 4 {\n        if days < 1 || days > 30 {\n\
    \            return false\n        }\n    }\n    if months == 6 {\n        if\
    \ days < 1 || days > 31 {\n            return false\n        }\n    }\n    if\
    \ months == 9 {\n        if days < 1 || days > 30 {\n            return false\n\
    \        }\n    }\n    if months == 11 {\n        if days < 1 || days > 31 {\n\
    \            return false\n        }\n    }\n    if months == 12 {\n        if\
    \ days < 1 || days > 31 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(date) == 0 {\n        return false\n    }\n\n    day,\
    \ month, year := strings.Split(date, \"-\")\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n\n    days := strings.Split(day,\
    \ \"-\")\n    days := strings.TrimSpace(days[0])\n\n    if len(days) < 1 || len(days)\
    \ > 31 || len(days) < 1 || len(days) > 30 || len(days) < 1 || len(days) > 29 {\n\
    \        return false\n    }\n\n    months := strings.Split(month, \"-\")\n  \
    \  months := strings.TrimSpace(months[0])\n\n    if len(months) < 1 || len(months)\
    \ > 12 {\n        return false\n    }\n\n    year, err := strconv.Atoi(year)\n\
    \    if err != nil {\n        return false\n    }\n\n    month, err := strconv.Atoi(month)\n\
    \    if err != nil {\n        return false\n    }\n\n    day, err := strconv.Atoi(day)\n\
    \    if err != nil {\n        return false\n    }\n\n    year, err = strconv.Atoi(year)\n\
    \    if err != nil {\n        return false\n    }\n\n    month, err = strconv.Atoi(month)\n\
    \    if err != nil {\n        return false\n    }\n\n    day, err = strconv.Atoi(day)\n\
    \    if err != nil {\n        return false\n    }\n\n    if year < 1 || year >\
    \ 9999 {\n        return false\n    }\n\n    if month < 1 || month > 12 {\n  \
    \      return false\n    }\n\n    if day < 1 || day > 31 {\n        return false\n\
    \    }\n\n    return true\n}\n", "    // Your code goes here\n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if len(date) == 0 {\n        return false\n \
    \   }\n    parts := strings.Split(date, \"-\")\n    if len(parts) != 3 {\n   \
    \     return false\n    }\n    day, month, year := parts[0], parts[1], parts[2]\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToLower(day), strings.ToLower(month), strings.ToLower(year)\n\
    \    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month), strings.TrimSpace(year)\n\
    \    day, month, year = strings.ToUpper(day), strings.ToUpper(month), strings.ToUpper(year)",
  "    if len(date) == 0 {\n        return false\n    }\n    day, month, year := split_date(date)\n\
    \    if day < 1 || day > 31 || month < 1 || month > 12 || month == 2 {\n     \
    \   return false\n    }\n    if year < 1000 || year > 9999 {\n        return false\n\
    \    }\n    return true\n}\n", "    parts := strings.Split(date, \"-\")\n    if\
    \ len(parts) != 3 {\n        return false\n    }\n    day, month, year := parts[0],\
    \ parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(", "    // Your\
    \ code here\n    \n    return true\n}\n", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    day, month, year := getDateParts(date)\n    if day < 1 ||\
    \ day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999 {\n      \
    \  return false\n    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    day,\
    \ month, year := getDateParts(date)\n    return isValidDate(day, month, year)\n\
    }\n", "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    dayInt, _ := strconv.Atoi(day)\n \
    \   monthInt, _ := strconv.Atoi(month)\n    yearInt, _ := strconv.Atoi(year)\n\
    \    if dayInt < 1 || dayInt > 31 || monthInt < 1 || monthInt > 12 || yearInt\
    \ < 1 || yearInt > 9999 {\n        return false\n    }\n    if monthInt == 2 &&\
    \ dayInt > 29 {\n        return false\n    }\n    return true\n}\n", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    // Write your\
    \ code here\n    \n    \n    return true\n}\n", "    if len(date) == 0 {\n   \
    \     return false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts)\
    \ != 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)", "    if len(date) == 0 {\n        return false\n   \
    \ }\n    day, month, year := getDateParts(date)\n    if day < 1 || day > 31 ||\
    \ month < 1 || month > 12 {\n        return false\n    }\n    if year < 1950 ||\
    \ year > 2099 {\n        return false\n    }\n    return true\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day),\
    \ strings.ToLower(month), strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day),\
    \ strings.ToUpper(month), strings.ToUpper(year)", "    if len(date) == 0 {\n \
    \       return false\n    }\n    day, month, year := split_date(date)\n    if\
    \ day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 9999\
    \ {\n        return false\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        return true\n    }\n    if month == 2 && day > 29\
    \ {\n        return true\n    }\n    return false\n}\n", "    // Write your code\
    \ here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if len(date) == 0\
    \ {\n        return false\n    }\n    day, month, year := split_date(date)\n \
    \   if day < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year >\
    \ 9999 {\n        return false\n    }\n    if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        return true\n    }\n    if month == 2 && day\
    \ > 29 {\n        return true\n    }\n    return false\n}\n", "    if len(date)\
    \ == 0 {\n        return false\n    }\n    parts := strings.Split(date, \"-\"\
    )\n    if len(parts) != 3 {\n        return false\n    }\n    day, month, year\
    \ := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    if len(date) == 0 {\n        return\
    \ false\n    }\n\n    parts := strings.Split(date, \"-\")\n    if len(parts) !=\
    \ 3 {\n        return false\n    }\n\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.", "    // Write your code here\n    \n    \n    return true\n}\n",
  "    if len(date) == 0 {\n        return false\n    }\n    parts := strings.Split(date,\
    \ \"-\")\n    if len(parts) != 3 {\n        return false\n    }\n    day, month,\
    \ year := parts[0], parts[1], parts[2]\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.TrimSpace(year)\n    day, month, year = strings.TrimSpace(day),\
    \ strings.TrimSpace(month), strings.", "    if len(date) == 0 {\n        return\
    \ false\n    }\n    parts := strings.Split(date, \"-\")\n    if len(parts) !=\
    \ 3 {\n        return false\n    }\n    day, month, year := parts[0], parts[1],\
    \ parts[2]\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToLower(day), strings.ToLower(month),\
    \ strings.ToLower(year)\n    day, month, year = strings.TrimSpace(day), strings.TrimSpace(month),\
    \ strings.TrimSpace(year)\n    day, month, year = strings.ToUpper(day), strings.ToUpper(month),\
    \ strings.ToUpper(year)", "    if len(date) == 0 {\n        return false\n   \
    \ }\n    day, month, year := split_date(date)\n    if day < 1 || day > 31 || month\
    \ < 1 || month > 12 || year < 1 || year > 9999 {\n        return false\n    }\n\
    \    if month == 2 {\n        if day > 29 {\n            return false\n      \
    \  }\n    }\n    return true\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_161_solve
language: go_test.go
prompt: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a string s.\n// if s[i] is a letter, reverse its case from lower to\
  \ upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains\
  \ no letters, reverse the string.\n// The function should return the resulted string.\n\
  // Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\
  \n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunc solve(s string) string {\n"
tests: "func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(\"AsDf\"), expected: \"aSdF\" },\n     { actual: candidate(\"\
  1234\"), expected: \"4321\" },\n     { actual: candidate(\"ab\"), expected: \"AB\"\
  \ },\n     { actual: candidate(\"#a@C\"), expected: \"#A@c\" },\n     { actual:\
  \ candidate(\"#AsdfW^45\"), expected: \"#aSDFw^45\" },\n     { actual: candidate(\"\
  #6@2\"), expected: \"2@6#\" },\n     { actual: candidate(\"#$a^D\"), expected: \"\
  #$A^d\" },\n     { actual: candidate(\"#ccc\"), expected: \"#CCC\" },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    result := \"\"\n    for _, letter := range s {\n        if letter\
    \ == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v)\n        } else {\n            result += string(unicode.ToUpper(v))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-('a'\
    \ - 'a')])\n        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-'a'])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, r := range s {\n        if r >= 'a' && r\
    \ <= 'z' {\n            result += string(r-'a') + string(r-'A')\n        } else\
    \ {\n            result += r\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'A' {\n            result += string([]rune(letter)...)\n        }\
    \ else {\n            result += string([]rune(letter)...)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 1)\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A'\
    \ + 1)\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    \n    for _, char := range s {\n    \
    \    if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)])\n\
    \        } else {\n            result += char\n        }\n    }\n    \n    return\
    \ result\n}\n", "    var result string\n    for _, v := range s {\n        if\
    \ v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n        } else\
    \ if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A') + string('A'\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(unicode.ToUpper(v))\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-97])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, r\
    \ := range s {\n        if r >= 'a' && r <= 'z' {\n            result += string(r-'a')\
    \ + string(r-'A')\n        } else {\n            result += r\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result = result +\
    \ string(char-('a'+1))\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       result = result + string(char-('A'+1))\n        } else {\n           \
    \ result = result + char\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a' + 1)\n        } else if v >= 'A' && v <=\
    \ 'Z' {\n            result += string(v - 'A' + 1)\n        } else {\n       \
    \     result += v\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n  \
    \          result += string([]rune(char)[26-int(char)-65])\n        } else {\n\
    \            result += string([]rune(char)[26-int(char)])\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result = result + string(v - 'a')\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result = result + string(v\
    \ - 'A') + string(v - 'a')\n        } else {\n            result = result + v\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char-65)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]byte{char - 'a', char - 'A'})\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\
    \ + string(v - 'A')\n        } else {\n            result += v\n        }\n  \
    \  }\n    return result\n}\n", "    result := \"\"\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(unicode.ToUpper(v))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ letter := range s {\n        if letter == 'a' || letter == 'A' {\n         \
    \   result = result + string(letter + 32)\n        } else {\n            result\
    \ = result + string(letter)\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char)])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char)])\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result = result + string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result = result\
    \ + string(v - 'A') + string((len(s)-1) - len(result))\n        } else {\n   \
    \         result = result + v\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    var result string\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else if v >= 'A' && v <= 'Z' {\n            result +=\
    \ string(v - 'A' + 1)\n        } else {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' +\
    \ 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    i := 0\n    for i <\
    \ len(s) {\n        if s[i] == ' ' {\n            result += \" \"\n          \
    \  i++\n            continue\n        }\n        if isLetter(s[i]) {\n       \
    \     result += toUpper(s[i:])\n            i += len(s[i:])\n        } else {\n\
    \            result += s[i]\n            i++\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    \n    for _, letter := range s {\n        if letter\
    \ == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    \n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a' + 'A'})\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v)\n        }\
    \ else {\n            result += string(unicode.ToUpper(v))\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 1)\n \
    \       } else if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A'\
    \ + 1)\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(unicode.ToUpper(v))\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, r := range s {\n        if r >= 'a' && r\
    \ <= 'z' {\n            result += string(r-'a'+1)\n        } else {\n        \
    \    result += r\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, letter := range s {\n        if letter == 'a' || letter == 'A'\
    \ {\n            result += string([]rune(letter)...)\n        } else {\n     \
    \       result += string([]rune(letter)...)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' +\
    \ 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n</code>\n<|/ a tags=string,go |>\n<| c |>\nThis doesn't work for all inputs.\
    \ For example, it fails on `solve(\"ab\")` which should return `\"AB\"`.\n<|/\
    \ c |>\n<| c |>\nYes, I noticed that and fixed it\n<|/ c |>\n<| a tags=string,go\
    \ |>\n<code>\npackage main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(unicode.ToLower(v))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'A' {\n            result += string([]rune(letter)...)\n        }\
    \ else {\n            result += string([]rune(letter)...)\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += strings.ToUpper(letter)\n\
    \        } else if letter == 'b' || letter == 'B' {\n            result += strings.ToLower(letter)\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(unicode.ToLower(v) + unicode.ToUpper(v))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result = result\
    \ + string([]rune(letter)...)\n        } else {\n            result = result +\
    \ string(letter)\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n  \
    \          result += string([]rune(char)[26-int(char-'a')])\n        } else {\n\
    \            result += string([]rune(char)[int('z'+char-'a')])\n        }\n  \
    \  }\n    return result\n}\n", "    result := \"\"\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, v := range s {\n        if\
    \ v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 'A')\n      \
    \  } else {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    i := 0\n    for i < len(s) {\n        if s[i] == 'a' {\n\
    \            result += string([]rune{unicode.ToLower(rune(s[i])) + unicode.ToUpper(rune(s[i+1]))\
    \ + unicode.ToUpper(rune(s[i+2])) + unicode.ToLower(rune(s[i+3])})\n         \
    \   i += 4\n        } else if s[i] == 'A' {\n            result += string([]rune{unicode.ToUpper(rune(s[i]))\
    \ + unicode.ToUpper(rune(s[i+1])) + unicode.ToUpper(rune(s[i+2])) + unicode.ToUpper(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == '#' {\n            result += string([]rune{unicode.ToUpper(rune(s[i]))\
    \ + unicode.ToUpper(rune(s[i+1])) + unicode.ToUpper(rune(s[i+2])) + unicode.ToUpper(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == '@' {\n            result += string([]rune{unicode.ToUpper(rune(s[i]))\
    \ + unicode.ToUpper(rune(s[i+1])) + unicode.ToUpper(rune(s[i+2])) + unicode.ToUpper(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == 'c' {\n            result += string([]rune{unicode.ToUpper(rune(s[i]))\
    \ + unicode.ToUpper(rune(s[i+1])) + unicode.ToUpper(rune(s[i+2])) + unicode.ToUpper(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == 'C' {\n            result += string([]rune{unicode.ToLower(rune(s[i]))\
    \ + unicode.ToLower(rune(s[i+1])) + unicode.ToLower(rune(s[i+2])) + unicode.ToLower(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == 'd' {\n            result += string([]rune{unicode.ToUpper(rune(s[i]))\
    \ + unicode.ToUpper(rune(s[i+1])) + unicode.ToUpper(rune(s[i+2])) + unicode.ToUpper(rune(s[i+3])})\n\
    \            i += 4\n        } else if s[i] == 'D' {\n            result += string([]rune{unicode.ToLower(rune(s[i]))\
    \ + unicode.ToLower(rune(s[i+1])) + unicode.ToLower(rune(s[i+2])) + unicode.ToLower(rune(s[i+3])})",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-('a' - 'a')])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 1)\n        } else {\n    \
    \        result += v\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char-97)])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char-65)])\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A') + string((len(s) - 1) - i)\n        } else {\n            result += v\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(unicode.ToLower(v) + unicode.ToUpper(v))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ = result + string([]rune(letter)[3:]) + string([]rune(letter)[:3])\n       \
    \ } else {\n            result = result + letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a', char - 'A'})\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ += string(v - 'A')\n        } else {\n            result += v\n        }\n \
    \   }\n    return result\n}\n", "    var result string\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a'\
    \ + 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, r := range s\
    \ {\n        if r >= 'a' && r <= 'z' {\n            result += string(r-'a'+1)\n\
    \        } else {\n            result += r\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result = result\
    \ + string(v - 'a')\n        } else {\n            result = result + v\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 1)\n        } else {\n    \
    \        result += v\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    \n    for _, char := range s {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n       \
    \ } else {\n            result += char\n        }\n    }\n    \n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{char - 'a', char - 'A'})\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 1)\n        } else {\n    \
    \        result += v\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]rune(char)[26-int(char)])\n        } else {\n\
    \            result += string([]rune(char)[26-int(char)])\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            letter = string(unicode.ToLower(letter))\n\
    \        } else if letter == 'b' || letter == 'B' {\n            letter = string(unicode.ToUpper(letter))\n\
    \        }\n        result += letter\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n\
    \            result += string(v - 'A') + string((len(s)-1) - len(result))\n  \
    \      } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' {\n            result += string([]rune{letter, string([]rune{letter})})\n\
    \        } else if letter == 'A' {\n            result += string([]rune{string([]rune{letter}),\
    \ letter})\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, r\
    \ := range s {\n        if r >= 'a' && r <= 'z' {\n            result += string(r-'a')\
    \ + string(r-'A')\n        } else {\n            result += r\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 1)\n \
    \       } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    \n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ = result + string([]rune(letter)...)\n        } else {\n            result =\
    \ result + string(letter)\n        }\n    }\n    \n    return result\n}\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(v + 32)\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n           \
    \ result += string(v)\n        } else {\n            result += string(unicode.ToUpper(v))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result = result + string(v - 'a' + 1)\n        } else\
    \ {\n            result = result + v\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, char := range s {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n      \
    \      result += string([]rune(letter)...)\n        } else {\n            result\
    \ += string([]rune(letter)...)\n        }\n    }\n    \n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v)\n        } else {\n            result\
    \ += string(unicode.ToUpper(v))\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, char := range s {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result = result + string(char-'a') + string(char-'A')\n\
    \        } else {\n            result = result + string(char)\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' +\
    \ 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a'\
    \ + 'A'})\n        } else {\n            result += char\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += string([]rune{letter, string([]rune{letter\
    \ + 'A'})})\n        } else if letter == 'A' {\n            result += string([]rune{letter,\
    \ string([]rune{letter + 'a'})})\n        } else {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ = result + string([]rune(letter)...)\n        } else {\n            result =\
    \ result + string([]rune(letter)...)\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(unicode.ToUpper(v))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-('a' - 'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v)\n        } else {\n            result\
    \ += string(unicode.ToUpper(v))\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, v := range s {\n        if v >= 'a' && v <=\
    \ 'z' {\n            result = result + string(v - 'a' + 1)\n        } else {\n\
    \            result = result + v\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v - 'a' + 'A')\n        } else {\n         \
    \   result += v\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ = result + string(v - 'a') + string(v - 'A')\n        } else {\n           \
    \ result = result + v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == 'a' || letter\
    \ == 'A' {\n            result += string([]rune(letter)...)\n        } else {\n\
    \            result += string([]rune(letter)...)\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v - 'a' + 1)\n        } else {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == letter.toUpper() {\n            result += letter.toLower()\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else\
    \ {\n            result += v\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a' + 'A')\n        } else {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  i := 0\n    for ; i < len(s); i++ {\n        if s[i] == 'a' {\n           \
    \ result += string([]rune(s[i])...)\n        } else {\n            result += string([]rune(s[i])...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-('a' - 'a')])\n        } else {\n         \
    \   result += string([]rune(char)[26-int(char)-('A' - 'A')])\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += strings.ToUpper(letter)\n\
    \        } else if letter == 'b' || letter == 'B' {\n            result += strings.ToLower(letter)\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' {\n            result += string([]rune(letter)...)\n        }\
    \ else if letter == 'A' {\n            result += string([]rune(letter)...)\n \
    \       } else if letter == '#' {\n            result += string([]rune(letter)...)\n\
    \        } else if letter == '@' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char-65)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-('a'\
    \ - 'a')])\n        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char-65)])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range s {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result = result + string(char-('a'+1))\n \
    \       } else if char >= 'A' && char <= 'Z' {\n            result = result +\
    \ string(char-('A'+1))\n        } else {\n            result = result + char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-'a'])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n</code>\n<|/ a tags=string,go |>\n<| c |>\nThis does not work. Try it with\
    \ `solve(\"ab\")`\n<|/ c |>\n<| c |>\nIt does work. `solve(\"ab\")` returns `\"\
    AB\"`\n<|/ c |>\n<| c |>\nIt does work. `solve(\"ab\")` returns `\"AB\"`\n<|/\
    \ c |>\n<| c |>\nIt does work. `solve(\"ab\")` returns `\"AB\"`\n<|/ c |>\n<|\
    \ c |>\nIt does work. `solve(\"ab\")` returns `\"AB\"`\n<|/ c |>\n<| a |>\n<code>\n\
    package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n", "    var result\
    \ string\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n     \
    \       result += string(v - 'a' + 1)\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       result += string([]byte{char - 'a' + 'A'})\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n       \
    \     result += string(v)\n        } else {\n            result += string(v) +\
    \ string(v[len(v)-1:])\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[char-'a'+1])\n        } else {\n\
    \            result += string([]rune(char)[char-'A'+1])\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, char := range s {\n  \
    \      if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += char\n        }\n    }\n    \n    return result\n}\n", "    result := \"\"\
    \n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n    \
    \        result += string([]rune(char)[26-int(char)-65])\n        } else {\n \
    \           result += string([]rune(char)[26-int(char)])\n        }\n    }\n \
    \   return result\n}\n", "    result := \"\"\n    for _, char := range s {\n \
    \       if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-'a'])\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v)\n        } else {\n            result += string(v + 32)\n     \
    \   }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 1)\n        } else if v >=\
    \ 'A' && v <= 'Z' {\n            result += string(v - 'A' + 1)\n        } else\
    \ {\n            result += v\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char)))\
    \ - 'a' + 'A'])\n        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char)))\
    \ - 'a' + 'A'])\n        }\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, r := range s {\n        if r >= 'a' && r <= 'z' {\n            result\
    \ += string(r-'a') + string(r-'A')\n        } else {\n            result += r\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-97])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n     \
    \       result += string(v - 'a')\n        } else {\n            result += v\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            letter\
    \ = string(unicode.ToLower(letter))\n        } else if letter == 'b' || letter\
    \ == 'B' {\n            letter = string(unicode.ToUpper(letter))\n        } else\
    \ {\n            letter = letter\n        }\n        result += letter\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char)-97])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[char-'a'+1:])\n\
    \        } else {\n            result += string([]rune(char)[char-'a':])\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else {\n            result += v\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    for _, r := range s {\n  \
    \      if r >= 'a' && r <= 'z' {\n            result = result + string(r-'a')\
    \ + string(r-'A')\n        } else {\n            result = result + string(r)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += char\n        }\n    }\n    \n    return result\n}\n", "    result := \"\"\
    \n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v)\n        } else {\n            result += string(v + 32)\n     \
    \   }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v)\n        } else\
    \ {\n            result += string(v+32)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a')\n        } else if v >= 'A'\
    \ && v <= 'Z' {\n            result += string(v - 'A')\n        } else {\n   \
    \         result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char-97)])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char-65)])\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n        } else\
    \ {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == letter.toUpper() {\n          \
    \  result += letter.toLower()\n        } else {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n      \
    \  } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(unicode.ToUpper(v))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else {\n\
    \            result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a' + 'A')\n        } else {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char)-('a' - 'a')])\n        } else {\n      \
    \      result += string([]rune(char)[26-int(char)])\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' +\
    \ 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_49_modp
language: go_test.go
prompt: "package modp_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Return\
  \ 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101,\
  \ 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100,\
  \ 101)\n// 1\nfunc modp(n int, p int) int {\n"
tests: "func TestModp(t *testing.T) {\n  candidate := modp\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(3, 5), expected: 3 },\n     { actual: candidate(1101, 101),\
  \ expected: 2 },\n     { actual: candidate(0, 101), expected: 1 },\n     { actual:\
  \ candidate(3, 11), expected: 8 },\n     { actual: candidate(100, 101), expected:\
  \ 1 },\n     { actual: candidate(30, 5), expected: 4 },\n     { actual: candidate(31,\
  \ 5), expected: 3 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n       \
    \ return p\n    }\n    if p < 2 {\n        return modp(n - 1, p*p)\n    }\n  \
    \  if p < p {\n        return modp(n - 1, p)\n    }\n    return modp(n - 1, p*p)\n\
    }\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < n {\n       \
    \ return modp(n - p, p)\n    }\n    return modp(n + p - n, p)\n}\n", "    if n\
    \ == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) % p\n    }\n    if p < p {\n        return modp(n\
    \ - 2, p) % p\n    }\n    return modp(n - 1, p) % p\n}\n", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p) * p\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    return modp(n - 1, p) * p\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n < p {\n        return modp(n - p, p)\n    }\n    return modp(p, n)\n}\n",
  "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == p {\n        return 1\n    }\n    if n < p {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n - p, p) + p\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if p < n {\n        return modp(n - p, p)\n\
    \    }\n    if p > n {\n        return modp(n - p, p)\n    }\n    return modp(n\
    \ - p, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n\
    \ - 2, p)\n    }\n    if p < 4 {\n        return modp(n - 3, p)\n    }\n    if\
    \ p < 5 {\n        return modp(n - 4, p)\n    }\n    if p < 6 {\n        return\
    \ modp(n - 5, p)\n    }\n    if p < 7 {\n        return modp(n - 6, p)\n    }\n\
    \    if p < 8 {\n        return modp(n - 7, p)\n    }\n    if p < 9 {\n      \
    \  return modp(n - 8, p)\n    }\n    if p < 10 {\n        return modp(n - 9, p)\n\
    \    }\n    if p < 11 {\n        return modp(n - 10, p)\n    }\n    if p < 12\
    \ {\n        return modp(n - 11, p)\n    }\n    if p < 13 {\n        return modp(n\
    \ - 12, p)\n    }\n    if p < 14 {\n        return modp(n - 13, p)\n    }\n  \
    \  if p < 15 {\n        return modp(n - 14, p)\n    }\n    if p < 16 {\n     \
    \   return modp(n - 15, p)\n    }\n    if p < 17 {\n        return modp(n - 16,\
    \ p)\n    }\n    if p < 18 {\n        return modp(n - 17, p)\n    }\n    if p\
    \ < 19 {\n        return modp(n - 18, p)\n    }\n    if p < 20 {\n        return\
    \ modp(n - 19, p)\n    }\n    if p < 21 {\n        return modp(n - 20, p)\n  \
    \  }\n    if p < 22 {\n        return modp(n - 21, p)\n    }\n    if p < 23 {\n\
    \        return modp(n - 22, p)\n    }\n    if p < 24 {\n        return modp(n\
    \ - 23, p)\n    }\n    if p < 25 {\n        return modp(n - 24, p)\n    }\n  \
    \  if p < 26 {\n        return modp(n - 25, p)\n    }\n    if p < 27 {\n     \
    \   return modp(n - 26, p)\n    }\n    if p < 28 {\n        return modp(n - 27,\
    \ p)\n    }\n    if p < 29 {\n        return modp(n - 28, p)\n    }\n    if p\
    \ < 30 {\n        return modp(n - 29, p)\n    }\n    if p < 31 {\n        return\
    \ modp(n - 30, p)\n    }\n    if p < 32 {\n        return modp(n - 31, p)\n  \
    \  }\n    if p < 33 {\n        return modp(n - 32, p)\n    }\n    if p < 34 {\n\
    \        return modp(", "    if n < 0 {\n        n *= -1\n    }\n    if n < p\
    \ {\n        return n\n    }\n    if n == p {\n        return 1\n    }\n    if\
    \ n < p {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p) + p\n\
    }\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n\
    \    }\n    if p < 4 {\n        return modp(n - 3, p)\n    }\n    if p < 5 {\n\
    \        return modp(n - 4, p)\n    }\n    if p < 6 {\n        return modp(n -\
    \ 5, p)\n    }\n    if p < 7 {\n        return modp(n - 6, p)\n    }\n    if p\
    \ < 8 {\n        return modp(n - 7, p)\n    }\n    if p < 9 {\n        return\
    \ modp(n - 8, p)\n    }\n    if p < 10 {\n        return modp(n - 9, p)\n    }\n\
    \    if p < 11 {\n        return modp(n - 10, p)\n    }\n    if p < 12 {\n   \
    \     return modp(n - 11, p)\n    }\n    if p < 13 {\n        return modp(n -\
    \ 12, p)\n    }\n    if p < 14 {\n        return modp(n - 13, p)\n    }\n    if\
    \ p < 15 {\n        return modp(n - 14, p)\n    }\n    if p < 16 {\n        return\
    \ modp(n - 15, p)\n    }\n    if p < 17 {\n        return modp(n - 16, p)\n  \
    \  }\n    if p < 18 {\n        return modp(n - 17, p)\n    }\n    if p < 19 {\n\
    \        return modp(n - 18, p)\n    }\n    if p < 20 {\n        return modp(n\
    \ - 19, p)\n    }\n    if p < 21 {\n        return modp(n - 20, p)\n    }\n  \
    \  if p < 22 {\n        return modp(n - 21, p)\n    }\n    if p < 23 {\n     \
    \   return modp(n - 22, p)\n    }\n    if p < 24 {\n        return modp(n - 23,\
    \ p)\n    }\n    if p < 25 {\n        return modp(n - 24, p)\n    }\n    if p\
    \ < 26 {\n        return modp(n - 25, p)\n    }\n    if p < 27 {\n        return\
    \ modp(n - 26, p)\n    }\n    if p < 28 {\n        return modp(n - 27, p)\n  \
    \  }\n    if p < 29 {\n        return modp(n - 28, p)\n    }\n    if p < 30 {\n\
    \        return modp(n - 29, p)\n    }\n    if p < 31 {\n        return modp(n\
    \ - 30, p)\n    }\n    if p < 32 {\n        return modp(n - 31, p)\n    }\n  \
    \  if p < 33 {\n        return modp(n - 32, p)\n    }\n    if p < 34 {\n     \
    \   return modp(", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ n {\n        return modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "  \
    \  if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n-1, p)\n    }\n\
    \    return modp(n - 2, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p*p)\n    }\n    if p < p {\n        return modp(n - 1, p*p + p)\n    }\n\
    \    return modp(n - 1, p*p + p*p)\n}\n", "    if n < 0 {\n        n = -n\n  \
    \  }\n    if p < 0 {\n        p = -p\n    }\n    if n == 0 {\n        return 1\n\
    \    }\n    if p == 0 {\n        return 0\n    }\n    if p > n {\n        return\
    \ modp(n, p - 1)\n    }\n    if p < n {\n        return modp(n, p)\n    }\n  \
    \  if p == 1 {\n        return n\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return modp(n-1, p)\n    }\n    if n == p+1 {\n\
    \        return modp(n-1, p-1)\n    }\n    if n == p+2 {\n        return modp(n-1,\
    \ p)\n    }\n    if n == p+3 {\n        return modp(n-1, p-1)\n    }\n    if n\
    \ == p+4 {\n        return modp(n-1, p)\n    }\n    if n == p+5 {\n        return\
    \ modp(n-1, p-1)\n    }\n    if n == p+6 {\n        return modp(n-1, p)\n    }\n\
    \    if n == p+7 {\n        return modp(n-1, p-1)\n    }\n    if n == p+8 {\n\
    \        return modp(n-1, p)\n    }\n    if n == p+9 {\n        return modp(n-1,\
    \ p-1)\n    }\n    if n == p+10 {\n        return modp(n-1, p)\n    }\n    if\
    \ n == p+11 {\n        return modp(n-1, p-1)\n    }\n    if n == p+12 {\n    \
    \    return modp(n-1, p)\n    }\n    if n == p+13 {\n        return modp(n-1,\
    \ p-1)\n    }\n    if n == p+14 {\n        return modp(n-1, p)\n    }\n    if\
    \ n == p+15 {\n        return modp(n-1, p-1)\n    }\n    if n == p+16 {\n    \
    \    return modp(n-1, p)\n    }\n    if n == p+17 {\n        return modp(n-1,\
    \ p-1)\n    }\n    if n == p+18 {\n        return modp(n-1, p)\n    }\n    if\
    \ n == p+19 {\n        return modp(n-1, p-1)\n    }\n    if n == p+20 {\n    \
    \    return modp(n-1, p)\n    }\n    if n == p+21 {\n        return modp(n-1,\
    \ p-1)\n    }\n    if n == p+22 {\n        return modp(n-1, p)\n    }\n    if\
    \ n == p+23 {\n        return modp(n-1, p-1)\n    }\n    if n == p+24 {\n    \
    \    return modp(n-1, p)\n    }\n    if n == p+25 {\n        return modp(n-1,\
    \ p-1)\n    }\n    if n == p+26 {", "    if n < 0 {\n        n *= -1\n    }\n\
    \    if n < p {\n        return n\n    }\n    if n == p {\n        return 1\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    return modp(n\
    \ - p, p) + p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ p < n {\n        return modp(n - p, p)\n    }\n    if p > n {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(n - p, p) + modp(n, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < 2 {\n        return n\n\
    \    }\n    if p < 3 {\n        return modp(n - 1, p*p)\n    }\n    if p < 4 {\n\
    \        return modp(n - 1, p)\n    }\n    if p < 5 {\n        return modp(n -\
    \ 1, p*p)\n    }\n    if p < 6 {\n        return modp(n - 1, p)\n    }\n    if\
    \ p < 7 {\n        return modp(n - 1, p*p)\n    }\n    if p < 8 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 9 {\n        return modp(n - 1, p*p)\n   \
    \ }\n    if p < 10 {\n        return modp(n - 1, p)\n    }\n    if p < 11 {\n\
    \        return modp(n - 1, p*p)\n    }\n    if p < 12 {\n        return modp(n\
    \ - 1, p)\n    }\n    if p < 13 {\n        return modp(n - 1, p*p)\n    }\n  \
    \  if p < 14 {\n        return modp(n - 1, p)\n    }\n    if p < 15 {\n      \
    \  return modp(n - 1, p*p)\n    }\n    if p < 16 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 17 {\n        return modp(n - 1, p*p)\n    }\n    if p\
    \ < 18 {\n        return modp(n - 1, p)\n    }\n    if p < 19 {\n        return\
    \ modp(n - 1, p*p)\n    }\n    if p < 20 {\n        return modp(n - 1, p)\n  \
    \  }\n    if p < 21 {\n        return modp(n - 1, p*p)\n    }\n    if p < 22 {\n\
    \        return modp(n - 1, p)\n    }\n    if p < 23 {\n        return modp(n\
    \ - 1, p*p)\n    }\n    if p < 24 {\n        return modp(n - 1, p)\n    }\n  \
    \  if p < 25 {\n        return modp(n - 1, p*p)\n    }\n    if p < 26 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p < 27 {\n        return modp(n - 1,\
    \ p*p)\n    }\n    if p < 28 {\n        return modp(n - 1, p)\n    }\n    if p\
    \ < 29 {\n        return modp(n - 1, p*p)\n    }\n    if p < 30 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 31 {\n        return modp(n - 1, p*p)\n  \
    \  }\n    if p < 32 {\n        return modp(n - 1, p)\n    }\n    if p < 33 {\n\
    \        return modp(n - 1, p*p)", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if p == 1 {\n        return n\n\
    \    }\n    if p > n {\n        return modp(n - 1, p) % p\n    }\n    if p < n\
    \ {\n        return modp(n, p % n) % p\n    }\n    return modp(n - 1, p % n) %\
    \ p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n > p {\n\
    \        return modp(n - 1, p) + p\n    }\n    if n < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n}\n", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n      \
    \  return modp(n - 2, p)\n    }\n    if p < p {\n        return modp(n - 3, p)\n\
    \    }\n    return modp(n - 4, p)\n}\n", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < 2 {\n        return modp(n - 1, p) % p\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p) % p\n    }\n    return modp(n - 2, p) %\
    \ p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n\
    \        return n\n    }\n    if p > p {\n        return modp(n - 1, p)\n    }\n\
    \    if p % 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return modp(n\
    \ / 2, p) + modp(n / 2, p - 1)\n}\n", "    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 2, p)\n    }\n\
    \    return modp(n - 2, p)\n}\n", "    if n < 0 {\n        n *= -1\n    }\n  \
    \  if n < p {\n        return n\n    }\n    if n == p {\n        return 1\n  \
    \  }\n    if n > p {\n        return modp(n - p, p)\n    }\n    return 0\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if p == 0 {\n        return 0\n    }\n    if p == 1 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n    if p < n\
    \ {\n        return modp(n, p - n)\n    }\n    return modp(n - p, p)\n}\n", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n   \
    \ }\n    if n == p {\n        return 1\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 3 {\n        return modp(n /\
    \ 2, p)\n    }\n    if p < 5 {\n        return modp(n / 2, p)\n    }\n    if p\
    \ < 7 {\n        return modp(n / 2, p)\n    }\n    if p < 9 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 11 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 13 {\n        return modp(n / 2, p)\n    }\n    if p < 15 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 17 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 19 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 23 {\n        return modp(n / 2, p)\n    }\n    if p < 25 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 27 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 29 {\n        return modp(n / 2, p)\n    }\n    if p < 31 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 33 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 35 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 37 {\n        return modp(n / 2, p)\n    }\n    if p < 39 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 41 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 43 {\n        return modp(n / 2, p)\n    }\n    if p < 45 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 47 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 49 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 51 {\n        return modp(n / 2, p)\n    }\n    if p < 53 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 55 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 57 {\n        return modp(n / 2, p)\n    }\n    if p < 59 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 61 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 63 {\n        return modp(n / 2, p)\n    }\n    if ",
  "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == p {\n        return 1\n    }\n    if n < p {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) % p\n    }\n    if p < 3 {\n        return modp(n - 2,\
    \ p) % p\n    }\n    if p < 4 {\n        return modp(n - 3, p) % p\n    }\n  \
    \  if p < 5 {\n        return modp(n - 4, p) % p\n    }\n    if p < 6 {\n    \
    \    return modp(n - 5, p) % p\n    }\n    if p < 7 {\n        return modp(n -\
    \ 6, p) % p\n    }\n    if p < 8 {\n        return modp(n - 7, p) % p\n    }\n\
    \    if p < 9 {\n        return modp(n - 8, p) % p\n    }\n    if p < 10 {\n \
    \       return modp(n - 9, p) % p\n    }\n    if p < 11 {\n        return modp(n\
    \ - 10, p) % p\n    }\n    if p < 12 {\n        return modp(n - 11, p) % p\n \
    \   }\n    if p < 13 {\n        return modp(n - 12, p) % p\n    }\n    if p <\
    \ 14 {\n        return modp(n - 13, p) % p\n    }\n    if p < 15 {\n        return\
    \ modp(n - 14, p) % p\n    }\n    if p < 16 {\n        return modp(n - 15, p)\
    \ % p\n    }\n    if p < 17 {\n        return modp(n - 16, p) % p\n    }\n   \
    \ if p < 18 {\n        return modp(n - 17, p) % p\n    }\n    if p < 19 {\n  \
    \      return modp(n - 18, p) % p\n    }\n    if p < 20 {\n        return modp(n\
    \ - 19, p) % p\n    }\n    if p < 21 {\n        return modp(n - 20, p) % p\n \
    \   }\n    if p < 22 {\n        return modp(n - 21, p) % p\n    }\n    if p <\
    \ 23 {\n        return modp(n - 22, p) % p\n    }\n    if p < 24 {\n        return\
    \ modp(n - 23, p) % p\n    }\n    if p < 25 {\n        return modp(n - 24, p)\
    \ % p\n    }\n    if p < 26 {\n        return modp(n - 25, p) % p\n    }\n   \
    \ if p < 27 {\n        return modp(n - 26, p) % p\n    }\n    if p < 28 {\n  \
    \      return modp(n - 27, p) % p\n    }\n    if p < 29 {\n        return modp(n\
    \ - 28, p) % p\n    }\n    if p < 30 {\n        return modp(n - 29, p) % p\n \
    \   }\n    if p < 31 {\n", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(p,\
    \ n)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 3 {\n        return modp(n - 1, p) + p\n    }\n    if p < 4 {\n  \
    \      return modp(n - 1, p) + p\n    }\n    if p < 5 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 6 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 7 {\n        return modp(n - 1, p) + p\n    }\n    if p < 8 {\n  \
    \      return modp(n - 1, p) + p\n    }\n    if p < 9 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 10 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 11 {\n        return modp(n - 1, p) + p\n    }\n    if p < 12\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 13 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 14 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 15 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 16 {\n        return modp(n - 1, p) + p\n    }\n    if p < 17 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 18 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 19 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 20 {\n        return modp(n - 1, p) + p\n    }\n    if p < 21 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 22 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 23 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 24 {\n        return modp(n - 1, p) + p\n    }\n    if p < 25\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 26 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 27 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 28 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 29 {\n        return modp(n - 1, p) + p\n    }\n    if p < 30 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 31 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 32 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p ", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n       \
    \ return n\n    }\n    if n == p {\n        return 1\n    }\n    if n < p {\n\
    \        return modp(n - p, p)\n    }\n    return modp(n - p, p) + p\n}\n", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if p < 0 {\n        p *= -1\n    }\n\
    \    if n == 0 {\n        return 1\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    if n > p {\n\
    \        return modp(n, p - 1)\n    }\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n < p {\n        return modp(n - 1, p) + p\n    }\n\
    \    if n > p {\n        return modp(n - 1, p)\n    }\n}\n", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p <\
    \ 2 {\n        return modp(n >> 1, p) + p\n    }\n    if p < 3 {\n        return\
    \ modp(n >> 2, p) + p\n    }\n    if p < 5 {\n        return modp(n >> 3, p) +\
    \ p\n    }\n    if p < 7 {\n        return modp(n >> 4, p) + p\n    }\n    if\
    \ p < 9 {\n        return modp(n >> 5, p) + p\n    }\n    if p < 11 {\n      \
    \  return modp(n >> 6, p) + p\n    }\n    if p < 13 {\n        return modp(n >>\
    \ 7, p) + p\n    }\n    if p < 15 {\n        return modp(n >> 8, p) + p\n    }\n\
    \    if p < 17 {\n        return modp(n >> 9, p) + p\n    }\n    if p < 19 {\n\
    \        return modp(n >> 10, p) + p\n    }\n    if p < 23 {\n        return modp(n\
    \ >> 11, p) + p\n    }\n    if p < 25 {\n        return modp(n >> 12, p) + p\n\
    \    }\n    if p < 27 {\n        return modp(n >> 13, p) + p\n    }\n    if p\
    \ < 29 {\n        return modp(n >> 14, p) + p\n    }\n    if p < 31 {\n      \
    \  return modp(n >> 15, p) + p\n    }\n    if p < 33 {\n        return modp(n\
    \ >> 16, p) + p\n    }\n    if p < 35 {\n        return modp(n >> 17, p) + p\n\
    \    }\n    if p < 37 {\n        return modp(n >> 18, p) + p\n    }\n    if p\
    \ < 39 {\n        return modp(n >> 19, p) + p\n    }\n    if p < 41 {\n      \
    \  return modp(n >> 20, p) + p\n    }\n    if p < 43 {\n        return modp(n\
    \ >> 21, p) + p\n    }\n    if p < 45 {\n        return modp(n >> 22, p) + p\n\
    \    }\n    if p < 47 {\n        return modp(n >> 23, p) + p\n    }\n    if p\
    \ < 49 {\n        return modp(n >> 24, p) + p\n    }\n    if p < 51 {\n      \
    \  return modp(n >> 25, p) + p\n    }\n    if p < 53 {\n        return modp(n\
    \ >> 26, p) + p\n    }\n    if p < 55 {\n        return modp(n >> 27, p) + p\n\
    \    }\n    if p < 57 {\n        return modp(n >> 28", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 3 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 4 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 5 {\n        return modp(n - 1, p) + p\n    }\n    if p < 6 {\n  \
    \      return modp(n - 1, p) + p\n    }\n    if p < 7 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 8 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 9 {\n        return modp(n - 1, p) + p\n    }\n    if p < 10 {\n \
    \       return modp(n - 1, p) + p\n    }\n    if p < 11 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 12 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 13 {\n        return modp(n - 1, p) + p\n    }\n    if p < 14\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 15 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 16 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 17 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 18 {\n        return modp(n - 1, p) + p\n    }\n    if p < 19 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 20 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 21 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 22 {\n        return modp(n - 1, p) + p\n    }\n    if p < 23 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 24 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 25 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 26 {\n        return modp(n - 1, p) + p\n    }\n    if p < 27\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 28 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 29 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 30 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 31 {\n        return modp(n - 1, p) + p\n    }\n    if p < 32 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p ", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return -1\n    }\n    if p > p {\n\
    \        return -1\n    }\n    if p > n {\n        return -1\n    }\n    if p\
    \ < n {\n        return -1\n    }\n    if p > p {\n        return -1\n    }\n\
    \    if p < p {\n        return -1\n    }\n    if p > n {\n        return -1\n\
    \    }\n    if p < n {\n        return -1\n    }\n    if p > p {\n        return\
    \ -1\n    }\n    if p < p {\n        return -1\n    }\n    if p > n {\n      \
    \  return -1\n    }\n    if p < n {\n        return -1\n    }\n    if p > p {\n\
    \        return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p\
    \ > n {\n        return -1\n    }\n    if p < n {\n        return -1\n    }\n\
    \    if p > p {\n        return -1\n    }\n    if p < p {\n        return -1\n\
    \    }\n    if p > n {\n        return -1\n    }\n    if p < n {\n        return\
    \ -1\n    }\n    if p > p {\n        return -1\n    }\n    if p < p {\n      \
    \  return -1\n    }\n    if p > n {\n        return -1\n    }\n    if p < n {\n\
    \        return -1\n    }\n    if p > p {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p > n {\n        return -1\n    }\n\
    \    if p < n {\n        return -1\n    }\n    if p > p {\n        return -1\n\
    \    }\n    if p < p {\n        return -1\n    }\n    if p > n {\n        return\
    \ -1\n    }\n    if p < n {\n        return -1\n    }\n    if p > p {\n      \
    \  return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p > n {\n\
    \        return -1\n    }\n    if p < n {\n        return -1\n    }\n    if p\
    \ > p {\n        return -1\n    }\n    if p < p {\n        return -1\n    }\n\
    \    if p > n {\n        return -1\n    }\n    if p < n {\n        return -1\n\
    \    }\n    if p > p {\n        return -1\n    }\n    if p < p {\n        return\
    \ -1\n    }\n    if p > n {\n        return -1\n    }\n    if p < n {\n      \
    \  return -1\n    }\n    if p > p {\n        return -1\n    }\n    if p < p {\n\
    \        return -1\n    }\n    if p > n ", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p) % p\n    }\n    if p < 3 {\n        return modp(n - 2, p) % p\n\
    \    }\n    if p < 4 {\n        return modp(n - 3, p) % p\n    }\n    if p < 5\
    \ {\n        return modp(n - 4, p) % p\n    }\n    if p < 6 {\n        return\
    \ modp(n - 5, p) % p\n    }\n    if p < 7 {\n        return modp(n - 6, p) % p\n\
    \    }\n    if p < 8 {\n        return modp(n - 7, p) % p\n    }\n    if p < 9\
    \ {\n        return modp(n - 8, p) % p\n    }\n    if p < 10 {\n        return\
    \ modp(n - 9, p) % p\n    }\n    if p < 11 {\n        return modp(n - 10, p) %\
    \ p\n    }\n    if p < 12 {\n        return modp(n - 11, p) % p\n    }\n    if\
    \ p < 13 {\n        return modp(n - 12, p) % p\n    }\n    if p < 14 {\n     \
    \   return modp(n - 13, p) % p\n    }\n    if p < 15 {\n        return modp(n\
    \ - 14, p) % p\n    }\n    if p < 16 {\n        return modp(n - 15, p) % p\n \
    \   }\n    if p < 17 {\n        return modp(n - 16, p) % p\n    }\n    if p <\
    \ 18 {\n        return modp(n - 17, p) % p\n    }\n    if p < 19 {\n        return\
    \ modp(n - 18, p) % p\n    }\n    if p < 20 {\n        return modp(n - 19, p)\
    \ % p\n    }\n    if p < 21 {\n        return modp(n - 20, p) % p\n    }\n   \
    \ if p < 22 {\n        return modp(n - 21, p) % p\n    }\n    if p < 23 {\n  \
    \      return modp(n - 22, p) % p\n    }\n    if p < 24 {\n        return modp(n\
    \ - 23, p) % p\n    }\n    if p < 25 {\n        return modp(n - 24, p) % p\n \
    \   }\n    if p < 26 {\n        return modp(n - 25, p) % p\n    }\n    if p <\
    \ 27 {\n        return modp(n - 26, p) % p\n    }\n    if p < 28 {\n        return\
    \ modp(n - 27, p) % p\n    }\n    if p < 29 {\n        return modp(n - 28, p)\
    \ % p\n    }\n    if p < 30 {\n        return modp(n - 29, p) % p\n    }\n   \
    \ if p < 31 {\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ n {\n        return modp(n - p, p)\n    }\n    if p > n {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n - p, p)\n}\n", "    if n < 0 {\n        n\
    \ *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n == p {\n   \
    \     return 1\n    }\n    if n > p {\n        return modp(n - p, p)\n    }\n\
    \    return 0\n}\n", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n\
    \        return n\n    }\n    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p+1 {\n        return n\n    }\n \
    \   if n == p-1 {\n        return n\n    }\n    if n == p+2 {\n        return\
    \ n\n    }\n    if n == p+3 {\n        return n\n    }\n    if n == p+4 {\n  \
    \      return n\n    }\n    if n == p+5 {\n        return n\n    }\n    if n ==\
    \ p+6 {\n        return n\n    }\n    if n == p+7 {\n        return n\n    }\n\
    \    if n == p+8 {\n        return n\n    }\n    if n == p+9 {\n        return\
    \ n\n    }\n    if n == p+10 {\n        return n\n    }\n    if n == p+11 {\n\
    \        return n\n    }\n    if n == p+12 {\n        return n\n    }\n    if\
    \ n == p+13 {\n        return n\n    }\n    if n == p+14 {\n        return n\n\
    \    }\n    if n == p+15 {\n        return n\n    }\n    if n == p+16 {\n    \
    \    return n\n    }\n    if n == p+17 {\n        return n\n    }\n    if n ==\
    \ p+18 {\n        return n\n    }\n    if n == p+19 {\n        return n\n    }\n\
    \    if n == p+20 {\n        return n\n    }\n    if n == p+21 {\n        return\
    \ n\n    }\n    if n == p+22 {\n        return n\n    }\n    if n == p+23 {\n\
    \        return n\n    }\n    if n == p+24 {\n        return n\n    }\n    if\
    \ n == p+25 {\n        return n\n    }\n    if n == p+26 {\n        return n\n\
    \    }\n    if n == p+27 {\n        return n\n    }\n    if n == p+28 {\n    \
    \    return n\n    }\n    if n == p+29 {\n        return n\n    }\n    if n ==\
    \ p+30 {\n        return n\n    }\n    if n == p+31 {\n        return n\n    }\n\
    \    if n == p+32 {\n        return n\n    }\n    if n == p+33 {\n        return\
    \ n\n    }\n    if n == p+34 {\n        return n\n    }\n    if n == p+35 {\n\
    \        return n\n    }\n    if n == p+36 {\n        return n\n    }\n    if\
    \ n == p+37 {\n        return n\n    }\n    if n == p+38 {\n        return n\n\
    \    }\n    if n == p+39 {\n        return n\n    }\n    if n == ", "    if n\
    \ < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n   \
    \ if n == p {\n        return 1\n    }\n    if n < p {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n - p, p) + p\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p == 1\
    \ {\n        return n\n    }\n    if p > n {\n        return modp(n - p, p)\n\
    \    }\n    if p < n {\n        return modp(n, p - n)\n    }\n    return modp(n\
    \ / p, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p == 0 {\n        return 0\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if p == 2 {\n        return modp(n - 1, p)\n\
    \    }\n    if p == 3 {\n        return modp(n - 2, p)\n    }\n    if p == 4 {\n\
    \        return modp(n - 3, p)\n    }\n    if p == 5 {\n        return modp(n\
    \ - 4, p)\n    }\n    if p == 6 {\n        return modp(n - 5, p)\n    }\n    if\
    \ p == 7 {\n        return modp(n - 6, p)\n    }\n    if p == 8 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p == 9 {\n        return modp(n - 8, p)\n    }\n\
    \    if p == 10 {\n        return modp(n - 9, p)\n    }\n    if p == 11 {\n  \
    \      return modp(n - 10, p)\n    }\n    if p == 12 {\n        return modp(n\
    \ - 11, p)\n    }\n    if p == 13 {\n        return modp(n - 12, p)\n    }\n \
    \   if p == 14 {\n        return modp(n - 13, p)\n    }\n    if p == 15 {\n  \
    \      return modp(n - 14, p)\n    }\n    if p == 16 {\n        return modp(n\
    \ - 15, p)\n    }\n    if p == 17 {\n        return modp(n - 16, p)\n    }\n \
    \   if p == 18 {\n        return modp(n - 17, p)\n    }\n    if p == 19 {\n  \
    \      return modp(n - 18, p)\n    }\n    if p == 20 {\n        return modp(n\
    \ - 19, p)\n    }\n    if p == 21 {\n        return modp(n - 20, p)\n    }\n \
    \   if p == 22 {\n        return modp(n - 21, p)\n    }\n    if p == 23 {\n  \
    \      return modp(n - 22, p)\n    }\n    if p == 24 {\n        return modp(n\
    \ - 23, p)\n    }\n    if p == 25 {\n        return modp(n - 24, p)\n    }\n \
    \   if p == 26 {\n        return modp(n - 25, p)\n    }\n    if p == 27 {\n  \
    \      return modp(n - 26, p)\n    }\n    if p == 28 {\n        return modp(n\
    \ - 27, p)\n    }\n    if p == 29 {\n        return modp(n - 28, p)\n    }\n \
    \   if p == 30 {\n        return modp(n - 29, p)\n    }\n    if p == 31 {\n  \
    \      return modp(n - 30, p)\n    }\n    if p == 32 {\n        return modp(n\
    \ - 31, p)\n    }\n    if p == 33 {\n        return modp(n - 32, p)\n    }\n \
    \   if p == 34 {\n        return modp(n - 33, p)", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n   \
    \ if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n\
    \    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n      \
    \  return modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n\
    \    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n\
    \        return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n\
    \ - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n  \
    \  if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n     \
    \   return modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14,\
    \ p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p\
    \ < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return\
    \ modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n  \
    \  }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n\
    \        return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n\
    \ - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n  \
    \  if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n     \
    \   return modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25,\
    \ p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p\
    \ < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return\
    \ modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n  \
    \  }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n\
    \        return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n\
    \ - 32, p)\n    }\n    if p < 34 {\n        return modp(", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < 3 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 4 {\n        return modp(n - 1, p) + p\n\
    \    }\n    if p < 5 {\n        return modp(n - 1, p) + p\n    }\n    if p < 6\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 7 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 8 {\n        return modp(n - 1, p) + p\n\
    \    }\n    if p < 9 {\n        return modp(n - 1, p) + p\n    }\n    if p < 10\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 11 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 12 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 13 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 14 {\n        return modp(n - 1, p) + p\n    }\n    if p < 15 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 16 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 17 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 18 {\n        return modp(n - 1, p) + p\n    }\n    if p < 19 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 20 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 21 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 22 {\n        return modp(n - 1, p) + p\n    }\n    if p < 23\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 24 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 25 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 26 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 27 {\n        return modp(n - 1, p) + p\n    }\n    if p < 28 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 29 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 30 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 31 {\n        return modp(n - 1, p) + p\n    }\n    if p < 32 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p ", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 3 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 4 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 5 {\n        return modp(n - 1, p) + p\n    }\n    if p < 6 {\n  \
    \      return modp(n - 1, p) + p\n    }\n    if p < 7 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 8 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 9 {\n        return modp(n - 1, p) + p\n    }\n    if p < 10 {\n \
    \       return modp(n - 1, p) + p\n    }\n    if p < 11 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 12 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 13 {\n        return modp(n - 1, p) + p\n    }\n    if p < 14\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 15 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 16 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 17 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 18 {\n        return modp(n - 1, p) + p\n    }\n    if p < 19 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 20 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 21 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 22 {\n        return modp(n - 1, p) + p\n    }\n    if p < 23 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 24 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 25 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 26 {\n        return modp(n - 1, p) + p\n    }\n    if p < 27\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 28 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 29 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 30 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 31 {\n        return modp(n - 1, p) + p\n    }\n    if p < 32 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p ", "    if n < 0 {\n        n *=\
    \ -1\n    }\n    if n < p {\n        return n\n    }\n    if n == p {\n      \
    \  return 1\n    }\n    if n > p {\n        return modp(n - p, p)\n    }\n   \
    \ return 0\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ 2 {\n        return n\n    }\n    if p < 3 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 2, p)\n    }\n    return modp(n\
    \ - 3, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n <\
    \ p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if p < 2 {\n        return modp(n - 1, p*p)\n    }\n    if p < 3 {\n\
    \        return modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n / 2, p)\n    }\n    if p > p {\n      \
    \  return modp(n / 2, p)\n    }\n    if n % 2 == 0 {\n        return modp(n /\
    \ 2, p)\n    }\n    return modp(n-1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n   \
    \ if p < 3 {\n        return modp(n - 2, p)\n    }\n    return modp(n - 3, p)\
    \ + modp(n - 2, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n -\
    \ 1, p)\n}\n", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n     \
    \   return n\n    }\n    if n == p {\n        return 1\n    }\n    if n < p {\n\
    \        return modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n\
    \ == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if\
    \ p < 4 {\n        return modp(n - 3, p)\n    }\n    if p < 5 {\n        return\
    \ modp(n - 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n    }\n\
    \    if p < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n      \
    \  return modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p)\n\
    \    }\n    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if p < 11 {\n\
    \        return modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n\
    \ - 11, p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n    }\n  \
    \  if p < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n     \
    \   return modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n - 15,\
    \ p)\n    }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n    if p\
    \ < 18 {\n        return modp(n - 17, p)\n    }\n    if p < 19 {\n        return\
    \ modp(n - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19, p)\n  \
    \  }\n    if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p < 22 {\n\
    \        return modp(n - 21, p)\n    }\n    if p < 23 {\n        return modp(n\
    \ - 22, p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n    }\n  \
    \  if p < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n     \
    \   return modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n - 26,\
    \ p)\n    }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n    if p\
    \ < 29 {\n        return modp(n - 28, p)\n    }\n    if p < 30 {\n        return\
    \ modp(n - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30, p)\n  \
    \  }\n    if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p < 33 {\n\
    \        return modp(n - 32, p)\n    }\n    if p < 34 {\n        return modp(",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if n < p {\n        return\
    \ modp(n - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p) + p\n    }\n    if p > 2 {\n        return\
    \ modp(n - 1, modp(p - 1, p))\n    }\n    return modp(n - 1, modp(p - 1, p) +\
    \ p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n -\
    \ 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n  \
    \      return p\n    }\n    if p < 2 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 3 {\n        return modp(n / 2, p)\n    }\n    return modp(n / 2,\
    \ p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) * p\n    }\n\
    \    if p < 3 {\n        return modp(n - 1, p)\n    }\n    if p < 4 {\n      \
    \  return modp(n - 1, p) * p\n    }\n    if p < 5 {\n        return modp(n - 1,\
    \ p) * p\n    }\n    return modp(n - 1, p) * p + modp(n - 1, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if n > p {\n        return modp(n - 1, p)\n    }\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n\
    \    return modp(n - 3, p) + modp(n - 2, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p*p)\n    }\n    if p < 3 {\n        return modp(n - 1, p*p\
    \ + 2)\n    }\n    if p < 5 {\n        return modp(n - 1, p*p + 4)\n    }\n  \
    \  if p < 7 {\n        return modp(n - 1, p*p + 6)\n    }\n    if p < 9 {\n  \
    \      return modp(n - 1, p*p + 8)\n    }\n    if p < 11 {\n        return modp(n\
    \ - 1, p*p + 10)\n    }\n    if p < 13 {\n        return modp(n - 1, p*p + 12)\n\
    \    }\n    if p < 15 {\n        return modp(n - 1, p*p + 14)\n    }\n    if p\
    \ < 17 {\n        return modp(n - 1, p*p + 16)\n    }\n    if p < 19 {\n     \
    \   return modp(n - 1, p*p + 18)\n    }\n    if p < 21 {\n        return modp(n\
    \ - 1, p*p + 20)\n    }\n    if p < 23 {\n        return modp(n - 1, p*p + 22)\n\
    \    }\n    if p < 25 {\n        return modp(n - 1, p*p + 24)\n    }\n    if p\
    \ < 27 {\n        return modp(n - 1, p*p + 26)\n    }\n    if p < 29 {\n     \
    \   return modp(n - 1, p*p + 28)\n    }\n    if p < 31 {\n        return modp(n\
    \ - 1, p*p + 30)\n    }\n    if p < 33 {\n        return modp(n - 1, p*p + 32)\n\
    \    }\n    if p < 35 {\n        return modp(n - 1, p*p + 34)\n    }\n    if p\
    \ < 37 {\n        return modp(n - 1, p*p + 36)\n    }\n    if p < 39 {\n     \
    \   return modp(n - 1, p*p + 38)\n    }\n    if p < 41 {\n        return modp(n\
    \ - 1, p*p + 40)\n    }\n    if p < 43 {\n        return modp(n - 1, p*p + 42)\n\
    \    }\n    if p < 45 {\n        return modp(n - 1, p*p + 44)\n    }\n    if p\
    \ < 47 {\n        return modp(n - 1, p*p + 46)\n    }\n    if p < 49 {\n     \
    \   return modp(n - 1, p*p + 48)\n    }\n    if p < 51 {\n        return modp(n\
    \ - 1, p*p + 50)\n    }\n    if p < 53 {\n        return modp(n - 1, p*p + 52)\n\
    \    }\n    if p < ", "    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 3 {\n        return modp(n - 2, p) % p\n    }\n    if p\
    \ < 4 {\n        return modp(n - 3, p) % p\n    }\n    if p < 5 {\n        return\
    \ modp(n - 4, p) % p\n    }\n    if p < 6 {\n        return modp(n - 5, p) % p\n\
    \    }\n    if p < 7 {\n        return modp(n - 6, p) % p\n    }\n    if p < 8\
    \ {\n        return modp(n - 7, p) % p\n    }\n    if p < 9 {\n        return\
    \ modp(n - 8, p) % p\n    }\n    if p < 10 {\n        return modp(n - 9, p) %\
    \ p\n    }\n    if p < 11 {\n        return modp(n - 10, p) % p\n    }\n    if\
    \ p < 12 {\n        return modp(n - 11, p) % p\n    }\n    if p < 13 {\n     \
    \   return modp(n - 12, p) % p\n    }\n    if p < 14 {\n        return modp(n\
    \ - 13, p) % p\n    }\n    if p < 15 {\n        return modp(n - 14, p) % p\n \
    \   }\n    if p < 16 {\n        return modp(n - 15, p) % p\n    }\n    if p <\
    \ 17 {\n        return modp(n - 16, p) % p\n    }\n    if p < 18 {\n        return\
    \ modp(n - 17, p) % p\n    }\n    if p < 19 {\n        return modp(n - 18, p)\
    \ % p\n    }\n    if p < 20 {\n        return modp(n - 19, p) % p\n    }\n   \
    \ if p < 21 {\n        return modp(n - 20, p) % p\n    }\n    if p < 22 {\n  \
    \      return modp(n - 21, p) % p\n    }\n    if p < 23 {\n        return modp(n\
    \ - 22, p) % p\n    }\n    if p < 24 {\n        return modp(n - 23, p) % p\n \
    \   }\n    if p < 25 {\n        return modp(n - 24, p) % p\n    }\n    if p <\
    \ 26 {\n        return modp(n - 25, p) % p\n    }\n    if p < 27 {\n        return\
    \ modp(n - 26, p) % p\n    }\n    if p < 28 {\n        return modp(n - 27, p)\
    \ % p\n    }\n    if p < 29 {\n        return modp(n - 28, p) % p\n    }\n   \
    \ if p < 30 {\n        return modp(n - 29, p) % p\n    }\n    if p < 31 {\n",
  "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == p {\n        return 1\n    }\n    if n > p {\n        return modp(n\
    \ - p, p)\n    }\n    return 0\n}\n", "    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < 2 {\n        return n\n    }\n    if p < 3 {\n        return\
    \ modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 5 {\n        return modp(n\
    \ - 2, p) + modp(n - 1, p)\n    }\n    if p < 7 {\n        return modp(n - 3,\
    \ p) + modp(n - 2, p)\n    }\n    if p < 9 {\n        return modp(n - 4, p) +\
    \ modp(n - 3, p)\n    }\n    if p < 11 {\n        return modp(n - 5, p) + modp(n\
    \ - 4, p)\n    }\n    if p < 13 {\n        return modp(n - 6, p) + modp(n - 5,\
    \ p)\n    }\n    if p < 15 {\n        return modp(n - 7, p) + modp(n - 6, p)\n\
    \    }\n    if p < 17 {\n        return modp(n - 8, p) + modp(n - 7, p)\n    }\n\
    \    if p < 19 {\n        return modp(n - 9, p) + modp(n - 8, p)\n    }\n    if\
    \ p < 23 {\n        return modp(n - 10, p) + modp(n - 9, p)\n    }\n    if p <\
    \ 25 {\n        return modp(n - 11, p) + modp(n - 10, p)\n    }\n    if p < 27\
    \ {\n        return modp(n - 12, p) + modp(n - 11, p)\n    }\n    if p < 29 {\n\
    \        return modp(n - 13, p) + modp(n - 12, p)\n    }\n    if p < 31 {\n  \
    \      return modp(n - 14, p) + modp(n - 13, p)\n    }\n    if p < 33 {\n    \
    \    return modp(n - 15, p) + modp(n - 14, p)\n    }\n    if p < 35 {\n      \
    \  return modp(n - 16, p) + modp(n - 15, p)\n    }\n    if p < 37 {\n        return\
    \ modp(n - 17, p) + modp(n - 16, p)\n    }\n    if p < 39 {\n        return modp(n\
    \ - 18, p) + modp(n - 17, p)\n    }\n    if p < 41 {\n        return modp(n -\
    \ 19, p) + modp(n - 18, p)\n    }\n    if p < 43 {\n        return modp(n - 20,\
    \ p) + modp(n - 19, p)\n    }\n    if p < 45 {\n        return modp(n - 21, p)\
    \ + modp(n - 20, p)\n    }\n    if p < 47 {\n        return modp(n - 22, p) +\
    \ modp(n - 21, p)\n    }\n    if p < 49 {\n        return modp(n - 23, p) + modp(n\
    \ - ", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3\
    \ {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return modp(n\
    \ - 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n    if\
    \ p < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n        return\
    \ modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n    }\n\
    \    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n     \
    \   return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n - 10,\
    \ p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n    if p\
    \ < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n        return\
    \ modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14, p)\n  \
    \  }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p < 17 {\n\
    \        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return modp(n\
    \ - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n    }\n  \
    \  if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n     \
    \   return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n - 21,\
    \ p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n    if p\
    \ < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n        return\
    \ modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25, p)\n  \
    \  }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p < 28 {\n\
    \        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return modp(n\
    \ - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n    }\n  \
    \  if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n     \
    \   return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n - 32,\
    \ p)\n    }\n    if p < 34 {\n        return modp(n - 33, p)\n    }\n    if p\
    \ < ", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if p < 2 {\n        return modp(n - 1, p) % p\n    }\n    if p < p\
    \ {\n        return modp(n - 2, p) % p\n    }\n    return modp(n - 1, p) % p\n\
    }\n", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return\
    \ n\n    }\n    if n == p {\n        return 1\n    }\n    if n > p {\n       \
    \ return modp(n - p, p)\n    }\n    return 0\n}\n", "    if n == 0 {\n       \
    \ return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + 1\n    }\n    if p < 3 {\n        return modp(n\
    \ - 1, p)\n    }\n    if p < 4 {\n        return modp(n - 1, p) + modp(n - 1,\
    \ p)\n    }\n    if p < 5 {\n        return modp(n - 1, p) * modp(n - 1, p)\n\
    \    }\n    if p < 6 {\n        return modp(n - 1, p) / modp(n - 1, p)\n    }\n\
    \    if p < 7 {\n        return modp(n - 1, p) % modp(n - 1, p)\n    }\n    if\
    \ p < 8 {\n        return modp(n - 1, p) * modp(n - 1, p)\n    }\n    if p < 9\
    \ {\n        return modp(n - 1, p) / modp(n - 1, p)\n    }\n    if p < 10 {\n\
    \        return modp(n - 1, p) % modp(n - 1, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n - 1, p) * modp(n - 1, p)\n    }\n    if p < 12 {\n        return\
    \ modp(n - 1, p) / modp(n - 1, p)\n    }\n    if p < 13 {\n        return modp(n\
    \ - 1, p) % modp(n - 1, p)\n    }\n    if p < 14 {\n        return modp(n - 1,\
    \ p) * modp(n - 1, p)\n    }\n    if p < 15 {\n        return modp(n - 1, p) /\
    \ modp(n - 1, p)\n    }\n    if p < 16 {\n        return modp(n - 1, p) % modp(n\
    \ - 1, p)\n    }\n    if p < 17 {\n        return modp(n - 1, p) * modp(n - 1,\
    \ p)\n    }\n    if p < 18 {\n        return modp(n - 1, p) / modp(n - 1, p)\n\
    \    }\n    if p < 19 {\n        return modp(n - 1, p) % modp(n - 1, p)\n    }\n\
    \    if p < 20 {\n        return modp(n - 1, p) * modp(n - 1, p)\n    }\n    if\
    \ p < 21 {\n        return modp(n - 1, p) / modp(n - 1, p)\n    }\n    if p <\
    \ 22 {\n        return modp(n - 1, p) % modp(n - 1, p)\n    }\n    if p < 23 {\n\
    \        return modp(n - 1, p) * modp(n - 1, p)\n    }\n    if p < 24 {\n    \
    \    return modp(n - 1, p) / modp(n - 1, p)\n    }\n    if p < 25 {\n        return\
    \ modp(n - 1, p) % modp(n - 1, p)\n    }\n    if p < 26 {\n        return modp(n\
    \ - 1, p) * modp(n - 1, p)\n    }\n    if p < 27 {\n        return mod", "   \
    \ if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n\
    \    if p < p {\n        return modp(n - 3, p)\n    }\n    return modp(n - 4,\
    \ p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if n == p {\n        return n\n    }\n    if p < n {\n\
    \        return modp(n - p, p)\n    }\n    if p > n {\n        return modp(n -\
    \ p, p)\n    }\n    return modp(n - p, p) + modp(n, p)\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n ==\
    \ p {\n        return 1\n    }\n    if n < p {\n        return modp(n - p, p)\n\
    \    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(p,\
    \ n)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 3 {\n        return modp(n - 2, p) % p\n    }\n    return modp(n -\
    \ 3, p) % p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n\
    \    }\n    if p < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n\
    \ - 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p == 0 {\n        return 0\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if p > n {\n        return modp(n - p, p)\n\
    \    }\n    if p < n {\n        return modp(n, p - n)\n    }\n    if p == 2 {\n\
    \        return modp(n / 2, p)\n    }\n    if p == 3 {\n        return modp(n\
    \ / 3, p)\n    }\n    if p == 4 {\n        return modp(n / 4, p)\n    }\n    if\
    \ p == 5 {\n        return modp(n / 5, p)\n    }\n    if p == 6 {\n        return\
    \ modp(n / 6, p)\n    }\n    if p == 7 {\n        return modp(n / 7, p)\n    }\n\
    \    if p == 8 {\n        return modp(n / 8, p)\n    }\n    if p == 9 {\n    \
    \    return modp(n / 9, p)\n    }\n    if p == 10 {\n        return modp(n / 10,\
    \ p)\n    }\n    if p == 11 {\n        return modp(n / 11, p)\n    }\n    if p\
    \ == 12 {\n        return modp(n / 12, p)\n    }\n    if p == 13 {\n        return\
    \ modp(n / 13, p)\n    }\n    if p == 14 {\n        return modp(n / 14, p)\n \
    \   }\n    if p == 15 {\n        return modp(n / 15, p)\n    }\n    if p == 16\
    \ {\n        return modp(n / 16, p)\n    }\n    if p == 17 {\n        return modp(n\
    \ / 17, p)\n    }\n    if p == 18 {\n        return modp(n / 18, p)\n    }\n \
    \   if p == 19 {\n        return modp(n / 19, p)\n    }\n    if p == 20 {\n  \
    \      return modp(n / 20, p)\n    }\n    if p == 21 {\n        return modp(n\
    \ / 21, p)\n    }\n    if p == 22 {\n        return modp(n / 22, p)\n    }\n \
    \   if p == 100 {\n        return modp(n / 100, p)\n    }\n    if p == 101 {\n\
    \        return modp(n / 101, p)\n    }\n    if p == 102 {\n        return modp(n\
    \ / 102, p)\n    }\n    if p == 103 {\n        return modp(n / 103, p)\n    }\n\
    \    if p == 104 {\n        return modp(n / 104, p)\n    }\n    if p == 105 {\n\
    \        return modp(n / 105, p)\n    }\n    if p == 106 {\n        return modp(n\
    \ / 106, p)\n    }\n    if p == 107 {\n        return mod", "    if n < 0 {\n\
    \        n = -n\n    }\n    if p < 0 {\n        p = -p\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p >\
    \ n {\n        return modp(n, p)\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    if n == p {\n        return n\n    }\n    if n == p+1 {\n\
    \        return n\n    }\n    if n == p-1 {\n        return n\n    }\n    return\
    \ modp(n - 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < 2 {\n        return -1\n    }\n    if p > 100 {\n        return -1\n\
    \    }\n    if p > n {\n        return -1\n    }\n    if p < p {\n        return\
    \ modp(n - p, p)\n    }\n    if p < p {\n        return modp(n - p, p)\n    }\n\
    \    return modp(n - p, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n \
    \   return modp(n - 1, p) + p\n}\n", "    if n < 0 {\n        n *= -1\n    }\n\
    \    if p < 0 {\n        p *= -1\n    }\n    if n == 0 {\n        return 1\n \
    \   }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p > p {\n        return modp(n - 1, p) + p\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if p < 2 {\n        return modp(n - 1, p*p)\n    }\n    if p < p {\n\
    \        return modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p) + 1\n    }\n    if p < 3 {\n  \
    \      return modp(n - 1, p) % p\n    }\n    if p < 4 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 5 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 6 {\n        return modp(n - 1, p) % p\n    }\n    if p < 7 {\n  \
    \      return modp(n - 1, p) % p\n    }\n    if p < 8 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 9 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 10 {\n        return modp(n - 1, p) % p\n    }\n    if p < 11 {\n\
    \        return modp(n - 1, p) % p\n    }\n    if p < 12 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 13 {\n        return modp(n - 1, p) % p\n   \
    \ }\n    if p < 14 {\n        return modp(n - 1, p) % p\n    }\n    if p < 15\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < 16 {\n        return\
    \ modp(n - 1, p) % p\n    }\n    if p < 17 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 18 {\n        return modp(n - 1, p) % p\n    }\n    if\
    \ p < 19 {\n        return modp(n - 1, p) % p\n    }\n    if p < 20 {\n      \
    \  return modp(n - 1, p) % p\n    }\n    if p < 21 {\n        return modp(n -\
    \ 1, p) % p\n    }\n    if p < 22 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 23 {\n        return modp(n - 1, p) % p\n    }\n    if p < 24 {\n\
    \        return modp(n - 1, p) % p\n    }\n    if p < 25 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 26 {\n        return modp(n - 1, p) % p\n   \
    \ }\n    if p < 27 {\n        return modp(n - 1, p) % p\n    }\n    if p < 28\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < 29 {\n        return\
    \ modp(n - 1, p) % p\n    }\n    if p < 30 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 31 {\n        return modp(n - 1, p) % p\n    }\n    if\
    \ p < 32 {\n        return modp(n - 1, p) % p\n    }\n    if p < ", "    if n\
    \ < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n   \
    \ if n == p {\n        return 1\n    }\n    if n < p {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n - p, p) + p\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 5 {\n\
    \        return modp(n - 3, p)\n    }\n    if p < 7 {\n        return modp(n -\
    \ 4, p)\n    }\n    if p < 9 {\n        return modp(n - 5, p)\n    }\n    if p\
    \ < 11 {\n        return modp(n - 6, p)\n    }\n    if p < 13 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < 15 {\n        return modp(n - 8, p)\n    }\n\
    \    if p < 17 {\n        return modp(n - 9, p)\n    }\n    if p < 19 {\n    \
    \    return modp(n - 10, p)\n    }\n    if p < 23 {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < 25 {\n        return modp(n - 12, p)\n    }\n    if p\
    \ < 27 {\n        return modp(n - 13, p)\n    }\n    if p < 29 {\n        return\
    \ modp(n - 14, p)\n    }\n    if p < 31 {\n        return modp(n - 15, p)\n  \
    \  }\n    if p < 33 {\n        return modp(n - 16, p)\n    }\n    if p < 35 {\n\
    \        return modp(n - 17, p)\n    }\n    if p < 37 {\n        return modp(n\
    \ - 18, p)\n    }\n    if p < 39 {\n        return modp(n - 19, p)\n    }\n  \
    \  if p < 41 {\n        return modp(n - 20, p)\n    }\n    if p < 43 {\n     \
    \   return modp(n - 21, p)\n    }\n    if p < 45 {\n        return modp(n - 22,\
    \ p)\n    }\n    if p < 47 {\n        return modp(n - 23, p)\n    }\n    if p\
    \ < 49 {\n        return modp(n - 24, p)\n    }\n    if p < 51 {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < 53 {\n        return modp(n - 26, p)\n  \
    \  }\n    if p < 55 {\n        return modp(n - 27, p)\n    }\n    if p < 57 {\n\
    \        return modp(n - 28, p)\n    }\n    if p < 59 {\n        return modp(n\
    \ - 29, p)\n    }\n    if p < 61 {\n        return modp(n - 30, p)\n    }\n  \
    \  if p < 63 {\n        return modp(n - 31, p)\n    }\n    if p < 65 {\n     \
    \   return modp(n - 32, p)\n    }\n    if p < 67 {\n        return mod", "   \
    \ if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == p {\n        return 1\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    if n == p {\n\
    \        return 1\n    }\n    return modp(n - p, p) + modp(n, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < p {\n  \
    \      return modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p) + 1\n    }\n    if p < 3 {\n  \
    \      return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 4 {\n       \
    \ return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 5 {\n        return\
    \ modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 6 {\n        return modp(n\
    \ - 1, p) + modp(n - 1, p)\n    }\n    if p < 7 {\n        return modp(n - 1,\
    \ p) + modp(n - 1, p)\n    }\n    if p < 8 {\n        return modp(n - 1, p) +\
    \ modp(n - 1, p)\n    }\n    if p < 9 {\n        return modp(n - 1, p) + modp(n\
    \ - 1, p)\n    }\n    if p < 10 {\n        return modp(n - 1, p) + modp(n - 1,\
    \ p)\n    }\n    if p < 11 {\n        return modp(n - 1, p) + modp(n - 1, p)\n\
    \    }\n    if p < 12 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n\
    \    if p < 13 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if\
    \ p < 14 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p <\
    \ 15 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 16 {\n\
    \        return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 17 {\n    \
    \    return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 18 {\n        return\
    \ modp(n - 1, p) + modp(n - 1, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 1, p) + modp(n - 1, p)\n    }\n    if p < 20 {\n        return modp(n - 1,\
    \ p) + modp(n - 1, p)\n    }\n    if p < 21 {\n        return modp(n - 1, p) +\
    \ modp(n - 1, p)\n    }\n    if p < 22 {\n        return modp(n - 1, p) + modp(n\
    \ - 1, p)\n    }\n    if p < 23 {\n        return modp(n - 1, p) + modp(n - 1,\
    \ p)\n    }\n    if p < 24 {\n        return modp(n - 1, p) + modp(n - 1, p)\n\
    \    }\n    if p < 25 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n\
    \    if p < 26 {\n        return modp(n - 1, p) + modp(n - 1, p)\n    }\n    if\
    \ p < ", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n       \
    \ return -1\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n   \
    \ return modp(n - p, p) + modp(n, p)\n}\n", "    if n < 0 {\n        n *= -1\n\
    \    }\n    if n < p {\n        return n\n    }\n    if n == p {\n        return\
    \ 1\n    }\n    if n < p {\n        return modp(n+p, p)\n    }\n    if n < p {\n\
    \        return modp(n, p-n)\n    }\n    return modp(n-p, p)\n}\n", "    if n\
    \ == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p == 0 {\n        return 0\n    }\n    if p > n {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < n {\n        return modp(n - 1, p)\n    }\n \
    \   return modp(n - 1, p) + modp(n-1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return -1\n    }\n    if p > 100 {\n\
    \        return -1\n    }\n    if p > n {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p < n {\n        return -1\n    }\n\
    \    if p < p {\n        return -1\n    }\n    if p < p {\n        return -1\n\
    \    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n        return\
    \ -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n      \
    \  return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n\
    \        return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p < p {\n        return -1\n    }\n\
    \    if p < p {\n        return -1\n    }\n    if p < p {\n        return -1\n\
    \    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n        return\
    \ -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n      \
    \  return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n\
    \        return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p < p {\n        return -1\n    }\n\
    \    if p < p {\n        return -1\n    }\n    if p < p {\n        return -1\n\
    \    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n        return\
    \ -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n      \
    \  return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n\
    \        return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p < p {\n        return -1\n    }\n\
    \    if p < p {\n        return -1\n    }\n    if p < p {\n        return -1\n\
    \    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n        return\
    \ -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n      \
    \  return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p < p {\n\
    \        return -1\n    }\n    if p < p {\n        return -1\n    }\n    if p\
    \ < p {\n        return -1\n    }\n    if p < ", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p*2)\n    }\n    if p < 3 {\n        return modp(n - 1, p*2\
    \ + 1)\n    }\n    if p < 4 {\n        return modp(n - 1, p*2 + 2)\n    }\n  \
    \  if p < 5 {\n        return modp(n - 1, p*2 + 3)\n    }\n    if p < 6 {\n  \
    \      return modp(n - 1, p*2 + 4)\n    }\n    if p < 7 {\n        return modp(n\
    \ - 1, p*2 + 5)\n    }\n    if p < 8 {\n        return modp(n - 1, p*2 + 6)\n\
    \    }\n    if p < 9 {\n        return modp(n - 1, p*2 + 7)\n    }\n    if p <\
    \ 10 {\n        return modp(n - 1, p*2 + 8)\n    }\n    if p < 11 {\n        return\
    \ modp(n - 1, p*2 + 9)\n    }\n    if p < 12 {\n        return modp(n - 1, p*2\
    \ + 10)\n    }\n    if p < 13 {\n        return modp(n - 1, p*2 + 11)\n    }\n\
    \    if p < 14 {\n        return modp(n - 1, p*2 + 12)\n    }\n    if p < 15 {\n\
    \        return modp(n - 1, p*2 + 13)\n    }\n    if p < 16 {\n        return\
    \ modp(n - 1, p*2 + 14)\n    }\n    if p < 17 {\n        return modp(n - 1, p*2\
    \ + 15)\n    }\n    if p < 18 {\n        return modp(n - 1, p*2 + 16)\n    }\n\
    \    if p < 19 {\n        return modp(n - 1, p*2 + 17)\n    }\n    if p < 20 {\n\
    \        return modp(n - 1, p*2 + 18)\n    }\n    if p < 21 {\n        return\
    \ modp(n - 1, p*2 + 19)\n    }\n    if p < 22 {\n        return modp(n - 1, p*2\
    \ + 20)\n    }\n    if p < 23 {\n        return modp(n - 1, p*2 + 21)\n    }\n\
    \    if p < 24 {\n        return modp(n - 1, p*2 + 22)\n    }\n    if p < 25 {\n\
    \        return modp(n - 1, p*2 + 23)\n    }\n    if p < 26 {\n        return\
    \ modp(n - 1, p*2 + 24)\n    }\n    if p < 27 {\n        return modp(n - 1, p*2\
    \ + 25)\n    }\n    if p < 28 {\n        return modp(n - 1, p*2 + 26)\n    }\n\
    \    if p < 29 {\n        return modp(n - 1, p*2 + 27)\n    }\n    if p < 30 {\n\
    \        return modp(n - 1, p*2 + 28)\n    }\n    if ", "    if n == 0 {\n   \
    \     return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2\
    \ {\n        return modp(n - 1, p*p)\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p*p + p)\n    }\n    return modp(n - 1, p*p + p - 1)\n}\n", "    if n <\
    \ 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    return\
    \ n - p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n  \
    \      return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n  \
    \  }\n    if p < 3 {\n        return modp(n - 1, p) + p\n    }\n    if p < 4 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 5 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 6 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 7 {\n        return modp(n - 1, p) + p\n    }\n    if p < 8 {\n  \
    \      return modp(n - 1, p) + p\n    }\n    if p < 9 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 10 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 11 {\n        return modp(n - 1, p) + p\n    }\n    if p < 12\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 13 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 14 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 15 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 16 {\n        return modp(n - 1, p) + p\n    }\n    if p < 17 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 18 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 19 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 20 {\n        return modp(n - 1, p) + p\n    }\n    if p < 21 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 22 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 23 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 24 {\n        return modp(n - 1, p) + p\n    }\n    if p < 25\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 26 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 27 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 28 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 29 {\n        return modp(n - 1, p) + p\n    }\n    if p < 30 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 31 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 32 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p ", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n       \
    \ return n\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p+1 {\n        return n\n    }\n    if n\
    \ == p-1 {\n        return n\n    }\n    if n == p+2 {\n        return n\n   \
    \ }\n    if n == p-2 {\n        return n\n    }\n    if n == p+3 {\n        return\
    \ n\n    }\n    if n == p-3 {\n        return n\n    }\n    if n == p+4 {\n  \
    \      return n\n    }\n    if n == p-4 {\n        return n\n    }\n    if n ==\
    \ p+5 {\n        return n\n    }\n    if n == p-5 {\n        return n\n    }\n\
    \    if n == p+6 {\n        return n\n    }\n    if n == p-6 {\n        return\
    \ n\n    }\n    if n == p+7 {\n        return n\n    }\n    if n == p-7 {\n  \
    \      return n\n    }\n    if n == p+8 {\n        return n\n    }\n    if n ==\
    \ p-8 {\n        return n\n    }\n    if n == p+9 {\n        return n\n    }\n\
    \    if n == p-9 {\n        return n\n    }\n    if n == p+10 {\n        return\
    \ n\n    }\n    if n == p-10 {\n        return n\n    }\n    if n == p+11 {\n\
    \        return n\n    }\n    if n == p-11 {\n        return n\n    }\n    if\
    \ n == p+12 {\n        return n\n    }\n    if n == p-12 {\n        return n\n\
    \    }\n    if n == p+13 {\n        return n\n    }\n    if n == p-13 {\n    \
    \    return n\n    }\n    if n == p+14 {\n        return n\n    }\n    if n ==\
    \ p-14 {\n        return n\n    }\n    if n == p+15 {\n        return n\n    }\n\
    \    if n == p-15 {\n        return n\n    }\n    if n == p+16 {\n        return\
    \ n\n    }\n    if n == p-16 {\n        return n\n    }\n    if n == p+17 {\n\
    \        return n\n    }\n    if n == p-17 {\n        return n\n    }\n    if\
    \ n == p+18 {\n        return n\n    }\n    if n == p-18 {\n        return n\n\
    \    }\n    if n == p+19 {\n        return n\n    }\n    if n == p-19 {\n    \
    \    return n\n    }\n    if n == p+20 {\n        return n\n    }\n    if n ==\
    \ p-20 {\n        return n\n    }\n    if n == p+21 {\n        return n\n    }\n\
    \    if n == p-21 {\n        return n\n    }\n    if ", "    if n == 0 {\n   \
    \     return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n\
    \        return modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n -\
    \ 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p\
    \ < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n\
    \    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p\
    \ < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n        return\
    \ modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n  \
    \  }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n\
    \        return modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n  \
    \  if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p < 22 {\n     \
    \   return modp(n - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22,\
    \ p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p\
    \ < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n  \
    \  }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n\
    \        return modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n\
    \ - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n  \
    \  if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p < 33 {\n     \
    \   return modp(n - 32, p)\n    }\n    if p < 34 {\n        return modp(", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < 3\
    \ {\n        return modp(n - 2, p) + p\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p) + p\n    }\n    if p < 5 {\n        return modp(n - 4, p) + p\n\
    \    }\n    if p < 6 {\n        return modp(n - 5, p) + p\n    }\n    if p < 7\
    \ {\n        return modp(n - 6, p) + p\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p) + p\n    }\n    if p < 9 {\n        return modp(n - 8, p) + p\n\
    \    }\n    if p < 10 {\n        return modp(n - 9, p) + p\n    }\n    if p <\
    \ 11 {\n        return modp(n - 10, p) + p\n    }\n    if p < 12 {\n        return\
    \ modp(n - 11, p) + p\n    }\n    if p < 13 {\n        return modp(n - 12, p)\
    \ + p\n    }\n    if p < 14 {\n        return modp(n - 13, p) + p\n    }\n   \
    \ if p < 15 {\n        return modp(n - 14, p) + p\n    }\n    if p < 16 {\n  \
    \      return modp(n - 15, p) + p\n    }\n    if p < 17 {\n        return modp(n\
    \ - 16, p) + p\n    }\n    if p < 18 {\n        return modp(n - 17, p) + p\n \
    \   }\n    if p < 19 {\n        return modp(n - 18, p) + p\n    }\n    if p <\
    \ 20 {\n        return modp(n - 19, p) + p\n    }\n    if p < 21 {\n        return\
    \ modp(n - 20, p) + p\n    }\n    if p < 22 {\n        return modp(n - 21, p)\
    \ + p\n    }\n    if p < 23 {\n        return modp(n - 22, p) + p\n    }\n   \
    \ if p < 24 {\n        return modp(n - 23, p) + p\n    }\n    if p < 25 {\n  \
    \      return modp(n - 24, p) + p\n    }\n    if p < 26 {\n        return modp(n\
    \ - 25, p) + p\n    }\n    if p < 27 {\n        return modp(n - 26, p) + p\n \
    \   }\n    if p < 28 {\n        return modp(n - 27, p) + p\n    }\n    if p <\
    \ 29 {\n        return modp(n - 28, p) + p\n    }\n    if p < 30 {\n        return\
    \ modp(n - 29, p) + p\n    }\n    if p < 31 {\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p*p)\n    }\n    if p < p {\n        return modp(n - 1, p*p)\n\
    \    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < 2 {\n        return n\n    }\n    if p < 3 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 4 {\n        return modp(n - 2, p)\n    }\n\
    \    if p < 5 {\n        return modp(n - 3, p)\n    }\n    if p < 6 {\n      \
    \  return modp(n - 4, p)\n    }\n    if p < 7 {\n        return modp(n - 5, p)\n\
    \    }\n    if p < 8 {\n        return modp(n - 6, p)\n    }\n    if p < 9 {\n\
    \        return modp(n - 7, p)\n    }\n    if p < 10 {\n        return modp(n\
    \ - 8, p)\n    }\n    if p < 11 {\n        return modp(n - 9, p)\n    }\n    if\
    \ p < 12 {\n        return modp(n - 10, p)\n    }\n    if p < 13 {\n        return\
    \ modp(n - 11, p)\n    }\n    if p < 14 {\n        return modp(n - 12, p)\n  \
    \  }\n    if p < 15 {\n        return modp(n - 13, p)\n    }\n    if p < 16 {\n\
    \        return modp(n - 14, p)\n    }\n    if p < 17 {\n        return modp(n\
    \ - 15, p)\n    }\n    if p < 18 {\n        return modp(n - 16, p)\n    }\n  \
    \  if p < 19 {\n        return modp(n - 17, p)\n    }\n    if p < 20 {\n     \
    \   return modp(n - 18, p)\n    }\n    if p < 21 {\n        return modp(n - 19,\
    \ p)\n    }\n    if p < 22 {\n        return modp(n - 20, p)\n    }\n    if p\
    \ < 23 {\n        return modp(n - 21, p)\n    }\n    if p < 24 {\n        return\
    \ modp(n - 22, p)\n    }\n    if p < 25 {\n        return modp(n - 23, p)\n  \
    \  }\n    if p < 26 {\n        return modp(n - 24, p)\n    }\n    if p < 27 {\n\
    \        return modp(n - 25, p)\n    }\n    if p < 28 {\n        return modp(n\
    \ - 26, p)\n    }\n    if p < 29 {\n        return modp(n - 27, p)\n    }\n  \
    \  if p < 30 {\n        return modp(n - 28, p)\n    }\n    if p < 31 {\n     \
    \   return modp(n - 29, p)\n    }\n    if p < 32 {\n        return modp(n - 30,\
    \ p)\n    }\n    if p < 33 {\n        return modp(n - 31, p)\n    }\n    if p\
    \ < 34 {\n        return modp(n - 32, p)\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n   \
    \ if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n\
    \    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n      \
    \  return modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n\
    \    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n\
    \        return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n\
    \ - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n  \
    \  if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n     \
    \   return modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14,\
    \ p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p\
    \ < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return\
    \ modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n  \
    \  }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n\
    \        return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n\
    \ - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n  \
    \  if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n     \
    \   return modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25,\
    \ p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p\
    \ < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return\
    \ modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n  \
    \  }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n\
    \        return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n\
    \ - 32, p)\n    }\n    if p < 34 {\n        return modp(", "    if n < 0 {\n \
    \       n *= -1\n    }\n    if p < 0 {\n        p *= -1\n    }\n    if n == 0\
    \ {\n        return 1\n    }\n    if p == 0 {\n        return 0\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n <= p {\n        return modp(n -\
    \ p, p)\n    }\n    if n >= p {\n        return modp(n - p, p)\n    }\n    return\
    \ modp(n - p, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p)\
    \ + p\n    }\n    if p < 3 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 4 {\n        return modp(n - 1, p) + p\n    }\n    if p < 5 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 6 {\n        return modp(n - 1, p) + p\n\
    \    }\n    if p < 7 {\n        return modp(n - 1, p) + p\n    }\n    if p < 8\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 9 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 10 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 11 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 12 {\n        return modp(n - 1, p) + p\n    }\n    if p < 13 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 14 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 15 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 16 {\n        return modp(n - 1, p) + p\n    }\n    if p < 17 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 18 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 19 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p < 20 {\n        return modp(n - 1, p) + p\n    }\n    if p < 21\
    \ {\n        return modp(n - 1, p) + p\n    }\n    if p < 22 {\n        return\
    \ modp(n - 1, p) + p\n    }\n    if p < 23 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < 24 {\n        return modp(n - 1, p) + p\n    }\n    if\
    \ p < 25 {\n        return modp(n - 1, p) + p\n    }\n    if p < 26 {\n      \
    \  return modp(n - 1, p) + p\n    }\n    if p < 27 {\n        return modp(n -\
    \ 1, p) + p\n    }\n    if p < 28 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 29 {\n        return modp(n - 1, p) + p\n    }\n    if p < 30 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < 31 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < 32 {\n        return modp(n - 1, p) + p\n   \
    \ }\n    if p ", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p*p)\n  \
    \  }\n    if p < p {\n        return modp(n - 1, p*p + p)\n    }\n    return modp(n\
    \ - 1, p*p + p + p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n > p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n -\
    \ 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n  \
    \      return p\n    }\n    if p < 2 {\n        return modp(n - 1, p*p)\n    }\n\
    \    if p < p {\n        return modp(n - 1, p*p + p)\n    }\n    return modp(n\
    \ - 1, p*p + p - 1)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < 2 {\n        return -1\n    }\n    if p > n {\n        return -1\n\
    \    }\n    if p < p {\n        return modp(n - p, p)\n    }\n    if p > p {\n\
    \        return modp(n - p, p)\n    }\n    return modp(n - p, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < 3 {\n  \
    \      return modp(n - 1, p)\n    }\n    if p < 4 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 5 {\n        return modp(n - 1, p)\n    }\n    if p <\
    \ 6 {\n        return modp(n - 1, p)\n    }\n    if p < 7 {\n        return modp(n\
    \ - 1, p)\n    }\n    if p < 8 {\n        return modp(n - 1, p)\n    }\n    if\
    \ p < 9 {\n        return modp(n - 1, p)\n    }\n    if p < 10 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 11 {\n        return modp(n - 1, p)\n    }\n\
    \    if p < 12 {\n        return modp(n - 1, p)\n    }\n    if p < 13 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p < 14 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 15 {\n        return modp(n - 1, p)\n    }\n    if p <\
    \ 16 {\n        return modp(n - 1, p)\n    }\n    if p < 17 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 18 {\n        return modp(n - 1, p)\n    }\n\
    \    if p < 19 {\n        return modp(n - 1, p)\n    }\n    if p < 20 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p < 21 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 22 {\n        return modp(n - 1, p)\n    }\n    if p <\
    \ 23 {\n        return modp(n - 1, p)\n    }\n    if p < 24 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 25 {\n        return modp(n - 1, p)\n    }\n\
    \    if p < 26 {\n        return modp(n - 1, p)\n    }\n    if p < 27 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p < 28 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 29 {\n        return modp(n - 1, p)\n    }\n    if p <\
    \ 30 {\n        return modp(n - 1, p)\n    }\n    if p < 31 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 32 {\n        return modp(n - 1, p)\n    }\n\
    \    if p < 33 {\n        return modp(n - 1, p)\n    }\n    if p < 34 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p ", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return n\n    }\n    if p < 3 {\n\
    \        return modp(n - 1, p*p + 2)\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p*p + 3)\n    }\n    return modp(n - 1, p*p + 4)\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n ==\
    \ p {\n        return 1\n    }\n    if n < p {\n        return modp(n - p, p)\n\
    \    }\n    return modp(n - p, p) + p\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) * p\n    }\n    if p < 3 {\n        return modp(n - 2,\
    \ p) * (p - 1)\n    }\n    if p < 5 {\n        return modp(n - 3, p) * (p - 2)\n\
    \    }\n    return modp(n - 4, p) * (p - 3)\n}\n", "    if n < 0 {\n        n\
    \ *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n == 0 {\n   \
    \     return 1\n    }\n    if n == p {\n        return n\n    }\n    if n < p\
    \ {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p) + p\n}\n",
  "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == 0 {\n        return 1\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    if n > p {\n\
    \        return modp(n - p, p)\n    }\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) + p\n    }\n    if p < p {\n        return modp(n - 1,\
    \ p)\n    }\n    return modp(n - 1, p) + p\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) % p\n    }\n    if p < p {\n        return modp(n - 1,\
    \ p)\n    }\n    return modp(n - 2, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return n\n    }\n    if p < 3 {\n\
    \        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return modp(n -\
    \ 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n    if p\
    \ < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n        return\
    \ modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n    }\n\
    \    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n     \
    \   return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n - 10,\
    \ p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n    if p\
    \ < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n        return\
    \ modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14, p)\n  \
    \  }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p < 17 {\n\
    \        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return modp(n\
    \ - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n    }\n  \
    \  if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n     \
    \   return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n - 21,\
    \ p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n    if p\
    \ < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n        return\
    \ modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25, p)\n  \
    \  }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p < 28 {\n\
    \        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return modp(n\
    \ - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n    }\n  \
    \  if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n     \
    \   return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n - 32,\
    \ p)\n    }\n    if p < 34 {\n        return modp(n - 33, p)\n", "    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n < p {\n        return modp(n\
    \ - 1, p)\n    }\n    return modp(n - p, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n / 2, p)\n    }\n    if p < 3 {\n        return modp(n / 2, p)\n\
    \    }\n    if p < 5 {\n        return modp(n / 2, p)\n    }\n    if p < 7 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 9 {\n        return modp(n /\
    \ 2, p)\n    }\n    if p < 11 {\n        return modp(n / 2, p)\n    }\n    if\
    \ p < 13 {\n        return modp(n / 2, p)\n    }\n    if p < 15 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 17 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 19 {\n        return modp(n / 2, p)\n    }\n    if p < 23 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 25 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 27 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 29 {\n        return modp(n / 2, p)\n    }\n    if p < 31 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 33 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 35 {\n        return modp(n / 2, p)\n    }\n    if p < 37 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 39 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 41 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 43 {\n        return modp(n / 2, p)\n    }\n    if p < 45 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 47 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 49 {\n        return modp(n / 2, p)\n    }\n    if p < 51 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 53 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 55 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 57 {\n        return modp(n / 2, p)\n    }\n    if p < 59 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 61 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 63 {\n        return modp(n / 2, p)\n    }\n    if ", "    if n <\
    \ 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n < p {\n        return p\n    }\n\
    \    if n == p {\n        return p\n    }\n    return modp(n - p, p)\n}\n", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < 3\
    \ {\n        return modp(n - 2, p) + p\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p) + p\n    }\n    if p < 5 {\n        return modp(n - 4, p) + p\n\
    \    }\n    if p < 6 {\n        return modp(n - 5, p) + p\n    }\n    if p < 7\
    \ {\n        return modp(n - 6, p) + p\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p) + p\n    }\n    if p < 9 {\n        return modp(n - 8, p) + p\n\
    \    }\n    if p < 10 {\n        return modp(n - 9, p) + p\n    }\n    if p <\
    \ 11 {\n        return modp(n - 10, p) + p\n    }\n    if p < 12 {\n        return\
    \ modp(n - 11, p) + p\n    }\n    if p < 13 {\n        return modp(n - 12, p)\
    \ + p\n    }\n    if p < 14 {\n        return modp(n - 13, p) + p\n    }\n   \
    \ if p < 15 {\n        return modp(n - 14, p) + p\n    }\n    if p < 16 {\n  \
    \      return modp(n - 15, p) + p\n    }\n    if p < 17 {\n        return modp(n\
    \ - 16, p) + p\n    }\n    if p < 18 {\n        return modp(n - 17, p) + p\n \
    \   }\n    if p < 19 {\n        return modp(n - 18, p) + p\n    }\n    if p <\
    \ 20 {\n        return modp(n - 19, p) + p\n    }\n    if p < 21 {\n        return\
    \ modp(n - 20, p) + p\n    }\n    if p < 22 {\n        return modp(n - 21, p)\
    \ + p\n    }\n    if p < 23 {\n        return modp(n - 22, p) + p\n    }\n   \
    \ if p < 24 {\n        return modp(n - 23, p) + p\n    }\n    if p < 25 {\n  \
    \      return modp(n - 24, p) + p\n    }\n    if p < 26 {\n        return modp(n\
    \ - 25, p) + p\n    }\n    if p < 27 {\n        return modp(n - 26, p) + p\n \
    \   }\n    if p < 28 {\n        return modp(n - 27, p) + p\n    }\n    if p <\
    \ 29 {\n        return modp(n - 28, p) + p\n    }\n    if p < 30 {\n        return\
    \ modp(n - 29, p) + p\n    }\n    if p < 31 {\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p*p)\n    }\n    if p < 3 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < 4 {\n        return modp(n - 1, p*p)\n    }\n    if p < 5 {\n\
    \        return modp(n - 1, p)\n    }\n    if p < 6 {\n        return modp(n -\
    \ 1, p*p)\n    }\n    if p < 7 {\n        return modp(n - 1, p)\n    }\n    if\
    \ p < 8 {\n        return modp(n - 1, p*p)\n    }\n    if p < 9 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 10 {\n        return modp(n - 1, p*p)\n  \
    \  }\n    if p < 11 {\n        return modp(n - 1, p)\n    }\n    if p < 12 {\n\
    \        return modp(n - 1, p*p)\n    }\n    if p < 13 {\n        return modp(n\
    \ - 1, p)\n    }\n    if p < 14 {\n        return modp(n - 1, p*p)\n    }\n  \
    \  if p < 15 {\n        return modp(n - 1, p)\n    }\n    if p < 16 {\n      \
    \  return modp(n - 1, p*p)\n    }\n    if p < 17 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 18 {\n        return modp(n - 1, p*p)\n    }\n    if p\
    \ < 19 {\n        return modp(n - 1, p)\n    }\n    if p < 20 {\n        return\
    \ modp(n - 1, p*p)\n    }\n    if p < 21 {\n        return modp(n - 1, p)\n  \
    \  }\n    if p < 22 {\n        return modp(n - 1, p*p)\n    }\n    if p < 23 {\n\
    \        return modp(n - 1, p)\n    }\n    if p < 24 {\n        return modp(n\
    \ - 1, p*p)\n    }\n    if p < 25 {\n        return modp(n - 1, p)\n    }\n  \
    \  if p < 26 {\n        return modp(n - 1, p*p)\n    }\n    if p < 27 {\n    \
    \    return modp(n - 1, p)\n    }\n    if p < 28 {\n        return modp(n - 1,\
    \ p*p)\n    }\n    if p < 29 {\n        return modp(n - 1, p)\n    }\n    if p\
    \ < 30 {\n        return modp(n - 1, p*p)\n    }\n    if p < 31 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 32 {\n        return modp(n - 1, p*p)\n  \
    \  }\n    if p < 33 {\n        return modp(n - 1, p)\n    }\n    if p ", "   \
    \ if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n > p {\n        return p\n\
    \    }\n    return modp(n - p, p)\n}\n", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n    if p > n\
    \ {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p)\n}\n", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < p\
    \ {\n        return modp(n - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n\
    \    if p < 4 {\n        return modp(n - 3, p)\n    }\n    if p < 5 {\n      \
    \  return modp(n - 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n\
    \    }\n    if p < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n\
    \        return modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n -\
    \ 8, p)\n    }\n    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if\
    \ p < 11 {\n        return modp(n - 10, p)\n    }\n    if p < 12 {\n        return\
    \ modp(n - 11, p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n  \
    \  }\n    if p < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n\
    \        return modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n\
    \ - 15, p)\n    }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n  \
    \  if p < 18 {\n        return modp(n - 17, p)\n    }\n    if p < 19 {\n     \
    \   return modp(n - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19,\
    \ p)\n    }\n    if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p\
    \ < 22 {\n        return modp(n - 21, p)\n    }\n    if p < 23 {\n        return\
    \ modp(n - 22, p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n  \
    \  }\n    if p < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n\
    \        return modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n\
    \ - 26, p)\n    }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n  \
    \  if p < 29 {\n        return modp(n - 28, p)\n    }\n    if p < 30 {\n     \
    \   return modp(n - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30,\
    \ p)\n    }\n    if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p\
    \ < 33 {\n        return modp(n - 32, p)\n    }\n    if p < 34 {\n        return\
    \ modp(", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n       \
    \ return p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n\
    \        return n\n    }\n    if p < 3 {\n        return modp(n - 1, p) + 1\n\
    \    }\n    if p < 4 {\n        return modp(n - 1, p)\n    }\n    return modp(n\
    \ - 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p == 1 {\n        return modp(n - 1, p)\n   \
    \ }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n  \
    \      return modp(n - 2, p)\n    }\n    if p < 4 {\n        return modp(n - 3,\
    \ p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n    if p <\
    \ 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n        return modp(n\
    \ - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n    }\n    if\
    \ p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n        return\
    \ modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n - 10, p)\n   \
    \ }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n    if p < 13 {\n\
    \        return modp(n - 12, p)\n    }\n    if p < 14 {\n        return modp(n\
    \ - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14, p)\n    }\n  \
    \  if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p < 17 {\n     \
    \   return modp(n - 16, p)\n    }\n    if p < 18 {\n        return modp(n - 17,\
    \ p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n    }\n    if p\
    \ < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n        return\
    \ modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n - 21, p)\n  \
    \  }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n    if p < 24 {\n\
    \        return modp(n - 23, p)\n    }\n    if p < 25 {\n        return modp(n\
    \ - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25, p)\n    }\n  \
    \  if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p < 28 {\n     \
    \   return modp(n - 27, p)\n    }\n    if p < 29 {\n        return modp(n - 28,\
    \ p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n    }\n    if p\
    \ < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n        return\
    \ modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n - 32, p)\n  \
    \  }\n    if p < 34", "    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 3 {\n        return modp(n - 2, p) % p\n    }\n    if p\
    \ < 5 {\n        return modp(n - 3, p) % p\n    }\n    if p < 7 {\n        return\
    \ modp(n - 4, p) % p\n    }\n    if p < 9 {\n        return modp(n - 5, p) % p\n\
    \    }\n    if p < 11 {\n        return modp(n - 6, p) % p\n    }\n    if p <\
    \ 13 {\n        return modp(n - 7, p) % p\n    }\n    if p < 15 {\n        return\
    \ modp(n - 8, p) % p\n    }\n    if p < 17 {\n        return modp(n - 9, p) %\
    \ p\n    }\n    if p < 19 {\n        return modp(n - 10, p) % p\n    }\n    if\
    \ p < 23 {\n        return modp(n - 11, p) % p\n    }\n    if p < 25 {\n     \
    \   return modp(n - 12, p) % p\n    }\n    if p < 27 {\n        return modp(n\
    \ - 13, p) % p\n    }\n    if p < 29 {\n        return modp(n - 14, p) % p\n \
    \   }\n    if p < 31 {\n        return modp(n - 15, p) % p\n    }\n    if p <\
    \ 33 {\n        return modp(n - 16, p) % p\n    }\n    if p < 35 {\n        return\
    \ modp(n - 17, p) % p\n    }\n    if p < 37 {\n        return modp(n - 18, p)\
    \ % p\n    }\n    if p < 39 {\n        return modp(n - 19, p) % p\n    }\n   \
    \ if p < 41 {\n        return modp(n - 20, p) % p\n    }\n    if p < 43 {\n  \
    \      return modp(n - 21, p) % p\n    }\n    if p < 45 {\n        return modp(n\
    \ - 22, p) % p\n    }\n    if p < 47 {\n        return modp(n - 23, p) % p\n \
    \   }\n    if p < 49 {\n        return modp(n - 24, p) % p\n    }\n    if p <\
    \ 51 {\n        return modp(n - 25, p) % p\n    }\n    if p < 53 {\n        return\
    \ modp(n - 26, p) % p\n    }\n    if p < 55 {\n        return modp(n - 27, p)\
    \ % p\n    }\n    if p < 57 {\n        return modp(n - 28, p) % p\n    }\n   \
    \ if p < 59 {\n        return modp(n - 29, p) % p\n    }\n    if p < 61 {", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n   \
    \ }\n    if n == p {\n        return 1\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p*p)\n    }\n    if p < 3 {\n        return modp(n\
    \ - 1, p)\n    }\n    return modp(n - 1, p*p + modp(n - 2, p))\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p) + modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2,\
    \ p) + modp(n - 1, p) + modp(n - 2, p)\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) + modp(n - 3, p)\n    }\n \
    \   if p < 5 {\n        return modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p)\
    \ + modp(n - 1, p) + modp(n - 4, p)\n    }\n    if p < 6 {\n        return modp(n\
    \ - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p)\
    \ + modp(n - 5, p)\n    }\n    if p < 7 {\n        return modp(n - 6, p) + modp(n\
    \ - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p)\
    \ + modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p) + modp(n\
    \ - 6, p) + modp(n - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p)\
    \ + modp(n - 1, p) + modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n\
    \ - 8, p) + modp(n - 7, p) + modp(n - 6, p) + modp(n - 5, p) + modp(n - 4, p)\
    \ + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) + modp(n - 8, p)\n    }\n\
    \    if p < 10 {\n        return modp(n - 9, p) + modp(n - 8, p) + modp(n - 7,\
    \ p) + modp(n - 6, p) + modp(n - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n\
    \ - 2, p) + modp(n - 1, p) + modp(n - 9, p)\n    }\n    if p < 11 {\n        return\
    \ modp(n - 10, p) + modp(n - 9, p) + modp(n - 8, p) + modp(n - 7, p) + modp(n\
    \ - 6, p) + modp(n - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p)\
    \ + modp(n - 1, p) + modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n\
    \ - 11, p) + modp(n - 10, p) + ", "    if n < 0 {\n        n *= -1\n    }\n  \
    \  if n < p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n > p {\n        return modp(n - p, p)\n    }\n    return 0\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if p < 2 {\n        return modp(n - 1, p) + 1\n    }\n    if p < p\
    \ {\n        return modp(n - 1, p)\n    }\n    if p > p {\n        return modp(n\
    \ - 1, p)\n    }\n    return modp(n - 1, p) + modp(n - 1, p)\n}\n", "    if n\
    \ == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < 2 {\n        return n\n\
    \    }\n    if p > n {\n        return p\n    }\n    if p%2 == 0 {\n        return\
    \ modp(n - 1, p)\n    }\n    return modp(n-1, p) + modp(n-1, p+1)\n}\n", "   \
    \ if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < p {\n\
    \        return modp(n - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n   \
    \ }\n    if n == p {\n        return 1\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p) + p\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n    \
    \    return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n\
    \        return modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n -\
    \ 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p\
    \ < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n\
    \    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p\
    \ < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n        return\
    \ modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n  \
    \  }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n\
    \        return modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n  \
    \  if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p < 22 {\n     \
    \   return modp(n - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22,\
    \ p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p\
    \ < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n  \
    \  }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n\
    \        return modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n\
    \ - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n  \
    \  if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p < 33 {\n     \
    \   return modp(n - 32, p)\n    }\n    if p < 34 {\n        return modp(", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n   \
    \ }\n    if n == p {\n        return 1\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(n - p, p) + p\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n ==\
    \ p {\n        return 1\n    }\n    if n > p {\n        return modp(n - p, p)\n\
    \    }\n    return 0\n}\n", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1,\
    \ p) + p\n    }\n    if p < 3 {\n        return modp(n - 2, p) + p\n    }\n  \
    \  if p < 4 {\n        return modp(n - 3, p) + p\n    }\n    if p < 5 {\n    \
    \    return modp(n - 4, p) + p\n    }\n    if p < 6 {\n        return modp(n -\
    \ 5, p) + p\n    }\n    if p < 7 {\n        return modp(n - 6, p) + p\n    }\n\
    \    if p < 8 {\n        return modp(n - 7, p) + p\n    }\n    if p < 9 {\n  \
    \      return modp(n - 8, p) + p\n    }\n    if p < 10 {\n        return modp(n\
    \ - 9, p) + p\n    }\n    if p < 11 {\n        return modp(n - 10, p) + p\n  \
    \  }\n    if p < 12 {\n        return modp(n - 11, p) + p\n    }\n    if p < 13\
    \ {\n        return modp(n - 12, p) + p\n    }\n    if p < 14 {\n        return\
    \ modp(n - 13, p) + p\n    }\n    if p < 15 {\n        return modp(n - 14, p)\
    \ + p\n    }\n    if p < 16 {\n        return modp(n - 15, p) + p\n    }\n   \
    \ if p < 17 {\n        return modp(n - 16, p) + p\n    }\n    if p < 18 {\n  \
    \      return modp(n - 17, p) + p\n    }\n    if p < 19 {\n        return modp(n\
    \ - 18, p) + p\n    }\n    if p < 20 {\n        return modp(n - 19, p) + p\n \
    \   }\n    if p < 21 {\n        return modp(n - 20, p) + p\n    }\n    if p <\
    \ 22 {\n        return modp(n - 21, p) + p\n    }\n    if p < 23 {\n        return\
    \ modp(n - 22, p) + p\n    }\n    if p < 24 {\n        return modp(n - 23, p)\
    \ + p\n    }\n    if p < 25 {\n        return modp(n - 24, p) + p\n    }\n   \
    \ if p < 26 {\n        return modp(n - 25, p) + p\n    }\n    if p < 27 {\n  \
    \      return modp(n - 26, p) + p\n    }\n    if p < 28 {\n        return modp(n\
    \ - 27, p) + p\n    }\n    if p < 29 {\n        return modp(n - 28, p) + p\n \
    \   }\n    if p < 30 {\n        return modp(n - 29, p) + p\n    }\n    if p <\
    \ 31 {\n", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return\
    \ n\n    }\n    if n == p {\n        return 1\n    }\n    if n < p {\n       \
    \ return modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n < p {\n        return modp(n - 1, p)\
    \ + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return modp(n - 1, p) + modp(n - 1,\
    \ p)\n    }\n    if p < 3 {\n        return modp(n - 2, p) + modp(n - 1, p) +\
    \ modp(n - 2, p)\n    }\n    if p < 4 {\n        return modp(n - 3, p) + modp(n\
    \ - 2, p) + modp(n - 1, p) + modp(n - 3, p)\n    }\n    if p < 5 {\n        return\
    \ modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) + modp(n -\
    \ 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p) + modp(n - 4, p)\
    \ + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) + modp(n - 5, p)\n    }\n\
    \    if p < 7 {\n        return modp(n - 6, p) + modp(n - 5, p) + modp(n - 4,\
    \ p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) + modp(n - 6, p)\n   \
    \ }\n    if p < 8 {\n        return modp(n - 7, p) + modp(n - 6, p) + modp(n -\
    \ 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p) +\
    \ modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p) + modp(n\
    \ - 7, p) + modp(n - 6, p) + modp(n - 5, p) + modp(n - 4, p) + modp(n - 3, p)\
    \ + modp(n - 2, p) + modp(n - 1, p) + modp(n - 8, p)\n    }\n    if p < 10 {\n\
    \        return modp(n - 9, p) + modp(n - 8, p) + modp(n - 7, p) + modp(n - 6,\
    \ p) + modp(n - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n\
    \ - 1, p) + modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n - 10,\
    \ p) + modp(n - 9, p) + modp(n - 8, p) + modp(n - 7, p) + modp(n - 6, p) + modp(n\
    \ - 5, p) + modp(n - 4, p) + modp(n - 3, p) + modp(n - 2, p) + modp(n - 1, p)\
    \ + modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11, p) +\
    \ modp(n - 10, p) + ", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n / 2, p)\n\
    \    }\n    if p < 3 {\n        return modp(n / 2, p)\n    }\n    if p < 5 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 7 {\n        return modp(n /\
    \ 2, p)\n    }\n    if p < 9 {\n        return modp(n / 2, p)\n    }\n    if p\
    \ < 11 {\n        return modp(n / 2, p)\n    }\n    if p < 13 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 15 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 17 {\n        return modp(n / 2, p)\n    }\n    if p < 19 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 23 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 25 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 27 {\n        return modp(n / 2, p)\n    }\n    if p < 29 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 31 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 33 {\n        return modp(n / 2, p)\n    }\n    if p < 35 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 37 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 39 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 41 {\n        return modp(n / 2, p)\n    }\n    if p < 43 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 45 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 47 {\n        return modp(n / 2, p)\n    }\n    if p < 49 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 51 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 53 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 55 {\n        return modp(n / 2, p)\n    }\n    if p < 57 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 59 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 61 {\n        return modp(n / 2, p)\n    }\n    if p < 63 {\n    \
    \    return modp(n / 2, p)\n    }\n    if ", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n   \
    \ if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return\
    \ modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n\
    \    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n      \
    \  return modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n\
    \    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n\
    \        return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n\
    \ - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n  \
    \  if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n     \
    \   return modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14,\
    \ p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p\
    \ < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return\
    \ modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n  \
    \  }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n\
    \        return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n\
    \ - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n  \
    \  if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n     \
    \   return modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25,\
    \ p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p\
    \ < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return\
    \ modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n  \
    \  }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n\
    \        return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n\
    \ - 32, p)\n    }\n    if p < 34 {\n        return modp(", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p) % p\n    }\n    if p < 3 {\n        return\
    \ modp(n - 2, p) % p\n    }\n    if p < 4 {\n        return modp(n - 3, p) % p\n\
    \    }\n    if p < 5 {\n        return modp(n - 4, p) % p\n    }\n    if p < 6\
    \ {\n        return modp(n - 5, p) % p\n    }\n    if p < 7 {\n        return\
    \ modp(n - 6, p) % p\n    }\n    if p < 8 {\n        return modp(n - 7, p) % p\n\
    \    }\n    if p < 9 {\n        return modp(n - 8, p) % p\n    }\n    if p < 10\
    \ {\n        return modp(n - 9, p) % p\n    }\n    if p < 11 {\n        return\
    \ modp(n - 10, p) % p\n    }\n    if p < 12 {\n        return modp(n - 11, p)\
    \ % p\n    }\n    if p < 13 {\n        return modp(n - 12, p) % p\n    }\n   \
    \ if p < 14 {\n        return modp(n - 13, p) % p\n    }\n    if p < 15 {\n  \
    \      return modp(n - 14, p) % p\n    }\n    if p < 16 {\n        return modp(n\
    \ - 15, p) % p\n    }\n    if p < 17 {\n        return modp(n - 16, p) % p\n \
    \   }\n    if p < 18 {\n        return modp(n - 17, p) % p\n    }\n    if p <\
    \ 19 {\n        return modp(n - 18, p) % p\n    }\n    if p < 20 {\n        return\
    \ modp(n - 19, p) % p\n    }\n    if p < 21 {\n        return modp(n - 20, p)\
    \ % p\n    }\n    if p < 22 {\n        return modp(n - 21, p) % p\n    }\n   \
    \ if p < 23 {\n        return modp(n - 22, p) % p\n    }\n    if p < 24 {\n  \
    \      return modp(n - 23, p) % p\n    }\n    if p < 25 {\n        return modp(n\
    \ - 24, p) % p\n    }\n    if p < 26 {\n        return modp(n - 25, p) % p\n \
    \   }\n    if p < 27 {\n        return modp(n - 26, p) % p\n    }\n    if p <\
    \ 28 {\n        return modp(n - 27, p) % p\n    }\n    if p < 29 {\n        return\
    \ modp(n - 28, p) % p\n    }\n    if p < 30 {\n        return modp(n - 29, p)\
    \ % p\n    }\n    if p < 31 {\n", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p*p)\n    }\n    if p < p {\n        return modp(n - 1, p*p + p)\n    }\n\
    \    return modp(n - 1, p*p + p*p)\n}\n", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n < p {\n        return modp(n - 1, p) + p\n    }\n    return\
    \ modp(n - 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < 2 {\n        return n\n    }\n    if p > 100 {\n        return n\n  \
    \  }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p > p {\n \
    \       return modp(n - 2, p)\n    }\n    return modp(n - 3, p)\n}\n", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n      \
    \  return modp(n - 2, p)\n    }\n    return modp(n - 3, p + 1) + p\n}\n", "  \
    \  if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if n < p {\n        return\
    \ modp(n - 1, p) + p\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n \
    \       return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n < p {\n        return modp(n - 1, p)\
    \ + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n   \
    \ if p > n {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p)\
    \ + modp(n, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) +\
    \ p\n    }\n    if p < p {\n        return modp(n - 2, p) + p\n    }\n    return\
    \ modp(n - 1, p) + p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n      \
    \  return modp(n - 2, p)\n    }\n    return modp(n - 3, p) + modp(n - 2, p)\n\
    }\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n       \
    \ return n\n    }\n    if p < 3 {\n        return modp(n - 1, p)\n    }\n    if\
    \ p < 4 {\n        return modp(n - 2, p)\n    }\n    if p < 5 {\n        return\
    \ modp(n - 3, p)\n    }\n    if p < 6 {\n        return modp(n - 4, p)\n    }\n\
    \    if p < 7 {\n        return modp(n - 5, p)\n    }\n    if p < 8 {\n      \
    \  return modp(n - 6, p)\n    }\n    if p < 9 {\n        return modp(n - 7, p)\n\
    \    }\n    if p < 10 {\n        return modp(n - 8, p)\n    }\n    if p < 11 {\n\
    \        return modp(n - 9, p)\n    }\n    if p < 12 {\n        return modp(n\
    \ - 10, p)\n    }\n    if p < 13 {\n        return modp(n - 11, p)\n    }\n  \
    \  if p < 14 {\n        return modp(n - 12, p)\n    }\n    if p < 15 {\n     \
    \   return modp(n - 13, p)\n    }\n    if p < 16 {\n        return modp(n - 14,\
    \ p)\n    }\n    if p < 17 {\n        return modp(n - 15, p)\n    }\n    if p\
    \ < 18 {\n        return modp(n - 16, p)\n    }\n    if p < 19 {\n        return\
    \ modp(n - 17, p)\n    }\n    if p < 20 {\n        return modp(n - 18, p)\n  \
    \  }\n    if p < 21 {\n        return modp(n - 19, p)\n    }\n    if p < 22 {\n\
    \        return modp(n - 20, p)\n    }\n    if p < 23 {\n        return modp(n\
    \ - 21, p)\n    }\n    if p < 24 {\n        return modp(n - 22, p)\n    }\n  \
    \  if p < 25 {\n        return modp(n - 23, p)\n    }\n    if p < 26 {\n     \
    \   return modp(n - 24, p)\n    }\n    if p < 27 {\n        return modp(n - 25,\
    \ p)\n    }\n    if p < 28 {\n        return modp(n - 26, p)\n    }\n    if p\
    \ < 29 {\n        return modp(n - 27, p)\n    }\n    if p < 30 {\n        return\
    \ modp(n - 28, p)\n    }\n    if p < 31 {\n        return modp(n - 29, p)\n  \
    \  }\n    if p < 32 {\n        return modp(n - 30, p)\n    }\n    if p < 33 {\n\
    \        return modp(n - 31, p)\n    }\n    if p < 34 {\n        return modp(n\
    \ - 32, p)\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n  \
    \      return p\n    }\n    if n == p {\n        return n\n    }\n    if p < n\
    \ {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p)\n}\n", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n\
    \    return modp(n - 3, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if p < n {\n        return modp(n - p, p)\n    }\n    return modp(n,\
    \ p - n)\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ n {\n        return modp(n - p, p)\n    }\n    if p > n {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n - p, p)\n}\n", "    if n < 0 {\n        n\
    \ *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n == p {\n   \
    \     return 1\n    }\n    if n < p {\n        return modp(n - p, p)\n    }\n\
    \    return modp(n - p, p) + p\n}\n", "    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 3 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 5 {\n        return modp(n / 2, p)\n    }\n    if p < 7 {\n      \
    \  return modp(n / 2, p)\n    }\n    if p < 11 {\n        return modp(n / 2, p)\n\
    \    }\n    if p < 13 {\n        return modp(n / 2, p)\n    }\n    if p < 17 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ / 2, p)\n    }\n    if p < 23 {\n        return modp(n / 2, p)\n    }\n    if\
    \ p < 29 {\n        return modp(n / 2, p)\n    }\n    if p < 31 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 37 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 43 {\n        return modp(n / 2, p)\n    }\n    if p < 51 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 59 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 63 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 69 {\n        return modp(n / 2, p)\n    }\n    if p < 73 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 79 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 83 {\n        return modp(n / 2, p)\n    }\n    if p < 89 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 93 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 99 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 103 {\n        return modp(n / 2, p)\n    }\n    if p < 109 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 113 {\n        return modp(n / 2, p)\n   \
    \ }\n    if p < 119 {\n        return modp(n / 2, p)\n    }\n    if p < 123 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 129 {\n        return modp(n\
    \ / 2, p)\n    }\n    if p < 131 {\n        return modp(n / 2, p)\n    }\n   \
    \ if p < 137 {\n        return modp(n / 2, p)\n    }\n    if ", "    if n == 0\
    \ {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if\
    \ p < 2 {\n        return modp(n - 1, p*p)\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p*p + p)\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0\
    \ {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if\
    \ p < 2 {\n        return modp(n - 1, p) + p\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    return modp(n - 1, p - 1) + 1\n}\n", "    if n <\
    \ 0 {\n        n = -n\n    }\n    if p < 0 {\n        p = -p\n    }\n    if n\
    \ == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n\
    \    if p == 1 {\n        return n + 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return modp(n - 1, p)\n    }\n    if n ==\
    \ p+1 {\n        return modp(n - 2, p)\n    }\n    if n == p+2 {\n        return\
    \ modp(n - 3, p)\n    }\n    if n == p+3 {\n        return modp(n - 4, p)\n  \
    \  }\n    if n == p+4 {\n        return modp(n - 5, p)\n    }\n    if n == p+5\
    \ {\n        return modp(n - 6, p)\n    }\n    if n == p+6 {\n        return modp(n\
    \ - 7, p)\n    }\n    if n == p+7 {\n        return modp(n - 8, p)\n    }\n  \
    \  if n == p+8 {\n        return modp(n - 9, p)\n    }\n    if n == p+9 {\n  \
    \      return modp(n - 10, p)\n    }\n    if n == p+10 {\n        return modp(n\
    \ - 11, p)\n    }\n    if n == p+11 {\n        return modp(n - 12, p)\n    }\n\
    \    if n == p+12 {\n        return modp(n - 13, p)\n    }\n    if n == p+13 {\n\
    \        return modp(n - 14, p)\n    }\n    if n == p+14 {\n        return modp(n\
    \ - 15, p)\n    }\n    if n == p+15 {\n        return modp(n - 16, p)\n    }\n\
    \    if n == p+16 {\n        return modp(n - 17, p)\n    }\n    if n == p+17 {\n\
    \        return modp(n - 18, p)\n    }\n    if n == p+18 {\n        return modp(n\
    \ - 19, p)\n    }\n    if n == p+19 {\n        return modp(n - 20, p)\n    }\n\
    \    if n == p+20 {\n        return modp(n - 21, p)\n    }\n    if n == p+21 {\n\
    \        return modp(n - 22, p)\n    }\n    if n == p+22 {\n        return modp(n\
    \ - 23, p)\n    }\n    if n == p+23 {\n        return modp(n - 24, p)\n    }\n\
    \    if n == p+24 {\n        return modp(n - 25, p)\n    }\n    if n == p+25 {\n\
    \        return modp(n - 26, p)\n    }\n    if n == p+26 {\n        return modp(n\
    \ - 27, p)\n    }\n    if n == p+27 {\n        return modp(n - 28, p)\n    }\n\
    \    if n == p+28 {\n        return modp(n - 29, p)\n", "    if n == 0 {\n   \
    \     return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if n < p {\n        return modp(n - 1, p) +\
    \ p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) + p\n    }\n    if p < p {\n        return modp(n - 1,\
    \ p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n / 2, p)\n    }\n    if p > p {\n        return modp(n / 2, p)\n\
    \    }\n    if n % 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return\
    \ modp(n / 2, p) + modp((n / 2)%p, p)\n}\n", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n       \
    \ return modp(n - 1, p) + p\n    }\n    if p > 2 {\n        return modp(n - 1,\
    \ p)\n    }\n    return modp(n - 1, p)\n}\n", "    if n < 0 {\n        n = -n\n\
    \    }\n    if p < 0 {\n        p = -p\n    }\n    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p > p {\n        return modp(n - p, p)\n    }\n   \
    \ if p < p {\n        return modp(n, p - p)\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n > p {\n       \
    \ return modp(n - p, p)\n    }\n    if n < p {\n        return modp(n, p - p)\n\
    \    }\n    return modp(n - p, p)\n}\n", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 3 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 5 {\n        return modp(n / 2, p)\n    }\n    if p < 7 {\n      \
    \  return modp(n / 2, p)\n    }\n    if p < 9 {\n        return modp(n / 2, p)\n\
    \    }\n    if p < 11 {\n        return modp(n / 2, p)\n    }\n    if p < 13 {\n\
    \        return modp(n / 2, p)\n    }\n    if p < 15 {\n        return modp(n\
    \ / 2, p)\n    }\n    if p < 17 {\n        return modp(n / 2, p)\n    }\n    if\
    \ p < 19 {\n        return modp(n / 2, p)\n    }\n    if p < 23 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 25 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 27 {\n        return modp(n / 2, p)\n    }\n    if p < 29 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 31 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 33 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 35 {\n        return modp(n / 2, p)\n    }\n    if p < 37 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 39 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 41 {\n        return modp(n / 2, p)\n    }\n    if p < 43 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 45 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 47 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 49 {\n        return modp(n / 2, p)\n    }\n    if p < 51 {\n        return\
    \ modp(n / 2, p)\n    }\n    if p < 53 {\n        return modp(n / 2, p)\n    }\n\
    \    if p < 55 {\n        return modp(n / 2, p)\n    }\n    if p < 57 {\n    \
    \    return modp(n / 2, p)\n    }\n    if p < 59 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p < 61 {\n        return modp(n / 2, p)\n    }\n    if p <\
    \ 63 {\n        return modp(n / 2, p)\n    }\n    if ", "    if n == 0 {\n   \
    \     return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < p {\n        return\
    \ modp(n - 2, p) % p\n    }\n    return modp(n - 3, p) % p\n}\n", "    if n <\
    \ 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if\
    \ n == p {\n        return 1\n    }\n    if n > p {\n        return modp(n - p,\
    \ p)\n    }\n    return 0\n}\n", "    if n == 0 {\n        return 1\n    }\n \
    \   if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p) + 1\n    }\n    if p < 3 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 4 {\n        return modp(n - 1, p) % p\n    }\n    if p < 5 {\n  \
    \      return modp(n - 1, p) % p\n    }\n    if p < 6 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 7 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 8 {\n        return modp(n - 1, p) % p\n    }\n    if p < 9 {\n  \
    \      return modp(n - 1, p) % p\n    }\n    if p < 10 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 11 {\n        return modp(n - 1, p) % p\n   \
    \ }\n    if p < 12 {\n        return modp(n - 1, p) % p\n    }\n    if p < 13\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < 14 {\n        return\
    \ modp(n - 1, p) % p\n    }\n    if p < 15 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 16 {\n        return modp(n - 1, p) % p\n    }\n    if\
    \ p < 17 {\n        return modp(n - 1, p) % p\n    }\n    if p < 18 {\n      \
    \  return modp(n - 1, p) % p\n    }\n    if p < 19 {\n        return modp(n -\
    \ 1, p) % p\n    }\n    if p < 20 {\n        return modp(n - 1, p) % p\n    }\n\
    \    if p < 21 {\n        return modp(n - 1, p) % p\n    }\n    if p < 22 {\n\
    \        return modp(n - 1, p) % p\n    }\n    if p < 23 {\n        return modp(n\
    \ - 1, p) % p\n    }\n    if p < 24 {\n        return modp(n - 1, p) % p\n   \
    \ }\n    if p < 25 {\n        return modp(n - 1, p) % p\n    }\n    if p < 26\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < 27 {\n        return\
    \ modp(n - 1, p) % p\n    }\n    if p < 28 {\n        return modp(n - 1, p) %\
    \ p\n    }\n    if p < 29 {\n        return modp(n - 1, p) % p\n    }\n    if\
    \ p < 30 {\n        return modp(n - 1, p) % p\n    }\n    if p < 31 {\n      \
    \  return modp(n - 1, p) % p\n    }\n    if p < 32 {\n        return modp(n -\
    \ 1, p) % p\n    }\n    if p < ", "    if n < 0 {\n        n *= -1\n    }\n  \
    \  if n < p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n < p {\n        return p\n    }\n    return modp(n - p, p)\n}\n",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if n > p {\n        return\
    \ modp(n - 1, p) + p\n    }\n    return modp(n - 1, p)\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n ==\
    \ p {\n        return 1\n    }\n    if n > p {\n        return modp(n - p, p)\n\
    \    }\n    return 0\n}\n", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p <\
    \ 4 {\n        return modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n\
    \ - 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if\
    \ p < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n\
    \    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p\
    \ < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n        return\
    \ modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n  \
    \  }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n\
    \        return modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n  \
    \  if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p < 22 {\n     \
    \   return modp(n - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22,\
    \ p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p\
    \ < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n  \
    \  }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n\
    \        return modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n\
    \ - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n  \
    \  if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p < 33 {\n     \
    \   return modp(n - 32, p)\n    }\n    if p < 34 {\n        return modp(n - 33,\
    \ p)\n    }\n    if p < ", "    if n < 0 {\n        n *= -1\n    }\n    if n <\
    \ p {\n        return n\n    }\n    if n == p {\n        return 1\n    }\n   \
    \ if n < p {\n        return modp(n - p, p)\n    }\n    return modp(n - p, p)\
    \ + p\n}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n    \
    \    return p\n    }\n    if p < 2 {\n        return modp(n - 1, p) + p\n    }\n\
    \    if p < 3 {\n        return modp(n - 1, p)\n    }\n    if p < 5 {\n      \
    \  return modp(n - 1, p - 3)\n    }\n    if p < 7 {\n        return modp(n - 1,\
    \ p - 5)\n    }\n    if p < 11 {\n        return modp(n - 1, p - 7)\n    }\n \
    \   if p < 13 {\n        return modp(n - 1, p - 11)\n    }\n    if p < 17 {\n\
    \        return modp(n - 1, p - 13)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 1, p - 17)\n    }\n    if p < 23 {\n        return modp(n - 1, p - 19)\n \
    \   }\n    if p < 29 {\n        return modp(n - 1, p - 23)\n    }\n    if p <\
    \ 31 {\n        return modp(n - 1, p - 29)\n    }\n    if p < 37 {\n        return\
    \ modp(n - 1, p - 31)\n    }\n    if p < 41 {\n        return modp(n - 1, p -\
    \ 37)\n    }\n    if p < 43 {\n        return modp(n - 1, p - 41)\n    }\n   \
    \ if p < 47 {\n        return modp(n - 1, p - 43)\n    }\n    if p < 53 {\n  \
    \      return modp(n - 1, p - 47)\n    }\n    if p < 59 {\n        return modp(n\
    \ - 1, p - 53)\n    }\n    if p < 63 {\n        return modp(n - 1, p - 59)\n \
    \   }\n    if p < 69 {\n        return modp(n - 1, p - 63)\n    }\n    if p <\
    \ 73 {\n        return modp(n - 1, p - 69)\n    }\n    if p < 79 {\n        return\
    \ modp(n - 1, p - 73)\n    }\n    if p < 83 {\n        return modp(n - 1, p -\
    \ 79)\n    }\n    if p < 89 {\n        return modp(n - 1, p - 83)\n    }\n   \
    \ if p < 97 {\n        return modp(n - 1, p - 89)\n    }\n    if p < 101 {\n \
    \       return modp(n - 1, p - 97)\n    }\n    if p < 107 {\n        return modp(n\
    \ - 1, p - 101)\n    }\n    if p < 113 {\n        return modp(n - 1, p - 107)\n\
    \    }\n    if p < 119 {\n        return modp(n - 1, p - 113)\n    }\n    if p\
    \ < 127 {\n        return modp(n - 1, p - 119)\n    }\n    if p < 131 {\n    \
    \    return modp(n - 1, p - 127)", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if p < 2 {\n        return modp(n\
    \ - 1, p) + p\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n \
    \   return modp(n - 1, p)\n}\n", "    if n == 0 {\n        return 1\n    }\n \
    \   if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - 1, p) + p\n    }\n    return modp(n\
    \ - 1, p)\n}\n", "    if n < 0 {\n        n *= -1\n    }\n    if p < 0 {\n   \
    \     p *= -1\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ p > p {\n        return modp(n - 1, p) + p\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n \
    \       return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if p < 2 {\n        return modp(n - 1, p)\n\
    \    }\n    if p < 3 {\n        return modp(n - 2, p)\n    }\n    if p < 4 {\n\
    \        return modp(n - 3, p)\n    }\n    if p < 5 {\n        return modp(n -\
    \ 4, p)\n    }\n    if p < 6 {\n        return modp(n - 5, p)\n    }\n    if p\
    \ < 7 {\n        return modp(n - 6, p)\n    }\n    if p < 8 {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < 9 {\n        return modp(n - 8, p)\n    }\n\
    \    if p < 10 {\n        return modp(n - 9, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n - 10, p)\n    }\n    if p < 12 {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < 13 {\n        return modp(n - 12, p)\n    }\n    if p\
    \ < 14 {\n        return modp(n - 13, p)\n    }\n    if p < 15 {\n        return\
    \ modp(n - 14, p)\n    }\n    if p < 16 {\n        return modp(n - 15, p)\n  \
    \  }\n    if p < 17 {\n        return modp(n - 16, p)\n    }\n    if p < 18 {\n\
    \        return modp(n - 17, p)\n    }\n    if p < 19 {\n        return modp(n\
    \ - 18, p)\n    }\n    if p < 20 {\n        return modp(n - 19, p)\n    }\n  \
    \  if p < 21 {\n        return modp(n - 20, p)\n    }\n    if p < 22 {\n     \
    \   return modp(n - 21, p)\n    }\n    if p < 23 {\n        return modp(n - 22,\
    \ p)\n    }\n    if p < 24 {\n        return modp(n - 23, p)\n    }\n    if p\
    \ < 25 {\n        return modp(n - 24, p)\n    }\n    if p < 26 {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < 27 {\n        return modp(n - 26, p)\n  \
    \  }\n    if p < 28 {\n        return modp(n - 27, p)\n    }\n    if p < 29 {\n\
    \        return modp(n - 28, p)\n    }\n    if p < 30 {\n        return modp(n\
    \ - 29, p)\n    }\n    if p < 31 {\n        return modp(n - 30, p)\n    }\n  \
    \  if p < 32 {\n        return modp(n - 31, p)\n    }\n    if p < 33 {\n     \
    \   return modp(n - 32, p)\n    }\n    if p < 34 {\n        return modp(", " \
    \   if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return n\n   \
    \ }\n    if n == p {\n        return 1\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2 {\n\
    \        return modp(n - 1, p*p)\n    }\n    if p < p {\n        return modp(n\
    \ - 1, p*p + p)\n    }\n    return modp(n - 1, p)\n}\n", "    if n == 0 {\n  \
    \      return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if p < 2\
    \ {\n        return modp(n - 1, p) % p\n    }\n    if p < p {\n        return\
    \ modp(n - 2, p) % p\n    }\n    return modp(n - 1, p) % p\n}\n", "    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if p < 2 {\n        return modp(n - 1, p*2)\n    }\n    if p < 3 {\n       \
    \ return modp(n - 1, p*2 + 1)\n    }\n    return modp(n - 1, p*2 + 2)\n}\n", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < 3 {\n\
    \        return modp(n - 2, p)\n    }\n    if p < 4 {\n        return modp(n -\
    \ 3, p)\n    }\n    if p < 5 {\n        return modp(n - 4, p)\n    }\n    if p\
    \ < 6 {\n        return modp(n - 5, p)\n    }\n    if p < 7 {\n        return\
    \ modp(n - 6, p)\n    }\n    if p < 8 {\n        return modp(n - 7, p)\n    }\n\
    \    if p < 9 {\n        return modp(n - 8, p)\n    }\n    if p < 10 {\n     \
    \   return modp(n - 9, p)\n    }\n    if p < 11 {\n        return modp(n - 10,\
    \ p)\n    }\n    if p < 12 {\n        return modp(n - 11, p)\n    }\n    if p\
    \ < 13 {\n        return modp(n - 12, p)\n    }\n    if p < 14 {\n        return\
    \ modp(n - 13, p)\n    }\n    if p < 15 {\n        return modp(n - 14, p)\n  \
    \  }\n    if p < 16 {\n        return modp(n - 15, p)\n    }\n    if p < 17 {\n\
    \        return modp(n - 16, p)\n    }\n    if p < 18 {\n        return modp(n\
    \ - 17, p)\n    }\n    if p < 19 {\n        return modp(n - 18, p)\n    }\n  \
    \  if p < 20 {\n        return modp(n - 19, p)\n    }\n    if p < 21 {\n     \
    \   return modp(n - 20, p)\n    }\n    if p < 22 {\n        return modp(n - 21,\
    \ p)\n    }\n    if p < 23 {\n        return modp(n - 22, p)\n    }\n    if p\
    \ < 24 {\n        return modp(n - 23, p)\n    }\n    if p < 25 {\n        return\
    \ modp(n - 24, p)\n    }\n    if p < 26 {\n        return modp(n - 25, p)\n  \
    \  }\n    if p < 27 {\n        return modp(n - 26, p)\n    }\n    if p < 28 {\n\
    \        return modp(n - 27, p)\n    }\n    if p < 29 {\n        return modp(n\
    \ - 28, p)\n    }\n    if p < 30 {\n        return modp(n - 29, p)\n    }\n  \
    \  if p < 31 {\n        return modp(n - 30, p)\n    }\n    if p < 32 {\n     \
    \   return modp(n - 31, p)\n    }\n    if p < 33 {\n        return modp(n - 32,\
    \ p)\n    }\n    if p < 34 {\n        return modp(n - 33, p)\n    }\n    if p\
    \ < ", "    if n < 0 {\n        n *= -1\n    }\n    if n < p {\n        return\
    \ n\n    }\n    if n == p {\n        return 1\n    }\n    if n < p {\n       \
    \ return modp(n - p, p)\n    }\n    return modp(p, n)\n}\n", "    if n < 0 {\n\
    \        n *= -1\n    }\n    if p < 0 {\n        p *= -1\n    }\n    if n == 0\
    \ {\n        return 1\n    }\n    if p == 0 {\n        return 0\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < p {\n        return modp(n - 1, p)\n    }\n    if p > p {\n      \
    \  return modp(n, p - 1)\n    }\n    if p % 2 == 0 {\n        return modp(n /\
    \ 2, p)\n    }\n    return modp(n / 2, p / 2)\n}\n", "    if n < 0 {\n       \
    \ n *= -1\n    }\n    if n < p {\n        return n\n    }\n    if n == p {\n \
    \       return 1\n    }\n    if n < p {\n        return modp(n - p, p)\n    }\n\
    \    return modp(p, n)\n}\n", "    if n < 0 {\n        n *= -1\n    }\n    if\
    \ n < p {\n        return n\n    }\n    if n == p {\n        return 1\n    }\n\
    \    if n < p {\n        return modp(n - p, p)\n    }\n    return modp(n - p,\
    \ p) + p\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

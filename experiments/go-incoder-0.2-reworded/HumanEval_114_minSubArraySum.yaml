name: HumanEval_114_minSubArraySum
language: go_test.go
prompt: "package minSubArraySum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// Given a list of integers nums, find the minimum sum of any non-empty sub-list\n\
  // of nums.\n// Example\n// >>> minSubArraySum([]int{2, 3, 4, 1, 2, 4})\n// 1\n\
  // >>> minSubArraySum([]int{-1, -2, -3})\n// -6\nfunc minSubArraySum(nums []int)\
  \ int {\n"
tests: "func TestMinsubarraysum(t *testing.T) {\n  candidate := minSubArraySum\n\t\
  type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n  \
  \ tests := []test{\n     { actual: candidate([]int{2, 3, 4, 1, 2, 4}), expected:\
  \ 1 },\n     { actual: candidate([]int{-1, -2, -3}), expected: -6 },\n     { actual:\
  \ candidate([]int{-1, -2, -3, 2, -10}), expected: -14 },\n     { actual: candidate([]int{-9999999999999999}),\
  \ expected: -9999999999999999 },\n     { actual: candidate([]int{0, 10, 20, 1000000}),\
  \ expected: 0 },\n     { actual: candidate([]int{-1, -2, -3, 10, -5}), expected:\
  \ -6 },\n     { actual: candidate([]int{100, -1, -2, -3, 10, -5}), expected: -6\
  \ },\n     { actual: candidate([]int{10, 11, 13, 8, 3, 4}), expected: 3 },\n   \
  \  { actual: candidate([]int{100, -33, 32, -1, 0, -2}), expected: -33 },\n     {\
  \ actual: candidate([]int{-10}), expected: -10 },\n     { actual: candidate([]int{7}),\
  \ expected: 7 },\n     { actual: candidate([]int{1, -1}), expected: -1 },\n   }\n\
  \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
  \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\",\
  \ tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
  \t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(nums) == 0 {\n        return 0\n    }\n    \n    min :=\
    \ nums[0]\n    max := nums[0]\n    \n    for _, n := range nums {\n        if\
    \ n < min {\n            min = n\n        }\n        if n > max {\n          \
    \  max = n\n        }\n    }\n    \n    for _, n := range nums {\n        if n\
    \ < min {\n            min = n\n        }\n        if n > max {\n            max\
    \ = n\n        }\n    }\n    \n    return min + max\n}\n", "    sum := 0\n   \
    \ for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for _, v := range nums {\n        sum += v\n \
    \   }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    min := nums[0]\n    max := nums[0]\n    \n    for _, n := range nums\
    \ {\n        if n < min {\n            min = n\n        }\n        if n > max\
    \ {\n            max = n\n        }\n    }\n    \n    sum := 0\n    \n    for\
    \ _, n := range nums {\n        sum += n\n        if sum < min {\n           \
    \ min = sum\n        }\n        if sum > max {\n            max = sum\n      \
    \  }\n    }\n    \n    return min + max\n}\n", "    if len(nums) == 0 {\n    \
    \    return 0\n    }\n    \n    min := nums[0]\n    max := nums[0]\n    for _,\
    \ v := range nums[1:] {\n        if v < min {\n            min = v\n        }\n\
    \        if v > max {\n            max = v\n        }\n    }\n    \n    sum :=\
    \ 0\n    for _, v := range nums {\n        sum += v\n        if sum < min {\n\
    \            min = sum\n        }\n        if sum > max {\n            max = sum\n\
    \        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    min := nums[0]\n    max := nums[0]\n    for _, n := range\
    \ nums[1:] {\n        if n > max {\n            max = n\n        }\n        if\
    \ n < min {\n            min = n\n        }\n    }\n    \n    return min + minSubArraySum(nums[1\
    \ : len(nums)-1])\n}\n", "    result := nums[0]\n    for _, num := range nums[1:]\
    \ {\n        result = min(result, num+result)\n    }\n    return result\n}\n",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    result := 0\n    for _, v := range nums {\n        result = min(result,\
    \ v+result)\n    }\n    return result\n}\n", "    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    // Initialize min and max to first and last element\
    \ of nums\n    min := nums[0]\n    max := nums[len(nums)-1]\n    \n    // Initialize\
    \ sum to first element\n    sum := nums[0]\n    \n    // Initialize min and max\
    \ to first and last element of nums\n    for i := 1; i < len(nums); i++ {\n  \
    \      if nums[i] < min {\n            min = nums[i]\n        }\n        if nums[i]\
    \ > max {\n            max = nums[i]\n        }\n        sum += nums[i]\n    }\n\
    \    \n    // If sum is greater than max or less than min, return max\n    if\
    \ sum > max {\n        return max\n    }\n    if sum < min {\n        return min\n\
    \    }\n    \n    // If sum is equal to max, return max\n    if sum == max {\n\
    \        return max\n    }\n    \n    // If sum is equal to min, return min\n\
    \    if sum == min {\n        return min\n    }\n    \n    // If sum is greater\
    \ than max, return max\n    if sum > max {\n        return max\n    }\n    \n\
    \    // If sum is less than min, return min\n    if sum < min {\n        return\
    \ min\n    }\n    \n    // If sum is equal to max, return max\n    if sum == max\
    \ {\n        return max\n    }\n    \n    // If sum is equal to min, return min\n\
    \    if sum == min {\n        return min\n    }\n    \n    // If sum is greater\
    \ than max, return max\n    if sum > max {\n        return max\n    }\n    \n\
    \    // If sum is less than min, return min\n    if sum < min {\n        return\
    \ min\n    }\n    \n    // If sum is equal to max, return max\n    if sum == max\
    \ {\n        return max\n    }\n    \n    // If sum is equal to min, return min\n\
    \    if sum == min {\n        return min\n    }\n    \n    // If sum is greater\
    \ than max, return max\n    if sum > max {\n        return max\n    }\n    \n\
    \    // If sum is less than min, return min\n    if sum < min {\n        return\
    \ min\n    }\n    \n    // If sum is equal to max, return max\n    if sum == max\
    \ {\n        return max\n    }\n    \n    // If sum is equal to min, return min\n\
    \    if sum == min {\n        return min\n    }\n    \n    // If sum is greater\
    \ than max, return max\n    if sum > max {\n        return max\n    }\n    \n\
    \    // If sum is less than min, return min\n    if sum < min {\n        return\
    \ min\n    }\n    \n    // If sum", "    result := 0\n    for _, num := range\
    \ nums {\n        result += num\n    }\n    return result\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:]\
    \ {\n        if n < min {\n            min = n\n        }\n    }\n    return min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, num := range nums {\n        if num < min {\n            min = num\n\
    \        }\n    }\n    return min\n}\n", "    sum := 0\n    for _, num := range\
    \ nums {\n        sum += num\n    }\n    return sum\n}\n", "    if len(nums) ==\
    \ 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:]\
    \ {\n        if n < min {\n            min = n\n        }\n    }\n    return min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    sum := nums[0]\n\
    \    for _, n := range nums[1:] {\n        sum += n\n    }\n    return sum\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ v := range nums[1:] {\n        if v < min {\n            min = v\n        }\n\
    \    }\n    return min\n}\n", "    // Write your code here\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for _, v := range nums {\n        if v < min {\n    \
    \        min = v\n        }\n    }\n    return min\n}\n", "    if len(nums) ==\
    \ 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, v := range nums\
    \ {\n        if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    // write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for i := 1; i < n; i++ {\n        if nums[i] < min {\n            min = nums[i]\n\
    \        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    min := nums[0]\n    max := nums[0]\n    \n    for _, v :=\
    \ range nums {\n        if v < min {\n            min = v\n        }\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    \n    sum := 0\n  \
    \  for _, v := range nums {\n        sum += v\n    }\n    \n    return sum - min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n\
    \    max := nums[0]\n    \n    for _, num := range nums {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    \n    for _, num := range nums {\n        if num\
    \ < min {\n            min = num\n        }\n        if num > max {\n        \
    \    max = num\n        }\n    }\n    \n    return min + max\n}\n", "    // Write\
    \ your code here.\n    sum := 0\n    for _, v := range nums {\n        sum +=\
    \ v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    min := nums[0]\n    for _, v := range nums {\n        if v < min {\n\
    \            min = v\n        }\n    }\n    return min\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for _, v := range\
    \ nums {\n        if v < min {\n            min = v\n        }\n    }\n    \n\
    \    for i := 1; i < len(nums); i++ {\n        if nums[i-1] > nums[i] {\n    \
    \        min = nums[i-1] + min\n        }\n    }\n    \n    return min\n}\n",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, v := range nums[1:] {\n        if v < min {\n            min = v\n\
    \        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    sum := nums[0]\n    for _, n := range nums[1:] {\n        sum\
    \ += n\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    min := nums[0]\n    for _, n := range nums[1:] {\n     \
    \   if n < min {\n            min = n\n        }\n    }\n    return min\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ v := range nums[1:] {\n        if v < min {\n            min = v\n        }\n\
    \    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n   \
    \ }\n    result := nums[0]\n    for _, num := range nums[1:] {\n        result\
    \ = min(result, num+result)\n    }\n    return result\n}\n", "    sum := 0\n \
    \   for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n", " \
    \   if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for\
    \ _, v := range nums[1:] {\n        if v < min {\n            min = v\n      \
    \  }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    min := nums[0]\n    for _, v := range nums {\n        if v < min {\n\
    \            min = v\n        }\n    }\n    return min\n}\n", "    sum := 0\n\
    \    for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, v := range nums {\n        if v < min {\n            min = v\n   \
    \     }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, num := range nums[1:] {\n        if\
    \ min > num {\n            min = num\n        }\n    }\n    return min\n}\n",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n  \
    \  max := nums[0]\n    for _, num := range nums {\n        if num < min {\n  \
    \          min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    \n    sum := 0\n    for _, num := range nums {\n      \
    \  if num == min {\n            sum += min\n        }\n        if num == max {\n\
    \            sum += max\n        }\n    }\n    return sum\n}\n", "    sum := nums[0]\n\
    \    for _, v := range nums {\n        if v < 0 {\n            return sum\n  \
    \      }\n        sum += v\n    }\n    return sum\n}\n", "    if len(nums) ==\
    \ 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    \n    for _, n :=\
    \ range nums[1:] {\n        if n < min {\n            min = n\n        }\n   \
    \ }\n    \n    return min\n}\n", "    // Write your code here\n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    // Write your code here\n    sum := 0\n \
    \   for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n", " \
    \   if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for\
    \ _, n := range nums[1:] {\n        if n < min {\n            min = n\n      \
    \  }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    max := nums[0]\n    for _, v := range nums[1:]\
    \ {\n        if v < min {\n            min = v\n        }\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    \n    sum := 0\n    for _, v :=\
    \ range nums {\n        sum += v\n        if sum < min {\n            min = sum\n\
    \        }\n        if sum > max {\n            max = sum\n        }\n    }\n\
    \    return min\n}\n", "    // Write your code here.\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if len(nums) == 0 {\n        return 0\n    }\n    min\
    \ := nums[0]\n    for _, n := range nums[1:] {\n        if n < min {\n       \
    \     min = n\n        }\n    }\n    return min\n}\n", "    sum := 0\n    for\
    \ _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return sum\n\
    }\n", "    n := len(nums)\n    if n < 2 {\n        return nums[0]\n    }\n   \
    \ min := nums[0]\n    max := nums[0]\n    for i := 1; i < n; i++ {\n        if\
    \ nums[i] < min {\n            min = nums[i]\n        }\n        if nums[i] >\
    \ max {\n            max = nums[i]\n        }\n    }\n    sum := 0\n    for i\
    \ := 0; i < n; i++ {\n        sum += nums[i]\n        if sum < min {\n       \
    \     sum = min\n        }\n        if sum > max {\n            sum = max\n  \
    \      }\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    sum := nums[0]\n    for _, v := range nums[1:] {\n        sum\
    \ += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    // Find the first non-negative number\n    firstNonNegative\
    \ := 0\n    for i := 0; i < len(nums); i++ {\n        if nums[i] >= 0 {\n    \
    \        firstNonNegative = i\n            break\n        }\n    }\n    \n   \
    \ // Find the last non-negative number\n    lastNonNegative := len(nums) - 1\n\
    \    for i := 0; i < len(nums); i++ {\n        if nums[i] >= 0 {\n           \
    \ lastNonNegative = i\n            break\n        }\n    }\n    \n    // Find\
    \ the sum of the first non-negative number\n    sum := 0\n    for i := firstNonNegative;\
    \ i >= 0; i-- {\n        sum += nums[i]\n    }\n    \n    // Find the sum of the\
    \ last non-negative number\n    sum -= nums[lastNonNegative]\n    \n    // Find\
    \ the sum of the first non-negative and last non-negative number\n    sum -= nums[firstNonNegative]\n\
    \    sum -= nums[lastNonNegative]\n    \n    return sum\n}\n", "    // Write your\
    \ code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    min := nums[0]\n\
    \    for _, v := range nums {\n        if v < min {\n            min = v\n   \
    \     }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:] {\n        if n\
    \ < min {\n            min = n\n        }\n    }\n    return min\n}\n", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, v\
    \ := range nums[1:] {\n        if v < min {\n            min = v\n        }\n\
    \    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n   \
    \ }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if v < min\
    \ {\n            min = v\n        }\n    }\n    return min\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:]\
    \ {\n        if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    sum := 0\n    for _, num := range nums {\n        sum += num\n    }\n\
    \    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ min := nums[0]\n    for _, v := range nums[1:] {\n        if v < min {\n   \
    \         min = v\n        }\n    }\n    return min\n}\n", "    sum := 0\n   \
    \ for _, num := range nums {\n        sum += num\n    }\n    return sum\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ n := range nums[1:] {\n        if n < min {\n            min = n\n        }\n\
    \    }\n    return min\n}\n", "    // write your code here\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for _, n := range nums[1:] {\n        if n < min {\n\
    \            min = n\n        }\n    }\n    return min\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    // Find the first element in the\
    \ array that is greater than the sum of the first element of the sub-array\n \
    \   // and less than the sum of the last element of the sub-array\n    sum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        sum += nums[i]\n    \
    \    if sum < 0 {\n            sum = 0\n        }\n    }\n    \n    // Find the\
    \ last element in the array that is greater than the sum of the first element\
    \ of the sub-array\n    // and less than the sum of the last element of the sub-array\n\
    \    sum -= nums[0]\n    for i := len(nums) - 1; i >= 0; i-- {\n        sum +=\
    \ nums[i]\n        if sum < 0 {\n            sum = 0\n        }\n    }\n    \n\
    \    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ min := nums[0]\n    for _, v := range nums[1:] {\n        if v < min {\n   \
    \         min = v\n        }\n    }\n    return min\n}\n", "    // Write your\
    \ code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    min := nums[0]\n\
    \    for _, v := range nums {\n        if v < min {\n            min = v\n   \
    \     }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if\
    \ v < min {\n            min = v\n        }\n    }\n\n    return min\n}\n", " \
    \   if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for\
    \ _, v := range nums {\n        if v < min {\n            min = v\n        }\n\
    \    }\n    return min\n}\n", "    result := nums[0]\n    for _, num := range\
    \ nums[1:] {\n        result = min(result, num+result)\n    }\n    return result\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, n := range nums[1:] {\n        min = min(min, n)\n    }\n    return\
    \ min\n}\n", "    sum := 0\n    for _, v := range nums {\n        sum += v\n \
    \   }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for _, v := range nums[1:] {\n        if v < min {\n\
    \            min = v\n        }\n    }\n    return min\n}\n", "    min := nums[0]\n\
    \    for _, v := range nums {\n        if v < min {\n            min = v\n   \
    \     }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:] {\n        if n\
    \ < min {\n            min = n\n        }\n    }\n    return min\n}\n", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, n\
    \ := range nums[1:] {\n        if n < min {\n            min = n\n        }\n\
    \    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n   \
    \ }\n    \n    min := nums[0]\n    max := nums[0]\n    for _, n := range nums[1:]\
    \ {\n        if n > max {\n            max = n\n        }\n        if n < min\
    \ {\n            min = n\n        }\n    }\n    \n    return min + minSubArraySum(nums[1\
    \ : len(nums)-1])\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n \
    \   \n    min := nums[0]\n    max := nums[0]\n    for _, v := range nums[1:] {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    \n    sum := 0\n    for _, v := range\
    \ nums {\n        sum += v\n        if sum < min {\n            min = sum\n  \
    \      }\n        if sum > max {\n            max = sum\n        }\n    }\n  \
    \  \n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for _, v := range nums[1:] {\n        min = min(v, min)\n\
    \    }\n    return min\n}\n", "    sum := nums[0]\n    for _, v := range nums[1:]\
    \ {\n        sum += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    min := nums[0]\n    \n    for _, n := range\
    \ nums[1:] {\n        if n < min {\n            min = n\n        }\n    }\n  \
    \  \n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    min := nums[0]\n    for _, v := range nums {\n        if v < min {\n    \
    \        min = v\n        }\n    }\n    return min\n}\n", "    // Write your code\
    \ here.\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    // Write your code\
    \ here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if len(nums) == 0\
    \ {\n        return 0\n    }\n    sum := nums[0]\n    for _, v := range nums[1:]\
    \ {\n        sum += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n    min := nums[0]\n    for _, v := range nums {\n \
    \       if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    result := nums[0]\n    for _, num := range nums[1:] {\n        result = min(result,\
    \ num+result)\n    }\n    return result\n}\n", "    result := 0\n    for _, num\
    \ := range nums {\n        result += num\n    }\n    return result\n}\n", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n  \
    \  max := nums[0]\n    for _, n := range nums[1:] {\n        if n < min {\n  \
    \          min = n\n        }\n        if n > max {\n            max = n\n   \
    \     }\n    }\n    \n    return min + minSubArraySum(nums[2:])\n}\n", "    //\
    \ Write your code here.\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:]\
    \ {\n        if n < min {\n            min = n\n        }\n    }\n    return min\n\
    }\n", "    // Write your code here\n    sum := 0\n    for _, v := range nums {\n\
    \        sum += v\n    }\n    return sum\n}\n", "    result := 0\n    start :=\
    \ 0\n    end := len(nums) - 1\n    for start < end {\n        result += nums[start]\n\
    \        if result < nums[end] {\n            start = end + 1\n        } else\
    \ {\n            end = start - 1\n        }\n    }\n    return result\n}\n", " \
    \   if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n    for\
    \ _, n := range nums {\n        if n < min {\n            min = n\n        }\n\
    \    }\n\n    for _, n := range nums {\n        if n < min {\n            min\
    \ = n\n        }\n    }\n\n    return min\n}\n", "    // Write your code here\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    // Write your code here\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    // Write your code here.\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if len(nums) == 0 {\n       \
    \ return 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:] {\n    \
    \    if n < min {\n            min = n\n        }\n    }\n    return min\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ v := range nums[1:] {\n        if v < min {\n            min = v\n        }\n\
    \    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n   \
    \ }\n\n    min := nums[0]\n    max := nums[0]\n    for _, num := range nums[1:]\
    \ {\n        if num < min {\n            min = num\n        }\n        if num\
    \ > max {\n            max = num\n        }\n    }\n\n    return min + minSubArraySum(nums[2:])\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, v := range nums[1:] {\n        if v < min {\n            min = v\n\
    \        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    min := nums[0]\n    for _, num := range nums[1:] {\n   \
    \     min = min > num ? min : num\n    }\n    return min\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    max := nums[0]\n\
    \    for _, n := range nums {\n        if n > max {\n            max = n\n   \
    \     }\n        if n < min {\n            min = n\n        }\n    }\n    \n \
    \   sum := 0\n    for _, n := range nums {\n        sum += n\n        if sum <\
    \ min {\n            sum += min\n        }\n        if sum > max {\n         \
    \   sum -= max\n        }\n    }\n    return sum\n}\n", "    result := 0\n   \
    \ start := 0\n    end := len(nums) - 1\n    for start < end {\n        result\
    \ += nums[start]\n        if result < nums[end] {\n            start = end + 1\n\
    \        } else {\n            end = start - 1\n        }\n    }\n    return result\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n\
    \    max := nums[0]\n    for _, n := range nums[1:] {\n        if n > max {\n\
    \            max = n\n        }\n        if n < min {\n            min = n\n \
    \       }\n    }\n\n    return min + minSubArraySum(nums[2:])\n}\n", "    // Write\
    \ your code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    result := 0\n\
    \    for _, num := range nums {\n        result += num\n    }\n    return result\n\
    }\n", "    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n    min :=\
    \ nums[0]\n    for i := 1; i < n; i++ {\n        min = min(nums[i], min)\n   \
    \ }\n    return min\n}\n", "    sum := 0\n    for _, v := range nums {\n     \
    \   sum += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if v\
    \ < min {\n            min = v\n        }\n    }\n    return min\n}\n", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    max := nums[0]\n\
    \    for _, num := range nums[1:] {\n        if num < min {\n            min =\
    \ num\n        }\n        if num > max {\n            max = num\n        }\n \
    \   }\n    return min + minSubArraySum(nums[2:])\n}\n", "    if len(nums) == 0\
    \ {\n        return 0\n    }\n    min := nums[0]\n    for _, v := range nums {\n\
    \        if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n \
    \   return sum\n}\n", "    sum := 0\n    for _, v := range nums {\n        sum\
    \ += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    sum := nums[0]\n    for _, num := range nums[1:] {\n        sum\
    \ += num\n    }\n    return sum\n}\n", "    sum := 0\n    for _, v := range nums\
    \ {\n        sum += v\n    }\n    return sum\n}\n", "    sum := 0\n    for _,\
    \ v := range nums {\n        sum += v\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, num := range nums[1:] {\n        if num < min {\n            min =\
    \ num\n        }\n    }\n    return min\n}\n", "    result := 0\n    for _, num\
    \ := range nums {\n        result += num\n    }\n    return result\n}\n", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n  \
    \  max := nums[0]\n    \n    for _, n := range nums[1:] {\n        if n < min\
    \ {\n            min = n\n        }\n        if n > max {\n            max = n\n\
    \        }\n    }\n    \n    return min + minSubArraySum(nums[1 : len(nums)-1])\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, n := range nums {\n        if n < min {\n            min = n\n   \
    \     }\n    }\n    return min\n}\n", "    n := len(nums)\n    if n < 2 {\n  \
    \      return nums[0]\n    }\n    min := nums[0]\n    max := nums[0]\n    for\
    \ i := 1; i < n; i++ {\n        if nums[i] < min {\n            min = nums[i]\n\
    \        }\n        if nums[i] > max {\n            max = nums[i]\n        }\n\
    \    }\n    return min + minSubArraySum(nums[1 : n-1])\n}\n", "    // Write your\
    \ code here\n    \n    return 0\n}\n", "    sum := 0\n    for _, v := range nums\
    \ {\n        sum += v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n\
    \        return 0\n    }\n\n    min := nums[0]\n    max := nums[0]\n    for _,\
    \ v := range nums {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max += min\n    min -= max\n    max += min\n    min -= max\n    max += min\n\
    \    min -= max\n    max += min\n    min -= max\n    max += min\n    min -= max\n\
    \    max ", "    if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n\
    \    for _, num := range nums[1:] {\n        min = min(num, min)\n    }\n    return\
    \ min\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, num := range nums[1:] {\n        if num < min {\n            min =\
    \ num\n        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n    \
    \    return 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n \
    \       if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n\
    \    for _, v := range nums[1:] {\n        if v < min {\n            min = v\n\
    \        }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        min\
    \ = min(v, min)\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n     \
    \   return 0\n    }\n    min := nums[0]\n    for _, num := range nums[1:] {\n\
    \        if min > num {\n            min = num\n        }\n    }\n    return min\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ n := range nums[1:] {\n        if n < min {\n            min = n\n        }\n\
    \    }\n    return min\n}\n", "    min := nums[0]\n    max := nums[0]\n    for\
    \ _, n := range nums {\n        if n > max {\n            max = n\n        }\n\
    \        if n < min {\n            min = n\n        }\n    }\n    return min +\
    \ max\n}\n", "    sum := 0\n    for _, num := range nums {\n        sum += num\n\
    \    }\n    return sum\n}\n", "    n := len(nums)\n    if n == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for i := 1; i < n; i++ {\n        if nums[i]\
    \ < min {\n            min = nums[i]\n        }\n    }\n    return min\n}\n",
  "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    max :=\
    \ nums[0]\n    for _, v := range nums[1:] {\n        if v < min {\n          \
    \  min = v\n        }\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return min + minSubArraySum(nums[2:])\n}\n", "    sum := nums[0]\n\
    \    for _, v := range nums[1:] {\n        sum += v\n    }\n    return sum\n}\n",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    min := nums[0]\n    for _, v := range nums {\n        if v <\
    \ min {\n            min = v\n        }\n    }\n    return min\n}\n", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    result := nums[0]\n    for _,\
    \ num := range nums[1:] {\n        result = min(result, num+result)\n    }\n \
    \   return result\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n \
    \   min := nums[0]\n    for _, n := range nums[1:] {\n        if n < min {\n \
    \           min = n\n        }\n    }\n    return min\n}\n", "    n := len(nums)\n\
    \    if n < 2 {\n        return nums[0]\n    }\n    min := nums[0]\n    max :=\
    \ nums[0]\n    for i := 1; i < n; i++ {\n        if nums[i] < min {\n        \
    \    min = nums[i]\n        }\n        if nums[i] > max {\n            max = nums[i]\n\
    \        }\n    }\n    return min + minSubArraySum(nums[1 : n-1])\n}\n", "   \
    \ if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n    for\
    \ _, v := range nums[1:] {\n        if v < min {\n            min = v\n      \
    \  }\n    }\n\n    return min\n}\n", "    sum := 0\n    for _, num := range nums\
    \ {\n        sum += num\n    }\n    return sum\n}\n", "    result := 0\n    for\
    \ _, num := range nums {\n        result = min(result, num+result)\n    }\n  \
    \  return result\n}\n", "    n := len(nums)\n    if n < 2 {\n        return nums[0]\n\
    \    }\n    min := nums[0]\n    max := nums[0]\n    for i := 1; i < n; i++ {\n\
    \        if nums[i] < min {\n            min = nums[i]\n        }\n        if\
    \ nums[i] > max {\n            max = nums[i]\n        }\n    }\n    return min\
    \ + minSubArraySum(nums[1 : n-1])\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if v\
    \ < min {\n            min = v\n        }\n    }\n    return min\n}\n", "    n\
    \ := len(nums)\n    if n == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    max := nums[0]\n    for i := 1; i < n; i++ {\n        if nums[i] < min {\n\
    \            min = nums[i]\n        }\n        if nums[i] > max {\n          \
    \  max = nums[i]\n        }\n    }\n    return min + minSubArraySum(nums[0 : n-1])\n\
    }\n", "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n \
    \   return sum\n}\n", "    // Write your code here\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    // Write your code here.\n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    sum := 0\n    for _, v := range nums {\n        sum +=\
    \ v\n    }\n    return sum\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    max := nums[0]\n    \n    for _, num :=\
    \ range nums[1:] {\n        if num < min {\n            min = num\n        }\n\
    \        if num > max {\n            max = num\n        }\n    }\n    \n    return\
    \ min + minSubArraySum(nums[2:])\n}\n", "    n := len(nums)\n    if n == 0 {\n\
    \        return 0\n    }\n    min := nums[0]\n    for i := 1; i < n; i++ {\n \
    \       sum += nums[i]\n        if sum < min {\n            min = sum\n      \
    \  }\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if v < min\
    \ {\n            min = v\n        }\n    }\n    return min\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:]\
    \ {\n        if v < min {\n            min = v\n        }\n    }\n    return min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    max := nums[0]\n    for _, v := range nums[1:] {\n        if v < min {\n\
    \            min = v\n        }\n        if v > max {\n            max = v\n \
    \       }\n    }\n    return min + minSubArraySum(nums[2:])\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    // Find the first non-zero element\n\
    \    i := 0\n    for i < len(nums) {\n        if nums[i] != 0 {\n            break\n\
    \        }\n        i++\n    }\n    \n    // Find the first non-zero element after\
    \ i\n    j := i\n    for j < len(nums) {\n        if nums[j] != 0 {\n        \
    \    break\n        }\n        j++\n    }\n    \n    // Find the first non-zero\
    \ element after j\n    k := j\n    for k < len(nums) {\n        if nums[k] !=\
    \ 0 {\n            break\n        }\n        k++\n    }\n    \n    // Find the\
    \ first non-zero element after k\n    l := k\n    for l < len(nums) {\n      \
    \  if nums[l] != 0 {\n            break\n        }\n        l++\n    }\n    \n\
    \    // Find the first non-zero element after l\n    m := l\n    for m < len(nums)\
    \ {\n        if nums[m] != 0 {\n            break\n        }\n        m++\n  \
    \  }\n    \n    // Find the first non-zero element after m\n    n := m\n    for\
    \ n < len(nums) {\n        if nums[n] != 0 {\n            break\n        }\n \
    \       n++\n    }\n    \n    // Find the first non-zero element after n\n   \
    \ o := n\n    for o < len(nums) {\n        if nums[o] != 0 {\n            break\n\
    \        }\n        o++\n    }\n    \n    // Find the first non-zero element after\
    \ o\n    p := o\n    for p < len(nums) {\n        if nums[p] != 0 {\n        \
    \    break\n        }\n        p++\n    }\n    \n    // Find the first non-zero\
    \ element after p\n    q := p\n    for q < len(nums) {\n        if nums[q] !=\
    \ 0 {\n            break\n        }\n        q++\n    }\n    \n    // Find the\
    \ first non-zero element after q\n    r := q\n    for r < len(nums) {\n      \
    \  if nums[r] != 0 {\n            break\n        }\n        r++\n    }\n    \n\
    \    // Find the first non-zero element after r\n    s := r\n    for s < len(nums)\
    \ {\n        if nums[s] != 0 {\n            break\n        }\n        s++\n  \
    \  }\n    \n    // Find the first non-zero element after s\n    t := s\n    for\
    \ t < len(nums) {\n        if nums[t] != 0 {\n            break\n        }\n \
    \       t++\n    }\n    \n    // Find the first non-zero element after t\n   \
    \ u := t\n    for u < len(nums) {\n        if nums[u] != 0 {\n            break\n\
    \        }\n        u++\n    }\n    \n    // Find the first non-zero element after ",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ n := range nums[1:] {\n        if n < min {\n            min = n\n        }\n\
    \    }\n    return min\n}\n", "    result := nums[0]\n    for _, num := range\
    \ nums[1:] {\n        result = min(result, num+result)\n    }\n    return result\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    sum := 0\n    for _, v := range nums {\n        sum += v\n    }\n    return\
    \ sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    min\
    \ := nums[0]\n    max := nums[0]\n    for _, v := range nums[1:] {\n        if\
    \ v < min {\n            min = v\n        }\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    \n    return min + minSubArraySum(nums[2:])\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n\
    \    \n    for _, n := range nums[1:] {\n        if n < min {\n            min\
    \ = n\n        }\n    }\n    \n    return min\n}\n", "    sum := 0\n    for _,\
    \ v := range nums {\n        sum += v\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ n := range nums[1:] {\n        if n < min {\n            min = n\n        }\n\
    \    }\n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n   \
    \ }\n    \n    min := nums[0]\n    max := nums[0]\n    \n    for _, num := range\
    \ nums[1:] {\n        if num < min {\n            min = num\n        }\n     \
    \   if num > max {\n            max = num\n        }\n    }\n    \n    return\
    \ min + minSubArraySum(nums[2:])\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, v := range nums[1:] {\n        if v\
    \ < min {\n            min = v\n        }\n    }\n    return min\n}\n", "    n\
    \ := len(nums)\n    if n == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    max := nums[0]\n    for i := 1; i < n; i++ {\n        if nums[i] < min {\n\
    \            min = nums[i]\n        }\n        if nums[i] > max {\n          \
    \  max = nums[i]\n        }\n    }\n    sum := 0\n    for i := 0; i < n; i++ {\n\
    \        sum += nums[i]\n        if sum < min {\n            sum = min\n     \
    \   }\n        if sum > max {\n            sum = max\n        }\n    }\n    return\
    \ sum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n\
    \    for _, v := range nums[1:] {\n        min = min(v, min+v)\n    }\n    return\
    \ min\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n\
    \    for _, n := range nums[1:] {\n        if n < min {\n            min = n\n\
    \        }\n    }\n\n    return min\n}\n", "    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    min := nums[0]\n    for _, n := range nums[1:] {\n        min\
    \ = min(min, n)\n    }\n    return min\n}\n", "    if len(nums) == 0 {\n     \
    \   return 0\n    }\n    sum := nums[0]\n    for _, num := range nums[1:] {\n\
    \        sum += num\n    }\n    return sum\n}\n", "    // Write your code here.\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    // Write your code here\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if len(nums) == 0 {\n       \
    \ return 0\n    }\n    \n    min := nums[0]\n    max := nums[0]\n    for _, num\
    \ := range nums[1:] {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    \n \
    \   sum := 0\n    for _, num := range nums {\n        sum += num\n        if sum\
    \ < min {\n            min = sum\n        }\n        if sum > max {\n        \
    \    max = sum\n        }\n    }\n    \n    return min\n}\n", "    // Write your\
    \ code here\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    sum := 0\n    for\
    \ _, v := range nums {\n        sum += v\n    }\n    return sum\n}\n", "    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _, n\
    \ := range nums {\n        if n < min {\n            min = n\n        }\n    }\n\
    \    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ \n    min := nums[0]\n    max := nums[0]\n    \n    for _, num := range nums[1:]\
    \ {\n        if num < min {\n            min = num\n        }\n        if num\
    \ > max {\n            max = num\n        }\n    }\n    \n    return min + minSubArraySum(nums[1\
    \ : len(nums)-1])\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n \
    \   \n    min := nums[0]\n    max := nums[0]\n    for _, v := range nums[1:] {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    \n    return min + minSubArraySum(nums[1:])\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    if len(nums) == 0 {\n        return 0\n    }\n    min := nums[0]\n    for _,\
    \ v := range nums {\n        if v < min {\n            min = v\n        }\n  \
    \  }\n    return min\n}\n", "    // Write your code here\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    min := nums[0]\n    max := nums[0]\n    for _, v := range nums {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    \n    min -= max\n    \n    for _,\
    \ v := range nums {\n        if v < min {\n            min = v\n        }\n  \
    \  }\n    \n    return min\n}\n", "    sum := 0\n    for _, v := range nums {\n\
    \        sum += v\n    }\n    return sum\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

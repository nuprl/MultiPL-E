name: HumanEval_147_get_max_triples
language: swift
prompt: "\n/// You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n/// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n/// Return the number of triples (a[i], a[j], a[k]) of a where i <\
  \ j < k, \n/// and a[i] + a[j] + a[k] is a multiple of 3.\n/// Example :\n/// Input:\
  \ n = 5\n/// Output: 1\n/// Explanation: \n/// a = [1, 3, 7, 13, 21]\n/// The only\
  \ valid triple is (1, 7, 13).\nfunc get_max_triples(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_max_triples(n: 5) == 1)\nassert(get_max_triples(n:\
  \ 6) == 4)\nassert(get_max_triples(n: 10) == 36)\nassert(get_max_triples(n: 100)\
  \ == 53361)"
completions: ["    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i\
    \ * i - i + 1)\n    }\n    return a.maxElement()", "    var a = Array<Int>()\n\
    \    for i in 1...n {\n        a.append(i * i - i + 1)\n    }\n    var triples\
    \ = 0\n    for i in 0..<n {\n        for j in 0..<n {\n            for k in 0..<n\
    \ {\n                if i < j < k {\n                    if a[i] + a[j] + a[k]\
    \ == 3 {\n                        triples += 1\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return triples", "    var a\
    \ = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n    }\n\
    \    var count = 0\n    for i in 0..<n {\n        for j in 0..<n {\n         \
    \   for k in 0..<n {\n                if i < j < k {\n                    if a[i]\
    \ < a[j] + a[k] {\n                        count += 1\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count", "    var\
    \ a = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n  \
    \  }\n    var count = 0\n    for i in 0..<n {\n        for j in 0..<n {\n    \
    \        for k in 0..<n {\n                if i < j < k {\n                  \
    \  if a[i] < a[j] && a[i] < a[k] {\n                        count += 1\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ count", "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i\
    \ * i - i + 1)\n    }\n    return a.filter{ $0 % 3 == 0 }.count", "    var a =\
    \ Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n    }\n\
    \    var count = 0\n    for i in 0..<n {\n        for j in 0..<n {\n         \
    \   for k in 0..<n {\n                if i < j < k {\n                    if a[i]\
    \ < a[j] && a[i] < a[k] {\n                        count += 1\n              \
    \      }\n                }\n            }\n        }\n    }\n    return count",
  "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n\
    \    }\n    var triples = 0\n    for i in 1...n {\n        for j in 1...n {\n\
    \            for k in 1...n {\n                if i < j < k {\n              \
    \      if a[i] < a[j] < a[k] {\n                        triples += 1\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ triples", "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i\
    \ * i - i + 1)\n    }\n    return a.count", "    var a = Array<Int>()\n    for\
    \ i in 1...n {\n        a.append(i * i - i + 1)\n    }\n    var count = 0\n  \
    \  for i in 0..(n-1) {\n        for j in (i+1)..(n) {\n            for k in (i+1)..(n)\
    \ {\n                if i != j && i != k && j != k {\n                    if a[i]\
    \ < a[j] && a[i] < a[k] {\n                        count += 1\n              \
    \      }\n                }\n            }\n        }\n    }\n    return count",
  "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n\
    \    }\n    var count = 0\n    for i in 0..<n {\n        for j in 0..<n {\n  \
    \          for k in 0..<n {\n                if i < j < k {\n                \
    \    if a[i] < a[j] + a[k] {\n                        count += 1\n           \
    \         }\n                }\n            }\n        }\n    }\n    return count",
  "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n\
    \    }\n    return a.filter{ $0 % 3 == 0 }.count", "    var a: [Int] = []\n  \
    \  for i in 1...n {\n        a[i] = i * i - i + 1\n    }\n    var count = 0\n\
    \    for i in 0..(n-1) {\n        for j in (i+1)..(n) {\n            for k in\
    \ (j+1)..(n) {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n\
    \                    count += 1\n                }\n            }\n        }\n\
    \    }\n    return count", "    var a = Array<Int>()\n    for i in 1...n {\n \
    \       a.append(i * i - i + 1)\n    }\n    var count = 0\n    for i in 0..<n\
    \ {\n        for j in 0..<n {\n            for k in 0..<n {\n                if\
    \ i != j && i != k && j != k {\n                    if a[i] < a[j] && a[i] < a[k]\
    \ {\n                        count += 1\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return count", "    var a = Array<Int>()\n\
    \    for i in 1...n {\n        a.append(i * i - i + 1)\n    }\n    var triples\
    \ = 0\n    for i in 0..<n {\n        for j in 0..<n {\n            for k in 0..<n\
    \ {\n                if i != j && i != k && j != k {\n                    if a[i]\
    \ < a[j] && a[i] < a[k] {\n                        triples += 1\n            \
    \        }\n                }\n            }\n        }\n    }\n    return triples",
  "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i * i - i + 1)\n\
    \    }\n    var count = 0\n    for i in 0..<n {\n        for j in 0..<n {\n  \
    \          for k in 0..<n {\n                if i < j < k {\n                \
    \    let sum = Int(a[i]) + Int(a[j]) + Int(a[k])\n                    if sum %\
    \ 3 == 0 {\n                        count += 1\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return count", "    var a =\
    \ Array<Int>()\n    for i in 1...n {\n        a.append(i*i - i + 1)\n    }\n \
    \   var triples = 0\n    for i in 0..<n {\n        for j in 0..<n {\n        \
    \    for k in 0..<n {\n                if i != j && i != k && j != k {\n     \
    \               if a[i] < a[j] && a[i] < a[k] {\n                        triples\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \   }\n    return triples", "    var a = Array<Int>()\n    for i in 1...n {\n\
    \        a.append(i * i - i + 1)\n    }\n    var count = 0\n    for i in 0..<n\
    \ {\n        for j in 0..<n {\n            for k in 0..<n {\n                if\
    \ i < j < k {\n                    let sum = Int(a[i]) + Int(a[j]) + Int(a[k])\n\
    \                    if sum % 3 == 0 {\n                        count += 1\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return count", "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i*i\
    \ - i + 1)\n    }\n    var count = 0\n    for i in 0..<n {\n        for j in 0..<n\
    \ {\n            for k in 0..<n {\n                if i != j && i != k && j !=\
    \ k {\n                    if a[i] < a[j] && a[i] < a[k] {\n                 \
    \       count += 1\n                    }\n                }\n            }\n\
    \        }\n    }\n    return count", "    var a = Array<Int>()\n    for i in\
    \ 1...n {\n        a.append(i * i - i + 1)\n    }\n    return a.filter{$0 % 3\
    \ == 0}.length", "    var a = Array<Int>()\n    for i in 1...n {\n        a.append(i\
    \ * i - i + 1)\n    }\n    var count = 0\n    for i in 0..<n {\n        for j\
    \ in 0..<n {\n            for k in 0..<n {\n                if i < j < k {\n \
    \                   let sum = Int(a[i]) + Int(a[j]) + Int(a[k])\n            \
    \        if sum % 3 == 0 {\n                        count += 1\n             \
    \       }\n                }\n            }\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

name: HumanEval_49_modp
language: swift
prompt: "\n/// Return 2^n modulo p (be aware of numerics).\n/// >>> modp(3, 5)\n///\
  \ 3\n/// >>> modp(1101, 101)\n/// 2\n/// >>> modp(0, 101)\n/// 1\n/// >>> modp(3,\
  \ 11)\n/// 8\n/// >>> modp(100, 101)\n/// 1\nfunc modp(n: Int, p: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(modp(n: 3, p: 5) == 3)\nassert(modp(n: 1101,\
  \ p: 101) == 2)\nassert(modp(n: 0, p: 101) == 1)\nassert(modp(n: 3, p: 11) == 8)\n\
  assert(modp(n: 100, p: 101) == 1)\nassert(modp(n: 30, p: 5) == 4)\nassert(modp(n:\
  \ 31, p: 5) == 3)"
completions: ["\tif n < 0 {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\tif\
    \ p < 0 {\n\t\tpanic(\"modp called with negative p\")\n\t}\n\tif n == 0 {\n\t\t\
    return 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tq := n / p\n\tr := n % p\n\t\
    if r == 0 {\n\t\treturn q\n\t}\n\treturn q + modp(q, p)", "\tswitch {\n\tcase\
    \ n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n, p)\n\t\
    case p == 0:\n\t\treturn 0\n\tdefault:\n\t\treturn ((n & (p - 1)) == 0) ? n :\
    \ modp(n >> 1, p)\n\t}", "    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if p < 0 {\n        return modp(n - 1, p +\
    \ p)\n    }\n    if p > n {\n        return modp(n - 1, p)\n    }\n    if p %\
    \ 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return modp(n / 2, p + p)",
  "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp: p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif n ==\
    \ 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == ", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p >\
    \ n {\n        return modp(n, p)\n    }\n    if p < n {\n        return modp(n,\
    \ p)\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n     \
    \   return 0\n    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == 0 {\n        return 0\n    }\n    if p == 1 {\n        return n\n  \
    \  }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 1 {\n\
    \        return n\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == 1 {\n        return p\n    }\n    if n == 0 {\n        return 0\n  \
    \  }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == 1 {\n        return p\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 1 {\n        return n\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == 0 {\n        return 0\n    }\n    if p == 1 {\n        return\
    \ n\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == 0 {\n        return 0\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == 1 {\n        return p\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == 1 {\n        return p", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p == 1 {\n        return n\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return modp(n - 1, p)\n\
    \    }\n    if n == p + 1 {\n        return modp(n, p)\n    }\n    if n == p +\
    \ 2 {\n        return modp(n, p)\n    }\n    if n == p + 3 {\n        return modp(n,\
    \ p)\n    }\n    if n == p + 4 {\n        return modp(n, p)\n    }\n    if n ==\
    \ p + 5 {\n        return modp(n, p)\n    }\n    if n == p + 6 {\n        return\
    \ modp(n, p)\n    }\n    if n == p + 7 {\n        return modp(n, p)\n    }\n \
    \   if n == p + 8 {\n        return modp(n, p)\n    }\n    if n == p + 9 {\n \
    \       return modp(n, p)\n    }\n    if n == p + 10 {\n        return modp(n,\
    \ p)\n    }\n    if n == p + 11 {\n        return modp(n, p)\n    }\n    if n\
    \ == p + 12 {\n        return modp(n, p)\n    }\n    if n == p + 13 {\n      \
    \  return modp(n, p)\n    }\n    if n == p + 14 {\n        return modp(n, p)\n\
    \    }\n    if n == p + 15 {\n        return modp(n, p)\n    }\n    if n == p\
    \ + 16 {\n        return modp(n, p)\n    }\n    if n == p + 17 {\n        return\
    \ modp(n, p)\n    }\n    if n == p + 18 {\n        return modp(n, p)\n    }\n\
    \    if n == p + 19 {\n        return modp(n, p)\n    }\n    if n == p + 20 {\n\
    \        return modp(n, p)\n    }\n    if n == p + 21 {\n        return modp(n,\
    \ p)\n    }\n    if n == p + 22 {\n        return modp(n, p)\n    }\n    if n\
    \ == p + 23 {\n        return modp(n, p)\n    }\n    if n == p + 24 {\n      \
    \  return modp(n, p)\n    }\n    if n == p + 25 {\n        return modp(n, p)\n\
    \    }\n    if n == p + 26 {\n        return modp(n, p)\n    }\n    if n == p\
    \ + 27 {\n        return modp(n, p)\n    }\n    if n == p + 28 {\n        return\
    \ modp(n, p)\n    }\n    if n == p + 29 {\n        return modp(n, p)\n    }\n\
    \    if n == p", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\t\
    if p < 2 {\n\t\tpanic(\"modp: p < 2\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\
    \tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif p < p\
    \ {\n\t\treturn modp(n - 1, p)\n\t}\n\tq := modp(n - 1, p)\n\tif q == p {\n\t\t\
    return 1\n\t}\n\treturn q", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p+1 {\n        return p\n\
    \    }\n    if n == p+2 {\n        return p+1\n    }\n    if n == p+3 {\n    \
    \    return p+2\n    }\n    if n == p+4 {\n        return p+3\n    }\n    if n\
    \ == p+5 {\n        return p+4\n    }\n    if n == p+6 {\n        return p+5\n\
    \    }\n    if n == p+7 {\n        return p+6\n    }\n    if n == p+8 {\n    \
    \    return p+7\n    }\n    if n == p+9 {\n        return p+8\n    }\n    if n\
    \ == p+10 {\n        return p+9\n    }\n    if n == p+11 {\n        return p+10\n\
    \    }\n    if n == p+12 {\n        return p+11\n    }\n    if n == p+13 {\n \
    \       return p+12\n    }\n    if n == p+14 {\n        return p+13\n    }\n \
    \   if n == p+15 {\n        return p+14\n    }\n    if n == p+16 {\n        return\
    \ p+15\n    }\n    if n == p+17 {\n        return p+16\n    }\n    if n == p+18\
    \ {\n        return p+17\n    }\n    if n == p+19 {\n        return p+18\n   \
    \ }\n    if n == p+20 {\n        return p+19\n    }\n    if n == p+21 {\n    \
    \    return p+20\n    }\n    if n == p+22 {\n        return p+21\n    }\n    if\
    \ n == p+23 {\n        return p+22\n    }\n    if n == p+24 {\n        return\
    \ p+23\n    }\n    if n == p+25 {\n        return p+24\n    }\n    if n == p+26\
    \ {\n        return p+25\n    }\n    if n == p+27 {\n        return p+26\n   \
    \ }\n    if n == p+28 {\n        return p+27\n    }\n    if n == p+29 {\n    \
    \    return p+28\n    }\n    if n == p+30 {\n        return p+29\n    }\n    if\
    \ n == p+31 {\n        return p+30\n    }\n    if n == p+32 {\n        return\
    \ p+31", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif p > p {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tx := n\n\ty := p\n\t\
    z := 1\n\tfor {\n\t\tif x == 0 {\n\t\t\treturn z\n\t\t}\n\t\tif y == 0 {\n\t\t\
    \treturn z\n\t\t}\n\t\tif x == y {\n\t\t\tbreak\n\t\t}\n\t\tx -= y\n\t\ty %= x\n\
    \t\tz <<= 1\n\t}\n\treturn z", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p >\
    \ n {\n        return modp(n, p)\n    }\n    if p < n {\n        return modp(n,\
    \ p)\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n     \
    \   return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p+1\
    \ {\n        return p\n    }\n    if n == p-1 {\n        return n\n    }\n   \
    \ if n == p+2 {\n        return p\n    }\n    if n == p-2 {\n        return n\n\
    \    }\n    if n == p+3 {\n        return p\n    }\n    if n == p-3 {\n      \
    \  return n\n    }\n    if n == p+4 {\n        return p\n    }\n    if n == p-4\
    \ {\n        return n\n    }\n    if n == p+5 {\n        return p\n    }\n   \
    \ if n == p-5 {\n        return n\n    }\n    if n == p+6 {\n        return p\n\
    \    }\n    if n == p-6 {\n        return n\n    }\n    if n == p+7 {\n      \
    \  return p\n    }\n    if n == p-7 {\n        return n\n    }\n    if n == p+8\
    \ {\n        return p\n    }\n    if n == p-8 {\n        return n\n    }\n   \
    \ if n == p+9 {\n        return p\n    }\n    if n == p-9 {\n        return n\n\
    \    }\n    if n == p+10 {\n        return p\n    }\n    if n == p-10 {\n    \
    \    return n\n    }\n    if n == p+11 {\n        return p\n    }\n    if n ==\
    \ p-11 {\n        return n\n    }\n    if n == p+12 {\n        return p\n    }\n\
    \    if n == p-12 {\n        return n\n    }\n    if n == p+13 {\n        return\
    \ p\n    }\n    if n == p-13 {\n        return n\n    }\n    if n == p+14 {\n\
    \        return p\n    }\n    if n == p-14 {\n        return n\n    }\n    if\
    \ n == p+15 {\n        return p\n    }\n    if n == p-15 {\n        return n\n\
    \    }\n    if n == p+16 {\n        return p\n    }\n    if n == p-16 {\n    \
    \    return n\n    }\n    if n == p+17 {\n        return p\n    }\n    if n ==\
    \ p-17 {\n        return n\n    }\n    if n == p+18 {\n        return p\n    }\n\
    \    if n == p-18 {\n        return n\n    }\n    if n == p+19", "\tif n < 0 {\n\
    \t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 2 {\n\t\tpanic(\"modp: p <\
    \ 2\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tq := p / 2\n\tr := p % 2\n\
    \tx := n\n\ty := 1\n\tfor {\n\t\tif x == 0 {\n\t\t\treturn y\n\t\t}\n\t\ty *=\
    \ x\n\t\tx /= q\n\t\tif x == 0 {\n\t\t\treturn y\n\t\t}\n\t}", "    if n == 0\
    \ {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if\
    \ n >= p {\n        return n - p\n    }\n    return p + modp(n - p, p)", "   \
    \ if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return\
    \ modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p ==\
    \ 0 {\n        return n\n    }\n    if p > n {\n        return modp(n, p)\n  \
    \  }\n    if p < n {\n        return modp(n, p)\n    }\n    if n == 1 {\n    \
    \    return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n", "    if n < 0 {\n        return modp(-n, p)\n    }\n\
    \    if p < 1 {\n        return modp(n, p - 1)\n    }\n    if p == 1 {\n     \
    \   return n\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return modp(n - 1, p)\n   \
    \ }\n    if n == p - 1 {\n        return modp(n, p)\n    }\n    if n == p - 2\
    \ {\n        return modp(n, p - 1)\n    }\n    if n == p - 3 {\n        return\
    \ modp(n, p - 2)\n    }\n    if n == p - 4 {\n        return modp(n, p - 3)\n\
    \    }\n    if n == p - 5 {\n        return modp(n, p - 4)\n    }\n    if n ==\
    \ p - 6 {\n        return modp(n, p - 5)\n    }\n    if n == p - 7 {\n       \
    \ return modp(n, p - 6)\n    }\n    if n == p - 8 {\n        return modp(n, p\
    \ - 7)\n    }\n    if n == p - 9 {\n        return modp(n, p - 8)\n    }\n   \
    \ if n == p - 10 {\n        return modp(n, p - 9)\n    }\n    if n == p - 11 {\n\
    \        return modp(n, p - 10)\n    }\n    if n == p - 12 {\n        return modp(n,\
    \ p - 11)\n    }\n    if n == p - 13 {\n        return modp(n, p - 12)\n    }\n\
    \    if n == p - 14 {\n        return modp(n, p - 13)\n    }\n    if n == p -\
    \ 15 {\n        return modp(n, p - 14)\n    }\n    if n == p - 16 {\n        return\
    \ modp(n, p - 15)\n    }\n    if n == p - 17 {\n        return modp(n, p - 16)\n\
    \    }\n    if n == p - 18 {\n        return modp(n, p - 17)\n    }\n    if n\
    \ == p - 19 {\n        return modp(n, p - 18)\n    }\n    if n == p - 20 {\n \
    \       return modp(n, p - 19)\n    }\n    if n == p - 21 {\n        return modp(n,\
    \ p - 20)\n    }\n    if n == p - 22 {\n        return modp(n, p - 21)\n    }\n\
    \    if n == p - 23 {\n        return modp(n, p - 22)\n    }\n    if n == p -\
    \ 24 {\n        return modp(n, p - 23)\n    }\n    if n == p - 25 {\n        return\
    \ modp(n, p - 24)\n    }\n    if n == p - 26 {\n        return modp(n, p - 25)\n\
    \    }\n    if n == p - 27 {\n        return modp(n, p - 26)\n    }\n    if n\
    \ == p - 28 {\n        return modp(n, p - 27)\n    }\n    if n == p - 29 {\n \
    \       return modp(n, p - 28)\n    }\n    if n == p - 30 {\n        return modp(n, ",
  "\tlet n2 = n * n\n\tlet p2 = p * p\n\tlet n3 = n2 * n2\n\tlet p3 = p2 * p\n\tlet\
    \ n4 = n3 * n3\n\tlet p4 = p3 * p3\n\tlet n5 = n4 * n4\n\tlet p5 = p4 * p4\n\t\
    let n6 = n5 * n5\n\tlet p6 = p5 * p5\n\tlet n7 = n6 * n6\n\tlet p7 = p6 * p6\n\
    \tlet n8 = (n7 * n7) + p7\n\tlet p8 = (p7 * p7) + p8\n\tlet n9 = (n8 * n8) + p8\n\
    \tlet p9 = (p8 * p8) + p9\n\tlet n10 = (n9 * n9) + p9\n\tlet p10 = (p9 * p9) +\
    \ p10\n\tlet n11 = (n10 * n10) + p10\n\tlet p11 = (p10 * p10) + p11\n\tlet n12\
    \ = (n11 * n11) + p11\n\tlet p12 = (p11 * p11) + p12\n\tlet n13 = (n12 * n12)\
    \ + p12\n\tlet p13 = (p12 * p12) + p13\n\tlet n14 = (n13 * n13) + p13\n\tlet p14\
    \ = (p13 * p13) + p14\n\tlet n15 = (n14 * n14) + p14\n\tlet p15 = (p14 * p14)\
    \ + p15\n\tlet n16 = (n15 * n15) + p15\n\tlet p16 = (p15 * p15) + p16\n\tlet n17\
    \ = (n16 * n16) + p16\n\tlet p17 = (p16 * p16) + p17\n\tlet n18 = (n17 * n17)\
    \ + p17\n\tlet p18 = (p17 * p17) + p18\n\tlet n19 = (n18 * n18) + p18\n\tlet p19\
    \ = (p18 * p18) + p19\n\tlet n20 = (n19 * n19) + p19\n\tlet p20 = (p19 * p19)\
    \ + p20\n\tlet n21 = (n20 * n20) + p20\n\tlet p21 = (p20 * p20) + p21\n\tlet n22\
    \ = (n21 * n21) + p21\n\tlet p22 = (p21", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\t\
    if n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p\
    \ {\n\t\treturn 1\n\t}\n\tif n == p+1 {\n\t\treturn p\n\t}\n\tif n == p+2 {\n\t\
    \treturn p + 1\n\t}\n\tif n == p+3 {\n\t\treturn p + 2\n\t}\n\tif n == p+4 {\n\
    \t\treturn p + 3\n\t}\n\tif n == p+5 {\n\t\treturn p + 4\n\t}\n\tif n == p+6 {\n\
    \t\treturn p + 5\n\t}\n\tif n == p+7 {\n\t\treturn p + 6\n\t}\n\tif n == p+8 {\n\
    \t\treturn p + 7\n\t}\n\tif n == p+9 {\n\t\treturn p + 8\n\t}\n\tif n == p+10\
    \ {\n\t\treturn p + 9\n\t}\n\tif n == p+11 {\n\t\treturn p + 10\n\t}\n\tif n ==\
    \ p+12 {\n\t\treturn p + 11\n\t}\n\tif n == p+13 {\n\t\treturn p + 12\n\t}\n\t\
    if n == p+14 {\n\t\treturn p + 13\n\t}\n\tif n == p+15 {\n\t\treturn p + 14\n\t\
    }\n\tif n == p+16 {\n\t\treturn p + 15\n\t}\n\tif n == p+17 {\n\t\treturn p +\
    \ 16\n\t}\n\tif n == p+18 {\n\t\treturn p + 17\n\t}\n\tif n == p+19 {\n\t\treturn\
    \ p + 18\n\t}\n\tif n == p+20 {\n\t\treturn p + 19\n\t}\n\tif n == p+21 {\n\t\t\
    return p + 20\n\t}\n\tif n == p+22 {\n\t\treturn p + 21\n\t}\n\tif n == p+23 {\n\
    \t\treturn p + 22\n\t}\n\tif n == p+24 {\n\t\treturn p + 23\n\t}\n\tif n == p+25\
    \ {\n\t\treturn p + 24\n\t}\n\tif n == p+26 {\n\t\treturn p + 25\n\t}\n\tif n\
    \ == p+27 {\n\t\treturn p + 26\n\t}\n\tif n == p+28 {\n\t\treturn p + 27\n\t}\n\
    \tif n == p+29 {\n\t\treturn p + 28\n\t}\n\tif n == p+30 {\n\t\treturn p + 29\n\
    \t}\n\tif n == p+31 {\n\t\treturn p + 30\n\t}\n\tif n == p+32 {\n\t\treturn p\
    \ + 31\n\t}\n\tif n == p+33 {\n\t\treturn p + ", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n, p - 1)\n    }\n\
    \    if p > p {\n        return modp(n, p - p)\n    }\n    return n % p", "\t\
    if n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 2 {\n\t\tpanic(\"\
    modp: p < 2\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tvar ret Int\n\tswitch\
    \ {\n\tcase n <= p:\n\t\tret = n - 1\n\tcase n >= p - 1:\n\t\tret = p\n\tdefault:\n\
    \t\tret = modp(n - p, p)\n\t}\n\treturn ret", "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\t\
    if n == p {\n\t\treturn 1\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is greater\
    \ than p\")\n\t}\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if p < n {\n        return modp(n - p, p)\n  \
    \  }\n    return n", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\
    \tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\
    \t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tn -= p - 1\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tn--\n\tx := 1\n\t\
    for i := 1; i <= n; i++ {\n\t\tx *= p\n\t\tx += p\n\t}\n\treturn x", "\tif n <\
    \ 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p == 0 {\n\t\treturn 0\n\t}\n\tif p ==\
    \ 1 {\n\t\treturn n\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p+1 {\n\t\treturn p\n\
    \t}\n\tq := n / p\n\tr := n % p\n\treturn modp(q, p) * p + r", "\tswitch {\n\t\
    case n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p == 0:\n\t\treturn 0\n\tcase\
    \ p < 0:\n\t\treturn modp(n - p, p)\n\tdefault:\n\t\treturn ((n / p) + 1) * p\n\
    \t}", "\tlet r = n % p\n\tif r == 0 {\n\t\treturn n\n\t}\n\treturn r", "\tlet\
    \ n = Int(n)\n\tlet p = Int(p)\n\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\t\
    if p < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\
    \tif p == 0 {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn modp(n - 1, p)\n\t\
    }\n\tif n == p + 1 {\n\t\treturn modp(n, p - 1)\n\t}\n\tif n == p - 1 {\n\t\t\
    return modp(n, p)\n\t}\n\tif n == p - 2 {\n\t\treturn modp(n + 1, p)\n\t}\n\t\
    if n == p - 3 {\n\t\treturn modp(n + 1, p - 1)\n\t}\n\tif n == p - 4 {\n\t\treturn\
    \ modp(n + 1, p - 2)\n\t}\n\tif n == p - 5 {\n\t\treturn modp(n + 1, p - 3)\n\t\
    }\n\tif n == p - 6 {\n\t\treturn modp(n + 1, p - 4)\n\t}\n\tif n == p - 7 {\n\t\
    \treturn modp(n + 1, p - 5)\n\t}\n\tif n == p - 8 {\n\t\treturn modp(n + 1, p\
    \ - 6)\n\t}\n\tif n == p - 9 {\n\t\treturn modp(n + 1, p - 7)\n\t}\n\tif n ==\
    \ p - 10 {\n\t\treturn modp(n + 1, p - 8)\n\t}\n\tif n == p - 11 {\n\t\treturn\
    \ modp(n + 1, p - 9)\n\t}\n\tif n == p - 12 {\n\t\treturn modp(n + 1, p - 10)\n\
    \t}\n\tif n == p - 13 {\n\t\treturn modp(n + 1, p - 11)\n\t}\n\tif n == p - 14\
    \ {\n\t\treturn modp(n + 1, p - 12)\n\t}\n\tif n == p - 15 {\n\t\treturn modp(n\
    \ + 1, p - 13)\n\t}\n\tif n == p - 16 {\n\t\treturn modp(n + 1, p - 14)\n\t}\n\
    \tif n == p - 17 {\n\t\treturn modp(n + 1, p - 15)\n\t}\n\tif n == p - 18 {\n\t\
    \treturn modp(n + 1, p - 16)\n\t}\n\tif n == p - 19 {\n\t\treturn modp(n + 1,\
    \ p - 17)\n\t}\n\tif n == p - 20 {\n\t\treturn modp(n + 1, p - 18)\n\t}\n\tif\
    \ n == p - 21 {\n\t\treturn modp(n + 1, p - 19)\n\t}\n\tif n == p - 22 {\n\t\t\
    return modp(n + 1, p - 20)\n\t}\n\tif n == p - 23 {\n\t\treturn modp(n + 1, p\
    \ - 21)\n\t}\n\tif n == p - 24 {\n\t\treturn modp(n + 1, p - 22)\n\t}\n\tif n\
    \ == p - 25 {\n\t\treturn modp(n + 1, p - 23)\n\t}\n\tif ", "\tif n < 0 {\n\t\t\
    panic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative\
    \ modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tq := n / p\n\tr := n % p\n\tif r\
    \ == 0 {\n\t\treturn q\n\t}\n\treturn q + modp(q, p)", "    if n < 0 {\n     \
    \   return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n\
    \        return modp(n - p, p)\n    }\n    return p % n", "\tswitch {\n\tcase\
    \ n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n == 0 || n == p:\n\
    \t\treturn n\n\tdefault:\n\t\treturn (p * modp(n - p, p)) % p\n\t}", "    if n\
    \ < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return\
    \ modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p ==\
    \ 0 {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < p {\n        return modp(n - p, p)\n    }\n    if p > p {\n        return\
    \ modp(n, p - p)\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n", "\tif n < 0 {\n\t\tpanic(\"modp(n, p): n must\
    \ be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n, p): p must be positive\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p < 2 {\n\t\treturn modp(n - 1, p)\n\t}\n\tq := modp(n - 1, p) // q is q *\
    \ p % n\n\tr := p // r is p\n\tfor {\n\t\tif r == 1 {\n\t\t\treturn q\n\t\t}\n\
    \t\tif r < p {\n\t\t\tr = r * q % n\n\t\t} else {\n\t\t\tr = r * q + n % n\n\t\
    \t}\n\t\tq = q * q % n\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 0 {\n        return modp(-n, p)\n    }\n    if n == 0 || p\
    \ == 0 {\n        return 0\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n == p {\n        return p\n    }\n    if n == 0 {\n        return p\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n",
  "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif p < 2 {\n\t\treturn n - modp(n - 1, p) % p\n\t}\n\treturn modp(n\
    \ - 1, p) % p", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif\
    \ p < 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus\
    \ is too large\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is too large\"\
    )\n\t}\n\tn -= p - 1\n\tx := p\n\tfor n > 0 {\n\t\tx = x * p + n\n\t\tn--\n\t\
    }\n\treturn x", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(n - abs(p), p)\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p % 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return modp(n\
    \ / 2, p) + modp((n - 1) / 2, p)", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tr := n % p\n\tif r\
    \ == 0 {\n\t\treturn n\n\t}\n\treturn p - r", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(-n, p)\n    }\n\
    \    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n\
    \    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == 2 {\n        return p + 1\n    }\n    if n == 3 {\n  \
    \      return p + 2\n    }\n    if n == 4 {\n        return p + 3\n    }\n   \
    \ if n == 5 {\n        return p + 4\n    }\n    if n == 6 {\n        return p\
    \ + 5\n    }\n    if n == 7 {\n        return p + 6\n    }\n    if n == 8 {\n\
    \        return p + 7\n    }\n    if n == 9 {\n        return p + 8\n    }\n \
    \   if n == 10 {\n        return p + 9\n    }\n    if n == 11 {\n        return\
    \ p + 10\n    }\n    if n == 12 {\n        return p + 11\n    }\n    if n == 13\
    \ {\n        return p + 12\n    }\n    if n == 14 {\n        return p + 13\n \
    \   }\n    if n == 15 {\n        return p + 14\n    }\n    if n == 16 {\n    \
    \    return p + 15\n    }\n    if n == 17 {\n        return p + 16\n    }\n  \
    \  if n == 18 {\n        return p + 17\n    }\n    if n == 19 {\n        return\
    \ p + 18\n    }\n    if n == 20 {\n        return p + 19\n    }\n    if n == 21\
    \ {\n        return p + 20\n    }\n    if n == 22 {\n        return p + 21\n \
    \   }\n    if n == 23 {\n        return p + 22\n    }\n    if n == 24 {\n    \
    \    return p + 23\n    }\n    if n == 25 {\n        return p + 24\n    }\n  \
    \  if n == 26 {\n        return p + 25\n    }\n    if n == 27 {\n        return\
    \ p + 26\n    }\n    if n == 28 {\n        return p + 27\n    }\n    if n == 29\
    \ {\n        return p + 28\n    }\n    if n == 30 {\n        return p + 29\n \
    \   }\n    if n == 31 {\n        return p + 30\n    }\n    if n == 32 {\n    \
    \    return p + 31\n    }\n    if n == 33 {\n        return p + 32\n    }\n  \
    \  if n == 34 {\n        return p + 33\n    }\n    if n == 35 {\n        return\
    \ p + 34\n    }\n    if n == 36 {\n        return p + 35\n    }\n    if n == 37\
    \ {\n        return p + 36\n    }\n    if n == 38 {\n        return p + 37\n \
    \   }\n    if n == 39 {\n        return p", "    if n < 0 {\n        n += p\n\
    \    }\n    if n < p {\n        return n\n    }\n    if n == p {\n        return\
    \ 0\n    }\n    return p - 1", "    if n < 0 {\n        n += p\n    }\n    if\
    \ n < p {\n        return n\n    }\n    return n - p", "    if n < 0 {\n     \
    \   return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n - abs(p),\
    \ p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n     \
    \   return n\n    }\n    if p > n {\n        return modp(n - abs(p), p)\n    }\n\
    \    if p < n {\n        return modp(n - abs(p), p)\n    }\n    return modp(n\
    \ - abs(p), p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(abs(n), -p) * p\n    }\n    if n == 0 {\n     \
    \   return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p == 1 {\n\
    \        return n\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return modp(n - 1, p)\n    }\n    if n == p - 1 {\n        return\
    \ modp(n, p)\n    }\n    if n == p - 2 {\n        return modp(n - 1, p)\n    }\n\
    \    if n == p - 3 {\n        return modp(n - 2, p)\n    }\n    if n == p - 4\
    \ {\n        return modp(n - 3, p)\n    }\n    if n == p - 5 {\n        return\
    \ modp(n - 4, p)\n    }\n    if n == p - 6 {\n        return modp(n - 5, p)\n\
    \    }\n    if n == p - 7 {\n        return modp(n - 6, p)\n    }\n    if n ==\
    \ p - 8 {\n        return modp(n - 7, p)\n    }\n    if n == p - 9 {\n       \
    \ return modp(n - 8, p)\n    }\n    if n == p - 10 {\n        return modp(n -\
    \ 9, p)\n    }\n    if n == p - 11 {\n        return modp(n - 10, p)\n    }\n\
    \    if n == p - 12 {\n        return modp(n - 11, p)\n    }\n    if n == p -\
    \ 13 {\n        return modp(n - 12, p)\n    }\n    if n == p - 14 {\n        return\
    \ modp(n - 13, p)\n    }\n    if n == p - 15 {\n        return modp(n - 14, p)\n\
    \    }\n    if n == p - 16 {\n        return modp(n - 15, p)\n    }\n    if n\
    \ == p - 17 {\n        return modp(n - 16, p)\n    }\n    if n == p - 18 {\n \
    \       return modp(n - 17, p)\n    }\n    if n == p - 19 {\n        return modp(n\
    \ - 18, p)\n    }\n    if n == p - 20 {\n        return modp(n - 19, p)\n    }\n\
    \    if n == p - 21 {\n        return modp(n - 20, p)\n    }\n    if n == p -\
    \ 22 {\n        return modp(n - 21, p)\n    }\n    if n == p - 23 {\n        return\
    \ modp(n - 22, p)\n    }\n    if n == p - 24 {\n        return modp(n - 23, p)\n\
    \    }\n    if n == p - 25 {\n        return modp(n - 24, p)\n    }\n    if n\
    \ == p - 26 {\n        return modp(n - 25, p)\n    }\n    if n == p - 27 {\n \
    \       return modp(n - 26, p)\n    }\n    if n == p - 28 {\n        return modp(n\
    \ - 27, p)\n    }\n    if n == p - 29 {\n        return modp(n - 28, p)\n    }\n\
    \    if ", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if p < n {\n        return modp(n, p)\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == 2 {\n        return p +\
    \ 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n    if n == 4 {\n  \
    \      return p + 3\n    }\n    if n == 5 {\n        return p + 4\n    }\n   \
    \ if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n        return p\
    \ + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n    if n == 9 {\n\
    \        return p + 8\n    }\n    if n == 10 {\n        return p + 9\n    }\n\
    \    if n == 11 {\n        return p + 10\n    }\n    if n == 12 {\n        return\
    \ p + 11\n    }\n    if n == 13 {\n        return p + 12\n    }\n    if n == 14\
    \ {\n        return p + 13\n    }\n    if n == 15 {\n        return p + 14\n \
    \   }\n    if n == 16 {\n        return p + 15\n    }\n    if n == 17 {\n    \
    \    return p + 16\n    }\n    if n == 18 {\n        return p + 17\n    }\n  \
    \  if n == 19 {\n        return p + 18\n    }\n    if n == 20 {\n        return\
    \ p + 19\n    }\n    if n == 21 {\n        return p + 20\n    }\n    if n == 22\
    \ {\n        return p + 21\n    }\n    if n == 23 {\n        return p + 22\n \
    \   }\n    if n == 24 {\n        return p + 23\n    }\n    if n == 25 {\n    \
    \    return p + 24\n    }\n    if n == 26 {\n        return p + 25\n    }\n  \
    \  if n == 27 {\n        return p + 26\n    }\n    if n == 28 {\n        return\
    \ p + 27\n    }\n    if n == 29 {\n        return p + 28\n    }\n    if n == 30\
    \ {\n        return p + 29\n    }\n    if n == 31 {\n        return p + 30\n \
    \   }\n    if n == 32 {\n        return p + 31\n    }\n    if n == 33 {\n    \
    \    return p + 32\n    }\n    if n == 34 {\n        return p + 33\n    }\n  \
    \  if n == 35 {\n        return p + 34\n    }\n    if n == 36 {\n        return\
    \ p + 35\n    }\n    if n == 37 {\n        return p + 36\n    }\n    if ", "\t\
    let n = Int(n)\n\tlet p = Int(p)\n\tif n < 0 {\n\t\tpanic(\"modp requires positive\
    \ arguments\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive arguments\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\t\
    if p > n {\n\t\tpanic(\"modp requires p <= n\")\n\t}\n\tlet mut n2 = n * n\n\t\
    n2 %= p\n\tif n2 > p {\n\t\tn2 -= p\n\t}\n\treturn n2", "    if n < 0 {\n    \
    \    return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return n\n    }\n    if n == 2 {\n        return n\n    }\n    if n ==\
    \ 3 {\n        return n\n    }\n    if n == 4 {\n        return n\n    }\n   \
    \ if n == 5 {\n        return n\n    }\n    if n == 6 {\n        return n\n  \
    \  }\n    if n == 7 {\n        return n\n    }\n    if n == 8 {\n        return\
    \ n\n    }\n    if n == 9 {\n        return n\n    }\n    if n == 10 {\n     \
    \   return n\n    }\n    if n == 11 {\n        return n\n    }\n    if n == 12\
    \ {\n        return n\n    }\n    if n == 13 {\n        return n\n    }\n    if\
    \ n == 14 {\n        return n\n    }\n    if n == 15 {\n        return n\n   \
    \ }\n    if n == 16 {\n        return n\n    }\n    if n == 17 {\n        return\
    \ n\n    }\n    if n == 18 {\n        return n\n    }\n    if n == 19 {\n    \
    \    return n\n    }\n    if n == 20 {\n        return n\n    }\n    if n == 21\
    \ {\n        return n\n    }\n    if n == 22 {\n        return n\n    }\n    if\
    \ n == 23 {\n        return n\n    }\n    if n == 24 {\n        return n\n   \
    \ }\n    if n == 25 {\n        return n\n    }\n    if n == 26 {\n        return\
    \ n\n    }\n    if n == 27 {\n        return n\n    }\n    if n == 28 {\n    \
    \    return n\n    }\n    if n == 29 {\n        return n\n    }\n    if n == 30\
    \ {\n        return n\n    }\n    if n == 31 {\n        return n\n    }\n    if\
    \ n == 32 {\n        return n\n    }\n    if n == 33 {\n        return n\n   \
    \ }\n    if n == 34 {\n        return n\n    }\n    if n == 35 {\n        return\
    \ n\n    }\n    if n == 36 {\n        return n\n    }\n    if n == 37 {\n    \
    \    return n\n    }\n    if n == 38 {\n        return n\n    }\n    if n == 39\
    \ {\n        return n\n    }\n    if n == 40 {\n        return n\n    }\n    if\
    \ n == 41 {\n        return n\n    }\n    if n == 42 {\n        return n\n   \
    \ }\n    if n == 43 {\n        return n\n    }\n    if n == 44 {\n        return\
    \ n\n    }\n    if n == 45 {", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tq := p / n\n\tr := p % n\n\treturn modp(q, p) * n + r", "\tswitch {\n\tcase\
    \ n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n, p)\n\t\
    case p == 0:\n\t\treturn 0\n\tcase p > n:\n\t\treturn modp(n, p)\n\t}\n\t\n\t\
    switch {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\t}\n\t\
    \n\tswitch {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\t\
    case n >= -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\t}\n\t\n\tswitch\
    \ {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\tcase n >=\
    \ -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn\
    \ n\n\t}\n\t\n\tswitch {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\t\
    return -p\n\tcase n >= -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase\
    \ n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\t}\n\t\n\tswitch {\n\
    \tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\tcase n >= -p:\n\
    \t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn n\n\t\
    case n <= -p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn n\n\t}\n\t\n\tswitch\
    \ {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\tcase n >=\
    \ -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= -p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn n\n\t}\n\t\n\t\
    switch {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\tcase\
    \ n >= -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase n >= p:\n\t\t\
    return n\n\tcase n <= -p:\n\t\treturn -p\n\tcase n >= p:\n\t\treturn n\n\t}\n\t\
    \n\tswitch {\n\tcase n >= p:\n\t\treturn n\n\tcase n <= -p:\n\t\treturn -p\n\t\
    case n >= -p:\n\t\treturn n\n\tcase n <= p:\n\t\treturn -p\n\tcase ", "\treturn\
    \ (n & (p - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif p > n {\n\t\tpanic(\"\
    modp: modulus is too large\")\n\t}\n\tr := 1\n\tfor i := n - 1; i >= 0; i-- {\n\
    \t\tr *= p\n\t\tr += n\n\t}\n\treturn r", "    if n < 0 {\n        return modp(Int(-n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(Int(n), p)\n    }\n    if p >\
    \ p {\n        return modp(Int(n), p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if ", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp(): negative modulus\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp(): modulus is\
    \ too big\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tq := n / p\n\tr := n % p\n\tif r\
    \ == 0 {\n\t\treturn q\n\t}\n\tif r == p {\n\t\treturn q + 1\n\t}\n\treturn q\
    \ + modp(q, p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 1 {\n        return modp(n, p - 1)\n    }\n    if p > p {\n        return\
    \ modp(n, p - p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {", "\tif\
    \ n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp: negative modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1\
    \ {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is too big\")\n\
    \t}\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif n == 2 {\n\t\treturn 1\n\t}\n\tif\
    \ n == 3 {\n\t\treturn 2\n\t}\n\tif n == 4 {\n\t\treturn 3\n\t}\n\tif n == 5 {\n\
    \t\treturn 4\n\t}\n\tif n == 6 {\n\t\treturn 5\n\t}\n\tif n == 7 {\n\t\treturn\
    \ 6\n\t}\n\tif n == 8 {\n\t\treturn 7\n\t}\n\tif n == 9 {\n\t\treturn 8\n\t}\n\
    \tif n == 10 {\n\t\treturn 9\n\t}\n\tif n == 11 {\n\t\treturn 10\n\t}\n\tif n\
    \ == 12 {\n\t\treturn 11\n\t}\n\tif n == 13 {\n\t\treturn 12\n\t}\n\tif n == 14\
    \ {\n\t\treturn 13\n\t}\n\tif n == 15 {\n\t\treturn 14\n\t}\n\tif n == 16 {\n\t\
    \treturn 15\n\t}\n\tif n == 17 {\n\t\treturn 16\n\t}\n\tif n == 18 {\n\t\treturn\
    \ 17\n\t}\n\tif n == 19 {\n\t\treturn 18\n\t}\n\tif n == 20 {\n\t\treturn 19\n\
    \t}\n\tif n == 21 {\n\t\treturn 20\n\t}\n\tif n == 22 {\n\t\treturn 21\n\t}\n\t\
    if n == 23 {\n\t\treturn 22\n\t}\n\tif n == 24 {\n\t\treturn 23\n\t}\n\tif n ==\
    \ 25 {\n\t\treturn 24\n\t}\n\tif n == 26 {\n\t\treturn 25\n\t}\n\tif n == 27 {\n\
    \t\treturn 26\n\t}\n\tif n == 28 {\n\t\treturn 27\n\t}\n\tif n == 29 {\n\t\treturn\
    \ 28\n\t}\n\tif n == 30 {\n\t\treturn 29\n\t}\n\tif n == 31 {\n\t\treturn 30\n\
    \t}\n\tif n == 32 {\n\t\treturn 31\n\t}\n\tif n == 33 {\n\t\treturn 32\n\t}\n\t\
    if n == 34 {\n\t\treturn 33\n\t}\n\tif n == 35 {\n\t\treturn 34\n\t}\n\tif n ==\
    \ 36 {\n\t\treturn 35\n\t}\n\tif n == 37 {\n\t\treturn 36\n\t}\n\tif n == 38 {\n\
    \t\treturn 37\n\t}\n\tif n == 39 {\n\t\treturn 38\n\t}\n\tif n == 40 {\n\t\treturn\
    \ 39\n\t}\n\tif n == 41 {\n\t\treturn 40\n\t}\n\tif n == 42 {\n\t\treturn 41\n\
    \t}\n\tif n == 43 {\n\t\treturn 42\n\t}\n\tif n == 44 {\n\t\treturn 43\n\t}\n\t\
    if n == 45", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\t\
    if n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tif p > n {\n\t\tp, n = n, p\n\t}\n\
    \tif p > 1 {\n\t\tp = p - 1\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\
    \treturn p", "\tswitch {\n\tcase n < p:\n\t\treturn n\n\tcase n == p:\n\t\treturn\
    \ 1\n\tcase n == 0 || n == p:\n\t\treturn 0\n\tcase n >= p:\n\t\treturn n - p\n\
    \t}", "\treturn (n & (p - 1)) == 0 ? n : n - 1", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(abs(p), n)\n   \
    \ }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n    if p < n\
    \ {\n        return modp(n, p)\n    }\n    if n == p {\n        return n\n   \
    \ }\n    if n == p+1 {\n        return p\n    }\n    if n == p-1 {\n        return\
    \ p+1\n    }\n    if n == p+2 {\n        return p+2\n    }\n    if n == p+3 {\n\
    \        return p+3\n    }\n    if n == p+4 {\n        return p+4\n    }\n   \
    \ if n == p+5 {\n        return p+5\n    }\n    if n == p+6 {\n        return\
    \ p+6\n    }\n    if n == p+7 {\n        return p+7\n    }\n    if n == p+8 {\n\
    \        return p+8\n    }\n    if n == p+9 {\n        return p+9\n    }\n   \
    \ if n == p+10 {\n        return p+10\n    }\n    if n == p+11 {\n        return\
    \ p+11\n    }\n    if n == p+12 {\n        return p+12\n    }\n    if n == p+13\
    \ {\n        return p+13\n    }\n    if n == p+14 {\n        return p+14\n   \
    \ }\n    if n == p+15 {\n        return p+15\n    }\n    if n == p+16 {\n    \
    \    return p+16\n    }\n    if n == p+17 {\n        return p+17\n    }\n    if\
    \ n == p+18 {\n        return p+18\n    }\n    if n == p+19 {\n        return\
    \ p+19\n    }\n    if n == p+20 {\n        return p+20\n    }\n    if n == p+21\
    \ {\n        return p+21\n    }\n    if n == p+22 {\n        return p+22\n   \
    \ }\n    if n == p+23 {\n        return p+23\n    }\n    if n == p+24 {\n    \
    \    return p+24\n    }\n    if n == p+25 {\n        return p+25\n    }\n    if\
    \ n == p+26 {\n        return p+26\n    }\n    if n == p+27 {\n        return\
    \ p+27\n    }\n    if n == p+28 {\n        return p+28\n    }\n    if n == p+29\
    \ {\n        return p+29\n    }\n    if n == p+30 {\n        return p+30\n   \
    \ }\n    if n == ", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 0 {\n\
    \t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\
    \t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 1 {\n\
    \t\treturn p\n\t}\n\tif n == 2 {\n\t\treturn p + 1\n\t}\n\tif n == 3 {\n\t\treturn\
    \ p + 2\n\t}\n\tif n == 4 {\n\t\treturn p + 3\n\t}\n\tif n == 5 {\n\t\treturn\
    \ p + 4\n\t}\n\tif n == 6 {\n\t\treturn p + 5\n\t}\n\tif n == 7 {\n\t\treturn\
    \ p + 6\n\t}\n\tif n == 8 {\n\t\treturn p + 7\n\t}\n\tif n == 9 {\n\t\treturn\
    \ p + 8\n\t}\n\tif n == 10 {\n\t\treturn p + 9\n\t}\n\tif n == 11 {\n\t\treturn\
    \ p + 10\n\t}\n\tif n == 12 {\n\t\treturn p + 11\n\t}\n\tif n == 13 {\n\t\treturn\
    \ p + 12\n\t}\n\tif n == 14 {\n\t\treturn p + 13\n\t}\n\tif n == 15 {\n\t\treturn\
    \ p + 14\n\t}\n\tif n == 16 {\n\t\treturn p + 15\n\t}\n\tif n == 17 {\n\t\treturn\
    \ p + 16\n\t}\n\tif n == 18 {\n\t\treturn p + 17\n\t}\n\tif n == 19 {\n\t\treturn\
    \ p + 18\n\t}\n\tif n == 20 {\n\t\treturn p + 19\n\t}\n\tif n == 21 {\n\t\treturn\
    \ p + 20\n\t}\n\tif n == 22 {\n\t\treturn p + 21\n\t}\n\tif n == 23 {\n\t\treturn\
    \ p + 22\n\t}\n\tif n == 24 {\n\t\treturn p + 23\n\t}\n\tif n == 25 {\n\t\treturn\
    \ p + 24\n\t}\n\tif n == 26 {\n\t\treturn p + 25\n\t}\n\tif n == 27 {\n\t\treturn\
    \ p + 26\n\t}\n\tif n == 28 {\n\t\treturn p + 27\n\t}\n\tif n == 29 {\n\t\treturn\
    \ p + 28\n\t}\n\tif n == 30 {\n\t\treturn p + 29\n\t}\n\tif n == 31 {\n\t\treturn\
    \ p + 30\n\t}\n\tif n == 32 {\n\t\treturn p + 31\n\t}\n\tif n == 33 {\n\t\treturn\
    \ p + 32\n\t}\n\tif n == 34 {\n\t\treturn p + 33\n\t}\n\tif n == 35 {\n\t\treturn\
    \ p + 34\n\t}\n\tif n == 36 {\n\t\treturn p + 35\n\t}\n\tif n == 37 {\n\t\treturn\
    \ p + 36\n\t}\n\tif n == 38", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tq := p\n\tfor {\n\t\tq /= 2\n\t\tif q == p {\n\t\t\treturn n\n\t\t}\n\t\tif\
    \ q > n {\n\t\t\tbreak\n\t\t}\n\t}\n\treturn q", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n   \
    \ }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n\
    \        return modp(n - p, p)\n    }\n    return n", "\tif n < 0 {\n\t\tpanic(\"\
    modp(n, p): n must be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n, p):\
    \ p must be positive\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"\
    modp(n, p): p must be smaller than p\")\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n > p {\n\t\tn -= p\n\t}\n\t\
    return n", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 0 {\n        return modp(p % n, p)\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if p == 1 {\n        return n\n    }\n    if p > p {\n        return\
    \ modp(p / n, p)\n    }\n    if p < p {\n        return modp((n - p) / n, p)\n\
    \    }\n    return modp((n - p) / n, p)", "\tif n < 0 {\n\t\tpanic(\"modp negative\
    \ number\")\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 1\n\
    \t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn 1\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\tif x\
    \ == 0 {\n\t\t\treturn z\n\t\t}\n\t\tif y == 0 {\n\t\t\treturn z\n\t\t}\n\t\t\
    t = x % y\n\t\tx = y\n\t\ty = t\n\t\tz = z * y\n\t}", "\tif n < 0 {\n\t\tpanic(\"\
    modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn\
    \ 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tr := 1\n\tfor i := 1; i <= p; i++\
    \ {\n\t\tr *= n\n\t\tif r < p {\n\t\t\tbreak\n\t\t}\n\t}\n\treturn r", "\tif n\
    \ < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp(n,p)\"\
    )\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif p < 2 {\n\t\treturn p\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\t\
    q := p / 2\n\tr := p % 2\n\tif r == 0 {\n\t\treturn modp(q, p)\n\t}\n\tif r ==\
    \ 1 {\n\t\treturn modp(q + 1, p)\n\t}\n\treturn modp(q, p) + modp(q + 1, p)",
  "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp: negative modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1\
    \ {\n\t\treturn n\n\t}\n\tif p > 1 {\n\t\tif n >= p {\n\t\t\treturn modp(n - p,\
    \ p)\n\t\t}\n\t\treturn modp(p, n)\n\t}\n\tif n == 1 {\n\t\treturn 1\n\t}\n\t\
    if n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p\
    \ - 1 {\n\t\treturn modp(n - 1, p)\n\t}\n\tif n == p - 1 {\n\t\treturn 1\n\t}\n\
    \tif n == p - 2 {\n\t\treturn modp(n - 2, p)\n\t}\n\tif n == p - 2 {\n\t\treturn\
    \ modp(n - 1, p)\n\t}\n\tif n == p - 3 {\n\t\treturn modp(n - 3, p)\n\t}\n\tif\
    \ n == p - 3 {\n\t\treturn modp(n - 2, p)\n\t}\n\tif n == p - 4 {\n\t\treturn\
    \ modp(n - 4, p)\n\t}\n\tif n == p - 4 {\n\t\treturn modp(n - 3, p)\n\t}\n\tif\
    \ n == p - 5 {\n\t\treturn modp(n - 5, p)\n\t}\n\tif n == p - 5 {\n\t\treturn\
    \ modp(n - 4, p)\n\t}\n\tif n == p - 6 {\n\t\treturn modp(n - 6, p)\n\t}\n\tif\
    \ n == p - 6 {\n\t\treturn modp(n - 5, p)\n\t}\n\tif n == p - 7 {\n\t\treturn\
    \ modp(n - 7, p)\n\t}\n\tif n == p - 7 {\n\t\treturn modp(n - 6, p)\n\t}\n\tif\
    \ n == p - 8 {\n\t\treturn modp(n - 8, p)\n\t}\n\tif n == p - 8 {\n\t\treturn\
    \ modp(n - 7, p)\n\t}\n\tif n == p - 9 {\n\t\treturn modp(n - 9, p)\n\t}\n\tif\
    \ n == p - 9 {\n\t\treturn modp(n - 8, p)\n\t}\n\tif n == p - 10 {\n\t\treturn\
    \ modp(n - 10, p)\n\t}\n\tif n == p - 10 {\n\t\treturn modp(n - 9, p)\n\t}\n\t\
    if n == p - 11 {\n\t\treturn modp(n - 11, p)\n\t}\n\tif n == p - 11 {\n\t\treturn\
    \ modp(n - 10, p)\n\t}\n\tif n == p - 12 {\n\t\treturn modp(n - 12, p)\n\t}\n\t\
    if n == p - 12 {\n\t\treturn modp(n - 11, p)\n\t}\n\tif n == p - 13 {\n\t\treturn\
    \ modp(n - 13, p)\n\t}\n\tif n == p - 13 {\n\t\treturn modp(n - 12, p)\n\t}\n\t\
    if n == p - 14 {\n\t\treturn modp(n - 14, p)\n\t}\n\tif n == p - 14 {\n\t\treturn\
    \ modp(n - 13, ", "\tswitch {\n\tcase n < 0 || p < 0 || p > n:\n\t\treturn 0\n\
    \tcase p == n:\n\t\treturn n\n\tcase p == 0:\n\t\treturn 1\n\tcase p == n:\n\t\
    \treturn 0\n\tcase p < n:\n\t\tlet q = p / n\n\t\tlet r = p % n\n\t\treturn modp(q,\
    \ p) + modp(r, p)\n\tdefault:\n\t\tlet q = p / n\n\t\tlet r = p % n\n\t\treturn\
    \ modp(q, p) + modp(r, p)\n\t}", '    return ((n & (p - 1)) == 0) ? n : ((n &
    (p - 1)) + p) % p', "    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return 1\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n\
    \    if p < 0 {\n        return modp(-p, p)\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p+1 {\n    \
    \    return p\n    }\n    if n == p+2 {\n        return p+1\n    }\n    if n ==\
    \ p+3 {\n        return p+2\n    }\n    if n == p+4 {\n        return p+3\n  \
    \  }\n    if n == p+5 {\n        return p+4\n    }\n    if n == p+6 {\n      \
    \  return p+5\n    }\n    if n == p+7 {\n        return p+6\n    }\n    if n ==\
    \ p+8 {\n        return p+7\n    }\n    if n == p+9 {\n        return p+8\n  \
    \  }\n    if n == p+10 {\n        return p+9\n    }\n    if n == p+11 {\n    \
    \    return p+10\n    }\n    if n == p+12 {\n        return p+11\n    }\n    if\
    \ n == p+13 {\n        return p+12\n    }\n    if n == p+14 {\n        return\
    \ p+13\n    }\n    if n == p+15 {\n        return p+14\n    }\n    if n == p+16\
    \ {\n        return p+15\n    }\n    if n == p+17 {\n        return p+16\n   \
    \ }\n    if n == p+18 {\n        return p+17\n    }\n    if n == p+19 {\n    \
    \    return p+18\n    }\n    if n == p+20 {\n        return p+19\n    }\n    if\
    \ n == p+21 {\n        return p+20\n    }\n    if n == p+22 {\n        return\
    \ p+21\n    }\n    if n == p+23 {\n        return p+22\n    }\n    if n == p+24\
    \ {\n        return p+23\n    }\n    if n == p+25 {\n        return p+24\n   \
    \ }\n    if n == p+26 {\n        return p+25\n    }\n    if n == p+27 {\n    \
    \    return p+26\n    }\n    if n == p+28 {\n        return p+27\n    }\n    if\
    \ n == p+29 {\n        return p+28\n    }\n    if n == p+30 {\n        return\
    \ p+29\n    }\n    if n == p+31 {\n        return p+30\n    }\n    if n == p+32\
    \ {\n        return p+31\n    }\n    if n == p+33 {\n", '    return ((n%p) + p)
    % p', "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn\
    \ n\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p == 0:\n\
    \t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase p < 0:\n\t\tpanic(\"modp(n,p)\"\
    )\n\t}\n\tswitch {\n\tcase p < 0:\n\t\tpanic(\"modp(n,p)\")\n\tcase n < 0:\n\t\
    \tpanic(\"modp(n,p)\")\n\tcase n <= p:\n\t\treturn modp(n - p, p)\n\tdefault:\n\
    \t\tpanic(\"modp(n,p)\")\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p >\
    \ n {\n        return modp(n, p)\n    }\n    if p < n {\n        return modp(n,\
    \ p)\n    }\n    var res = 1\n    for i := n - 1; i >= 0; i-- {\n        res *=\
    \ p\n        res %= p\n    }\n    return res", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n   \
    \ }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n\
    \        return modp(n, p)\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n\
    \    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n   \
    \     return modp(n, p)\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n  \
    \  }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n     \
    \   return modp(n, p)\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n\
    \    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n        return\
    \ modp(n, p)\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p >\
    \ n {\n        return modp(n, p)\n    }\n    if p < n {\n        return modp(n,\
    \ p)\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n     \
    \   return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n\
    \        return modp(n, p)\n    }\n    if p < n {\n        return modp(n, p)\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if p < n {\n        return modp(n, p)\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n        return\
    \ modp(n, p)\n    }\n    if p < n {\n        return modp(n, p)\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n == 0 {\n        return 0\n    }\n\
    \    if p == 0 {\n        return n\n    }\n    if p > n {\n        return modp(n,\
    \ p)\n    }\n    if p < n {\n        return modp(n, p)\n", "    if n < 0 {\n \
    \       return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(-n,\
    \ p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n     \
    \   return n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    if\
    \ p < n {\n        return modp(n, p)\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p == 0 {\n\t\t\
    return 0\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif n\
    \ == p {\n\t\treturn 1\n\t}\n\tx := n\n\ty := p\n\tt := 1\n\tfor {\n\t\tif y %\
    \ 2 == 0 {\n\t\t\tx /= 2\n\t\t\ty /= 2\n\t\t\tt *= x\n\t\t} else {\n\t\t\ty /=\
    \ 2\n\t\t}\n\t\tif x == 1 {\n\t\t\treturn t\n\t\t}\n\t}", "    if n < 0 {\n  \
    \      return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p - 1)\n\
    \    }\n    if p > p {\n        return modp(n, p - p)\n    }\n    return n % p",
  "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp: negative modulus\")\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\t\
    switch {\n\tcase p < 0:\n\t\tpanic(\"modp: negative modulus\")\n\tcase p > n:\n\
    \t\tpanic(\"modp: modulus greater than number\")\n\tdefault:\n\t\tn %= p\n\t\t\
    if n == 0 {\n\t\t\treturn 1\n\t\t}\n\t\treturn p\n\t}", "    if n < 0 {\n    \
    \    return modp(-n, p)\n    }\n    if p < 2 {\n        return n\n    }\n    if\
    \ p > p {\n        return modp(n, p - 2)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p -\
    \ 1 {\n        return n - 1\n    }\n    if n == p - 2 {\n        return n - 2\n\
    \    }\n    if n == p - 3 {\n        return n - 3\n    }\n    if n == p - 4 {\n\
    \        return n - 4\n    }\n    if n == p - 5 {\n        return n - 5\n    }\n\
    \    if n == p - 6 {\n        return n - 6\n    }\n    if n == p - 7 {\n     \
    \   return n - 7\n    }\n    if n == p - 8 {\n        return n - 8\n    }\n  \
    \  if n == p - 9 {\n        return n - 9\n    }\n    if n == p - 10 {\n      \
    \  return n - 10\n    }\n    if n == p - 11 {\n        return n - 11\n    }\n\
    \    if n == p - 12 {\n        return n - 12\n    }\n    if n == p - 13 {\n  \
    \      return n - 13\n    }\n    if n == p - 14 {\n        return n - 14\n   \
    \ }\n    if n == p - 15 {\n        return n - 15\n    }\n    if n == p - 16 {\n\
    \        return n - 16\n    }\n    if n == p - 17 {\n        return n - 17\n \
    \   }\n    if n == p - 18 {\n        return n - 18\n    }\n    if n == p - 19\
    \ {\n        return n - 19\n    }\n    if n == p - 20 {\n        return n - 20\n\
    \    }\n    if n == p - 21 {\n        return n - 21\n    }\n    if n == p - 22\
    \ {\n        return n - 22\n    }\n    if n == p - 23 {\n        return n - 23\n\
    \    }\n    if n == p - 24 {\n        return n - 24\n    }\n    if n == p - 25\
    \ {\n        return n - 25\n    }\n    if n == p - 26 {\n        return n - 26\n\
    \    }\n    if n == p - 27 {\n        return n - 27\n    }\n    if n == p - 28\
    \ {\n        return n - 28\n    }\n    if n == p - 29 {\n        return n - 29\n\
    \    }\n    if n == p - 30 {\n        return n - 30\n    }\n    if n == p - 31\
    \ {\n        return n - 31\n    }\n    if n == p - 32 {\n        return n - 32\n\
    \    }\n    if n == p - 33 {\n        return n - 33\n    }\n    if n == p - 34\
    \ {\n        return n - 34\n    }\n    if n == p - 35 {\n        return n - 35\n\
    \    }\n    if n == p - 36 {\n        return n - 36\n    }\n    if n == p - 37\
    \ {\n        return n - 37\n    }\n", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n", "\tswitch {\n\tcase n < 0 || p < 0 || p > n:\n\t\tpanic(\"\
    modp: invalid arguments\")\n\tcase p == 0:\n\t\treturn 1\n\tcase p == n:\n\t\t\
    return 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p\
    \ == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\
    \t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase\
    \ p == n:\n\t\treturn 0\n\tcase p == n:\n\t\treturn 0\n\tcase ", "    if n < 0\
    \ {\n        return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n,\
    \ p - 1)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return ", "\treturn (n & (p - 1))\
    \ == 0 ? n : n - 1", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n\
    \    if p < 0 {\n        return modp(-n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if p < n {\n        return modp(-n, p)\n    }\n\
    \    var result = 1\n    var i = 1\n    while i <= n {\n        result = result\
    \ * p % i\n        i = i + 1\n    }\n    return result", "\tif n < 0 {\n\t\tpanic(\"\
    modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 0\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p+1 {\n\t\treturn p\n\t\
    }\n\tif n == p-1 {\n\t\treturn p+1\n\t}\n\tif n == p+2 {\n\t\treturn p+2\n\t}\n\
    \tif n == p+3 {\n\t\treturn p+3\n\t}\n\tif n == p+4 {\n\t\treturn p+4\n\t}\n\t\
    if n == p+5 {\n\t\treturn p+5\n\t}\n\tif n == p+6 {\n\t\treturn p+6\n\t}\n\tif\
    \ n == p+7 {\n\t\treturn p+7\n\t}\n\tif n == p+8 {\n\t\treturn p+8\n\t}\n\tif\
    \ n == p+9 {\n\t\treturn p+9\n\t}\n\tif n == p+10 {\n\t\treturn p+10\n\t}\n\t\
    if n == p+11 {\n\t\treturn p+11\n\t}\n\tif n == p+12 {\n\t\treturn p+12\n\t}\n\
    \tif n == p+13 {\n\t\treturn p+13\n\t}\n\tif n == p+14 {\n\t\treturn p+14\n\t\
    }\n\tif n == p+15 {\n\t\treturn p+15\n\t}\n\tif n == p+16 {\n\t\treturn p+16\n\
    \t}\n\tif n == p+17 {\n\t\treturn p+17\n\t}\n\tif n == p+18 {\n\t\treturn p+18\n\
    \t}\n\tif n == p+19 {\n\t\treturn p+19\n\t}\n\tif n == p+20 {\n\t\treturn p+20\n\
    \t}\n\tif n == p+21 {\n\t\treturn p+21\n\t}\n\tif n == p+22 {\n\t\treturn p+22\n\
    \t}\n\tif n == p+23 {\n\t\treturn p+23\n\t}\n\tif n == p+24 {\n\t\treturn p+24\n\
    \t}\n\tif n == p+25 {\n\t\treturn p+25\n\t}\n\tif n == p+26 {\n\t\treturn p+26\n\
    \t}\n\tif n == p+27 {\n\t\treturn p+27\n\t}\n\tif n == p+28 {\n\t\treturn p+28\n\
    \t}\n\tif n == p+29 {\n\t\treturn p+29\n\t}\n\tif n == p+30 {\n\t\treturn p+30\n\
    \t}\n\tif n == p+31 {\n\t\treturn p+31\n\t}\n\tif ", "\tif n < 0 {\n\t\tpanic(\"\
    modp: negative number\")\n\t}\n\tif p < 2 {\n\t\tpanic(\"modp: p < 2\")\n\t}\n\
    \tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p\
    \ {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\
    \tif x == 0 {\n\t\t\treturn z\n\t\t}\n\t\tif y > y {\n\t\t\ty >>= 1\n\t\t\tz <<=\
    \ 1\n\t\t} else {\n\t\t\ty >>= 1\n\t\t\tz >>= 1\n\t\t}\n\t\tx >>= 1\n\t}", "\t\
    if n < 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp: negative modulus\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is too\
    \ large\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tx :=\
    \ n\n\ty := p\n\tq := 1\n\tr := 1\n\tfor {\n\t\tif x == 0 {\n\t\t\treturn r\n\t\
    \t}\n\t\tif y == 0 {\n\t\t\treturn q\n\t\t}\n\t\tif y > x {\n\t\t\tx -= 1\n\t\t\
    \ty -= p\n\t\t} else {\n\t\t\ty -= 1\n\t\t\tx -= p\n\t\t}\n\t\tq *= y\n\t\tr *=\
    \ x\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 0 {\n        return modp(p % abs(n), p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n - p, p)\n    }\n    if p < n {\n        return modp((n - p) %\
    \ abs(n), p)\n    }\n    return n", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: positive number\")\n\t}\n\t\
    if n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\
    \t\treturn 0\n\t}\n\tq := p / n\n\tr := p % n\n\treturn modp(q, p) * n + r", " \
    \   if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n      \
    \  return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n \
    \   if p == 0 {\n        return n\n    }\n    if p == 1 {\n        return n\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ modp(n - 1, p)\n    }\n    if n == p - 1 {\n        return modp(n, p)\n    }\n\
    \    if n == p - 2 {\n        return modp(n - 1, p)\n    }\n    if n == p - 3\
    \ {\n        return modp(n - 2, p)\n    }\n    if n == p - 4 {\n        return\
    \ modp(n - 3, p)\n    }\n    if n == p - 5 {\n        return modp(n - 4, p)\n\
    \    }\n    if n == p - 6 {\n        return modp(n - 5, p)\n    }\n    if n ==\
    \ p - 7 {\n        return modp(n - 6, p)\n    }\n    if n == p - 8 {\n       \
    \ return modp(n - 7, p)\n    }\n    if n == p - 9 {\n        return modp(n - 8,\
    \ p)\n    }\n    if n == p - 10 {\n        return modp(n - 9, p)\n    }\n    if\
    \ n == p - 11 {\n        return modp(n - 10, p)\n    }\n    if n == p - 12 {\n\
    \        return modp(n - 11, p)\n    }\n    if n == p - 13 {\n        return modp(n\
    \ - 12, p)\n    }\n    if n == p - 14 {\n        return modp(n - 13, p)\n    }\n\
    \    if n == p - 15 {\n        return modp(n - 14, p)\n    }\n    if n == p -\
    \ 16 {\n        return modp(n - 15, p)\n    }\n    if n == p - 17 {\n        return\
    \ modp(n - 16, p)\n    }\n    if n == p - 18 {\n        return modp(n - 17, p)\n\
    \    }\n    if n == p - 19 {\n        return modp(n - 18, p)\n    }\n    if n\
    \ == p - 20 {\n        return modp(n - 19, p)\n    }\n    if n == p - 21 {\n \
    \       return modp(n - 20, p)\n    }\n    if n == p - 22 {\n        return modp(n\
    \ - 21, p)\n    }\n    if n == p - 23 {\n        return modp(n - 22, p)\n    }\n\
    \    if n == p - 24 {\n        return modp(n - 23, p)\n    }\n    if n == p -\
    \ 25 {\n        return modp(n - 24, p)\n    }\n    if n == p - 26 {\n        return\
    \ modp(n - 25, p)\n    }\n    if n == p - 27 {\n        return modp(n - 26, p)\n\
    \    }\n    if n == p - 28 {\n        return modp(n - 27, p)\n    }\n    if n\
    \ == p - 29 {\n        return modp(n - 28, p)\n    }\n    if n == p - 30 ", '    return
    ((n%p)+p)%p', "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p\
    \ < 1 {\n\t\tpanic(\"modp: positive number\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n,\
    \ p - 1)\n\t}\n\treturn modp((n - p) / 2, p)", "    if n < 0 {\n        return\
    \ modp(-n, p)\n    }\n    if p < 0 {\n        return modp(n, -p) % p\n    }\n\
    \    if p > n {\n        return modp(n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(-n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if n == 1 {\n        return p\n    }\n    if n == 2 {\n\
    \        return p + 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n \
    \   if n == 4 {\n        return p + 3\n    }\n    if n == 5 {\n        return\
    \ p + 4\n    }\n    if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n\
    \        return p + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n \
    \   if n == 9 {\n        return p + 8\n    }\n    if n == 10 {\n        return\
    \ p + 9\n    }\n    if n == 11 {\n        return p + 10\n    }\n    if n == 12\
    \ {\n        return p + 11\n    }\n    if n == 13 {\n        return p + 12\n \
    \   }\n    if n == 14 {\n        return p + 13\n    }\n    if n == 15 {\n    \
    \    return p + 14\n    }\n    if n == 16 {\n        return p + 15\n    }\n  \
    \  if n == 17 {\n        return p + 16\n    }\n    if n == 18 {\n        return\
    \ p + 17\n    }\n    if n == 19 {\n        return p + 18\n    }\n    if n == 20\
    \ {\n        return p + 19\n    }\n    if n == 21 {\n        return p + 20\n \
    \   }\n    if n == 22 {\n        return p + 21\n    }\n    if n == 23 {\n    \
    \    return p + 22\n    }\n    if n == 24 {\n        return p + 23\n    }\n  \
    \  if n == 25 {\n        return p + 24\n    }\n    if n == 26 {\n        return\
    \ p + 25\n    }\n    if n == 27 {\n        return p + 26\n    }\n    if n == 28\
    \ {\n        return p + 27\n    }\n    if n == 29 {\n        return p + 28\n \
    \   }\n    if n == 30 {\n        return p + 29\n    }\n    if n == 31 {\n    \
    \    return p + 30\n    }\n    if n == 32 {\n        return p + 31\n    }\n  \
    \  if n == 33 {\n        return p + 32\n    }\n    if n == 34 {\n        return\
    \ p + 33\n    }\n    if n == 35 {\n        return p + 34\n    }\n    if n == 36\
    \ {\n        return p + 35\n    }\n    if n == 37 {\n        return p + 36\n \
    \   }\n    if n == 38 {\n        return p + 37\n    }\n    if n == 39 {\n    \
    \    return p", '    return ((n & (p - 1)) == 0) ? n : n - 1', '    return ((n
    & (p - 1)) == 0) ? n : ((n & (p - 1)) + p)', "\tlet r = n % p\n\tif r == 0 {\n\
    \t\treturn p\n\t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"modp(n, p): n must\
    \ be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n, p): p must be positive\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p > p {\n\t\tpanic(\"modp(n, p): p must be smaller than p\")\n\t}\n\tn %= p\n\
    \tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\treturn modp(n\
    \ - 1, p) + p", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\
    \tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\
    \t\treturn n\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ 1\n\t}\n\tif n == p+1 {\n\t\treturn p\n\t}\n\tif n == p-1 {\n\t\treturn p+1\n\
    \t}\n\tif n == p+2 {\n\t\treturn p+2\n\t}\n\tif n == p+3 {\n\t\treturn p+3\n\t\
    }\n\tif n == p+4 {\n\t\treturn p+4\n\t}\n\tif n == p+5 {\n\t\treturn p+5\n\t}\n\
    \tif n == p+6 {\n\t\treturn p+6\n\t}\n\tif n == p+7 {\n\t\treturn p+7\n\t}\n\t\
    if n == p+8 {\n\t\treturn p+8\n\t}\n\tif n == p+9 {\n\t\treturn p+9\n\t}\n\tif\
    \ n == p+10 {\n\t\treturn p+10\n\t}\n\tif n == p+11 {\n\t\treturn p+11\n\t}\n\t\
    if n == p+12 {\n\t\treturn p+12\n\t}\n\tif n == p+13 {\n\t\treturn p+13\n\t}\n\
    \tif n == p+14 {\n\t\treturn p+14\n\t}\n\tif n == p+15 {\n\t\treturn p+15\n\t\
    }\n\tif n == p+16 {\n\t\treturn p+16\n\t}\n\tif n == p+17 {\n\t\treturn p+17\n\
    \t}\n\tif n == p+18 {\n\t\treturn p+18\n\t}\n\tif n == p+19 {\n\t\treturn p+19\n\
    \t}\n\tif n == p+20 {\n\t\treturn p+20\n\t}\n\tif n == p+21 {\n\t\treturn p+21\n\
    \t}\n\tif n == p+22 {\n\t\treturn p+22\n\t}\n\tif n == p+23 {\n\t\treturn p+23\n\
    \t}\n\tif n == p+24 {\n\t\treturn p+24\n\t}\n\tif n == p+25 {\n\t\treturn p+25\n\
    \t}\n\tif n == p+26 {\n\t\treturn p+26\n\t}\n\tif n == p+27 {\n\t\treturn p+27\n\
    \t}\n\tif n == p+28 {\n\t\treturn p+28\n\t}\n\tif n == p+29 {\n\t\treturn p+29\n\
    \t}\n\tif n == p+30 {\n\t\treturn p+30\n\t}\n\tif n == p+31 {\n\t\treturn p+31\n\
    \t}\n\tif ", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p\
    \ < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if n == 1 {\n        return p\n    }\n    if n == 2 {\n\
    \        return p + 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n \
    \   if n == 4 {\n        return p + 3\n    }\n    if n == 5 {\n        return\
    \ p + 4\n    }\n    if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n\
    \        return p + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n \
    \   if n == 9 {\n        return p + 8\n    }\n    if n == 10 {\n        return\
    \ p + 9\n    }\n    if n == 11 {\n        return p + 10\n    }\n    if n == 12\
    \ {\n        return p + 11\n    }\n    if n == 13 {\n        return p + 12\n \
    \   }\n    if n == 14 {\n        return p + 13\n    }\n    if n == 15 {\n    \
    \    return p + 14\n    }\n    if n == 16 {\n        return p + 15\n    }\n  \
    \  if n == 17 {\n        return p + 16\n    }\n    if n == 18 {\n        return\
    \ p + 17\n    }\n    if n == 19 {\n        return p + 18\n    }\n    if n == 20\
    \ {\n        return p + 19\n    }\n    if n == 21 {\n        return p + 20\n \
    \   }\n    if n == 22 {\n        return p + 21\n    }\n    if n == 23 {\n    \
    \    return p + 22\n    }\n    if n == 24 {\n        return p + 23\n    }\n  \
    \  if n == 25 {\n        return p + 24\n    }\n    if n == 26 {\n        return\
    \ p + 25\n    }\n    if n == 27 {\n        return p + 26\n    }\n    if n == 28\
    \ {\n        return p + 27\n    }\n    if n == 29 {\n        return p + 28\n \
    \   }\n    if n == 30 {\n        return p + 29\n    }\n    if n == 31 {\n    \
    \    return p + 30\n    }\n    if n == 32 {\n        return p + 31\n    }\n  \
    \  if n == 33 {\n        return p + 32\n    }\n    if n == 34 {\n        return\
    \ p + 33\n    }\n    if n == 35 {\n        return p + 34\n    }\n    if n == 36\
    \ {\n        return p + 35\n    }\n    if n == 37 {\n        return p + 36\n \
    \   }\n    if n == 38 {\n        return p + 37\n    }\n    if n == 39 {\n    \
    \    return p", "    if n < 0 {\n        n += p\n    }\n    if n < p {\n     \
    \   return n\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif\
    \ p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\
    \tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: ", "\tif n <\
    \ 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n,p)\")\n\
    \t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif\
    \ p < 2 {\n\t\treturn 1\n\t}\n\tx := n\n\ty := p\n\tt := 1\n\tfor {\n\t\tif y\
    \ & 1 == 1 {\n\t\t\tx >>= 1\n\t\t\ty >>= 1\n\t\t\tt *= x\n\t\t} else {\n\t\t\t\
    x >>= 1\n\t\t\ty >>= 1\n\t\t\tt *= y\n\t\t}\n\t\tif x == 0 {\n\t\t\treturn t\n\
    \t\t}\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p\
    \ < 0:\n\t\treturn modp(-n, p)\n\tcase n <= p:\n\t\treturn n\n\tdefault:\n\t\t\
    return modp(n - p, p)\n\t}", "\tlet n2 = n * n\n\tlet p2 = p * p\n\tlet n3 = n2\
    \ * n2\n\tlet p3 = p2 * p\n\tlet n4 = n3 * n3\n\tlet p4 = p3 * p3\n\tlet n5 =\
    \ n4 * n4\n\tlet p5 = p4 * p4\n\tlet n6 = n5 * n5\n\tlet p6 = p5 * p5\n\tlet n7\
    \ = n6 * n6\n\tlet p7 = p6 * p6\n\tlet n8 = (n7 * n7) + p7\n\tlet p8 = (p7 * p7)\
    \ + p7\n\tlet n9 = (n8 * n8) + p8\n\tlet p9 = (p8 * p8) + p8\n\tlet n10 = (n9\
    \ * n9) + p9\n\tlet p10 = (p9 * p9) + p9\n\tlet n11 = (n10 * n10) + p10\n\tlet\
    \ p11 = (p10 * p10) + p10\n\tlet n12 = (n11 * n11) + p11\n\tlet p12 = (p11 * p11)\
    \ + p11\n\tlet n13 = (n12 * n12) + p12\n\tlet p13 = (p12 * p12) + p12\n\tlet n14\
    \ = (n13 * n13) + p13\n\tlet p14 = (p13 * p13) + p13\n\tlet n15 = (n14 * n14)\
    \ + p14\n\tlet p15 = (p14 * p14) + p14\n\tlet n16 = (n15 * n15) + p15\n\tlet p16\
    \ = (p15 * p15) + p15\n\tlet n17 = (n16 * n16) + p16\n\tlet p17 = (p16 * p16)\
    \ + p16\n\tlet n18 = (n17 * n17) + p17\n\tlet p18 = (p17 * p17) + p17\n\tlet n19\
    \ = (n18 * n18) + p18\n\tlet p19 = (p18 * p18) + p18\n\tlet n20 = (n19 * n19)\
    \ + p19\n\tlet p20 = (p19 * p19) + p19\n\tlet n21 = (n20 * n20) + p20\n\tlet p21\
    \ = (p20 * p20) + p20\n\tlet n22 = (n21 * n21) + p21\n\tlet p22 = (p21", "\treturn\
    \ (p & (n - 1)) == 0 ? n : n - p", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p % p)\n    }\n    if p >\
    \ p {\n        return modp(n, p - 1)\n    }\n    return n", "\tif n < 0 {\n\t\t\
    panic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n ==\
    \ p {\n\t\treturn 2\n\t}\n\tif n == p {\n\t\treturn 3\n\t}\n\tif n == p {\n\t\t\
    return 4\n\t}\n\tif n == p {\n\t\treturn 5\n\t}\n\tif n == p {\n\t\treturn 6\n\
    \t}\n\tif n == p {\n\t\treturn 7\n\t}\n\tif n == p {\n\t\treturn 8\n\t}\n\tif\
    \ n == p {\n\t\treturn 9\n\t}\n\tif n == p {\n\t\treturn 10\n\t}\n\tif n == p\
    \ {\n\t\treturn 11\n\t}\n\tif n == p {\n\t\treturn 12\n\t}\n\tif n == p {\n\t\t\
    return 13\n\t}\n\tif n == p {\n\t\treturn 14\n\t}\n\tif n == p {\n\t\treturn 15\n\
    \t}\n\tif n == p {\n\t\treturn 16\n\t}\n\tif n == p {\n\t\treturn 17\n\t}\n\t\
    if n == p {\n\t\treturn 18\n\t}\n\tif n == p {\n\t\treturn 19\n\t}\n\tif n ==\
    \ p {\n\t\treturn 20\n\t}\n\tif n == p {\n\t\treturn 21\n\t}\n\tif n == p {\n\t\
    \treturn 22\n\t}\n\tif n == p {\n\t\treturn 23\n\t}\n\tif n == p {\n\t\treturn\
    \ 24\n\t}\n\tif n == p {\n\t\treturn 25\n\t}\n\tif n == p {\n\t\treturn 26\n\t\
    }\n\tif n == p {\n\t\treturn 27\n\t}\n\tif n == p {\n\t\treturn 28\n\t}\n\tif\
    \ n == p {\n\t\treturn 29\n\t}\n\tif n == p {\n\t\treturn 30\n\t}\n\tif n == p\
    \ {\n\t\treturn 31\n\t}\n\tif n == p {\n\t\treturn 32\n\t}\n\tif n == p {\n\t\t\
    return 33\n\t}\n\tif n == p {\n\t\treturn 34\n\t}\n\tif n == p {\n\t\treturn 35\n\
    \t}\n\tif n == p {\n\t\treturn 36\n\t}\n\tif n == p {\n\t\treturn 37\n\t}\n\t\
    if n == p {\n\t\treturn 38\n\t}\n\tif n == p {\n\t\treturn 39\n\t}\n\tif n ==\
    \ p {\n\t\treturn 40\n\t}\n\tif n == p {\n\t\treturn 41\n\t}\n\tif n == p {\n\t\
    \treturn 42\n\t}\n\tif n == p {\n\t\treturn 43\n\t}\n\tif n == p {\n\t\treturn\
    \ 44\n\t}\n\tif n == p {\n\t\treturn 45\n\t}\n\tif n == p {\n\t\treturn 46\n\t\
    }\n\tif n == p {\n\t\treturn 47\n\t}\n\tif n == ", "    if n < 0 {\n        return\
    \ modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p - 1)\n    }\n \
    \   if p > p {\n        return modp(n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return ", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tx := n\n\ty := p\n\tt := 1\n\tfor x != 0 {\n\t\tt = ((x % y) + t) % y\n\t\t\
    x = x / y\n\t}\n\treturn t", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0\
    \ || p == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2\
    \ {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tn -= p - 1\n\tx :=\
    \ n\n\ty := p\n\tfor {\n\t\tx %= y\n\t\tif x == 0 {\n\t\t\treturn x\n\t\t}\n\t\
    \ty >>= 1\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n",
  "\tif n < 0 {\n\t\tpanic(\"modp(n, p): n must be positive\")\n\t}\n\tif p < 1 {\n\
    \t\tpanic(\"modp(n, p): p must be positive\")\n\t}\n\tif n == 0 || p == 0 {\n\t\
    \treturn 0\n\t}\n\tswitch {\n\tcase p < 0:\n\t\treturn modp(n - 1, p)\n\tcase\
    \ p > n:\n\t\treturn modp(n, p - n)\n\t}\n\tswitch {\n\tcase p < n:\n\t\treturn\
    \ p % n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif\
    \ n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn 1\n\t}\n\tq := p / n\n\tr := p - q*n\n\tif r > 0 {\n\t\treturn modp(q,\
    \ p)\n\t}\n\treturn modp(n, p)", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 0 {\n        return modp(abs(p), n)\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n   \
    \ if p > n {\n        return modp(n - p, p)\n    }\n    if p < n {\n        return\
    \ modp(n, p)\n    }\n    if n == p {\n        return n\n    }\n    if n == p+1\
    \ {\n        return p\n    }\n    if n == p-1 {\n        return p+1\n    }\n \
    \   if n == p+2 {\n        return p+2\n    }\n    if n == p-2  {\n        return\
    \ p-2\n    }\n    if n == p+3 {\n        return p+3\n    }\n    if n == p-3  {\n\
    \        return p-3\n    }\n    if n == p+4 {\n        return p+4\n    }\n   \
    \ if n == p-4  {\n        return p-4\n    }\n    if n == p+5 {\n        return\
    \ p+5\n    }\n    if n == p-5  {\n        return p-5\n    }\n    if n == p+6 {\n\
    \        return p+6\n    }\n    if n == p-6  {\n        return p-6\n    }\n  \
    \  if n == p+7 {\n        return p+7\n    }\n    if n == p-7  {\n        return\
    \ p-7\n    }\n    if n == p+8 {\n        return p+8\n    }\n    if n == p-8  {\n\
    \        return p-8\n    }\n    if n == p+9 {\n        return p+9\n    }\n   \
    \ if n == p-9  {\n        return p-9\n    }\n    if n == p+10 {\n        return\
    \ p+10\n    }\n    if n == p-10 {\n        return p-10\n    }\n    if n == p+11\
    \ {\n        return p+11\n    }\n    if n == p-11 {\n        return p-11\n   \
    \ }\n    if n == p+12 {\n        return p+12\n    }\n    if n == p-12 {\n    \
    \    return p-12\n    }\n    if n == p+13 {\n        return p+13\n    }\n    if\
    \ n == p-13 {\n        return p-13\n    }\n    if n == p+14 {\n        return\
    \ p+14\n    }\n    if n == p-14 {\n        return p-14\n    }\n    if n == p+15\
    \ {\n        return p+15\n    }\n    if n == p-15 {\n        return p-15\n   \
    \ }\n    if n == p+16 {\n        return p+16\n    }\n    if n == p-16 {\n    \
    \    return p-16\n    }\n    if n == p+17 {\n        return p+17\n    }\n    if\
    \ n == p-17", "\tlet n2 = n * n\n\tlet p2 = p * p\n\tlet n3 = n2 * n2\n\tlet p3\
    \ = p2 * p\n\tlet n4 = n3 * n3\n\tlet p4 = p3 * p3\n\tlet n5 = n4 * n4\n\tlet\
    \ p5 = p4 * p4\n\tlet n6 = n5 * n5\n\tlet p6 = p5 * p5\n\tlet n7 = n6 * n6\n\t\
    let p7 = p6 * p6\n\tlet n8 = (n7 * n7) + p7\n\tlet p8 = (p7 * p7) + p7\n\tlet\
    \ n9 = (n8 * n8) + p8\n\tlet p9 = (p8 * p8) + p8\n\tlet n10 = (n9 * n9) + p9\n\
    \tlet p10 = (p9 * p9) + p9\n\tlet n11 = (n10 * n10) + p10\n\tlet p11 = (p10 *\
    \ p10) + p10\n\tlet n12 = (n11 * n11) + p11\n\tlet p12 = (p11 * p11) + p11\n\t\
    let n13 = (n12 * n12) + p12\n\tlet p13 = (p12 * p12) + p12\n\tlet n14 = (n13 *\
    \ n13) + p13\n\tlet p14 = (p13 * p13) + p13\n\tlet n15 = (n14 * n14) + p14\n\t\
    let p15 = (p14 * p14) + p14\n\tlet n16 = (n15 * n15) + p15\n\tlet p16 = (p15 *\
    \ p15) + p15\n\tlet n17 = (n16 * n16) + p16\n\tlet p17 = (p16 * p16) + p16\n\t\
    let n18 = (n17 * n17) + p17\n\tlet p18 = (p17 * p17) + p17\n\tlet n19 = (n18 *\
    \ n18) + p18\n\tlet p19 = (p18 * p18) + p18\n\tlet n20 = (n19 * n19) + p19\n\t\
    let p20 = (p19 * p19) + p19\n\tlet n21 = (n20 * n20) + p20\n\tlet p21 = (p20 *\
    \ p20) + p20\n\tlet n22 = (n21 * n21) + p21\n\tlet p22 = (p21", "    if n < 0\
    \ {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n \
    \   if p < n {\n        return modp(n - p, p)\n    }\n    return n", "\tif n <\
    \ 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp:\
    \ p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tq := p / n\n\tr := p % n\n\treturn modp(q, p) * n + r", "\tswitch\
    \ {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n >= p:\n\
    \t\treturn n - p\n\t}", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif p < 0 {\n\t\tp =\
    \ -p\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase p <\
    \ 0:\n\t\treturn modp(n - p, p)\n\tcase p > 0:\n\t\treturn modp(n, p - 1)\n\t\
    default:\n\t\treturn n\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp called with negative\
    \ n\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp called with negative p\")\n\t}\n\t\
    if p == 0 {\n\t\treturn 0\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp called with p > p\")\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\treturn p", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2\
    \ {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\tswitch {\n\tcase n < 0:\n\
    \t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase p == 2:\n\t\treturn n + 1\n\
    \tcase p == 3:\n\t\treturn n + 2\n\tcase p == 4:\n\t\treturn n + 3\n\tcase p ==\
    \ 5:\n\t\treturn n + 4\n\tcase p == 6:\n\t\treturn n + 5\n\tcase p == 7:\n\t\t\
    return n + 6\n\tcase p == 8:\n\t\treturn n + 7\n\tcase p == 9:\n\t\treturn n +\
    \ 8\n\tcase p == 10:\n\t\treturn n + 9\n\tcase p == 11:\n\t\treturn n + 10\n\t\
    case p == 12:\n\t\treturn n + 11\n\tcase p == 13:\n\t\treturn n + 12\n\tcase p\
    \ == 14:\n\t\treturn n + 13\n\tcase p == 15:\n\t\treturn n + 14\n\tcase p == 16:\n\
    \t\treturn n + 15\n\tcase p == 17:\n\t\treturn n + 16\n\tcase p == 18:\n\t\treturn\
    \ n + 17\n\tcase p == 19:\n\t\treturn n + 18\n\tcase p == 20:\n\t\treturn n +\
    \ 19\n\tcase p == 21:\n\t\treturn n + 20\n\tcase p == 22:\n\t\treturn n + 21\n\
    \tcase p == 23:\n\t\treturn n + 22\n\tcase p == 24:\n\t\treturn n + 23\n\tcase\
    \ p == 25:\n\t\treturn n + 24\n\tcase p == 26:\n\t\treturn n + 25\n\tcase p ==\
    \ 27:\n\t\treturn n + 26\n\tcase p == 28:\n\t\treturn n + 27\n\tcase p == 29:\n\
    \t\treturn n + 28\n\tcase p == 30:\n\t\treturn n + 29\n\tcase p == 31:\n\t\treturn\
    \ n + 30\n\tcase p == 32:\n\t\treturn n + 31\n\tcase p == 33:\n\t\treturn n +\
    \ 32\n\tcase p == 34:\n\t\treturn n + 33\n\tcase p == 35:\n\t\treturn n + 34\n\
    \tcase p == 36:\n\t\treturn n + 35\n\tcase p == 37:\n\t\treturn n + 36\n\tcase\
    \ p == 38:\n\t\treturn n + 37\n\tcase p == 39:\n\t\treturn n + 38\n\tcase p ==\
    \ 40:\n\t\treturn n + 39\n\tcase p == 41:\n\t\treturn n + 40\n\tcase p == 42:\n\
    \t\treturn n + 41\n\tcase p == 43:\n\t\treturn n + 42\n\tcase p == 44:\n\t\treturn\
    \ n + 43\n\tcase p == 45:\n\t\treturn n + 44\n\tcase p == 46", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p+1 {\n        return n\n    }\n \
    \   if n == p-1 {\n        return n\n    }\n    if n == p+2 {\n        return\
    \ n\n    }\n    if n == p-2 {\n        return n\n    }\n    if n == p+3 {\n  \
    \      return n\n    }\n    if n == p-3 {\n        return n\n    }\n    if n ==\
    \ p+4 {\n        return n\n    }\n    if n == p-4 {\n        return n\n    }\n\
    \    if n == p+5 {\n        return n\n    }\n    if n == p-5 {\n        return\
    \ n\n    }\n    if n == p+6 {\n        return n\n    }\n    if n == p-6 {\n  \
    \      return n\n    }\n    if n == p+7 {\n        return n\n    }\n    if n ==\
    \ p-7 {\n        return n\n    }\n    if n == p+8 {\n        return n\n    }\n\
    \    if n == p-8 {\n        return n\n    }\n    if n == p+9 {\n        return\
    \ n\n    }\n    if n == p-9 {\n        return n\n    }\n    if n == p+10 {\n \
    \       return n\n    }\n    if n == p-10 {\n        return n\n    }\n    if n\
    \ == p+11 {\n        return n\n    }\n    if n == p-11 {\n        return n\n \
    \   }\n    if n == p+12 {\n        return n\n    }\n    if n == p-12 {\n     \
    \   return n\n    }\n    if n == p+13 {\n        return n\n    }\n    if n ==\
    \ p-13 {\n        return n\n    }\n    if n == p+14 {\n        return n\n    }\n\
    \    if n == p-14 {\n        return n\n    }\n    if n == p+15 {\n        return\
    \ n\n    }\n    if n == p-15 {\n        return n\n    }\n    if n == p+16 {\n\
    \        return n\n    }\n    if n == p-16 {\n        return n\n    }\n    if\
    \ n == p+17 {\n        return n\n    }\n    if n == p-17 {\n        return n\n\
    \    }\n    if n == p+18 {\n        return n\n    }\n    if n == p-18 {\n    \
    \    return n\n    }\n    if n == p+19 {\n        return n\n    }\n    if n ==\
    \ p-19 {\n        return n\n    }\n    if n == p+20 {\n        return n\n    }\n\
    \    if n == p-20 {\n        return ", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tq := p\n\tfor {\n\t\
    \tq /= 2\n\t\tif q == 1 {\n\t\t\treturn n\n\t\t}\n\t\tif q == p {\n\t\t\treturn\
    \ q\n\t\t}\n\t}", "    if n < 0 {\n        n += p\n    }\n    if n < p {\n   \
    \     return n\n    }\n    return n - p", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n   \
    \ if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n        return\
    \ modp(n - p, p)\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p - 1 {\n        return p\n    }\n    if n == p - 1 {\n        return\
    \ p\n    }\n    if n == p - 2 {\n        return p\n    }\n    if n == p - 2 {\n\
    \        return p\n    }\n    if n == p - 3 {\n        return p\n    }\n    if\
    \ n == p - 3 {\n        return p\n    }\n    if n == p - 4 {\n        return p\n\
    \    }\n    if n == p - 4 {\n        return p\n    }\n    if n == p - 5 {\n  \
    \      return p\n    }\n    if n == p - 5 {\n        return p\n    }\n    if n\
    \ == p - 6 {\n        return p\n    }\n    if n == p - 6 {\n        return p\n\
    \    }\n    if n == p - 7 {\n        return p\n    }\n    if n == p - 7 {\n  \
    \      return p\n    }\n    if n == p - 8 {\n        return p\n    }\n    if n\
    \ == p - 8 {\n        return p\n    }\n    if n == p - 9 {\n        return p\n\
    \    }\n    if n == p - 9 {\n        return p\n    }\n    if n == p - 10 {\n \
    \       return p\n    }\n    if n == p - 10 {\n        return p\n    }\n    if\
    \ n == p - 11 {\n        return p\n    }\n    if n == p - 11 {\n        return\
    \ p\n    }\n    if n == p - 12 {\n        return p\n    }\n    if n == p - 12\
    \ {\n        return p\n    }\n    if n == p - 13 {\n        return p\n    }\n\
    \    if n == p - 13 {\n        return p\n    }\n    if n == p - 14 {\n       \
    \ return p\n    }\n    if n == p - 14 {\n        return p\n    }\n    if n ==\
    \ p - 15 {\n        return p\n    }\n    if n == p - 15 {\n        return p\n\
    \    }\n    if n == p - 16 {\n        return p\n    }\n    if n == p - 16 {\n\
    \        return p\n    }\n    if n == p - 17 {\n        return p\n    }\n    if\
    \ n == p - 17 {\n        return p\n    }\n    if n == p - 18 {\n        return\
    \ p\n    }\n    if n == p - 18 {\n        return p\n    }\n    if n == p - 19\
    \ {\n        return p\n    }\n    if n == p - 19 {\n        return p\n    }\n",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n       \
    \ return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n  \
    \  if p == 0 {\n        return n\n    }\n    if p > n {\n        return modp(n,\
    \ p)\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n    return\
    \ modp((n - p) / 2, p)", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\
    \t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tx := n\n\ty := p\n\tz := 1\n\t\
    for {\n\t\tif x == 0 {\n\t\t\treturn z\n\t\t}\n\t\tif y == 0 {\n\t\t\treturn z\n\
    \t\t}\n\t\tt = x % y\n\t\tx = y\n\t\ty = t\n\t\tz = z * y\n\t}", "    if n < 0\
    \ {\n        return modp(-n, p)\n    }\n    if p < 2 {\n        return n\n   \
    \ }\n    if p > p {\n        return modp(n - p, p)\n    }\n    if n == 0 {\n \
    \       return 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }", "\tif n < 0 {\n\t\tpanic(\"\
    modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    r := n % p\n\tif r == 0 {\n\t\treturn p\n\t}\n\treturn r", "\tswitch {\n\tcase\
    \ n < 0 || p < 0 || p > n:\n\t\tpanic(\"modp: invalid arguments\")\n\tcase n ==\
    \ p:\n\t\treturn n\n\tcase n == 0 || p == 0:\n\t\treturn 0\n\tcase n >= p:\n\t\
    \treturn n - p\n\t}\n\tswitch {\n\tcase p < 2:\n\t\treturn 0\n\tcase p < n:\n\t\
    \treturn p - 1\n\tdefault:\n\t\tlet r = modp(n - p, p)\n\t\treturn r * p + r\n\
    \t}", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp(n,p)\")\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\
    \t\treturn p\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tq := n / p\n\tr := n %\
    \ p\n\treturn q * p + r", '    return ((n & (p - 1)) == 0) ? n : ((n & (p - 1))
    + p) % p', "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p <\
    \ 1 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\
    \t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif\
    \ n == p+1 {\n\t\treturn 2\n\t}\n\tif n == p+2 {\n\t\treturn 4\n\t}\n\tif n ==\
    \ p+3 {\n\t\treturn 8\n\t}\n\tif n == p+4 {\n\t\treturn 16\n\t}\n\tif n == p+5\
    \ {\n\t\treturn 32\n\t}\n\tif n == p+6 {\n\t\treturn 64\n\t}\n\tif n == p+7 {\n\
    \t\treturn 128\n\t}\n\tif n == p+8 {\n\t\treturn 256\n\t}\n\tif n == p+9 {\n\t\
    \treturn 512\n\t}\n\tif n == p+10 {\n\t\treturn 1024\n\t}\n\tif n == p+11 {\n\t\
    \treturn 2048\n\t}\n\tif n == p+12 {\n\t\treturn 4096\n\t}\n\tif n == p+13 {\n\
    \t\treturn 8192\n\t}\n\tif n == p+14 {\n\t\treturn 16384\n\t}\n\tif n == p+15\
    \ {\n\t\treturn 32768\n\t}\n\tif n == p+16 {\n\t\treturn 65536\n\t}\n\tif n ==\
    \ p+17 {\n\t\treturn 131072\n\t}\n\tif n == p+18 {\n\t\treturn 262144\n\t}\n\t\
    if n == p+19 {\n\t\treturn 524288\n\t}\n\tif n == p+20 {\n\t\treturn 1048576\n\
    \t}\n\tif n == p+21 {\n\t\treturn 2097152\n\t}\n\tif n == p+22 {\n\t\treturn 4194304\n\
    \t}\n\tif n == p+23 {\n\t\treturn 8388608\n\t}\n\tif n == p+24 {\n\t\treturn 16777216\n\
    \t}\n\tif n == p+25 {\n\t\treturn 33554432\n\t}\n\tif n == p+26 {\n\t\treturn\
    \ 67108864\n\t}\n\tif n == p+27 {\n\t\treturn 134217728\n\t}\n\tif n == p+28 {\n\
    \t\treturn 268435456\n\t}\n\tif n == p+29 {\n\t\treturn 536870912\n\t}\n\tif n\
    \ == p+30 {\n\t\treturn 1073741824\n\t}\n\tif n == p+31 {\n\t\treturn -2147483648\n\
    \t}\n\tpanic(\"unreachable\")", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p\
    \ > p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tif n == p {\n\t\
    \treturn n\n\t}\n\tr := n % p\n\tif r == 0 {\n\t\treturn n\n\t}\n\treturn r",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n       \
    \ return modp(n & (p - 1), p)\n    }\n    if p > n {\n        return modp(n &\
    \ (p - 1), p)\n    }\n    return n & (p - 1)", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n   \
    \ }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p < n {\n\
    \        return modp(n - p, p)\n    }\n    var result = 1\n    for i := 1; i <=\
    \ n; i++ {\n        result = result * p % i\n    }\n    return result", "    if\
    \ n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return 1\n    }\n\
    \    if p > n {\n        return modp(n - p, p)\n    }\n    if p < 0 {\n      \
    \  return modp(-p, p)\n    }\n    if n == 1 {\n        return p\n    }\n    if\
    \ n == 2 {\n        return p + p\n    }\n    if n == 3 {\n        return p + p\
    \ + p\n    }\n    if n == 4 {\n        return p + p + p + p\n    }\n    if n ==\
    \ 5 {\n        return p + p + p + p + p\n    }\n    if n == 6 {\n        return\
    \ p + p + p + p + p + p\n    }\n    if n == 7 {\n        return p + p + p + p\
    \ + p + p + p\n    }\n    if n == 8 {\n        return p + p + p + p + p + p +\
    \ p + p\n    }\n    if n == 9 {\n        return p + p + p + p + p + p + p + p\
    \ + p\n    }\n    if n == 10 {\n        return p + p + p + p + p + p + p + p +\
    \ p + p\n    }\n    if n == 11 {\n        return p + p + p + p + p + p + p + p\
    \ + p + p + p\n    }\n    if n == 12 {\n        return p + p + p + p + p + p +\
    \ p + p + p + p + p + p\n    }\n    if n == 13 {\n        return p + p + p + p\
    \ + p + p + p + p + p + p + p + p + p\n    }\n    if n == 14 {\n        return\
    \ p + p + p + p + p + p + p + p + p + p + p + p + p + p\n    }\n    if n == 15\
    \ {\n        return p + p + p + p + p + p + p + p + p + p + p + p + p + p + p\n\
    \    }\n    if n == 16 {\n        return p + p + p + p + p + p + p + p + p + p\
    \ + p + p + p + p + p + p\n    }\n    if n == 17 {\n        return p + p + p +\
    \ p + p + p + p + p + p + p + p + p + p + p + p + p + p\n    }\n    if n == 18\
    \ {\n        return p + p + p + p + p + p + p + p + p + p + p + ", "\tif n < 0\
    \ {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"\
    modp called with negative p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p\
    \ == 1 {\n\t\treturn n\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > 1 {\n\t\
    \tp = p - 1\n\t}\n\tq := n / p\n\tr := n % p\n\tif r == 0 {\n\t\treturn q\n\t\
    }\n\treturn q + modp(q, p) + r", "\tlet r = n % p\n\tif r == 0 {\n\t\treturn p\n\
    \t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\t\
    if p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\
    \tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p < 3\
    \ {\n\t\treturn 1\n\t}\n\tif p < 4 {\n\t\treturn modp(n - 1, p)\n\t}\n\tif p <\
    \ 5 {\n\t\treturn modp(n - 2, p)\n\t}\n\tif p < 6 {\n\t\treturn modp(n - 3, p)\n\
    \t}\n\tif p < 7 {\n\t\treturn modp(n - 4, p)\n\t}\n\tif p < 8 {\n\t\treturn modp(n\
    \ - 5, p)\n\t}\n\tif p < 9 {\n\t\treturn modp(n - 6, p)\n\t}\n\tif p < 10 {\n\t\
    \treturn modp(n - 7, p)\n\t}\n\tif p < 11 {\n\t\treturn modp(n - 8, p)\n\t}\n\t\
    if p < 12 {\n\t\treturn modp(n - 9, p)\n\t}\n\tif p < 13 {\n\t\treturn modp(n\
    \ - 10, p)\n\t}\n\tif p < 14 {\n\t\treturn modp(n - 11, p)\n\t}\n\tif p < 15 {\n\
    \t\treturn modp(n - 12, p)\n\t}\n\tif p < 16 {\n\t\treturn modp(n - 13, p)\n\t\
    }\n\tif p < 17 {\n\t\treturn modp(n - 14, p)\n\t}\n\tif p < 18 {\n\t\treturn modp(n\
    \ - 15, p)\n\t}\n\tif p < 19 {\n\t\treturn modp(n - 16, p)\n\t}\n\tif p < 20 {\n\
    \t\treturn modp(n - 17, p)\n\t}\n\tif p < 21 {\n\t\treturn modp(n - 18, p)\n\t\
    }\n\tif p < 22 {\n\t\treturn modp(n - 19, p)\n\t}\n\tif p < 23 {\n\t\treturn modp(n\
    \ - 20, p)\n\t}\n\tif p < 24 {\n\t\treturn modp(n - 21, p)\n\t}\n\tif p < 25 {\n\
    \t\treturn modp(n - 22, p)\n\t}\n\tif p < 26 {\n\t\treturn modp(n - 23, p)\n\t\
    }\n\tif p < 27 {\n\t\treturn modp(n - 24, p)\n\t}\n\tif p < 28 {\n\t\treturn modp(n\
    \ - 25, p)\n\t}\n\tif p < 29 {\n\t\treturn modp(n - 26, p)\n\t}\n\tif p < 30 {\n\
    \t\treturn modp(n - 27, p)\n\t}\n\tif p < 31 {\n\t\treturn modp(n - 28, p)\n\t\
    }\n\tif p < 32 {\n\t\treturn modp(n - 29, p)\n\t}\n\tif p < 33 {\n\t\treturn ",
  "\tassert(n >= 0, \"modulus must be non-negative\")\n\tassert(p >= 0, \"modulus\
    \ must be non-negative\")\n\tassert(p <= n, \"modulus must be less than modulus\"\
    )\n\t\n\tlet mut result = 1\n\t\n\twhile n > 0 {\n\t\tresult *= p\n\t\tn -= 1\n\
    \t}\n\t\n\treturn result", "    if n < 0 {\n        return modp(abs(n), p)\n \
    \   }\n    if p < 0 {\n        return modp(n - abs(p), p)\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n   \
    \ if p > n {\n        return modp(n - p, p)\n    }\n    if p < n {\n        return\
    \ modp(n, p)\n    }\n    if n == 1 {\n        return p\n    }\n    if n == 2 {\n\
    \        return p + 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n \
    \   if n == 4 {\n        return p + 3\n    }\n    if n == 5 {\n        return\
    \ p + 4\n    }\n    if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n\
    \        return p + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n \
    \   if n == 9 {\n        return p + 8\n    }\n    if n == 10 {\n        return\
    \ p + 9\n    }\n    if n == 11 {\n        return p + 10\n    }\n    if n == 12\
    \ {\n        return p + 11\n    }\n    if n == 13 {\n        return p + 12\n \
    \   }\n    if n == 14 {\n        return p + 13\n    }\n    if n == 15 {\n    \
    \    return p + 14\n    }\n    if n == 16 {\n        return p + 15\n    }\n  \
    \  if n == 17 {\n        return p + 16\n    }\n    if n == 18 {\n        return\
    \ p + 17\n    }\n    if n == 19 {\n        return p + 18\n    }\n    if n == 20\
    \ {\n        return p + 19\n    }\n    if n == 21 {\n        return p + 20\n \
    \   }\n    if n == 22 {\n        return p + 21\n    }\n    if n == 23 {\n    \
    \    return p + 22\n    }\n    if n == 24 {\n        return p + 23\n    }\n  \
    \  if n == 25 {\n        return p + 24\n    }\n    if n == 26 {\n        return\
    \ p + 25\n    }\n    if n == 27 {\n        return p + 26\n    }\n    if n == 28\
    \ {\n        return p + 27\n    }\n    if n == 29 {\n        return p + 28\n \
    \   }\n    if n == 30 {\n        return p + 29\n    }\n    if n == 31 {\n    \
    \    return p + 30\n    }\n    if n == 32 {\n        return p + 31\n    }\n  \
    \  if n == 33 {\n        return p + 32\n    }\n    if n == 34 {\n        return\
    \ p + 33\n    }\n    if n == 35 {\n        return p + 34\n    }\n    if n == 36\
    \ {\n        return p + 35\n    }\n    if n == 37 {\n        return p + 36\n",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n       \
    \ return modp(n - abs(p), p)\n    }\n    if n == 0 {\n        return 0\n    }\n\
    \    if p == 0 {\n        return n\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == 0 {\n        return p\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n      \
    \  return p\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == 0 {\n        return p\n    }\n    if p ==\
    \ 0 {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == 0 {\n        return p\n    }\n    if p == 0 {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n        return\
    \ p\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == 0 {\n        return p\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ 0 {\n        return p\n    }\n    if p == 0 {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == 0 {\n        return p\n  \
    \  }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == 0 {\n        return p\n    }\n    if p == 0 {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n\
    \        return p\n    }\n    if p == 0 {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == 0 {\n        return p\n    }\n   \
    \ if p == 0 {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == 0 {\n        return p\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n      \
    \  return p\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == 0 {\n        return p\n    }\n    if p ==\
    \ 0 {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == 0 {\n        return p\n    }\n    if p == 0 {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n        return\
    \ p\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == 0 {\n        return p\n", "\tif n < 0 {\n\t\t\
    panic(\"modp: negative number\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp: negative\
    \ modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is too large\")\n\t}\n\tif p\
    \ < p {\n\t\treturn 0\n\t}\n\tr := p\n\tfor i := 0; i < n; i++ {\n\t\tr = r *\
    \ p % p\n\t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"modp called with negative\
    \ n\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp called with negative p\")\n\t}\n\t\
    if n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p == 1 {\n\t\treturn n\n\t}\n\tn -= p - 1\n\tif n == 0 {\n\t\treturn p\n\t\
    }\n\treturn modp(n - 1, p) + p", "    if n < 0 {\n        return modp(-n, p)\n\
    \    }\n    if p < 2 {\n        return n\n    }\n    if p < p {\n        return\
    \ modp(n - p, p)\n    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n\
    \    return modp(n, p - 1)", "    if n < 0 {\n        return modp(-n, p)\n   \
    \ }\n    if p < 2 {\n        return n\n    }\n    if p > p {\n        return modp(n,\
    \ p - 2)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }", "\tassert(n >= 0)\n\tassert(p >= 0)\n\tassert(n <= p)\n\t\n\tlet\
    \ mut result = 1\n\t\n\twhile n > 0 {\n\t\tlet r = n % p\n\t\t\n\t\tresult = result\
    \ * r + p\n\t\tn = n / p\n\t}\n\t\n\treturn result", "    if n < 0 {\n       \
    \ return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n - abs(p),\
    \ p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n     \
    \   return n\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n  \
    \  if p < n {\n        return modp(n - abs(p), p)\n    }\n    return modp(n -\
    \ abs(n), p)", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase\
    \ n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p - 1)\n\t}", '    return
    n % p', "\tswitch {\n\tcase n < 0 || p < 0 || p > n:\n\t\tpanic(\"modp: invalid\
    \ arguments\")\n\tcase n == p:\n\t\treturn n\n\tcase n == 0 || p == 0:\n\t\treturn\
    \ 0\n\tcase p == n:\n\t\treturn 1\n\tdefault:\n\t\tswitch {\n\t\tcase p < n:\n\
    \t\t\treturn modp(n - p, p)\n\t\tcase p > n:\n\t\t\treturn modp(n, p - n)\n\t\t\
    }\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1\
    \ {\n\t\tpanic(\"modp: positive number\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\tif y > z\
    \ {\n\t\t\ty -= z\n\t\t\tx %= y\n\t\t\tif x == 0 {\n\t\t\t\treturn x\n\t\t\t}\n\
    \t\t\tz = y\n\t\t} else {\n\t\t\tx %= z\n\t\t\tif x == 0 {\n\t\t\t\treturn x\n\
    \t\t\t}\n\t\t\tz = y\n\t\t}\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp(n: Int, p:\
    \ Int): n must be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n: Int, p:\
    \ Int): p must be positive\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\t\
    panic(\"modp(n: Int, p: Int): p must be smaller than p\")\n\t}\n\tx := n\n\ty\
    \ := p\n\tt := 0\n\twhile x > 0 {\n\t\tt += y\n\t\tx -= y\n\t\ty <<= 1\n\t}\n\t\
    return t", "\tif n < 0 {\n\t\tpanic(\"modp requires n >= 0\")\n\t}\n\tif p < 1\
    \ {\n\t\tpanic(\"modp requires p >= 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\treturn\
    \ modp(n - 1, p) * p + p", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif\
    \ p < 1 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tr := n % p\n\
    \tif r == 0 {\n\t\treturn n\n\t}\n\treturn p", "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp: negative modulus\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\t\
    if p > n {\n\t\tpanic(\"modp: modulus is greater than the number\")\n\t}\n\tx\
    \ := n\n\ty := p\n\tfor y != 1 {\n\t\tif y & 1 == 1 {\n\t\t\tx -= x\n\t\t}\n\t\
    \ty >>= 1\n\t}\n\treturn x", "\tif n < 0 {\n\t\tpanic(\"modp requires positive\
    \ n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif\
    \ n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\
    \t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tq := p\n\tfor {\n\t\tq /=\
    \ 2\n\t\tif q == 1 {\n\t\t\treturn n\n\t\t}\n\t\tif q > n {\n\t\t\treturn 0\n\t\
    \t}\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p <\
    \ 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\
    \t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif p > n {\n\t\tpanic(\"modp: modulus\
    \ is too large\")\n\t}\n\tr := n % p\n\tif r == 0 {\n\t\treturn n\n\t}\n\treturn\
    \ p - r", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1\
    \ {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n\
    \ == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\
    \tpanic(\"modp: p > p\")\n\t}\n\tq := p\n\tfor {\n\t\tq /= 2\n\t\tif q == p {\n\
    \t\t\treturn q\n\t\t}\n\t\tif q == 1 {\n\t\t\treturn 1\n\t\t}\n\t}", "\tif n <\
    \ 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp:\
    \ p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tq := p / n\n\tr := p % n\n\treturn q * n + r", "    if n < 0 {\n      \
    \  return modp(Int(-n), p)\n    }\n    if p < 0 {\n        return modp(Int(n),\
    \ Int(-p))\n    }\n    if p > n {\n        return modp(Int(n), Int(p))\n    }\n\
    \    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n\
    \    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return modp(n - 1, p)\n    }\n    if n ==\
    \ p - 1 {\n        return modp(n, p)\n    }\n    if n == p - 2 {\n        return\
    \ modp(n - 1, p)\n    }\n    if n == p - 3 {\n        return modp(n, p)\n    }\n\
    \    if n == p - 4 {\n        return modp(n - 1, p)\n    }\n    if n == p - 5\
    \ {\n        return modp(n, p)\n    }\n    if n == p - 6 {\n        return modp(n\
    \ - 1, p)\n    }\n    if n == p - 7 {\n        return modp(n, p)\n    }\n    if\
    \ n == p - 8 {\n        return modp(n - 1, p)\n    }\n    if n == p - 9 {\n  \
    \      return modp(n, p)\n    }\n    if n == p - 10 {\n        return modp(n -\
    \ 1, p)\n    }\n    if n == p - 11 {\n        return modp(n, p)\n    }\n    if\
    \ n == p - 12 {\n        return modp(n - 1, p)\n    }\n    if n == p - 13 {\n\
    \        return modp(n, p)\n    }\n    if n == p - 14 {\n        return modp(n\
    \ - 1, p)\n    }\n    if n == p - 15 {\n        return modp(n, p)\n    }\n   \
    \ if n == p - 16 {\n        return modp(n - 1, p)\n    }\n    if n == p - 17 {\n\
    \        return modp(n, p)\n    }\n    if n == p - 18 {\n        return modp(n\
    \ - 1, p)\n    }\n    if n == p - 19 {\n        return modp(n, p)\n    }\n   \
    \ if n == p - 20 {\n        return modp(n - 1, p)\n    }\n    if n == p - 21 {\n\
    \        return modp(n, p)\n    }\n    if n == p - 22 {\n        return modp(n\
    \ - 1, p)\n    }\n    if n == p - 23 {\n        return modp(n, p)\n    }\n   \
    \ if n == p - 24 {\n        return modp(n - 1, p)\n    }\n    if n == p - 25 {\n\
    \        return modp(n, p)\n    }\n    if n == p - 26 {\n        return modp(n\
    \ - 1, p)\n    }\n    if n == p - 27 {\n        return modp(n, p)\n    }\n   \
    \ if n == p - 28 {\n        return modp(n - 1, p)\n    }\n    if n == p - 29 {\n\
    \        return modp(n, p)\n", "\tlet r = n % p\n\tif r == 0 {\n\t\treturn n\n\
    \t}\n\treturn r", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase\
    \ p < 0:\n\t\treturn modp(-n, p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\
    \treturn n % p\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n\
    \    if p < 0 {\n        return modp(-n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if p == 2 {\n        return n + 1\n    }\n    if p ==\
    \ 3 {\n        return n + 2\n    }\n    if p == 4 {\n        return n + 3\n  \
    \  }\n    if p == 5 {\n        return n + 4\n    }\n    if p == 6 {\n        return\
    \ n + 5\n    }\n    if p == 7 {\n        return n + 6\n    }\n    if p == 8 {\n\
    \        return n + 7\n    }\n    if p == 9 {\n        return n + 8\n    }\n \
    \   if p == 10 {\n        return n + 9\n    }\n    if p == 11 {\n        return\
    \ n + 10\n    }\n    if p == 12 {\n        return n + 11\n    }\n    if p == 13\
    \ {\n        return n + 12\n    }\n    if p == 14 {\n        return n + 13\n \
    \   }\n    if p == 15 {\n        return n + 14\n    }\n    if p == 16 {\n    \
    \    return n + 15\n    }\n    if p == 17 {\n        return n + 16\n    }\n  \
    \  if p == 18 {\n        return n + 17\n    }\n    if p == 19 {\n        return\
    \ n + 18\n    }\n    if p == 20 {\n        return n + 19\n    }\n    if p == 21\
    \ {\n        return n + 20\n    }\n    if p == 22 {\n        return n + 21\n \
    \   }\n    if p == 23 {\n        return n + 22\n    }\n    if p == 24 {\n    \
    \    return n + 23\n    }\n    if p == 25 {\n        return n + 24\n    }\n  \
    \  if p == 26 {\n        return n + 25\n    }\n    if p == 27 {\n        return\
    \ n + 26\n    }\n    if p == 28 {\n        return n + 27\n    }\n    if p == 29\
    \ {\n        return n + 28\n    }\n    if p == 30 {\n        return n + 29\n \
    \   }\n    if p == 31 {\n        return n + 30\n    }\n    if p == 32 {\n    \
    \    return n + 31\n    }\n    if p == 33 {\n        return n + 32\n    }\n  \
    \  if p == 34 {\n        return n + 33\n    }\n    if p == 35 {\n        return\
    \ n + 34\n    }\n    if p == 36 {\n        return n + 35\n    }\n    if p == 37\
    \ {\n        return n + 36\n    }\n    if p == 38 {\n        return n + 37\n \
    \   }\n    if p == 39 {\n        return n + 38\n    }\n    if p == 40 {\n    \
    \    return n + 39\n    }\n    if p == 41 {\n        return ", "\tif n < 0 {\n\
    \t\tpanic(\"modp requires positive argument\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires positive argument\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\
    \t\treturn 1\n\t}\n\tq := p / 2\n\tr := p % 2\n\tt := 1\n\tfor i := 0; i < q;\
    \ i++ {\n\t\tt = t * n\n\t}\n\tif r == 0 {\n\t\treturn t\n\t}\n\treturn t % p",
  "\tlet m = powMod(n, p, p)\n\tif m == 1 {\n\t\treturn 0\n\t}\n\treturn m", "\tif\
    \ n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n,p)\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p > p {\n\t\treturn modp(n - 1, p) % p\n\t}\n\treturn (n - 1) % p", "    if\
    \ n < 0 {\n        return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n,\
    \ p - 1)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 1 {\n \
    \       return n\n    }\n    if p == 2 {\n        return n + 1\n    }\n    if\
    \ p == 3 {\n        return n + 2\n    }\n    if p == 4 {\n        return n + 3\n\
    \    }\n    if p == 5 {\n        return n + 4\n    }\n    if p == 6 {\n      \
    \  return n + 5\n    }\n    if p == 7 {\n        return n + 6\n    }\n    if p\
    \ == 8 {\n        return n + 7\n    }\n    if p == 9 {\n        return n + 8\n\
    \    }\n    if p == 10 {\n        return n + 9\n    }\n    if p == 11 {\n    \
    \    return n + 10\n    }\n    if p == 12 {\n        return n + 11\n    }\n  \
    \  if p == 13 {\n        return n + 12\n    }\n    if p == 14 {\n        return\
    \ n + 13\n    }\n    if p == 15 {\n        return n + 14\n    }\n    if p == 16\
    \ {\n        return n + 15\n    }\n    if p == 17 {\n        return n + 16\n \
    \   }\n    if p == 18 {\n        return n + 17\n    }\n    if p == 19 {\n    \
    \    return n + 18\n    }\n    if p == 20 {\n        return n + 19\n    }\n  \
    \  if p == 21 {\n        return n + 20\n    }\n    if p == 22 {\n        return\
    \ n + 21\n    }\n    if p == 23 {\n        return n + 22\n    }\n    if p == 24\
    \ {\n        return n + 23\n    }\n    if p == 25 {\n        return n + 24\n \
    \   }\n    if p == 26 {\n        return n + 25\n    }\n    if p == 27 {\n    \
    \    return n + 26\n    }\n    if p == 28 {\n        return n + 27\n    }\n  \
    \  if p == 29 {\n        return n + 28\n    }\n    if p == 30 {\n        return\
    \ n + 29\n    }\n    if p == 31 {\n        return n + 30\n    }\n    if p == 32\
    \ {\n        return n + 31\n    }\n    if p == 33 {\n        return n + 32\n \
    \   }\n    if p == 34 {\n        return n + 33\n    }\n    if p == 35 {\n    \
    \    return n + 34\n    }\n    if p == 36 {\n        return n + 35\n    }\n  \
    \  if p == 37 {\n        return n + 36\n    }\n    if p == 38 {\n        return\
    \ n + 37\n    }\n    if p == 39 {\n        return n + 38\n    }\n    if p == 40\
    \ {\n        return n + 39\n    }\n    if p == 41 {\n        return n + 40\n \
    \   }\n    if p == 42 {\n        return ", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\t\
    if n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: modulus is too large\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ modulus is too large\")\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    return p", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p > n {\n       \
    \ return modp(n, p)\n    }\n    if p < n {\n        return modp(n - p, p)\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n - 1\n    }\n    if n ==\
    \ p {\n        return n - 2\n    }\n    if n == p {\n        return n - 3\n  \
    \  }\n    if n == p {\n        return n - 4\n    }\n    if n == p {\n        return\
    \ n - 5\n    }\n    if n == p {\n        return n - 6\n    }\n    if n == p {\n\
    \        return n - 7\n    }\n    if n == p {\n        return n - 8\n    }\n \
    \   if n == p {\n        return n - 9\n    }\n    if n == p {\n        return\
    \ n - 10\n    }\n    if n == p {\n        return n - 11\n    }\n    if n == p\
    \ {\n        return n - 12\n    }\n    if n == p {\n        return n - 13\n  \
    \  }\n    if n == p {\n        return n - 14\n    }\n    if n == p {\n       \
    \ return n - 15\n    }\n    if n == p {\n        return n - 16\n    }\n    if\
    \ n == p {\n        return n - 17\n    }\n    if n == p {\n        return n -\
    \ 18\n    }\n    if n == p {\n        return n - 19\n    }\n    if n == p {\n\
    \        return n - 20\n    }\n    if n == p {\n        return n - 21\n    }\n\
    \    if n == p {\n        return n - 22\n    }\n    if n == p {\n        return\
    \ n - 23\n    }\n    if n == p {\n        return n - 24\n    }\n    if n == p\
    \ {\n        return n - 25\n    }\n    if n == p {\n        return n - 26\n  \
    \  }\n    if n == p {\n        return n - 27\n    }\n    if n == p {\n       \
    \ return n - 28\n    }\n    if n == p {\n        return n - 29\n    }\n    if\
    \ n == p {\n        return n - 30\n    }\n    if n == p {\n        return n -\
    \ 31\n    }\n    if n == p {\n        return n - 32\n    }\n    if n == p {\n\
    \        return n - 33\n    }\n    if n == p {\n        return n - 34\n    }\n\
    \    if n == p {\n        return n - 35\n    }\n    if n == p {\n        return\
    \ n - 36\n    }\n    if n == p {\n        return n - 37\n    }\n    if n == p\
    \ {\n        return n - 38\n    }\n    if n == p {\n        return n - 39\n  \
    \  }\n    if n == p {\n        return n - 40\n    }\n    if ", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n \
    \   if p < n {\n        return modp(n, p)\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if n == 1 {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 1 {\n\
    \t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\
    \t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 1\n\t}\n\tif p > p {\n\t\treturn 0\n\
    \t}\n\tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\tif y > z {\n\t\t\tx -= z\n\t\t\
    \ty -= z\n\t\t} else {\n\t\t\tx -= y\n\t\t\ty = 0\n\t\t}\n\t\tif x == 0 {\n\t\t\
    \tbreak\n\t\t}\n\t\tz *= x\n\t}\n\treturn z", "\tswitch {\n\tcase n < 0:\n\t\t\
    return modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n, p)\n\tcase p == 0:\n\
    \t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase n == p:\n\t\treturn 1\n\tcase\
    \ n == p - 1:\n\t\treturn n - 1\n\tcase n == p - 2:\n\t\treturn n - 2\n\tcase\
    \ n == p - 3:\n\t\treturn n - 3\n\tcase n == p - 4:\n\t\treturn n - 4\n\tcase\
    \ n == p - 5:\n\t\treturn n - 5\n\tcase n == p - 6:\n\t\treturn n - 6\n\tcase\
    \ n == p - 7:\n\t\treturn n - 7\n\tcase n == p - 8:\n\t\treturn n - 8\n\tcase\
    \ n == p - 9:\n\t\treturn n - 9\n\tcase n == p - 10:\n\t\treturn n - 10\n\tcase\
    \ n == p - 11:\n\t\treturn n - 11\n\tcase n == p - 12:\n\t\treturn n - 12\n\t\
    case n == p - 13:\n\t\treturn n - 13\n\tcase n == p - 14:\n\t\treturn n - 14\n\
    \tcase n == p - 15:\n\t\treturn n - 15\n\tcase n == p - 16:\n\t\treturn n - 16\n\
    \tcase n == p - 17:\n\t\treturn n - 17\n\tcase n == p - 18:\n\t\treturn n - 18\n\
    \tcase n == p - 19:\n\t\treturn n - 19\n\tcase n == p - 20:\n\t\treturn n - 20\n\
    \tcase n == p - 21:\n\t\treturn n - 21\n\tcase n == p - 22:\n\t\treturn n - 22\n\
    \tcase n == p - 23:\n\t\treturn n - 23\n\tcase n == p - 24:\n\t\treturn n - 24\n\
    \tcase n == p - 25:\n\t\treturn n - 25\n\tcase n == p - 26:\n\t\treturn n - 26\n\
    \tcase n == p - 27:\n\t\treturn n - 27\n\tcase n == p - 28:\n\t\treturn n - 28\n\
    \tcase n == p - 29:\n\t\treturn n - 29\n\tcase n == p - 30:\n\t\treturn n - 30\n\
    \tcase n == p - 31:\n\t\treturn n - 31\n\tcase n == p - 32:\n\t\treturn n - 32\n\
    \tcase n == p - 33:\n\t\treturn n - 33\n\tcase n == p - 34:\n\t\treturn n - 34\n\
    \tcase n == p - 35:\n\t\treturn n - 35\n\tcase n == p - 36:\n\t\treturn n - 36\n\
    \tcase n == p - 37:\n\t\treturn n - 37\n\tcase n == p - 38:\n\t\treturn n - 38\n\
    \tcase n == p - 39:\n\t\treturn n - 39\n\tcase n == p - 40:\n\t\treturn n - 40\n\
    \tcase n == p - 41:\n\t\treturn n - 41\n\tcase n == p - 42:\n\t\treturn n - 42\n\
    \tcase n == p - 43:\n\t\treturn n - 43\n\tcase n == p - 44:\n\t\treturn n - 44\n",
  "\tswitch {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n\
    \ == 0 || n == p:\n\t\treturn n\n\tcase n >= p:\n\t\treturn modp(n - p, p)\n\t\
    default:\n\t\treturn modp(n - p, p) + p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: positive number\")\n\
    \t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif\
    \ p < 2 {\n\t\treturn 0\n\t}\n\tif p < 3 {\n\t\treturn p - 1\n\t}\n\tif p < p\
    \ {\n\t\treturn p - 1\n\t}\n\treturn p", "\tif n < 0 {\n\t\tpanic(\"modp(n,p)\"\
    )\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn n\n\t}\n\t\
    if p > p {\n\t\treturn 0\n\t}\n\tn -= p - 1\n\tx := n\n\tfor x != 0 {\n\t\tx =\
    \ x & (x - 1)\n\t}\n\treturn p", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\t\
    if p == 0 {\n\t\treturn n\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p > n {\n\
    \t\tp %= n\n\t\treturn modp(n - p, p)\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t\tn =\
    \ -n\n\t}\n\tif n == 1 {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p - 1 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 1 {\n\t\treturn n\n\t}\n\tif n == p - 2 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 2 {\n\t\treturn n\n\t}\n\tif n == p - 3 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 3 {\n\t\treturn n\n\t}\n\tif n == p - 4 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 4 {\n\t\treturn n\n\t}\n\tif n == p - 5 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 5 {\n\t\treturn n\n\t}\n\tif n == p - 6 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 6 {\n\t\treturn n\n\t}\n\tif n == p - 7 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 7 {\n\t\treturn n\n\t}\n\tif n == p - 8 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 8 {\n\t\treturn n\n\t}\n\tif n == p - 9 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 9 {\n\t\treturn n\n\t}\n\tif n == p - 10 {\n\t\treturn n\n\t}\n\tif n\
    \ == p - 10 {\n\t\treturn n\n\t}\n\tif n == p - 11 {\n\t\treturn n\n\t}\n\tif\
    \ n == p - 11 {\n\t\treturn n\n\t}\n\tif n == p - 12 {\n\t\treturn n\n\t}\n\t\
    if n == p - 12 {\n\t\treturn n\n\t}\n\tif n == p - 13 {\n\t\treturn n\n\t}\n\t\
    if n == p - 13 {\n\t\treturn n\n\t}\n\tif n == p - 14 {\n\t\treturn n\n\t}\n\t\
    if n == p - 14 {\n\t\treturn n\n\t}\n\tif n == p - 15 {\n\t\treturn n\n\t}\n\t\
    if n == p - 15 {\n\t\treturn n\n\t}\n\tif n == p - 16 {\n\t\treturn n\n\t}\n\t\
    if n == p - 16 {\n\t\treturn n\n\t}\n\tif n == p - 17 {\n\t\treturn n\n\t}\n\t\
    if n == p - 17 {\n\t\treturn n\n\t}\n\tif n == p - 18 {\n\t\treturn n\n\t}\n\t\
    if n == p - 18 {\n\t\treturn n\n\t}\n\tif n == p - 19 {\n\t\treturn n\n\t}\n\t\
    if n == p - 19 {\n\t\treturn n\n\t}\n\tif n == p - 20 {\n\t\treturn ", '    return
    ((n & (p - 1)) == 0) ? n : ((n & (p - 1)) + p) % p', "    if n < 0 {\n       \
    \ return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n - abs(p),\
    \ p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n     \
    \   return n\n    }\n    if p > n {\n        return modp(n - abs(p), p)\n    }\n\
    \    if p < n {\n        return modp(n - abs(p), p)\n    }\n    if p == n {\n\
    \        return p\n    }\n    if n == p {\n        return n - p\n    }\n    if\
    \ n == 0 {\n        return n\n    }\n    if n == p {\n        return n - p\n \
    \   }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n       \
    \ return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n    if n == p {\n        return n - p\n\
    \    }\n    if n == p {\n        return n - p\n    }\n    if n == p {\n      \
    \  return n - p\n    }\n    if n == p {\n        return n - p\n    }\n    if n\
    \ == p {\n        return n - p\n    }\n", "\treturn (n & (p - 1)) == 0 ? n : n\
    \ - 1", '    return ((n & (p - 1)) == 0) ? n : ((n & (p - 1)) + p)', '    return
    n & (p - 1)', "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p\
    \ < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if p == 1 {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if p == 1 {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == 1 {\n        return p\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == 1 {\n        return p\n    }\n    if p == 1 {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if p == 1 {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if p == 1 {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if p == 1 {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if p == 1 {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if p == 1 {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if p == 1 {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == 1 {\n        return p\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if n == p {\n        return p\n    }\n", "\t\
    if n < 0 {\n\t\tpanic(\"modp(n,p)\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n,p)\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if p < 2 {\n\t\treturn n % p\n\t}\n\treturn (n % p + p) % p", "\tswitch {\n\t\
    case n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n, p)\n\
    \tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p - 1)\n\t}", "    if\
    \ n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return\
    \ modp(n & (p - 1), p)\n    }\n    if p > n {\n        return modp(n, p)\n   \
    \ }\n    return n & (p - 1)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tlet\
    \ mut r = p\n\twhile n > 0 {\n\t\tr = r * p % n\n\t\tn = n / p\n\t}\n\treturn\
    \ r", "    if n < 0 {\n        return modp(-n, p)\n    }\n    if p < 1 {\n   \
    \     return modp(n, p - 1)\n    }\n    if p > p {\n        return modp(n, p -\
    \ 1)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p == 1 {\n        return n\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p+1 {\n        return p\n    }\n    if n == p+2 {\n        return p+1\n\
    \    }\n    if n == p+3 {\n        return p+2\n    }\n    if n == p+4 {\n    \
    \    return p+3\n    }\n    if n == p+5 {\n        return p+4\n    }\n    if n\
    \ == p+6 {\n        return p+5\n    }\n    if n == p+7 {\n        return p+6\n\
    \    }\n    if n == p+8 {\n        return p+7\n    }\n    if n == p+9 {\n    \
    \    return p+8\n    }\n    if n == p+10 {\n        return p+9\n    }\n    if\
    \ n == p+11 {\n        return p+10\n    }\n    if n == p+12 {\n        return\
    \ p+11\n    }\n    if n == p+13 {\n        return p+12\n    }\n    if n == p+14\
    \ {\n        return p+13\n    }\n    if n == p+15 {\n        return p+14\n   \
    \ }\n    if n == p+16 {\n        return p+15\n    }\n    if n == p+17 {\n    \
    \    return p+16\n    }\n    if n == p+18 {\n        return p+17\n    }\n    if\
    \ n == p+19 {\n        return p+18\n    }\n    if n == p+20 {\n        return\
    \ p+19\n    }\n    if n == p+21 {\n        return p+20\n    }\n    if n == p+22\
    \ {\n        return p+21\n    }\n    if n == p+23 {\n        return p+22\n   \
    \ }\n    if n == p+24 {\n        return p+23\n    }\n    if n == p+25 {\n    \
    \    return p+24\n    }\n    if n == p+26 {\n        return p+25\n    }\n    if\
    \ n == p+27 {\n        return p+26\n    }\n    if n == p+28 {\n        return\
    \ p+27\n    }\n    if n == p+29 {\n        return p+28\n    }\n    if n == p+30\
    \ {\n        return p+29\n    }\n    if n == p+31 {\n        return p+30\n   \
    \ }\n    if n == p+32 {\n        return p+31", "\tif n < 0 {\n\t\tpanic(\"modp\
    \ called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p\
    \ < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif p == 0 {\n\t\treturn 1\n\t}\n\tif\
    \ n == p {\n\t\treturn modp(n - 1, p - 1)\n\t}\n\tif p < p {\n\t\tpanic(\"modp\
    \ called with p < p\")\n\t}\n\tq := modp(n - 1, p - 1)\n\tq %= p\n\tif q > 0 {\n\
    \t\tq++\n\t}\n\treturn q", "\tif n < 0 {\n\t\tpanic(\"modp(n: Int, p: Int): n\
    \ must be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp(n: Int, p: Int): p\
    \ must be positive\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\
    \treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n", "\tif n < 0\
    \ {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p\
    \ {\n\t\tp = p\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn 0\n\tcase p == 0:\n\
    \t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase p < 2:\n\t\treturn 0\n\t}\n\
    \tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn modp(n - 1, p) + p", "  \
    \  if n < 0 {\n        return modp(-n, p)\n    }\n    if p < 0 {\n        return\
    \ modp(-p, p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0\
    \ {\n        return n\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n == p {\n        return p\n    }\n    if n == 0 {\n        return p\n    }\n\
    \    if n == p {\n        return p\n    }\n    if n == p {\n        return p\n\
    \    }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }", "    if n < 0 {\n     \
    \   return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 || p == 0 {\n        return 0\n    }\n    if p > n {\n \
    \       return modp(n, p)\n    }\n    var result = 1\n    for i := n - 1; i >=\
    \ 0; i-- {\n        result = result * p + (n % p)\n        n = n / p\n    }\n\
    \    return result", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n\
    \    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n    \
    \    return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p\
    \ {\n        return n\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\
    \t\treturn modp(abs(n), -p) * p\n\tcase p == 0:\n\t\treturn 0\n\tdefault:\n\t\t\
    return n / p\n\t}", "\treturn n % p", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\")\n\t}\n\t\
    if n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p > p {\n\
    \t\treturn 0\n\t}\n\tx := n\n\ty := p\n\tt := 1\n\tfor {\n\t\tif y & 1 == 1 {\n\
    \t\t\tx >>= 1\n\t\t\ty >>= 1\n\t\t\tt *= x\n\t\t} else {\n\t\t\tx >>= 1\n\t\t\t\
    y >>= 1\n\t\t\tt *= y\n\t\t}\n\t\tif x == 0 {\n\t\t\treturn t\n\t\t}\n\t}", '    return
    ((n%p) + p) % p', "\tswitch {\n\tcase n < 0 || p < 0 || p > n:\n\t\treturn 0\n\
    \tcase n == p:\n\t\treturn n\n\tcase n >= p:\n\t\treturn n - p\n\tdefault:\n\t\
    \treturn ((n - p) % (p - n)) + p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp called\
    \ with negative n\")\n\t}\n\tif p < 0 {\n\t\tpanic(\"modp called with negative\
    \ p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 0 {\n\t\treturn 0\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tr :=\
    \ n % p\n\tif r == 0 {\n\t\treturn n\n\t}\n\treturn p"]
stop_tokens:
- "\n}"

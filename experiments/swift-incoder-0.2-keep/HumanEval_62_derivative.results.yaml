language: swift
name: HumanEval_62_derivative
results:
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i -\
    \ 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b708cfddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708ccd4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b708ccd4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b708ccd413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b708ccd3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b708cad3e83 <unavailable> + 188035

    6    tmpzosud36k                        0x000055bb5ce6ac71 <unavailable> + 7281

    7    tmpzosud36k                        0x000055bb5ce6a564 <unavailable> + 5476

    8    libc.so.6                          0x00002b708d1c9460 __libc_start_main +
    245

    9    tmpzosud36k                        0x000055bb5ce6a239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(1)\n      \
    \  result.append(x * result[i])\n        i += 1\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpqml077t4/tmpqml077t4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b969526bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9694f62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9694f62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9694f617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqml077t4                        0x000055f36236f64c <unavailable> + 5708

    5    libc.so.6                          0x00002b9695457460 __libc_start_main +
    245

    6    tmpqml077t4                        0x000055f36236f239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[(i +\
    \ 1)])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002baa3cc0ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa3c905561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002baa3c905286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002baa3c90513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002baa3c904bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002baa3c704e83 <unavailable> + 188035

    6    tmprngnxjt8                        0x000055a8774a4c71 <unavailable> + 7281

    7    tmprngnxjt8                        0x000055a8774a4564 <unavailable> + 5476

    8    libc.so.6                          0x00002baa3cdfa460 __libc_start_main +
    245

    9    tmprngnxjt8                        0x000055a8774a4239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6ntzbr6d/tmp6ntzbr6d.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb18941c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb18638b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb18638988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb186377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ntzbr6d                        0x0000563c2ef046cc <unavailable> + 5836

    5    libc.so.6                          0x00002acb18b2d460 __libc_start_main +
    245

    6    tmp6ntzbr6d                        0x0000563c2ef042b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i] -\
    \ xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002adac6e70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adac6b67561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002adac6b67286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002adac6b6713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002adac6b66bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002adac6966e83 <unavailable> + 188035

    6    tmpbk_njtey                        0x0000560759a80ca9 <unavailable> + 7337

    7    tmpbk_njtey                        0x0000560759a80564 <unavailable> + 5476

    8    libc.so.6                          0x00002adac705c460 __libc_start_main +
    245

    9    tmpbk_njtey                        0x0000560759a80239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n      \
    \  x = x * x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpp0jiw_uj/tmpp0jiw_uj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3af4821c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3af4518b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3af4518988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3af45177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp0jiw_uj                        0x000056290c0565fc <unavailable> + 5628

    5    libc.so.6                          0x00002b3af4a0d460 __libc_start_main +
    245

    6    tmpp0jiw_uj                        0x000056290c0561e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6ntzbr6d/tmp6ntzbr6d.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb18941c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb18638b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb18638988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb186377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ntzbr6d                        0x0000563c2ef046cc <unavailable> + 5836

    5    libc.so.6                          0x00002acb18b2d460 __libc_start_main +
    245

    6    tmp6ntzbr6d                        0x0000563c2ef042b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[(i +\
    \ 1)])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002baa3cc0ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa3c905561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002baa3c905286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002baa3c90513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002baa3c904bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002baa3c704e83 <unavailable> + 188035

    6    tmprngnxjt8                        0x000055a8774a4c71 <unavailable> + 7281

    7    tmprngnxjt8                        0x000055a8774a4564 <unavailable> + 5476

    8    libc.so.6                          0x00002baa3cdfa460 __libc_start_main +
    245

    9    tmprngnxjt8                        0x000055a8774a4239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        power = power + 1\n \
    \       result.append(x * power)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpqfggeg7j/tmpqfggeg7j.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc09ebec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc09bb5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc09bb5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc09bb47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqfggeg7j                        0x00005556ceb125fc <unavailable> + 5628

    5    libc.so.6                          0x00002afc0a0aa460 __libc_start_main +
    245

    6    tmpqfggeg7j                        0x00005556ceb121e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        if power == 0 {\n   \
    \         result.append(1)\n        } else {\n            result.append(x * result[power\
    \ - 1])\n        }\n        power += 1\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpb5yk1hum/tmpb5yk1hum.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1beefbbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1beecb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1beecb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1beecb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb5yk1hum                        0x000055582b93064c <unavailable> + 5708

    5    libc.so.6                          0x00002b1bef1a7460 __libc_start_main +
    245

    6    tmpb5yk1hum                        0x000055582b930239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for x in xs {\n        result[j] += x\n        j++\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp3noxpgd5.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b65c8e05c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65c8afc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b65c8afc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b65c8afc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b65c8afbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b65c88fbe83 <unavailable> + 188035

    6    tmp_g57ydol                        0x000055768206bad7 <unavailable> + 6871

    7    tmp_g57ydol                        0x000055768206b454 <unavailable> + 5204

    8    libc.so.6                          0x00002b65c8ff1460 __libc_start_main +
    245

    9    tmp_g57ydol                        0x000055768206b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs {\n        result.append(1)\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdvtchg3w/tmpdvtchg3w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b0ddd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b0daccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b0dacc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b0dacb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdvtchg3w                        0x0000555fdf0dd5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b6b0dfc1460 __libc_start_main +
    245

    6    tmpdvtchg3w                        0x0000555fdf0dd1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    result.append(0)\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpge6l6rhj/tmpge6l6rhj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac455376c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac45506db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac45506d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac45506c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpge6l6rhj                        0x0000562add6356cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac455562460 __libc_start_main +
    245

    6    tmpge6l6rhj                        0x0000562add6352b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result.append(xs[j])\n  \
    \      j++\n    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpfs45kk8n.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result[j] = 1\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpfd3p568k.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs.indices {\n        result.append(xs[i] - xs[i - 1])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f23d19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f23a10561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2f23a10286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2f23a1013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2f23a0fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b2f2380fe83 <unavailable> + 188035

    6    tmpw76f1p53                        0x000055fe6ca63c9d <unavailable> + 7325

    7    tmpw76f1p53                        0x000055fe6ca63584 <unavailable> + 5508

    8    libc.so.6                          0x00002b2f23f05460 __libc_start_main +
    245

    9    tmpw76f1p53                        0x000055fe6ca63259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i -\
    \ 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b708cfddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708ccd4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b708ccd4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b708ccd413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b708ccd3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b708cad3e83 <unavailable> + 188035

    6    tmpzosud36k                        0x000055bb5ce6ac71 <unavailable> + 7281

    7    tmpzosud36k                        0x000055bb5ce6a564 <unavailable> + 5476

    8    libc.so.6                          0x00002b708d1c9460 __libc_start_main +
    245

    9    tmpzosud36k                        0x000055bb5ce6a239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs.indices {\n        result.append(xs[i] - xs[i - 1])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f23d19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f23a10561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2f23a10286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2f23a1013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2f23a0fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b2f2380fe83 <unavailable> + 188035

    6    tmpw76f1p53                        0x000055fe6ca63c9d <unavailable> + 7325

    7    tmpw76f1p53                        0x000055fe6ca63584 <unavailable> + 5508

    8    libc.so.6                          0x00002b2f23f05460 __libc_start_main +
    245

    9    tmpw76f1p53                        0x000055fe6ca63259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for _ in xs {\n        result.append(0)\n    }\n\
    \    for _ in xs {\n        result[j] += xs[j] * 1\n        j++\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpn75v47of.swift:17:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs {\n        result.append(i * 1)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpa9c386fm/tmpa9c386fm.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab29c7ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab29971b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab29971988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab299707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa9c386fm                        0x0000560d80c895fc <unavailable> + 5628

    5    libc.so.6                          0x00002aab29e66460 __libc_start_main +
    245

    6    tmpa9c386fm                        0x0000560d80c891e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i] /\
    \ Double(i))\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpjni3f0st.swift:13:35: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n        result.append(x * xs[i] / Double(i))\n\
    \                                  ^\n                                  Int( \
    \    )\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count-1])\n\
    \        x *= xs[xs.count-1]\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp1so4q257/tmp1so4q257.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5fc00dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5fbfdd1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5fbfdd1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5fbfdd07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1so4q257                        0x000055f1cddb26cc <unavailable> + 5836

    5    libc.so.6                          0x00002b5fc02c6460 __libc_start_main +
    245

    6    tmp1so4q257                        0x000055f1cddb22b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        if power > 0 {\n    \
    \        result.append(x * result[power])\n        }\n        power += 1\n   \
    \ }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b920bd44c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b920ba3b561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b920ba3b286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b920ba3b13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b920ba3abb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b920b83ae83 <unavailable> + 188035

    6    tmp6_lqifzb                        0x0000562fb3151c5d <unavailable> + 7261

    7    tmp6_lqifzb                        0x0000562fb3151564 <unavailable> + 5476

    8    libc.so.6                          0x00002b920bf30460 __libc_start_main +
    245

    9    tmp6_lqifzb                        0x0000562fb3151239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs {\n        result.append(1)\n    }\n    result.append(0)\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmposbz9cuc/tmposbz9cuc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1dfb02c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1df7f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1df7f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1df7f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmposbz9cuc                        0x00005564f432b5fc <unavailable> + 5628

    5    libc.so.6                          0x00002af1dfcee460 __libc_start_main +
    245

    6    tmposbz9cuc                        0x00005564f432b1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count-1])\n\
    \        x *= xs[xs.count-1]\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp1so4q257/tmp1so4q257.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5fc00dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5fbfdd1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5fbfdd1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5fbfdd07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1so4q257                        0x000055f1cddb26cc <unavailable> + 5836

    5    libc.so.6                          0x00002b5fc02c6460 __libc_start_main +
    245

    6    tmp1so4q257                        0x000055f1cddb22b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] = i\n        j++\n\
    \    }\n    result.reverse()\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp41sdas10.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6ntzbr6d/tmp6ntzbr6d.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb18941c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb18638b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb18638988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb186377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ntzbr6d                        0x0000563c2ef046cc <unavailable> + 5836

    5    libc.so.6                          0x00002acb18b2d460 __libc_start_main +
    245

    6    tmp6ntzbr6d                        0x0000563c2ef042b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs {\n        result.append(1)\n    }\n    for i in xs.indices\
    \ {\n        result[i] *= xs[i]\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpcqk7unfi/tmpcqk7unfi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71cde0bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71cdb02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71cdb02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71cdb017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcqk7unfi                        0x0000559cff8b082c <unavailable> + 6188

    5    libc.so.6                          0x00002b71cdff7460 __libc_start_main +
    245

    6    tmpcqk7unfi                        0x0000559cff8b0419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in xs.indices {\n        result.append(xs[i] - xs[i - 1]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b1261291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1260f88561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b1260f88286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b1260f8813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1260f87bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b1260d87e83 <unavailable> + 188035

    6    tmpt1c95phq                        0x000055798858dc9d <unavailable> + 7325

    7    tmpt1c95phq                        0x000055798858d584 <unavailable> + 5508

    8    libc.so.6                          0x00002b126147d460 __libc_start_main +
    245

    9    tmpt1c95phq                        0x000055798858d259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        if power == 0 {\n   \
    \         result.append(1)\n        } else {\n            result.append(x * result[power])\n\
    \        }\n        power++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpvjpk5sbq.swift:18:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        power++\n             ^~\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for i in xs {\n        result[j] += i\n        j++\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpgcvd16gi.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        if power == 0 {\n   \
    \         result.append(x)\n        } else {\n            result.append(x * result[power\
    \ - 1])\n        }\n        power += 1\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpuwz75ukp/tmpuwz75ukp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b276d16fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b276ce66b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b276ce66988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b276ce657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuwz75ukp                        0x0000561aade8464c <unavailable> + 5708

    5    libc.so.6                          0x00002b276d35b460 __libc_start_main +
    245

    6    tmpuwz75ukp                        0x0000561aade84239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n        result.append(xs[xs.count\
    \ - 1])\n        x *= xs[xs.count - 1]\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp0jq_kbv9/tmp0jq_kbv9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b929ffd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b929fcc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b929fcc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b929fcc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0jq_kbv9                        0x0000563ddf6a06cc <unavailable> + 5836

    5    libc.so.6                          0x00002b92a01be460 __libc_start_main +
    245

    6    tmp0jq_kbv9                        0x0000563ddf6a02b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n       \
    \ result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyfe_9lr5/tmpyfe_9lr5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b524f301c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b524eff8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b524eff8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b524eff77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfe_9lr5                        0x00005595eb2066cc <unavailable> + 5836

    5    libc.so.6                          0x00002b524f4ed460 __libc_start_main +
    245

    6    tmpyfe_9lr5                        0x00005595eb2062b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n      \
    \  x = x * x\n    }\n    result.append(x)\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpwr43f8x1/tmpwr43f8x1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b874c813c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b874c50ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b874c50a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b874c5097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwr43f8x1                        0x00005611616fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b874c9ff460 __libc_start_main +
    245

    6    tmpwr43f8x1                        0x00005611616fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 0\n    for x in xs {\n        power = power + 1\n \
    \       result.append(power)\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp9y4le7ob/tmp9y4le7ob.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac3f323dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac3f2f34b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac3f2f34988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac3f2f337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9y4le7ob                        0x00005561c12ec5fc <unavailable> + 5628

    5    libc.so.6                          0x00002ac3f3429460 __libc_start_main +
    245

    6    tmp9y4le7ob                        0x00005561c12ec1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[(i +\
    \ 1) % xs.count])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp573vskqc/tmp573vskqc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba877247c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba876f3eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba876f3e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba876f3d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp573vskqc                        0x000055834ea3973c <unavailable> + 5948

    5    libc.so.6                          0x00002ba877433460 __libc_start_main +
    245

    6    tmp573vskqc                        0x000055834ea39329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for x in xs {\n        result[j] = x\n        j++\n\
    \    }\n    result[j] = 1\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmptao9s954.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpvnqb5a6v/tmpvnqb5a6v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9245dfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9245af3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9245af3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9245af27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvnqb5a6v                        0x000055fd25c806cc <unavailable> + 5836

    5    libc.so.6                          0x00002b9245fe8460 __libc_start_main +
    245

    6    tmpvnqb5a6v                        0x000055fd25c802b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power *\
    \ x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeao3c7fc/tmpeao3c7fc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b944d291c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b944cf88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b944cf88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b944cf877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeao3c7fc                        0x000055aa1651d5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b944d47d460 __libc_start_main +
    245

    6    tmpeao3c7fc                        0x000055aa1651d1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n      \
    \  x += Int(1)\n    }\n    for _ in xs {\n        result.append(0)\n        x\
    \ += Int(1)\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl815v62_/tmpl815v62_.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba746158c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba745e4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba745e4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba745e4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl815v62_                        0x000055b8b0d775fc <unavailable> + 5628

    5    libc.so.6                          0x00002ba746344460 __libc_start_main +
    245

    6    tmpl815v62_                        0x000055b8b0d771e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n        result.append(xs[x])\n\
    \        x++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg3tixnwy.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824892
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var j = 0\n    for x in xs {\n        result.append(1)\n      \
    \  result[j] += x\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpoazbqrps.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i] * xs[i])\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzxnhd64q/tmpzxnhd64q.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b295c168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b295be5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b295be5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b295be5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzxnhd64q                        0x00005631d0bcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b295c354460 __libc_start_main +
    245

    6    tmpzxnhd64q                        0x00005631d0bcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x * xs[i])\n\
    \        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp71idpnfj/tmp71idpnfj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba452f68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba452c5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba452c5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba452c5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71idpnfj                        0x000055dec529e64c <unavailable> + 5708

    5    libc.so.6                          0x00002ba453154460 __libc_start_main +
    245

    6    tmp71idpnfj                        0x000055dec529e239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i])\n\
    \        i += 1\n    }\n    result.append(0)\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp_m8cbuo2/tmp_m8cbuo2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b493270fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4932406b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4932406988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49324057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_m8cbuo2                        0x00005604be6c753c <unavailable> + 5436

    5    libc.so.6                          0x00002b49328fb460 __libc_start_main +
    245

    6    tmp_m8cbuo2                        0x00005604be6c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824893
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative([3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>> derivative([1,\
    \ 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n    var result =\
    \ [Int]()\n    for x in xs {\n        result.append(x * x)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplv11d2sv/tmplv11d2sv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78decc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78de9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78de9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78de9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplv11d2sv                        0x00005581e39fe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b78deeac460 __libc_start_main +
    245

    6    tmplv11d2sv                        0x00005581e39fe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824892

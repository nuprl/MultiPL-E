name: HumanEval_64_vowels_count
language: swift
prompt: "\n/// Write a function vowels_count which takes a string representing\n///\
  \ a word as input and returns the number of vowels in the string.\n/// Vowels in\
  \ this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but only\
  \ when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(\"\
  abcde\")\n/// 2\n/// >>> vowels_count(\"ACEDY\")\n/// 3\nfunc vowels_count(s: String)\
  \ -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
  \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
  \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
  \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
completions: ["    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\":\n        case \"e\":\n        case \"i\":\n        case \"o\":\n    \
    \    case \"u\":\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       switch c {\n        case \"a\":\n        case \"e\":\n        case \"\
    i\":\n        case \"o\":\n        case \"u\":\n            count += 1\n     \
    \   default:\n            break\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for c in s {\n        switch c {\n        case \"a\":\n     \
    \   case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"u\"\
    :\n            count += 1\n        default:\n            break\n        }\n  \
    \  }\n    return count", "    var count = 0\n    for c in s {\n        switch\
    \ c {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n       \
    \ case \"o\":\n        case \"u\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        switch c {\n        case \"a\":\n        case \"e\"\
    :\n        case \"i\":\n        case \"o\":\n        case \"u\":\n           \
    \ count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "\tvowels := []rune(\"\
    aeiouy\")\n\tn := 0\n\tfor _, r := range s {\n\t\tif !contains(vowels, r) {\n\t\
    \t\tn++\n\t\t}\n\t}\n\treturn n", "    var count = 0\n    for c in s {\n     \
    \   switch c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count\
    \ += 1\n        default:\n            break\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s {\n        switch c {\n        case \"a\", \"\
    e\", \"i\", \"o\", \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count", "    var count = 0\n    for c\
    \ in s {\n        switch c {\n        case \"a\":\n        case \"e\":\n     \
    \   case \"i\":\n        case \"o\":\n        case \"u\":\n            count +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s {\n        switch c {\n        case \"a\":\n\
    \        case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"\
    u\":\n            count += 1\n        default:\n            break\n        }\n\
    \    }\n    return count", "\tvowels := [...]string{'a', 'e', 'i', 'o', 'u'}\n\
    \tvowelsCount := 0\n\tfor _, v := range s {\n\t\tif v == 'y' {\n\t\t\tvowelsCount++\n\
    \t\t}\n\t\tfor _, vv := range vowels {\n\t\t\tif v == vv {\n\t\t\t\tvowelsCount++\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn vowelsCount", "    var count = 0\n    for c in s\
    \ {\n        switch c {\n        case \"a\":\n        case \"e\":\n        case\
    \ \"i\":\n        case \"o\":\n        case \"u\":\n            count += 1\n \
    \       default:\n            break\n        }\n    }\n    return count", "  \
    \  var count = 0\n    for c in s {\n        switch c {\n        case \"a\":\n\
    \        case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"\
    u\":\n            count += 1\n        default:\n            break\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        switch\
    \ c {\n        case \"a\": case \"e\": case \"i\": case \"o\": case \"u\":\n \
    \           count += 1\n        default:\n            break\n        }\n    }\n\
    \    return count", "    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\": case \"e\": case \"i\": case \"o\": case \"u\":\n       \
    \     count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "\tvowels := []rune(\"aeiouy\")\n\ti := 0\n\tfor i < len(s) {\n\t\t\
    if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\
    \t\t\ti++\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\treturn i - 1", "    var count\
    \ = 0\n    for c in s {\n        switch c {\n        case \"a\":\n        case\
    \ \"e\":\n        case \"i\":\n        case \"o\":\n        case \"u\":\n    \
    \        count += 1\n        default:\n            break\n        }\n    }\n \
    \   return count", "    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count", "    var count = 0\n    for c\
    \ in s {\n        switch c {\n        case \"a\":\n        case \"e\":\n     \
    \   case \"i\":\n        case \"o\":\n        case \"u\":\n            count +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given a list of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n/// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n/// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n/// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n/// For lst = [0,81,12,3,1,21] the output should be 3\n///\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst: [Int]) ->\
  \ Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var max = 0\n    var sum = 0\n    for x in lst {\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    for x in lst {\n       \
    \ if x == max {\n            sum += x\n        }\n    }\n    return sum", "  \
    \  var maxPrime: Int = 0\n    var maxSum: Int = 0\n    for num in lst {\n    \
    \    if num > maxPrime {\n            maxPrime = num\n        }\n    }\n    for\
    \ num in lst {\n        if num > maxPrime {\n            continue\n        }\n\
    \        if num > maxSum {\n            maxSum = num\n        }\n    }\n    return\
    \ maxSum", "    var max = 0\n    var sum = 0\n    for num in lst {\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num > max {\n            sum += num\n        }\n    }\n    return\
    \ sum", "    var max = 0\n    var sum = 0\n    for x in lst {\n        if x >\
    \ max {\n            max = x\n        }\n    }\n    for x in lst {\n        if\
    \ x == max {\n            sum += x\n        }\n    }\n    return sum", "    var\
    \ max = 0\n    var sum = 0\n    for num in lst {\n        if num > max {\n   \
    \         max = num\n        }\n    }\n    for num in lst {\n        if num ==\
    \ max {\n            sum += num\n        }\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    var sumOfDigits = 0\n    for element in lst {\n        if element >\
    \ largestPrime {\n            largestPrime = element\n        }\n    }\n    for\
    \ element in lst {\n        if element % largestPrime == 0 {\n            sumOfDigits\
    \ += element\n        }\n    }\n    return sumOfDigits", "    var max = 0\n  \
    \  var sum = 0\n    for x in lst {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    for x in lst {\n        if x == max {\n            sum\
    \ += x\n        }\n    }\n    return sum", "    var largestPrime: Int = 0\n  \
    \  var sumOfDigits = 0\n    for element in lst {\n        if element > largestPrime\
    \ {\n            largestPrime = element\n        }\n    }\n    for element in\
    \ lst {\n        if element % largestPrime == 0 {\n            sumOfDigits +=\
    \ element\n        }\n    }\n    return sumOfDigits", "    var max = 0\n    var\
    \ maxIndex = 0\n    var sum = 0\n    for index in 0..<lst.count {\n        if\
    \ lst[index] > max {\n            max = lst[index]\n            maxIndex = index\n\
    \        }\n    }\n    for index in 0..<lst.count {\n        if lst[index] ==\
    \ max {\n            sum += maxIndex - index\n        }\n    }\n    return sum",
  "    var max = 0\n    var sum = 0\n    for x in lst {\n        if x == 0 {\n   \
    \         continue\n        }\n        if x > max {\n            max = x\n   \
    \     }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {", "    var largestPrime: Int = 0\n    var largestPrimeDigit: Int =\
    \ 0\n    var largestPrimeDigitCount: Int = 0\n    for number in lst {\n      \
    \  if number > largestPrime {\n            largestPrime = number\n           \
    \ largestPrimeDigit = number\n            largestPrimeDigitCount = 1\n       \
    \ } else {\n            if number == largestPrime {\n                largestPrimeDigitCount\
    \ += 1\n                if largestPrimeDigitCount > largestPrimeDigit {\n    \
    \                largestPrimeDigit = largestPrimeDigitCount\n                }\n\
    \            }\n        }\n    }\n    return largestPrimeDigit", "    var max\
    \ = 0\n    var sum = 0\n    for num in lst {\n        if num > max {\n       \
    \     max = num\n        }\n    }\n    for num in lst {\n        if num == max\
    \ {\n            sum += num\n        }\n    }\n    return sum", "    var max =\
    \ 0\n    var sum = 0\n    for x in lst {\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    for x in lst {\n        if x > max {\n          \
    \  sum += x\n        }\n    }\n    return sum", "    var max = 0\n    var sum\
    \ = 0\n    for x in lst {\n        if x > max {\n            max = x\n       \
    \ }\n    }\n    for x in lst {\n        if x > max {\n            sum += x\n \
    \       }\n    }\n    return sum", "    var max = 0\n    var sum = 0\n    for\
    \ x in lst {\n        if x > max {\n            max = x\n        }\n    }\n  \
    \  for x in lst {\n        if x == max {\n            sum += x\n        }\n  \
    \  }\n    return sum", "    var max = 0\n    var sum = 0\n    for num in lst {\n\
    \        if num > max {\n            max = num\n        }\n    }\n    for num\
    \ in lst {\n        if num == max {\n            sum += num\n        }\n    }\n\
    \    return sum", "    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum", "    var largestPrime: Int = 0\n    var largestPrimeDigit: Int\
    \ = 0\n    var sum: Int = 0\n    for number in lst {\n        if number > largestPrime\
    \ {\n            largestPrime = number\n            largestPrimeDigit = number\n\
    \        } else {\n            if number % largestPrime == 0 {\n             \
    \   sum += largestPrimeDigit\n            }\n            largestPrimeDigit = number\n\
    \        }\n    }\n    return sum", "    var max = 0\n    var maxIndex = 0\n \
    \   for index in 0..<lst.count {\n        if lst[index] > max {\n            max\
    \ = lst[index]\n            maxIndex = index\n        }\n    }\n    var sum =\
    \ 0\n    for index in 0..<lst.count {\n        if lst[index] == max {\n      \
    \      sum += Int(lst[index])\n        }\n    }\n    return sum", "    var max\
    \ = 0\n    var maxIndex = 0\n    for index in 0..<lst.count {\n        if lst[index]\
    \ > max {\n            max = lst[index]\n            maxIndex = index\n      \
    \  }\n    }\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ == maxIndex {\n            continue\n        }\n        if lst[index] > max\
    \ {\n            continue\n        }\n        sum += lst[index]\n    }\n    return\
    \ sum"]
stop_tokens:
- "\n}"

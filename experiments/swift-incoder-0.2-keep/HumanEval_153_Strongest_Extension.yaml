name: HumanEval_153_Strongest_Extension
language: swift
prompt: "\n/// You will be given the name of a class (a string) and a list of extensions.\n\
  /// The extensions are to be used to load additional classes to the class. The\n\
  /// strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  /// letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n/// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n/// You should find the strongest extension and return a string in this \n///\
  \ format: ClassName.StrongestExtensionName.\n/// If there are two or more extensions\
  \ with the same strength, you should\n/// choose the one that comes first in the\
  \ list.\n/// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n/// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  /// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n/// (its strength is -1).\n/// Example:\n/// for Strongest_Extension('my_class',\
  \ ['AA', 'Be', 'CC']) == 'my_class.AA'\nfunc Strongest_Extension(class_name: String,\
  \ extensions: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(Strongest_Extension(class_name: \"Watashi\"\
  , extensions: [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\nassert(Strongest_Extension(class_name:\
  \ \"Boku123\", extensions: [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
  ]) == \"Boku123.YEs.WeCaNe\")\nassert(Strongest_Extension(class_name: \"__YESIMHERE\"\
  , extensions: [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
  ]) == \"__YESIMHERE.NuLl__\")\nassert(Strongest_Extension(class_name: \"K\", extensions:\
  \ [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\nassert(Strongest_Extension(class_name:\
  \ \"__HAHA\", extensions: [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\
  )\nassert(Strongest_Extension(class_name: \"YameRore\", extensions: [\"HhAas\",\
  \ \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\
  assert(Strongest_Extension(class_name: \"finNNalLLly\", extensions: [\"Die\", \"\
  NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\nassert(Strongest_Extension(class_name:\
  \ \"_\", extensions: [\"Bb\", \"91245\"]) == \"_.Bb\")\nassert(Strongest_Extension(class_name:\
  \ \"Sp\", extensions: [\"671235\", \"Bb\"]) == \"Sp.671235\")"
completions: ["    var strongest_extension = \"\"\n    var strength = -1\n    for\
    \ extension in extensions {\n        var class_name_extension = class_name + extension\n\
    \        var class_name_extension_lowercase = class_name_extension.lowercased()\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index + class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index + class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index + class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index + class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index + class_name_extension_lowercase.characters.count\n\
    \        var class_name_extension_lowercase_index = class_name_extension_lowercase_index\
    \ - class_name_extension_lowercase_index.characters.count\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index / 2\n        var class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index % 2\n        var class_name_extension_",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_length = class_name_components.count\n      \
    \  let extension_length = extension_components.count\n        let class_name_components_count\
    \ = class_name_length + extension_length\n        let class_name_components_count_upper\
    \ = class_name_components_count - class_name_components.count\n        let class_name_components_count_lower\
    \ = class_name_components_count - class_name_components.count + class_name_components.count\n\
    \        let class_name_components_count_cap = class_name_components_count - class_name_components.count\
    \ + class_name_components.count + class_name_components.count\n        let class_name_components_count_sm\
    \ = class_name_components_count - class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_components.count + class_name_components.count\
    \ + class_name_components.count + class_name_", "    var strongest_extension =\
    \ \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_components = class_name.components(separatedBy: \".\")\n  \
    \      let extension_components = extension.components(separatedBy: \".\")\n \
    \       let class_name = class_name_components.last!\n        let extension =\
    \ extension_components.last!\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components_count - class_name_components_count.count\n\
    \        let extension_components_count_cap = extension_components_count - extension_components_count.count\n\
    \        let class_name_components_count_sm = class_name_components_count + class_name_components_count.count\n\
    \        let extension_components_count_sm = extension_components_count + extension_components_count.count\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm)\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm)\n       \
    \ let class_name_components_count_cap_sm_ratio = class_name_components_count_cap_sm\
    \ / class_name_components_count_sm\n        let extension_components_count_cap_sm_ratio\
    \ = extension_components_count_cap_sm / extension_components_count_sm\n      \
    \  let strength = class_name_components_count_cap_sm_ratio - extension_components_count_cap_sm_ratio\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToCapitalLetters()\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToCapitalLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = count_capital_letters(extension)\
    \ - count_capital_letters(extension.lowercaseString)\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = class_name\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ extension_upper = extension.uppercased()\n        let extension_lower = extension.lowercased()\n\
    \        let extension_length = extension_upper.count - extension_lower.count\n\
    \        let extension_strength = extension_upper.count - extension_lower.count\n\
    \        if strength == -1 || strength > extension_strength {\n            strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        var class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        var extension_components = extension.components(separatedBy:\
    \ \".\")\n        var class_name = class_name_components[class_name_components.count\
    \ - 1]\n        var extension = extension_components[extension_components.count\
    \ - 1]\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_components.count\n        var class_name_components_count = class_name_components.count\n\
    \        var extension_components_count = extension_components.count\n       \
    \ var class_name_components_count = class_name_components.count\n        var extension_components_count\
    \ = extension_", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.reduce(0) { (sum, letter) ->\
    \ Int in\n            sum += letter.uppercased() - letter.lowercased()\n     \
    \       return sum\n        }\n        if extension_strength > max_strength {\n\
    \            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n            if letter.isLowercase\
    \ {\n                extension_strength += 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_components = class_name.components(separatedBy: \".\")\n  \
    \      let extension_components = extension.components(separatedBy: \".\")\n \
    \       let class_name_length = class_name_components.count\n        let extension_length\
    \ = extension_components.count\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components_count - class_name_components.count\n\
    \        let extension_components_count_upper = extension_components_count - extension_components.count\n\
    \        let class_name_components_count_lower = class_name_components.count -\
    \ class_name_components_count_upper\n        let extension_components_count_lower\
    \ = extension_components.count - extension_components_count_upper\n        let\
    \ class_name_components_count_lower_upper = class_name_components_count_lower\
    \ - class_name_components_count_upper\n        let extension_components_count_lower_upper\
    \ = extension_components_count_lower - extension_components_count_upper\n    \
    \    let class_name_components_count_lower_upper_sm = class_name_components_count_lower_upper\
    \ - class_name_components_count_upper\n        let extension_components_count_lower_upper_sm\
    \ = extension_components_count_lower_upper - extension_components_count_upper\n\
    \        let class_name_components_count_lower_upper_cap = class_name_components_count_lower_upper\
    \ - class_name_components_count_upper_sm\n        let extension_components_count_lower_upper_cap\
    \ = extension_components_count_lower_upper - extension_components_count_upper_sm\n\
    \        let class_name_components_count_lower_upper_sm_cap = class_name_components_count_lower_upper_sm\
    \ - class_name_components_count_upper_cap\n        let extension_components_count_lower_upper_sm_cap\
    \ = extension_components_count_lower_upper_sm - extension_components_count_upper_cap\n\
    \        let class_name_components_count_lower_upper_sm_cap_sm = class_name_components_count_lower_upper_sm_cap\
    \ - class_name_components_count_lower_upper_sm\n        let extension_components_count_lower_upper_sm_cap_sm\
    \ = extension_components_count_lower_upper_sm_cap - extension_components_count_lower_upper_sm\n\
    \        let class_name_components_count_lower_upper_sm_cap_sm_sm = class_name_components_count_lower_upper_sm_cap_sm\
    \ - class_name_components_count_lower_upper_sm\n        let extension_components_count_lower_upper_sm_cap_sm_sm\
    \ = extension_components_count_lower_upper_sm_cap_sm - extension_components_count_lower_upper_sm\n\
    \        let class_", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.reduce(0)\
    \ { (sum, char) -> Int in\n            let char_upper = char.uppercaseString\n\
    \            let char_lower = char.lowercaseString\n            return sum + char_upper.characters.count\
    \ - char_lower.characters.count\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter({ $0.isUppercase}).count\n\
    \        let extension_components_count_lower = extension_components.filter({\
    \ $0.isLowercase}).count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper\n        let class_name_components_count_lower_small\
    \ = class_name_components_count_lower - class_name_components_count_upper_small\n\
    \        let extension_components_count_upper_small = extension_components_count_upper\
    \ - extension_components_count_lower_small\n        let extension_components_count_lower_small\
    \ = extension_components_count_lower - extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_upper\n        let extension_components_count_equal_small\
    \ = extension_components_count_lower == extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_lower_small\n        let extension_components_count_equal_small\
    \ = extension_components_count_lower == extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_lower_small\n        let extension_components_count_equal_small\
    \ = extension_components_count_lower == extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_lower_small\n        let extension_components_count_equal_small\
    \ = extension_components_count_lower == extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_lower_small\n        let extension_components_count_equal_small\
    \ = extension_components_count_lower == extension_components_count_upper_small\n\
    \        let extension_components_count_equal_small = extension_components_count_lower\
    \ == extension_components_count_lower_small\n        let extension_", "    var\
    \ strongest_extension = \"\"\n    var max_strength = -1\n    for extension in\
    \ extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        var strength = count_capital_letters(extension)\
    \ - count_capital_letters(extension.lowercaseString)\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components.map { $0.isUppercase\
    \ }.count\n        let extension_components_count_cap = extension_components.map\
    \ { $0.isUppercase }.count\n        let class_name_components_count_sm = class_name_components.map\
    \ { $0.isLowercase }.count\n        let extension_components_count_sm = extension_components.map\
    \ { $0.isLowercase }.count\n        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm)\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm)\n       \
    \ let class_name_components_count_cap_sm_ratio = class_name_components_count_cap_sm\
    \ / class_name_components_count_sm\n        let extension_components_count_cap_sm_ratio\
    \ = extension_components_count_cap_sm / extension_components_count_sm\n      \
    \  let class_name_components_count_cap_sm_ratio_power = class_name_components_count_cap_sm_ratio\
    \ * class_name_components_count_cap\n        let extension_components_count_cap_sm_ratio_power\
    \ = extension_components_count_cap_sm_ratio * extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm_ratio_power_power = class_name_components_count_cap_sm_ratio_power\
    \ * class_name_components_count_cap\n        let extension_components_count_cap_sm_ratio_power_power\
    \ = extension_components_count_cap_sm_ratio_power * extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm_ratio_power_power_power = class_name_components_count_cap_sm_ratio_power_power\
    \ * class_name_components_count_cap\n        let extension_components_count_cap_sm_ratio_power_power_power\
    \ = extension_components_count_cap_sm_ratio_power_power * extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm_ratio_power_power_power_power\
    \ = class_name_components_count_cap_sm_ratio_power_power_power * class_name_components_count_cap\n\
    \        let extension_components_count_cap_sm_ratio_power_power_power_power =\
    \ extension_components_count_cap_sm_ratio_power_power_power * extension_component",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return strongest_extension", "    var strongest_extension = \"\"\n \
    \   var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1 // default value\n    for extension in extensions {\n        let cap =\
    \ extension.count\n        let sm = class_name.count\n        let strength_fraction\
    \ = cap - sm\n        if strength_fraction > strength {\n            strongest_extension\
    \ = extension\n            strength = strength_fraction\n        }\n    }\n  \
    \  return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.filter({ $0.isUppercase\
    \ }).count - extension.characters.filter({ $0.isLowercase }).count\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for char in extension {\n            if char.uppercased() != char {\n\
    \                extension_strength -= 1\n            }\n        }\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        var\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        var\
    \ extension_components = extension.components(separatedBy: \".\")\n        var\
    \ class_name = class_name_components[class_name_components.count-1]\n        var\
    \ extension = extension_components[extension_components.count-1]\n        var\
    \ class_components = class_name.components(separatedBy: \"_\")\n        var extension_components\
    \ = extension.components(separatedBy: \"_\")\n        var class_name = class_components[class_components.count-1]\n\
    \        var extension = extension_components[extension_components.count-1]\n\
    \        var class_components = class_name.components(separatedBy: \"-\")\n  \
    \      var extension_components = extension.components(separatedBy: \"-\")\n \
    \       var class_name = class_components[class_components.count-1]\n        var\
    \ extension = extension_components[extension_components.count-1]\n        var\
    \ class_components = class_name.components(separatedBy: \".\")\n        var extension_components\
    \ = extension.components(separatedBy: \".\")\n        var class_name = class_components[class_components.count-1]\n\
    \        var extension = extension_components[extension_components.count-1]\n\
    \        var class_components = class_name.components(separatedBy: \"_\")\n  \
    \      var extension_components = extension.components(separatedBy: \"_\")\n \
    \       var class_name = class_components[class_components.count-1]\n        var\
    \ extension = extension_components[extension_components.count-1]\n        var\
    \ class_components = class_name.components(separatedBy: \"-\")\n        var extension_components\
    \ = extension.components(separatedBy: \"-\")\n        var class_name = class_components[class_components.count-1]\n\
    \        var extension = extension_components[extension_components.count-1]\n\
    \        var class_components = class_name.components(separatedBy: \".\")\n  \
    \      var extension_components = extension.components(separatedBy: \".\")\n \
    \       var class_name = class_components[class_components.count-1]\n        var\
    \ extension = extension_components[extension_components.count-1]\n        var\
    \ class_components = class_name.components(separatedBy: \"_\")\n        var extension_components\
    \ = extension.components(separatedBy: \"_\")\n        var class_name = class_components[class_components.count-1]\n\
    \        var extension = extension_components[extension_components.count-1]\n\
    \        var class_components = class_name.components(separatedBy: \"-\")\n  \
    \      var extension_components = extension.components(separatedBy: \"-\")\n \
    \       var class_name = class_components[class_components.count-1]\n        var\
    \ extension = extension_components[extension_components.count-1]\n        var\
    \ class_components = class_name.components(separatedBy: \".\")\n        var ",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        var extension_length = extension.count\n\
    \        var extension_strength = extension_length - 1\n        for _ in 0..<extension_length\
    \ {\n            if extension_strength > strength {\n                strongest_extension\
    \ = class_name\n                strength = extension_strength\n            }\n\
    \            extension_strength -= 1\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_extension_strength = class_name_components_count -\
    \ extension_components_count\n        if class_name_components_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_extension = class_name + extension\n        let strength =\
    \ class_name_extension.countUppercaseLetters() - class_name_extension.countLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = class_name_extension\n        }\n    }\n   \
    \ return strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name_components_count = class_name_components.count\n        let extension_components_count\
    \ = extension_components.count\n        let class_name_components_count_upper\
    \ = class_name_components.filter({ $0.isUppercased() }).count\n        let extension_components_count_lower\
    \ = extension_components.filter({ $0.isLowercased() }).count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper\n        let extension_components_count_small\
    \ = extension_components_count_lower_small - extension_components_count_upper_small\n\
    \        let extension_components_count_large = extension_components_count_lower\
    \ + extension_components_count_upper_small\n        let extension_components_count_large_small\
    \ = extension_components_count_lower + extension_components_count_upper\n    \
    \    let extension_components_count_large_large = extension_components_count_lower\
    \ + extension_components_count_upper_small + extension_components_count_upper\n\
    \        let extension_components_count_large_large_small = extension_components_count_lower\
    \ + extension_components_count_upper_small + extension_components_count_upper\
    \ + extension_components_count_upper_small\n        let extension_components_count_large_large_small_large\
    \ = extension_components_count_lower + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper\n        let extension_components_count_large_large_small_large_small\
    \ = extension_components_count_lower + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_components_count_upper_small\
    \ + extension_components_count_upper\n        let extension_components_count_large_large_small_large_small_large\
    \ = extension_components_count_lower + extension_components_count_upper_small\
    \ + extension_components_count_upper + extension_", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        var strength = count_capital_letters(extension)\
    \ - count_capital_letters(extension.lowercaseString)\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for char in extension\
    \ {\n            if char.uppercased() != char {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n            if letter.isLowercase\
    \ {\n                extension_strength += 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToCapitalLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            strongest_extension = class_name + \".\" + extension\n\
    \            break\n        }\n    }\n    return strongest_extension", "    var\
    \ strongest_extension = \"\"\n    var max_strength = -1\n    for extension in\
    \ extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_name_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"_\")\n        let extension_components = extension.components(separatedBy:\
    \ \"_\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"-\")\n        let extension_components = extension.components(separatedBy:\
    \ \"-\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"_\")\n        let extension_components = extension.components(separatedBy:\
    \ \"_\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"-\")\n        let extension_components = extension.components(separatedBy:\
    \ \"-\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"_\")\n        let extension_components = extension.components(separatedBy:\
    \ \"_\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"-\")\n        let extension_components = extension.components(separatedBy:\
    \ \"-\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(separatedBy:\
    \ \"_\")\n        let extension_components = extension.components(separatedBy:\
    \ \"_\")\n        let class_name = class_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_components = class_name.components(",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter({ $0.isUppercased()\
    \ }).count\n        let extension_components_count_lower = extension_components.filter({\
    \ $0.isLowercased() }).count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper\n        let class_name_components_count_lower_small\
    \ = class_name_components_count_lower - class_name_components_count_upper_small\n\
    \        let extension_components_count_upper_small = extension_components_count_upper\
    \ - extension_components_count_lower_small\n        let class_name_components_count_upper_small_strength\
    \ = class_name_components_count_upper_small / class_name_components_count\n  \
    \      let extension_components_count_lower_small_strength = extension_components_count_lower_small\
    \ / extension_components_count\n        let class_name_components_count_lower_small_strength\
    \ = class_name_components_count_lower_small / class_name_components_count\n  \
    \      let extension_components_count_upper_small_strength = extension_components_count_upper_small\
    \ / extension_components_count\n        if class_name_components_count_upper_small_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_count_upper_small_strength\n\
    \        }\n        if extension_components_count_lower_small_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_components_count_lower_small_strength\n        }\n        if class_name_components_count_lower_small_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_count_lower_small_strength\n\
    \        }\n        if extension_components_count_upper_small_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_components_count_upper_small_strength\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", "    var strongest_extension = \"\
    \"\n    var max_strength = -1\n    for extension in extensions {\n        let\
    \ extension_strength = extension.countUppercaseLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    var extension_counter = 0\n    for extension in extensions {\n   \
    \     extension_counter += 1\n        let extension_counter_string = String(extension_counter)\n\
    \        let extension_counter_string_capitalized = extension_counter_string.capitalized\n\
    \        let extension_counter_string_smaller = extension_counter_string_capitalized.lowercased()\n\
    \        let extension_counter_string_smallerCapitalized = extension_counter_string_smaller.capitalized\n\
    \        let extension_counter_string_smallerCapitalizedToUppercase = extension_counter_string_smallerCapitalized.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercase = extension_counter_string_smallerCapitalized.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercase.uppercased()\n    \
    \    let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercase", "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let strength =\
    \ class_name.characters.filter({ $0.isUppercase }).count - class_name.characters.filter({\
    \ $0.isLowercase }).count\n        if strength > max_strength {\n            max_strength\
    \ = strength\n            strongest_extension = extension\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for char in extension {\n\
    \            if char.uppercased() != char {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = class_name\n        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let class_name_components =\
    \ class_name.components(separatedBy: \".\")\n        let extension_components\
    \ = extension.components(separatedBy: \".\")\n        let class_name_components_count\
    \ = class_name_components.count\n        let extension_components_count = extension_components.count\n\
    \        let class_name_components_count_cap = class_name_components.count - class_name_components_count\
    \ + 1\n        let extension_components_count_cap = extension_components.count\
    \ - extension_components_count + 1\n        let class_name_components_count_sm\
    \ = class_name_components_count - class_name_components_count_cap\n        let\
    \ extension_components_count_sm = extension_components_count - extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm) / 2\n   \
    \     let class_name_components_count_cap_sm_cap = class_name_components_count_cap\
    \ - class_name_components_count_cap_sm + 1\n        let extension_components_count_cap_sm_cap\
    \ = extension_components_count_cap - extension_components_count_cap_sm + 1\n \
    \       let class_name_components_count_cap_sm_sm = class_name_components_count_cap_sm\
    \ - class_name_components_count_cap_sm_cap\n        let extension_components_count_cap_sm_sm\
    \ = extension_components_count_cap_sm - extension_components_count_cap_sm_cap\n\
    \        let class_name_components_count_cap_sm_cap_sm = class_name_components_count_cap_sm_cap\
    \ - class_name_components_count_cap_sm_sm + 1\n        let extension_components_count_cap_sm_cap_sm\
    \ = extension_components_count_cap_sm_cap - extension_components_count_cap_sm_sm\
    \ + 1\n        let class_name_components_count_cap_sm_sm_cap = class_name_components_count_cap_sm_sm\
    \ - class_name_components_count_cap_sm_cap_sm + 1\n        let extension_components_count_cap_sm_sm_cap\
    \ = extension_components_count_cap_sm_sm - extension_components_count_cap_sm_cap_sm\
    \ + 1\n        let class_name_components_count_cap_sm_cap_sm_sm = class_name_components_count_cap_sm_cap_sm\
    \ - class_name_components_count_cap_sm_sm_cap + 1\n        let extension_components_count_cap_sm_cap_sm_sm\
    \ = extension_components_count_cap_s", "    var strongest_extension = \"\"\n \
    \   var strength = -1\n    for extension in extensions {\n        var extension_length\
    \ = extension.count\n        var extension_strength = extension_length - 1\n \
    \       for index in 0..<extension_length {\n            if extension[index] ==\
    \ extension[index].lowercased() {\n                extension_strength -= 1\n \
    \           }\n        }\n        if extension_strength > strength {\n       \
    \     strongest_extension = class_name\n            strength = extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter({ $0.isUppercased()\
    \ }).count\n        let extension_components_count_lower = extension_components.filter({\
    \ $0.isLowercased() }).count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper_small\n        let extension_strength = class_name_components_count_upper_small\
    \ * extension_components_count_lower_small\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return strongest_extension", "    var strongest_extension = \"\"\n \
    \   var max_strength = -1\n    for extension in extensions {\n        var strength\
    \ = count_capital_letters(extension) - count_capital_letters(class_name)\n   \
    \     if strength > max_strength {\n            max_strength = strength\n    \
    \        strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = class_name\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return strongest_extension", " \
    \   var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let strength = extension.countUpToUppercaseLetters()\
    \ - extension.countUpToLowercaseLetters()\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.filter({\
    \ $0.isUppercase }).count - extension.characters.filter({ $0.isLowercase }).count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name_components_count = class_name_components.count\n        let extension_components_count\
    \ = extension_components.count\n        if class_name_components_count == extension_components_count\
    \ {\n            if class_name_components_count == 1 {\n                if class_name_components[0]\
    \ == extension_components[0] {\n                    strength = class_name_components[0]\n\
    \                }\n            }\n            else {\n                if class_name_components[0]\
    \ == extension_components[0] && class_name_components[1] == extension_components[1]\
    \ {\n                    strength = class_name_components[0]\n               \
    \ }\n            }\n        }\n    }\n    if strength == -1 {\n        return\
    \ class_name\n    }\n    else {\n        return class_name + \".\" + extensions[extensions.index(of:\
    \ extensions[extensions.index(of: extensions[extensions.index(of: extensions)!])!])!]\n\
    \    }", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    var class_name_lowercase = class_name.lowercased()\n    var class_name_uppercase\
    \ = class_name.uppercased()\n    for extension in extensions {\n        var extension_lowercase\
    \ = extension.lowercased()\n        var extension_uppercase = extension.uppercased()\n\
    \        var extension_strength = class_name_lowercase.distance(class_name_uppercase)\n\
    \        var extension_strength_2 = class_name_uppercase.distance(class_name_lowercase)\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n        if extension_strength_2 > strongest_extension_strength {\n\
    \            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength_2\n        }\n    }\n    return strongest_extension", " \
    \   var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for c in extension {\n \
    \           if c >= 'A' && c <= 'Z' {\n                extension_strength -= 1\
    \ \n            }\n            if c >= 'a' && c <= 'z' {\n                extension_strength\
    \ -= 1 \n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let class_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        if class_components.count < extension_components.count {\n \
    \           strongest_extension = extension\n            strength = class_components.count\
    \ - extension_components.count\n        } else if class_components.count == extension_components.count\
    \ {\n            if class_components[0] == extension_components[0] {\n       \
    \         strongest_extension = extension\n                strength = class_components.count\
    \ - extension_components.count\n            }\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_components = class_name.components(separatedBy: \".\")\n  \
    \      let extension_components = extension.components(separatedBy: \".\")\n \
    \       let class_name_components_count = class_name_components.count\n      \
    \  let extension_components_count = extension_components.count\n        let class_name_components_extension_strength\
    \ = class_name_components_count - extension_components_count\n        if class_name_components_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countElements() - extension.lowercased().countElements()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        var strength =\
    \ count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1 // default value\n    for extension in extensions {\n        let cap =\
    \ extension.count\n        let sm = class_name.count\n        let strength = cap\
    \ - sm\n        if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = class_name\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return strongest_extension", " \
    \   var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= letter.isUpper()\n            }\n        }\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters() -\
    \ extension.countUpToLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let class_name_extension =\
    \ class_name + extension\n        let class_name_extension_lowercase = class_name_extension.lowercased()\n\
    \        let class_name_extension_lowercase_index = class_name_extension.lowercased().characters.index(of:\
    \ class_name_extension_lowercase)\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! / 2\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index! + class_name_extension.lowercased().characters.count\
    \ - class_name_extension_lowercase_index!\n        let class_name_extension_lowercase_index\
    \ = class_name_extension_lowercase_index", "    var strongest_extension = \"\"\
    \n    var max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n  \
    \      if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_components = class_name.components(separatedBy: \".\")\n  \
    \      let extension_components = extension.components(separatedBy: \".\")\n \
    \       let class_name = class_name_components[class_name_components.count - 1]\n\
    \        let extension = extension_components[extension_components.count - 1]\n\
    \        let strength = class_name.distance(to: extension)\n        if strength\
    \ > max_strength {\n            max_strength = strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c.isUppercase {\n              \
    \  extension_strength -= 1\n            }\n            if c.isLowercase {\n  \
    \              extension_strength += 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter({ $0.isUppercased()\
    \ }).count\n        let extension_components_count_lower = extension_components.filter({\
    \ $0.isLowercased() }).count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper\n        let extension_strength = class_name_components_count_upper_small\
    \ * extension_components_count_lower_small\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension: String = \"\"\n    var strongest_extension_strength:\
    \ Int = 0\n    for extension in extensions {\n        let extension_strength =\
    \ extension.countUpToLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components.count - class_name_components_count\n\
    \        let extension_components_count_cap = extension_components.count - extension_components_count\n\
    \        let class_name_components_count_sm = class_name_components_count - class_name_components_count_cap\n\
    \        let extension_components_count_sm = extension_components_count - extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ * class_name_components_count_sm) / class_name_components_count\n        let\
    \ extension_components_count_cap_sm = (extension_components_count_cap * extension_components_count_sm)\
    \ / extension_components_count\n        let class_name_components_count_cap_sm_max\
    \ = class_name_components_count_cap_sm > extension_components_count_cap_sm ? class_name_components_count_cap_sm\
    \ : extension_components_count_cap_sm\n        let extension_components_count_cap_sm_max\
    \ = extension_components_count_cap_sm > class_name_components_count_cap_sm ? extension_components_count_cap_sm\
    \ : class_name_components_count_cap_sm\n        let class_name_components_count_cap_sm_min\
    \ = class_name_components_count_cap_sm < extension_components_count_cap_sm ? class_name_components_count_cap_sm\
    \ : extension_components_count_cap_sm\n        let extension_components_count_cap_sm_min\
    \ = extension_components_count_cap_sm < class_name_components_count_cap_sm ? extension_components_count_cap_sm\
    \ : class_name_components_count_cap_sm\n        let class_name_components_count_cap_sm_max\
    \ = class_name_components_count_cap_sm > extension_components_count_cap_sm ? class_name_components_count_cap_sm\
    \ : extension_components_count_cap_sm\n        let extension_components_count_cap_sm_max\
    \ = extension_components_count_cap_sm > class_name_components_count_cap_sm ? extension_components_count_cap_sm\
    \ : class_name_components_count_cap_sm\n        let class_name_components_count_cap_sm_min\
    \ = class_name_components_count_cap_sm < extension_components_count_cap_sm ? class_name_components_count_",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = class_name\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return strongest_extension", " \
    \   var strongest_extension = \"\"\n    var strength = -1 // default strength\
    \ to -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > strongest_extension.count {\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercaseLetters() - extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name_length = class_name_components.count\n        let extension_length\
    \ = extension_components.count\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components_count.map { $0.capitalized\
    \ }\n        let extension_components_count_cap = extension_components_count.map\
    \ { $0.capitalized }\n        let class_name_components_count_sm = class_name_components_count.map\
    \ { $0.lowercased() }\n        let extension_components_count_sm = extension_components_count.map\
    \ { $0.lowercased() }\n        let class_name_components_count_cap_min = class_name_components_count_cap.min()\n\
    \        let extension_components_count_cap_min = extension_components_count_cap.min()\n\
    \        let class_name_components_count_sm_min = class_name_components_count_sm.min()\n\
    \        let extension_components_count_sm_min = extension_components_count_sm.min()\n\
    \        let class_name_components_count_cap_max = class_name_components_count_cap.max()\n\
    \        let extension_components_count_cap_max = extension_components_count_cap.max()\n\
    \        let class_name_components_count_sm_max = class_name_components_count_sm.max()\n\
    \        let extension_components_count_sm_max = extension_components_count_sm.max()\n\
    \        let class_name_components_count_cap_sum = class_name_components_count_cap.sum()\n\
    \        let extension_components_count_cap_sum = extension_components_count_cap.sum()\n\
    \        let class_name_components_count_sm_sum = class_name_components_count_sm.sum()\n\
    \        let extension_components_count_sm_sum = extension_components_count_sm.sum()\n\
    \        let class_name_components_count_cap_product = class_name_components_count_cap.product()\n\
    \        let extension_components_count_cap_product = extension_components_count_cap.product()\n\
    \        let class_name_components_count_sm_product = class_name_components_count_sm.product()\n\
    \        let extension_components_count_sm_product = extension_components_count_sm.product()\n\
    \        let class_name_components_count_cap_product_min = class_name_components_count_cap_product.min()\n\
    \        let extension_components_count_cap_product_min = extension_components_count_cap_product.min()\n\
    \        let class_name_components_count_sm_product_min = class_name_components_count_sm_product.min()\n\
    \        let extension_", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c >= 'A' && c <= 'Z' {\n       \
    \         extension_strength = extension_strength * 26 + c - 'A'\n           \
    \ }\n        }\n        if extension_strength > strongest_extension_strength {\n\
    \            strongest_extension_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension:\
    \ String = \"\"\n    var strongest_extension_strength: Int = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = class_name\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for c in extension\
    \ {\n            if c.isUppercase {\n                extension_strength -= 1\n\
    \            }\n            if c.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for char in extension {\n            if char.uppercased() != char {\n\
    \                extension_strength -= 1\n            }\n        }\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for char in extension\
    \ {\n            if char.uppercased() != char {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let class_name_components =\
    \ class_name.components(separatedBy: \".\")\n        let extension_components\
    \ = extension.components(separatedBy: \".\")\n        let class_name_components_count\
    \ = class_name_components.count\n        let extension_components_count = extension_components.count\n\
    \        let class_name_components_count_cap = class_name_components.count - class_name_components_count\
    \ + 1\n        let extension_components_count_cap = extension_components.count\
    \ - extension_components_count + 1\n        let class_name_components_count_sm\
    \ = class_name_components_count - class_name_components_count_cap\n        let\
    \ extension_components_count_sm = extension_components_count - extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm) / 2\n   \
    \     let class_name_components_count_cap_sm_strength = class_name_components_count_cap_sm\
    \ + class_name_components_count_cap - class_name_components_count_sm\n       \
    \ let extension_components_count_cap_sm_strength = extension_components_count_cap_sm\
    \ + extension_components_count_cap - extension_components_count_sm\n        if\
    \ class_name_components_count_cap_sm_strength > strongest_extension_strength {\n\
    \            strongest_extension = extension\n            strongest_extension_strength\
    \ = class_name_components_count_cap_sm_strength\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", "    var strongest_extension = \"\
    \"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter{$0.isUpper}.count\n\
    \        let extension_components_count_lower = extension_components.filter{$0.isLower}.count\n\
    \        let class_name_components_count_upper_small = class_name_components_count_upper\
    \ - class_name_components_count_lower\n        let extension_components_count_lower_small\
    \ = extension_components_count_lower - extension_components_count_upper\n    \
    \    let extension_components_count_lower_small_strength = extension_components_count_lower_small\
    \ / class_name_components_count_upper_small\n        let extension_components_count_upper_small_strength\
    \ = extension_components_count_upper_small / class_name_components_count_upper\n\
    \        let extension_components_count_lower_small_strength = extension_components_count_lower_small_strength\
    \ * class_name_components_count_upper_small_strength\n        let extension_components_count_upper_small_strength\
    \ = extension_components_count_upper_small_strength * class_name_components_count_lower_small_strength\n\
    \        if extension_components_count_lower_small_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_components_count_lower_small_strength\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", "    var strongest_extension = \"\
    \"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToCapitalLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.reduce(0) { (sum, character)\
    \ -> Int in\n            if character == character.lowercaseString {\n       \
    \         return sum + 1\n            }\n            return sum\n        }\n \
    \       if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_extension_strength = class_name_components_count -\
    \ extension_components_count\n        if class_name_components_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components.count - class_name_components.filter({\
    \ $0.isUppercased() }).count\n        let extension_components_count_cap = extension_components.count\
    \ - extension_components.filter({ $0.isUppercased() }).count\n        let class_name_components_count_sm\
    \ = class_name_components.count - class_name_components.filter({ $0.isLowercased()\
    \ }).count\n        let extension_components_count_sm = extension_components.count\
    \ - extension_components.filter({ $0.isLowercased() }).count\n        let class_name_components_count_cap_and_sm\
    \ = class_name_components_count_cap - class_name_components_count_sm\n       \
    \ let extension_components_count_cap_and_sm = extension_components_count_cap -\
    \ extension_components_count_sm\n        let class_name_components_count_cap_and_sm_and_extension_components_count_cap_and_sm\
    \ = class_name_components_count_cap_and_sm + extension_components_count_cap_and_sm\n\
    \        let extension_components_count_cap_and_sm_and_class_name_components_count_cap_and_sm\
    \ = extension_components_count_cap_and_sm + class_name_components_count_cap_and_sm\n\
    \        if class_name_components_count_cap_and_sm_and_extension_components_count_cap_and_sm\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = class_name_components_count_cap_and_sm_and_extension_components_count_cap_and_sm\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c >= 'A' && c <= 'Z' {\n       \
    \         extension_strength -= 1\n            }\n            if c >= 'a' && c\
    \ <= 'z' {\n                extension_strength -= 1\n            }\n        }\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name = class_name_components[0]\n        let extension\
    \ = extension_components[0]\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components_count - class_name_components_count.map\
    \ { $0.isUppercase }.count\n        let extension_components_count_upper = extension_components_count\
    \ - extension_components_count.map { $0.isUppercase }.count\n        let class_name_components_count_lower\
    \ = class_name_components_count - class_name_components_count.map { $0.isLowercase\
    \ }.count\n        let extension_components_count_lower = extension_components_count\
    \ - extension_components_count.map { $0.isLowercase }.count\n        let class_name_components_count_all\
    \ = class_name_components_count + class_name_components_count_upper + class_name_components_count_lower\n\
    \        let extension_components_count_all = extension_components_count + extension_components_count_upper\
    \ + extension_components_count_lower\n        let class_name_components_count_all_upper\
    \ = class_name_components_count_all - class_name_components_count_all.map { $0.isUppercase\
    \ }.count\n        let extension_components_count_all_upper = extension_components_count_all\
    \ - extension_components_count_all.map { $0.isUppercase }.count\n        let class_name_components_count_all_lower\
    \ = class_name_components_count_all - class_name_components_count_all.map { $0.isLowercase\
    \ }.count\n        let extension_components_count_all_lower = extension_components_count_all\
    \ - extension_components_count_all.map { $0.isLowercase }.count\n        let class_name_components_count_all_all\
    \ = class_name_components_count_all + class_name_components_count_all_upper +\
    \ class_name_components_count_all_lower\n        let extension_components_count_all_all\
    \ = extension_components_count_all + extension_components_count_all_upper + extension_components_count_all_lower\n\
    \        let class_name_components_count_all_all_upper = class_name_components_count_all_all\
    \ - class_name_components_count_all_all.map { $0.isUppercase }.count\n       \
    \ let extension_components_count_all_all_upper = extension_components_count_all_all\
    \ - extension_components_count_all_all.map { ", "    var strongest_extension =\
    \ \"\"\n    var max_strength = -1\n    for extension in extensions {\n       \
    \ var strength = count_capital_letters(extension) - count_capital_letters(extension.lowercaseString)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > max_strength {\n            max_strength = strength\n           \
    \ strongest_extension = extension\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension"]
stop_tokens:
- "\n}"

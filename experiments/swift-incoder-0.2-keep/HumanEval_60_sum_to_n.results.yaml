language: swift
name: HumanEval_60_sum_to_n
results:
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: UInt(bitPattern: n) + 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpg0klxhul/tmpg0klxhul.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e50f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e4de7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e4de7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e4de67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0klxhul                        0x00005570bc7411b5 <unavailable> + 4533

    5    libc.so.6                          0x00002b69e52dc460 __libc_start_main +
    245

    6    tmpg0klxhul                        0x00005570bc740e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: UInt(bitPattern: n) + 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpg0klxhul/tmpg0klxhul.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e50f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e4de7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e4de7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e4de67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0klxhul                        0x00005570bc7411b5 <unavailable> + 4533

    5    libc.so.6                          0x00002b69e52dc460 __libc_start_main +
    245

    6    tmpg0klxhul                        0x00005570bc740e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: 1 << n) - 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpjqgl0qd5/tmpjqgl0qd5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4d0e51dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4d0e214b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4d0e214988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4d0e2137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjqgl0qd5                        0x000055795f0ec230 <unavailable> + 4656

    5    libc.so.6                          0x00002b4d0e709460 __libc_start_main +
    245

    6    tmpjqgl0qd5                        0x000055795f0ebe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824756
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: UInt(bitPattern: n) + 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpg0klxhul/tmpg0klxhul.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e50f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e4de7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e4de7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e4de67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0klxhul                        0x00005570bc7411b5 <unavailable> + 4533

    5    libc.so.6                          0x00002b69e52dc460 __libc_start_main +
    245

    6    tmpg0klxhul                        0x00005570bc740e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpe3tjetb4.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, n)\n           ^~~~~~~~~~~~~\n/tmp/tmpe3tjetb4.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, n)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: UInt(bitPattern: n) + 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpg0klxhul/tmpg0klxhul.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e50f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e4de7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e4de7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e4de67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0klxhul                        0x00005570bc7411b5 <unavailable> + 4533

    5    libc.so.6                          0x00002b69e52dc460 __libc_start_main +
    245

    6    tmpg0klxhul                        0x00005570bc740e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpe3tjetb4.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, n)\n           ^~~~~~~~~~~~~\n/tmp/tmpe3tjetb4.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, n)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: UInt(bitPattern: n) + 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpg0klxhul/tmpg0klxhul.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e50f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e4de7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e4de7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e4de67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0klxhul                        0x00005570bc7411b5 <unavailable> + 4533

    5    libc.so.6                          0x00002b69e52dc460 __libc_start_main +
    245

    6    tmpg0klxhul                        0x00005570bc740e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(bitPattern: 1 << n) - 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmpjqgl0qd5/tmpjqgl0qd5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4d0e51dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4d0e214b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4d0e214988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4d0e2137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjqgl0qd5                        0x000055795f0ec230 <unavailable> + 4656

    5    libc.so.6                          0x00002b4d0e709460 __libc_start_main +
    245

    6    tmpjqgl0qd5                        0x000055795f0ebe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824756
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwmjojf0f.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n)))\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpkg2rhhjj.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + 1\n               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return sum_to_n_impl(&n, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n:\
    \ 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpwnbr86_q.swift:14:12: error: cannot find 'sum_to_n_impl' in scope\n\
    \    return sum_to_n_impl(&n, 1)\n           ^~~~~~~~~~~~~\n/tmp/tmpwnbr86_q.swift:14:26:\
    \ error: cannot pass immutable value as inout argument: 'n' is a 'let' constant\n\
    \    return sum_to_n_impl(&n, 1)\n                         ^~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n  return _sum_to_n(n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp99tq0nbj.swift:14:10: error: cannot find '_sum_to_n' in scope\n\
    \  return _sum_to_n(n)\n         ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\n/// >>> sum_to_n(30)\n\
    /// 465\n/// >>> sum_to_n(100)\n/// 5050\n/// >>> sum_to_n(5)\n/// 15\n/// >>>\
    \ sum_to_n(10)\n/// 55\n/// >>> sum_to_n(1)\n/// 1\nfunc sum_to_n(n: Int) -> Int\
    \ {\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(sum_to_n(n: 1) == 1)\nassert(sum_to_n(n: 6) ==\
    \ 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n: 30) == 465)\nassert(sum_to_n(n:\
    \ 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpcnuvv6_w.swift:14:16: error: cannot find 'arc4random_uniform' in\
    \ scope\n    return Int(arc4random_uniform(UInt32(n))) + Int(arc4random_uniform(UInt32(n)))\n\
    \               ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcnuvv6_w.swift:14:53: error: cannot\
    \ find 'arc4random_uniform' in scope\n    return Int(arc4random_uniform(UInt32(n)))\
    \ + Int(arc4random_uniform(UInt32(n)))\n                                     \
    \               ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824755

name: HumanEval_56_correct_bracketing
language: swift
prompt: "\n/// brackets is a string of \"<\" and \">\".\n/// return True if every\
  \ opening bracket has a corresponding closing bracket.\n/// >>> correct_bracketing(\"\
  <\")\n/// False\n/// >>> correct_bracketing(\"<>\")\n/// True\n/// >>> correct_bracketing(\"\
  <<><>>\")\n/// True\n/// >>> correct_bracketing(\"><<>\")\n/// False\nfunc correct_bracketing(brackets:\
  \ String) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(correct_bracketing(brackets: \"<>\") ==\
  \ true)\nassert(correct_bracketing(brackets: \"<<><>>\") == true)\nassert(correct_bracketing(brackets:\
  \ \"<><><<><>><>\") == true)\nassert(correct_bracketing(brackets: \"<><><<<><><>><>><<><><<>>>\"\
  ) == true)\nassert(correct_bracketing(brackets: \"<<<><>>>>\") == false)\nassert(correct_bracketing(brackets:\
  \ \"><<>\") == false)\nassert(correct_bracketing(brackets: \"<\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<<<\") == false)\nassert(correct_bracketing(brackets: \">\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<>\") == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>><<>\")\
  \ == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>>><>\") == false)"
completions: ["    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n\n    for openingBracket\
    \ in openingBrackets {\n        if openingBracket == \"<\" {\n            openingBracketsCount--\n\
    \        } else if openingBracket == \">\" {\n            openingBracketsCount++\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \"<\" {\n            closingBracketsCount--\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketsCount++\n        }\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for i in 0..<openingBrackets.count {\n \
    \       if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeFirst()\n\
    \    closingBrackets.removeLast()\n    var openingBracketsCount = openingBrackets.count\n\
    \    var closingBracketsCount = closingBrackets.count\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n    if openingBracketsCount\
    \ == 0 {\n        return true\n    }\n    if openingBracketsCount == 1 {\n   \
    \     if openingBrackets[0] != closingBrackets[0] {\n            return false\n\
    \        }\n        return true\n    }\n    if openingBracketsCount == 2 {\n \
    \       if openingBrackets[0] != closingBrackets[0] {\n            return false\n\
    \        }\n        if openingBrackets[1] != closingBrackets[1] {\n          \
    \  return false\n        }\n        return true\n    }\n    if openingBracketsCount\
    \ == 3 {\n        if openingBrackets[0] != closingBrackets[0] {\n            return\
    \ false\n        }\n        if openingBrackets[1] != closingBrackets[1] {\n  \
    \          return false\n        }\n        if openingBrackets[2] != closingBrackets[2]\
    \ {\n            return false\n        }\n        return true\n    }\n    if openingBracketsCount\
    \ == 4 {\n        if openingBrackets[0] != closingBrackets[0] {\n            return\
    \ false\n        }\n        if openingBrackets[1] != closingBrackets[1] {\n  \
    \          return false\n        }\n        if openingBrackets[2] != closingBrackets[2]\
    \ {\n            return false\n        }\n        if openingBrackets[3] != closingBrackets[3]\
    \ {\n            return false\n        }\n        return true\n    }\n    if openingBracketsCount\
    \ == 5 {\n        if openingBrackets[0] != closingBrackets[0] {\n            return\
    \ false\n        }\n        if openingBrackets[1] != closingBrackets[1] {\n  \
    \          return false\n        }\n        if openingBrackets[2] != closingBrackets[2]\
    \ {\n            return false\n        }\n        if openingBrackets[3] != closingBrackets[3]\
    \ {\n            return false\n        }\n        if openingBrackets[4] != closingBrackets[4]\
    \ {\n            return false\n        }\n        return true\n    }\n    if openingBracketsCount\
    \ == 6 {\n        if openingBrackets[0] != closingBrackets[0] {\n            return\
    \ false\n        }\n        if openingBrackets[1] != closingBrackets[1] {\n  \
    \          return false\n        }\n        if openingBrackets[2] != closingBrackets[2]\
    \ {", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    var openingBracket: Character?\n \
    \   var closingBracket: Character?\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        openingBracket = openingBrackets[openingBracketIndex]\n        closingBracket\
    \ = closingBrackets[closingBracketIndex]\n\n        if openingBracket == \"<\"\
    \ {\n            if closingBracket == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n                openingBracketCount\
    \ += 1\n                closingBracketCount += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \                openingBracketCount += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n                openingBracketCount\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \           closingBracketIndex += 1\n                openingBracketCount += 1\n\
    \                closingBracketCount += 1\n            }\n        } else if openingBracket\
    \ == \"<\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n                openingBracketCount\
    \ += 1\n                closingBracketCount += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \                openingBracketCount += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n                openingBracketCount\
    \ += 1\n                closingBracketCount += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \                openingBracketCount += 1\n                closingBracketCount\
    \ += 1\n                closingBracketCount += 1\n            }\n        } else\
    \ if openingBracket == \"<\" {\n            if closingBracket == \"<\" {\n   \
    \             openingBracketIndex += 1\n                closingBracketIndex +=\
    \ 1\n                openingBracketCount += 1\n                closingBracketCount\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \           closingBracketIndex += 1\n                openingBra", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = 0\n    var closingBracketIndex = 0\n    var openingBracketFound\
    \ = false\n    var closingBracketFound = false\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        if openingBrackets[openingBracketIndex] ==\
    \ '<' {\n            if closingBracketIndex < closingBrackets.count {\n      \
    \          if closingBrackets[closingBracketIndex] == '>' {\n                \
    \    openingBracketFound = true\n                    closingBracketFound = true\n\
    \                } else {\n                    openingBracketFound = false\n \
    \                   closingBracketFound = false\n                }\n         \
    \   } else {\n                openingBracketFound = false\n                closingBracketFound\
    \ = false\n            }\n        } else {\n            openingBracketFound =\
    \ false\n            closingBracketFound = false\n        }\n        openingBracketIndex\
    \ += 1\n        closingBracketIndex += 1\n    }\n    return openingBracketFound\
    \ == closingBracketFound", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        if openingBrackets[openingBracketIndex] != \"\
    <\" {\n            return false\n        }\n        openingBracketIndex += 1\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ != \">\" {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketIndex == closingBracketIndex", "   \
    \ var opening = brackets.characters\n    var closing = brackets.characters\n \
    \   opening.removeFirst()\n    opening.removeLast()\n    closing.removeLast()\n\
    \    closing.removeFirst()\n    if opening.isEmpty {\n        return closing.isEmpty\n\
    \    }\n    if closing.isEmpty {\n        return opening.isEmpty\n    }\n    if\
    \ opening.first == closing.first {\n        return correct_bracketing(opening.dropFirst())\n\
    \    }\n    return false", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n\n    // Remove opening brackets\n    while openingBrackets.count\
    \ > 0 {\n        let index = openingBrackets.index(of: \"<\")\n        if index\
    \ == nil {\n            break\n        }\n        openingBrackets.remove(at: index!)\n\
    \    }\n\n    // Remove closing brackets\n    while closingBrackets.count > 0\
    \ {\n        let index = closingBrackets.index(of: \">\")\n        if index ==\
    \ nil {\n            break\n        }\n        closingBrackets.remove(at: index!)\n\
    \    }\n\n    // Return true if every opening bracket has a corresponding closing\
    \ bracket\n    return openingBrackets.count == closingBrackets.count", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    for openingBracket in openingBrackets {\n        if let closingBracketIndex\
    \ = closingBrackets.index(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracketIndex)\n        }\n    }\n\n    return brackets.characters.count\
    \ == 0", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    var openingBracketsString = \"\"\n\
    \    var closingBracketsString = \"\"\n    var openingBracketsStringIndex = 0\n\
    \    var closingBracketsStringIndex = 0\n    var openingBracketsStringCount =\
    \ brackets.characters.count\n    var closingBracketsStringCount = brackets.characters.count\n\
    \n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsString\
    \ += openingBrackets[openingBracketsIndex]\n        openingBracketsIndex += 1\n\
    \    }\n    while closingBracketsIndex < closingBracketsCount {\n        closingBracketsString\
    \ += closingBrackets[closingBracketsIndex]\n        closingBracketsIndex += 1\n\
    \    }\n\n    if openingBracketsIndex != openingBracketsCount {\n        return\
    \ false\n    }\n    if closingBracketsIndex != closingBracketsCount {\n      \
    \  return false\n    }\n    if openingBracketsString != closingBracketsString\
    \ {\n        return false\n    }\n    if openingBracketsIndex == openingBracketsCount\
    \ {\n        return true\n    }\n    if closingBracketsIndex == closingBracketsCount\
    \ {\n        return true\n    }\n    if openingBracketsIndex < closingBracketsIndex\
    \ {\n        return false\n    }\n    return true", "    let openingBrackets =\
    \ brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        let openingBracket = openingBrackets[openingBracketsIndex]\n    \
    \    let closingBracket = closingBrackets[closingBracketsIndex]\n\n        if\
    \ openingBracket == \"<\" {\n            openingBracketsIndex += 1\n        }\
    \ else if openingBracket == \">\" {\n            closingBracketsIndex += 1\n \
    \       } else if openingBracket == \"<\" {\n            openingBracketsIndex\
    \ += 1\n            closingBracketsIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketsIndex += 1\n            closingBracketsIndex\
    \ += 1\n            openingBracketsIndex += 1\n        }\n\n        if openingBracketsIndex\
    \ == openingBracketsCount {\n            return closingBracketsIndex == closingBracketsCount\n\
    \        }\n    }\n\n    return false", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n\n        guard closingBrackets[closingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n\n        closingBracketIndex\
    \ += 1\n        guard closingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n\n        guard closingBrackets[closingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        closingBracketIndex\
    \ += 1\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \n    if openingBracketsCount == 0 {\n        return true\n    }\n\n    if openingBracketsCount\
    \ == 1 {\n        if openingBrackets.first == closingBrackets.first {\n      \
    \      return true\n        }\n        return false\n    }\n\n    if openingBracketsCount\
    \ == 2 {\n        if openingBrackets.first == closingBrackets.first {\n      \
    \      if openingBrackets.last == closingBrackets.last {\n                return\
    \ true\n            }\n        }\n        return false\n    }\n\n    if openingBracketsCount\
    \ == 3 {\n        if openingBrackets.first == closingBrackets.first {\n      \
    \      if openingBrackets.last == closingBrackets.last {\n                if openingBrackets.last\
    \ == closingBrackets.first {\n                    return true\n              \
    \  }\n            }\n        }\n        return false\n    }\n\n    if openingBracketsCount\
    \ == 4 {\n        if openingBrackets.first == closingBrackets.first {\n      \
    \      if openingBrackets.last == closingBrackets.last {\n                if openingBrackets.last\
    \ == closingBrackets.first {\n                    if openingBrackets.last == closingBrackets.second\
    \ {\n                        return true\n                    }\n            \
    \    }\n            }\n        }\n        return false\n    }\n\n    if openingBracketsCount\
    \ == 5 {\n        if openingBrackets.first == closingBrackets.first {\n      \
    \      if openingBrackets.last == closingBrackets.last {\n                if openingBrackets.last\
    \ == closingBrackets.first {\n                    if openingBrackets.last == closingBrackets.second\
    \ {\n                        if openingBrackets.last == closingBrackets.third\
    \ {\n                            return true\n                        }\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ false\n    }\n\n    if openingBracketsCount == 6 {\n        if openingBrackets.first\
    \ == closingBrackets.first {\n            if openingBrackets.last == closingBrackets.last\
    \ {\n                if openingBrackets.last == closingBrackets.first {\n    \
    \                if openingBrackets.last == closingBrackets.second {\n       \
    \                 if openingBrackets.last == closingBrackets.third {\n       \
    \                     if openingBrackets.last == closingBrackets.fourth {\n  \
    \                              return true\n                            }\n  \
    \                      }", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = brackets.characters.count\n    var closingBracketCount = brackets.characters.count\n\
    \n    while openingBracketIndex < openingBracketCount {\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else if openingBrackets[openingBracketIndex] != \"<\" {\n  \
    \          return false\n        }\n    }\n\n    while closingBracketIndex < closingBracketCount\
    \ {\n        if closingBrackets[closingBracketIndex] == \">\" {\n            closingBracketIndex\
    \ += 1\n        } else if closingBrackets[closingBracketIndex] != \"<\" {\n  \
    \          return false\n        }\n    }\n\n    return openingBracketIndex ==\
    \ closingBracketIndex", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n\n    for index in\
    \ 0..<openingBracketsCount {\n        let openingBracket = openingBrackets[index]\n\
    \        let closingBracket = closingBrackets[index]\n\n        if openingBracket\
    \ == \"<\" {\n            if closingBracket != \">\" {\n                return\
    \ false\n            }\n        } else {\n            if closingBracket == \"\
    <\" {\n                return false\n            }\n        }\n    }\n\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount\
    \ += 1\n\n        if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketCount +=\
    \ 1\n            continue\n        }\n\n        if openingBracket == \"<\" {\n\
    \            openingBracketIndex += 1\n            closingBracketCount += 1\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex += 1\n            closingBracketCount += 1\n   \
    \         continue\n        }\n\n        if openingBracket == \"<\" {\n      \
    \      openingBracketIndex += 1\n            closingBracketCount += 1\n      \
    \      continue\n        }\n\n        if openingBracket == \">\" {\n         \
    \   openingBracketIndex += 1\n            closingBracketCount += 1\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketCount += 1\n            continue\n        }\n\
    \n        if openingBracket == \">\" {\n            openingBracketIndex += 1\n\
    \            closingBracketCount += 1\n            continue\n        }\n\n   \
    \     if openingBracket == \"<\" {\n            openingBracketIndex += 1\n   \
    \         closingBracketCount += 1\n            continue\n        }\n\n      \
    \  if openingBracket == \">\" {\n            openingBracketIndex += 1\n      \
    \      closingBracketCount += 1\n            continue\n        }\n\n        if\
    \ openingBracket == \"<\" {\n            openingBracketIndex += 1\n          \
    \  closingBracketCount += 1\n            continue\n        }\n\n        if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n            continue\n        }\n\n        if openingBracket == \"<\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketCount +=\
    \ 1\n            continue\n        }\n\n        if openingBracket == \">\" {\n\
    \            openingBracketIndex += 1\n            closingBracketCount += 1\n\
    \            continue\n        }\n\n        if openingBracket == \"<\" {\n   \
    \         openingBracketIndex += 1\n            closingBracketCount "]
stop_tokens:
- "\n}"

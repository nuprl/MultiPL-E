name: HumanEval_55_fib
language: swift
prompt: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>> fib(1)\n\
  /// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\n\
  assert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
completions: ["  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)", " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return a", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    var a, b = 1, c = 1\n    for _ in 0..<n {\n     \
    \   let tmp = a\n        a = b\n        b = tmp + c\n        c = a - b\n    }\n\
    \    return b", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)", "    if n < 2\
    \ {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n   \
    \ return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n\
    \  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n   \
    \ return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-2) +\
    \ fib(n-1)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)", " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)", " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2\
    \ {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var fib1 =\
    \ 1\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2, fib1 +\
    \ fib2\n    }\n    return fib2", '    return fibHelper(n - 1, n - 2)', "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return
    fibHelper(n, 0)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-2) + fib(n-1)", "  var a = 0\n  var\
    \ b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n\
    \  return b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    var a, b = 0, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a =\
    \ b\n        b = c\n    }\n    return b", "  var a = 0\n  var b = 1\n  for _ in\
    \ 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n  return a", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var a\
    \ = 1 // first term\n  var b = 1 // second term\n  for _ in 0..<n {\n    let next\
    \ = a\n    a = b\n    b = next + b\n  }\n  return b", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "  var a, b = 1, c = 1\n  for _ in 0..<n\
    \ {\n    let tmp = a\n    a = b\n    b = tmp + c\n    c = b - a\n  }\n  return\
    \ a", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n     \
    \   return n\n    }\n    return fib(n-2) + fib(n-1)", "    var a, b = 0, c: Int\n\
    \    for _ in 0..<n {\n        c = a + b\n        a = b\n        b = c\n    }\n\
    \    return b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-2) + fib(n-1)",
  "  var a = 1 // a\n  var b = 1 // b\n  var c = 1 // c\n  var d = 1 // d\n  var result\
    \ = 1 // result\n\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = c\n\
    \    c = d\n    d = tmp + b\n    result = d\n  }\n\n  return result", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", '    return fibHelper(n,
    0)', "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n <\
    \ 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in\
    \ 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n  return b", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n  \
    \      return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in\
    \ 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n  return b", "  \
    \  var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n     \
    \   a = b\n        b = tmp + b\n    }\n    return b", "    var a = 0, b = 1, c:\
    \ Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n        b = c\n\
    \    }\n    return b", "    if n < 2 {\n        return n\n    }\n    return fib(n\
    \ - 1) + fib(n - 2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-2) +\
    \ fib(n-1)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-2) + fib(n-1)", "    if n < 2 {\n     \
    \   return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n      \
    \  return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n       \
    \ return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "    var a = 0\n    var b = 1\n \
    \   for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n\
    \    }\n    return a", "    var a, b = 1, c = 1\n    for _ in 0..<n {\n      \
    \  let tmp = a + b\n        a = b\n        b = tmp\n    }\n    return b", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return
    fibHelper(n, 0)', "    if n < 2 {\n        return n\n    }\n    return fib(n-2)\
    \ + fib(n-1)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var\
    \ a = b = 0\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n\
    \  }\n  return a", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return
    fib(n - 1) + fib(n - 2)', "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n\
    \    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n\
    \  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n   \
    \ return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1)\
    \ + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n\
    \    a = b\n    b = tmp + b\n  }\n  return b", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n\
    \    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n \
    \   return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n  \
    \  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  var a = 0\n  var b = 1\n  var c = 0\n  var d = 0\n  var e = 0\n\
    \  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var k = 0\n\
    \  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var q = 0\n\
    \  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var w = 0\n\
    \  var x = 0\n  var y = 0\n  var z = 0\n  var a = 0\n  var b = 0\n  var c = 0\n\
    \  var d = 0\n  var e = 0\n  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n\
    \  var j = 0\n  var k = 0\n  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n\
    \  var p = 0\n  var q = 0\n  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n\
    \  var v = 0\n  var w = 0\n  var x = 0\n  var y = 0\n  var z = 0\n  var a = 0\n\
    \  var b = 0\n  var c = 0\n  var d = 0\n  var e = 0\n  var f = 0\n  var g = 0\n\
    \  var h = 0\n  var i = 1\n  var j = 0\n  var k = 0\n  var l = 0\n  var m = 0\n\
    \  var n = 0\n  var o = 0\n  var p = 0\n  var q = 0\n  var r = 0\n  var s = 0\n\
    \  var t = 0\n  var u = 0\n  var v = 0\n  var w = 0\n  var x = 0\n  var y = 0\n\
    \  var z = 0\n  var a = 0\n  var b = 0\n  var c = 0\n  var d = 0\n  var e = 0\n\
    \  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var k = 0\n\
    \  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var q = 0\n\
    \  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var w = 0\n\
    \  var x = 0\n  var y = 0\n  var z = 0\n  var a = 0\n  var b = 0\n  var c = 0\n\
    \  var d = 0\n  var e = 0\n  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n\
    \  var j = 0\n  var k = 0\n  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n\
    \  var p = 0\n  var q = 0\n  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n\
    \  var v = 0\n  var w = 0\n  var x = 0\n  var y = 0\n  var ", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n   \
    \ return n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n\
    \  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n\
    \ - 1) + fib(n - 2)", "    if n < 2 {\n        return n\n    }\n    return fib(n\
    \ - 1) + fib(n - 2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n\
    \    a = b\n    b = tmp + b\n  }\n  return b", '    return fibHelper(n - 1, n
    + 1)', "    var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp =\
    \ a\n        a = b\n        b = tmp + b\n    }\n    return b", '    return fibHelper(n,
    1, 1, 0)', "    if n < 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var\
    \ a = 1, b = 1, tmp Int\n  for _ in 0..<n {\n    tmp = a + b\n    a = b\n    b\
    \ = tmp\n  }\n  return b", '    return fib(n - 1) + fib(n - 2)', "  if n < 2 {\n\
    \    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "  var a = 0, b = 1, c: Int = 0\n  for\
    \ _ in 0..<n {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c", '    return
    fib(n-1) + fib(n-2)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)", " \
    \   var a = 0, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n     \
    \   a = b\n        b = next\n    }\n    return next", "    if n < 2 {\n      \
    \  return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", '    return fibHelper(n, 0)', "  if n\
    \ < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n  \
    \      return n\n    }\n    return fib(n - 1) + fib(n - 2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a = 1, b =\
    \ 1, c = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n       \
    \ b = c\n        c = tmp + b\n    }\n    return c", "    var a = 0\n    var b\
    \ = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp\
    \ + b\n    }\n    return b", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n\
    \    a = b\n    b = tmp + b\n  }\n  return b", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-2) + fib(n-1)", '    return fibHelper(n, 1, 1, 1)', " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a, b Int\n\
    \    if n == 0 || n == 1 {\n        return n\n    }\n    a, b = b, a + b\n   \
    \ return fib(n-1)", "    var a = 1 // first number\n    var b = 1 // second number\n\
    \    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n\
    \    }\n    return a", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)", "  if n <\
    \ 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "    var a, b Int\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 1\n    }\n    a, b = b, a + b\n    for\
    \ _ in 1...n {\n        a, b = b, a + b\n    }\n    return a", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a = 1, b =\
    \ 0, tmp Int\n    for _ in 0..<n {\n        tmp = a + b\n        a = b\n     \
    \   b = tmp\n    }\n    return b", "  var a = b = 0\n  for i in 0..<n {\n    let\
    \ tmp = a\n    a = b\n    b = tmp + a\n  }\n  return b", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) +\
    \ fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)"]
stop_tokens:
- "\n}"

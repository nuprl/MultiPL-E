name: HumanEval_141_file_name_check
language: swift
prompt: "\n/// Create a function which takes a string representing a file's name,\
  \ and returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// file_name_check(\"\
  example.txt\") # => 'Yes'\n/// file_name_check(\"1example.dll\") # => 'No' (the\
  \ name should start with a latin alphapet letter)\nfunc file_name_check(file_name:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(file_name_check(file_name: \"example.txt\"\
  ) == \"Yes\")\nassert(file_name_check(file_name: \"1example.dll\") == \"No\")\n\
  assert(file_name_check(file_name: \"s1sdf3.asd\") == \"No\")\nassert(file_name_check(file_name:\
  \ \"K.dll\") == \"Yes\")\nassert(file_name_check(file_name: \"MY16FILE3.exe\") ==\
  \ \"Yes\")\nassert(file_name_check(file_name: \"His12FILE94.exe\") == \"No\")\n\
  assert(file_name_check(file_name: \"_Y.txt\") == \"No\")\nassert(file_name_check(file_name:\
  \ \"?aREYA.exe\") == \"No\")\nassert(file_name_check(file_name: \"/this_is_valid.dll\"\
  ) == \"No\")\nassert(file_name_check(file_name: \"this_is_valid.wow\") == \"No\"\
  )\nassert(file_name_check(file_name: \"this_is_valid.txt\") == \"Yes\")\nassert(file_name_check(file_name:\
  \ \"this_is_valid.txtexe\") == \"No\")\nassert(file_name_check(file_name: \"#this2_i4s_5valid.ten\"\
  ) == \"No\")\nassert(file_name_check(file_name: \"@this1_is6_valid.exe\") == \"\
  No\")\nassert(file_name_check(file_name: \"this_is_12valid.6exe4.txt\") == \"No\"\
  )\nassert(file_name_check(file_name: \"all.exe.txt\") == \"No\")\nassert(file_name_check(file_name:\
  \ \"I563_No.exe\") == \"Yes\")\nassert(file_name_check(file_name: \"Is3youfault.txt\"\
  ) == \"Yes\")\nassert(file_name_check(file_name: \"no_one#knows.dll\") == \"Yes\"\
  )\nassert(file_name_check(file_name: \"1I563_Yes3.exe\") == \"No\")\nassert(file_name_check(file_name:\
  \ \"I563_Yes3.txtt\") == \"No\")\nassert(file_name_check(file_name: \"final..txt\"\
  ) == \"No\")\nassert(file_name_check(file_name: \"final132\") == \"No\")\nassert(file_name_check(file_name:\
  \ \"_f4indsartal132.\") == \"No\")\nassert(file_name_check(file_name: \".txt\")\
  \ == \"No\")\nassert(file_name_check(file_name: \"s.\") == \"No\")"
completions: ["\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "    let file_name = file_name.lowercased()\n    let dot_index\
    \ = file_name.index(of: \".\")\n    let dot_index = dot_index! - 1\n    let file_name\
    \ = file_name[dot_index..<file_name.count]\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name", "    let\
    \ file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name.substring(from:\
    \ dot_index!)\n    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let letter_index = file_name.index(of:\
    \ \"a\")\n    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{2,3}$\", options: [])\n    return regex.firstMatch(in:\
    \ file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length\
    \ > 0 ? \"Yes\" : \"No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.firstIndex(of: \".\")\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.count\n\tlet file_name = file_name.substring(from: dot_index)\n\t\
    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\t\
    let file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name", "\tlet\
    \ file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index!\n\tlet first_letter = file_name[..<dot_index]\n\
    \tlet last_letter = file_name[dot_index..<file_name.count]\n\tlet first_letter\
    \ = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter?.first!\n\
    \tlet first_letter = first_letter?.unicodeScalars\n\tlet last_letter = last_letter?.unicodeScalars\n\
    \tlet first_letter = first_letter?.first!\n\tlet last_letter = last_letter", " \
    \   let file_name = file_name.lowercased()\n    let dot_index = file_name.firstIndex(of:\
    \ \".\")\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.substring(from:\
    \ 0)\n\tlet ", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.rangeOfString(\"\
    .\").location\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_",
  "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\\.[a-zA-Z]+$\"\
    , options: [])\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSMakeRange(0, file_name.characters.count)).rangeAt(1).length == 0 ? \"Yes\"\
    \ : \"No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\
    \ == 3 && file_name.contains(\".\") && file_name.starts(with: \"a\") && file_name.ends(with:\
    \ [\"txt\", \"exe\", \"dll\"])\n\treturn file_name ? \"Yes\" : \"No\"", "    let\
    \ regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options:\
    \ [])\n    return regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).location == 0 ? \"Yes\" : \"No\"", " \
    \   let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\",\
    \ options: [])\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSMakeRange(0, file_name.characters.count)).rangeAt(1).length == 0 &&\n    \
    \    regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).location\
    \ == 0 &&\n        regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).length > 0 &&\n        regex.firstMatch(in:\
    \ file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).location\
    \ != 0 &&\n        regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).location != file_name.characters.count\
    \ &&\n        regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).location != file_name.characters.count\
    \ - 1\n        ? \"Yes\" : \"No\"", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.rangeOfString(\".\").location\n    let dot_length\
    \ = file_name.rangeOfString(\".\").length\n    let dot_start_index = dot_index\
    \ - dot_length\n    let dot_end_index = dot_index\n    let dot_name = file_name[dot_start_index..dot_end_index]\n\
    \    let dot_name_length = dot_name.length\n    \n    if dot_name_length < 3 ||\
    \ dot_name_length > 3 {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.isEmpty {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.rangeOfString(\"0123456789\").location == NSNotFound {\n  \
    \      return \"No\"\n    }\n    \n    if dot_name_length == 3 && dot_name.rangeOfString(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\").location == NSNotFound\
    \ {\n        return \"No\"\n    }\n    \n    if dot_name_length == 3 && dot_name.rangeOfString(\"\
    !@#$%^&*()_+-={}[]|;':,./<>?\").location == NSNotFound {\n        return \"No\"\
    \n    }\n    \n    if dot_name_length == 3 && dot_name.rangeOfString(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\
    ).location == NSNotFound {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.rangeOfString(\"!@#$%^&*()_+-={}[]|;':,./<>?0123456789\").location\
    \ == NSNotFound {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.rangeOfString(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-={}[]|;':,./<>?\"\
    ).location == NSNotFound {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.rangeOfString(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-={}[]|;':,./<>?0123456789\"\
    ).location == NSNotFound {\n        return \"No\"\n    }\n    \n    if dot_name_length\
    \ == 3 && dot_name.rangeOfString(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO",
  "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\\.[^.]+$\", options:\
    \ [])\n    return regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).length == 0 &&\n        file_name.substring(with:\
    \ NSMakeRange(0, file_name.characters.count - 1)).hasPrefix(\"a\") &&\n      \
    \  file_name.substring(with: NSMakeRange(0, file_name.characters.count - 1)).hasSuffix(\"\
    txt\") ||\n        file_name.substring(with: NSMakeRange(0, file_name.characters.count\
    \ - 1)).hasSuffix(\"exe\") ||\n        file_name.substring(with: NSMakeRange(0,\
    \ file_name.characters.count - 1)).hasSuffix(\"dll\")\n        ? \"Yes\" : \"\
    No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.components(separatedBy: \".\")\n\tlet file_name = file_name[0]\n\t\
    let file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = ", "    let file_name\
    \ = file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n \
    \   let dot_index = dot_index!\n    let dot_index = dot_index + 1\n    let dot_index\
    \ = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by: 1)\n\
    \    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n    let dot_index = dot_index.advanced(by: 1)\n    let dot_index = dot_index.advanced(by:\
    \ 1)\n", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet dot_index =\
    \ file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!", "\tlet\
    \ file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : file_name.count\n\
    \tlet first_letter = file_name[..<dot_index]\n\tlet last_letter = file_name[dot_index..<file_name.count]\n\
    \tlet first_letter = first_letter?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalars.first?.unicodeScalar",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\tlet file_name =\
    \ file_name.trimming", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    \\.[a-zA-Z]+$\")\n    let matches = regex.matches(in: file_name, range: NSRange(location:\
    \ 0, length: file_name.characters.count))\n    if matches.count == 0 {\n     \
    \   return \"No\"\n    }\n    if matches.count == 1 {\n        let range = matches[0].range\n\
    \        let start = range.lowerBound\n        let end = range.upperBound\n  \
    \      let sub_string = file_name[start..<end]\n        if sub_string.characters.count\
    \ == 0 {\n            return \"No\"\n        }\n        let regex = try! NSRegularExpression(pattern:\
    \ \"^[a-zA-Z]+\")\n        let matches = regex.matches(in: sub_string, range:\
    \ NSRange(location: 0, length: sub_string.characters.count))\n        if matches.count\
    \ == 0 {\n            return \"No\"\n        }\n    }\n    return \"Yes\"", " \
    \   let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\",\
    \ options: [])\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSRange(location: 0, length: file_name.characters.count)).rangeAt(1).length\
    \ > 0 ? \"Yes\" : \"No\"", "    let file_name = file_name.lowercased()\n    let\
    \ dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n   \
    \ let first_letter = file_name[0..<dot_index].lowercased()\n    let letters =\
    \ first_letter..<first_letter + \"z\".count\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let last_letter = file_name[dot_index..<file_name.count].lowercased()\n\
    \    let letters = letters.contains(last_letter) ? \"Yes\" : \"No\"\n    return\
    \ letters", "    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n   \
    \ let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z][a-zA-Z0-9.]*$\", options: [])\n    let matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.count))\n\
    \    if matches.count == 0 {\n        return \"No\"\n    }\n    if matches.count\
    \ == 1 {\n        if file_name.substring(with: matches[0].range).isEmpty{\n  \
    \          return \"No\"\n        }\n        if file_name.substring(with: matches[0].range).first\
    \ != file_name.substring(with: matches[0].range).first!.lowercased() {\n     \
    \       return \"No\"\n        }\n    }\n    return \"Yes\"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet file_name = file_name.substring(from: dot_index!)\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.characters.count\n\
    \tif dot_index != dot_index! {\n\t\treturn \"No\"\n\t}\n\tif file_name != \"\"\
    \ {\n\t\tif !file_name.hasPrefix(\"a\") {\n\t\t\treturn \"No\"\n\t\t}\n\t\tif\
    \ !file_name.hasPrefix(\"z\") {\n\t\t\treturn \"No\"\n\t\t}\n\t\tif !file_name.hasPrefix(\"\
    A\") {\n\t\t\treturn \"No\"\n\t\t}\n\t\tif !file_name.hasPrefix(\"Z\") {\n\t\t\
    \treturn \"No\"\n\t\t}\n\t}\n\tif file_name != \"\" && file_name != \".\" {\n\t\
    \treturn \"No\"\n\t}\n\tif file_name != \".\" && file_name != \"\" {\n\t\treturn\
    \ \"Yes\"\n\t}\n\treturn \"No\"", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.rangeOfString(\".\").location\n\tlet dot_length =\
    \ file_name.rangeOfString(\".\").length\n\tlet dot_index = dot_index != nil ?\
    \ dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length\
    \ != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! :\
    \ 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ?\
    \ dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet\
    \ dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ?\
    \ dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet\
    \ dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_length = dot_length != nil ? dot_length!", "    let regex = try!\
    \ NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\", options: [])\n    return\
    \ regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length\
    \ == 0 ? \"No\" : \"Yes\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet file_name = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics)\n\tlet file_name = file_name.lowercased()\n\tlet\
    \ file_name = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.letters)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.decimalDigits)\n\tlet file_name = file_name.lowercased()\n\tlet\
    \ file_name = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.symbols)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.substring(from: 0)\n\tlet file_name = file_name.trimm", "    let\
    \ file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n    let file_name = file_name.components(separatedBy:\
    \ \".\")\n    let file_name = file_name.first\n    let file_name = file_name.flatMap\
    \ { $0.isLetter }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n \
    \   let file_name = file_name.flatMap { $0.isIn(allowedExtensions: [\"txt\", \"\
    exe\", \"dll\"]) }\n    return file_name", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet letter_index\
    \ = file_name.index(of: \"a\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"A\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"z\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"Z\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"0\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"9\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"txt\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"exe\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"dll\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".exe\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".dll\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".exe\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".dll\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".exe\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".dll\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".exe\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".dll\")\n\tlet letter_index = letter_index!\n\tlet ",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet dot_index =\
    \ file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = ", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "\t\
    let file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!",
  "\tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"[^0-9a-zA-Z.]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[^.]\", with: \"\", options: .regularExpression)\n\
    \tlet file_name = file_name.replacingOccurrences(of: \"[.]\", with: \"\", options:\
    \ .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of: \"\
    ^[^a-zA-Z]\", with: \"\", options: .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"[^a-zA-Z0-9]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[a-zA-Z]\", with: \"\", options: .regularExpression)\n\
    \tlet file_name = file_name.replacingOccurrences(of: \"^[a-zA-Z0-9]\", with: \"\
    \", options: .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[a-zA-Z0-9.]\", with: \"\", options:\
    \ .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of: \"\
    ^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[a-zA-Z0-9.]\", with: \"\", options:\
    \ .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of: \"\
    ^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[a-zA-Z0-9.]\", with: \"\", options:\
    \ .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of: \"\
    ^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name = file_name.replacingOccurrences(of:\
    \ \"^[a-zA-Z0-9.]\", with: \"\", options: .regularExpression)\n\tlet file_name\
    \ = file_name.replacingOccurrences(of: \"^[a-zA-Z0-9.]\", with: \"\", options:\
    \ .regularExpression)\n\tlet file_name = file_name.replacing", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet first_letter = file_name[..dot_index]\n\tlet last_letter\
    \ = file_name[dot_index..<file_name.count]\n\tlet first_letter = first_letter?.unicodeScalars.first?.unicodeScalars.first?.lowercased()\n\
    \tlet last_letter = last_letter?.unicodeScalars.first?.lowercased()\n\tlet first_letter\
    \ = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet first_letter = first_letter?.capitalized()\n\tlet last_letter = last_letter?.capitalized()\n\
    \tlet first_letter = first_letter?.lowercased()\n\tlet last_letter = last_letter?.lowercased()\n\
    \tlet first_letter = first_letter?.uppercased()\n\tlet last_letter = last_letter?.uppercased()\n\
    \tlet ", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!",
  "\tlet regex = try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{3,4}$\"\
    )\n\tlet matches = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.utf8.count))\n\t\n\tif matches.count == 0 {\n\t\treturn\
    \ \"No\"\n\t} else if matches.count == 1 {\n\t\treturn \"Yes\"\n\t} else {\n\t\
    \treturn \"No\"\n\t}", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    .[a-zA-Z]+$\", options: [])\n    return regex.firstMatch(in: file_name, options:\
    \ [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length ==\
    \ 0 ? \"Yes\" : \"No\"", "    let regex = try! NSRegularExpression(pattern: \"\
    ^[0-9]{3}\\\\.[a-zA-Z]+$\")\n    let matches = regex.matches(in: file_name, range:\
    \ NSRange(location: 0, length: file_name.count))\n    if matches.count > 0 {\n\
    \        let range = matches[0].range\n        let substring = file_name.substring(with:\
    \ range)\n        if substring.characters.count == 1 && substring.lowercased().first\
    \ == '.' {\n            return substring\n        } else {\n            return\
    \ \"No\"\n        }\n    } else {\n        return \"No\"\n    }", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = ",
  "    let file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n    let file_name = file_name.components(separatedBy:\
    \ \".\")\n    let file_name = file_name.first\n    let file_name = file_name.characters.count\
    \ > 0\n        ? file_name\n        : \"No\"\n    return file_name", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = ",
  "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\")\n\
    \    let matches = regex.matches(in: file_name, range: NSRange(location: 0, length:\
    \ file_name.count))\n    if matches.count == 0 {\n        return \"No\"\n    }\n\
    \    if matches.count == 1 {\n        let range = matches[0].range\n        let\
    \ start = range.lowerBound\n        let end = range.upperBound\n        let substring\
    \ = file_name[start..<end]\n        let regex = try! NSRegularExpression(pattern:\
    \ \"^[a-zA-Z]+\")\n        let matches = regex.matches(in: substring, range: NSRange(location:\
    \ 0, length: substring.count))\n        if matches.count == 0 {\n            return\
    \ \"No\"\n        }\n    }\n    return \"Yes\"", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options: [])\n    return regex.firstMatch(in:\
    \ file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length\
    \ == 0 ? \"Yes\" : \"No\"", "\tlet regex = try! NSRegularExpression(pattern: \"\
    ^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{3}$\", options: [])\n\tlet matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.characters.count))\n\
    \t\n\tif matches.count == 0 {\n\t\treturn \"No\"\n\t} else {\n\t\treturn \"Yes\"\
    \n\t}", "\tlet regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\\.[a-zA-Z]+$\"\
    )\n\tlet matches = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.count))\n\t\n\tif matches.count == 0 {\n\t\treturn \"No\"\
    \n\t} else if matches.count > 1 {\n\t\treturn \"No\"\n\t} else if matches.count\
    \ == 1 {\n\t\tlet range = matches[0].range\n\t\tlet start = range.location\n\t\
    \tlet end = range.length\n\t\tlet substring = file_name[start..<end]\n\t\t\n\t\
    \tif substring == \".\" {\n\t\t\treturn \"Yes\"\n\t\t} else {\n\t\t\treturn \"\
    No\"\n\t\t}\n\t} else {\n\t\treturn \"No\"\n\t}", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.tri", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = ", "\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\")\n\tlet matches = regex.matches(in: file_name,\
    \ options: [], range: NSRange(location: 0, length: file_name.count))\n\t\n\tlet\
    \ result = matches.map {\n\t\t(range, substring) -> String in\n\t\tlet range =\
    \ range\n\t\tlet substring = substring\n\t\treturn substring\n\t}.joined(separator:\
    \ \".\")\n\t\n\treturn result", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet file_name = file_name[dot_index..<file_name.endIndex]\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.characters.count\n\
    \tif file_name <= 3 {\n\t\treturn \"No\"\n\t}\n\tlet first_letter = file_name.startIndex\n\
    \tlet last_letter = file_name.index(of: \".\", in: first_letter!)\n\tlet last_letter\
    \ = last_letter?.offset ?? file_name.endIndex\n\tlet file_name = file_name[first_letter!..<last_letter!]\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.characters.count\n\
    \tif file_name == 0 {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == 0 {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset ==\
    \ file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"\n\t}\n\tif dot_index != nil && dot_index!.offset\
    \ == file_name.endIndex {\n\t\treturn \"No\"", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.components(separatedBy: \".\")\n\tlet file_name =\
    \ file_name.first\n\tlet file_name = file_name.characters.count\n\tlet file_name\
    \ = file_name.characters.count > 3 && file_name.characters.count <= 10\n\tlet\
    \ file_name = file_name.characters.count > 1 && file_name.characters.first >=\
    \ 'a' && file_name.characters.first <= 'z'\n\tlet file_name = file_name.characters.count\
    \ > 1 && file_name.characters.first >= 'A' && file_name.characters.first <= 'Z'\n\
    \tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \".\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"..\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"//\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"\\\\\"\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.first\
    \ != \"/\"\n\tlet file_name = file_name.characters.count ", "\tlet file_name =\
    \ file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet first_letter = file_name[0..<dot_index].lowercased()\n\
    \tlet first_letter = first_letter!\n\tlet last_letter = file_name[dot_index..<file_name.count].lowercased()\n\
    \tlet last_letter = last_letter!\n\tlet first_letter_index = first_letter.index(of:\
    \ first_letter)\n\tlet first_letter_index = first_letter_index!\n\tlet last_letter_index\
    \ = last_letter.index(of: last_letter)\n\tlet last_letter_index = last_letter_index!\n\
    \t\n\tif dot_index == dot_index.endIndex {\n\t\treturn \"No\"\n\t} else if dot_index\
    \ == dot_index.endIndex + 1 {\n\t\tif first_letter_index == first_letter_index.endIndex\
    \ {\n\t\t\treturn \"No\"\n\t\t} else if first_letter_index == first_letter_index.endIndex\
    \ + 1 {\n\t\t\tif last_letter_index == last_letter_index.endIndex {\n\t\t\t\t\
    return \"No\"\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn \"Yes\"", "    let file_name\
    \ = file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n \
    \   let dot_index = dot_index!\n    let file_name = file_name.substring(from:\
    \ dot_index!)\n    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics)\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.symbols)\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.newlines)\n    if dot_index == 0 {\n        return file_name\n\
    \    }\n    if dot_index == file_name.count - 1 {\n        return file_name\n\
    \    }\n    if file_name.count < 3 {\n        return file_name\n    }\n    if\
    \ file_name.substring(from: dot_index).lowercased() != \"exe\" {\n        return\
    \ file_name\n    }\n    if file_name.substring(from: dot_index).lowercased() !=\
    \ \"dll\" {\n        return file_name\n    }\n    if file_name.substring(from:\
    \ dot_index).lowercased() != \"txt\" {\n        return file_name\n    }\n    return\
    \ file_name", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z]{1}\\\
    .[a-zA-Z]{3,4}$\", options: [])\n    return regex.firstMatch(in: file_name, options:\
    \ [], range: NSMakeRange(0, file_name.count)).rangeAt(1).length == 0 ? \"Yes\"\
    \ : \"No\"", "    let file_name = file_name.lowercased()\n    let dot_index =\
    \ file_name.index(of: \".\")\n    let dot_index = dot_index! - 1\n    let file_name\
    \ = file_name[dot_index...].lowercased()\n    let file_name = file_name.components(separatedBy:\
    \ \"0123456789\").count\n    if file_name == 0 {\n        return \"No\"\n    }\n\
    \    if dot_index == 0 {\n        return \"No\"\n    }\n    if dot_index == file_name.count\
    \ - 1 {\n        return \"Yes\"\n    }\n    if file_name[dot_index] != \".\" {\n\
    \        return \"No\"\n    }\n    if file_name.count > 3 {\n        return \"\
    No\"\n    }\n    if file_name.count < 3 {\n        return \"Yes\"\n    }\n   \
    \ if file_name.first! < 'a' || file_name.first! > 'z' {\n        return \"No\"\
    \n    }\n    if file_name.last! != 'txt' && file_name.last! != 'exe' && file_name.last!\
    \ != 'dll' {\n        return \"No\"\n    }\n    return \"Yes\"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "\t\
    let file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.components(separatedBy:\
    \ \".\")\n\tlet file_name = file_name.first\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count > 3 && file_name.characters.count\
    \ < 6 && file_name.contains(\".\")\n\tlet file_name = file_name.characters.count\
    \ > 1 && file_name.characters.count < 3 && file_name.first?.unicodeScalars.filter({\
    \ $0.isLetter }).count > 0\n\treturn file_name ? \"Yes\" : \"No\"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index!\n\tlet file_name = file_name.substring(from: dot_index!)\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet letter_index = file_name.index(of:\
    \ \"a\")\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options: [])\n    return regex.firstMatch(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.utf8.count)).rangeAt(1).length\
    \ == 0 ? \"Yes\" : \"No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "    let file_name =\
    \ file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n   \
    \ let dot_index = dot_index!\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index!", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n  \
    \  let file_name = file_name.lowercased()\n    let letter_index = file_name.index(of:\
    \ \"a\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"A\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"z\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"Z\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"0\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"9\")\n    let letter_index = letter_index!\n    let letter_index = file_name.index(of:\
    \ \"1\")\n    let letter_index = letter_index!\n    if dot_index == nil || dot_index!\
    \ >= file_name.count {\n        return \"No\"\n    }\n    if letter_index == nil\
    \ || letter_index! >= file_name.count {\n        return \"No\"\n    }\n    if\
    \ file_name.count == 0 {\n        return \"No\"\n    }\n    if file_name.count\
    \ > 3 {\n        return \"No\"\n    }\n    if file_name.contains(\".\") {\n  \
    \      return \"No\"\n    }\n    if file_name.substring(from: dot_index!).isEmpty{\n\
    \        return \"No\"\n    }\n    if file_name.substring(from: dot_index!).lowercased()\
    \ != \"txt\" {\n        return \"No\"\n    }\n    if file_name.substring(from:\
    \ dot_index!).lowercased() != \"exe\" {\n        return \"No\"\n    }\n    if\
    \ file_name.substring(from: dot_index!).lowercased() != \"dll\" {\n        return\
    \ \"No\"\n    }\n    if letter_index! < dot_index! {\n        return \"No\"\n\
    \    }\n    if letter_index! < dot_index!+1 {\n        return \"No\"\n    }\n\
    \    if letter_index! < dot_index!+2 {\n        return \"No\"\n    }\n    if letter_index!\
    \ < dot_index!+3 {\n        return \"No\"\n    }\n    if letter_index! < dot_index!+4\
    \ {\n        return \"No\"\n    }\n    if letter_index! < dot_index!+5 {\n   \
    \     return \"No\"\n    }\n    if letter_index! < dot_index!+6 {\n        return\
    \ \"No\"\n    }\n    if letter_index! < dot_index!+7 {\n        return \"No\"\n\
    \    }\n    if letter_index! < dot_index!+8 {\n        return \"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!", " \
    \   let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n   \
    \ let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{3}$\", options: .caseInsensitive)\n    return\
    \ regex.firstMatch(in: file_name, options: .anchored, range: NSRange(location:\
    \ 0, length: file_name.utf16.count)).rangeAt(1).length == 0 ? \"Yes\" : \"No\"",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.firstIndex(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index\
    \ = dot_index + 1\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = ", "    let file_name\
    \ = file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n \
    \   let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_", "    let file_name = file_name.lowercased()\n    let\
    \ dot_index = file_name.firstIndex(of: \".\")\n    let dot_index = dot_index!\n\
    \    let dot_length = dot_index - dot_index!\n    let dot_length = dot_length!\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let dot_length = dot_length\n    let dot_length = dot_length\n\
    \    let dot_length = dot_length\n    let dot_length = dot_length\n    let dot_length\
    \ = dot_length\n    let ", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.firstIndex(of: \".\")\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n    let file_name\
    \ = file_name.lowercased()\n    let letter_index = file_name.index(of: \"a\")\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!\
    \ - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\t\
    let dot_index = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index\
    \ = dot_index! - 1\n\tlet dot_index = dot_index! - 1\n\tlet dot_index = dot_index!",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet first_letter = file_name.prefix(upTo:\
    \ dot_index)\n\tlet first_letter = first_letter!\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \" \", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"-\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"_\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \".\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"'\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"\\\"\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"\\\\\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"<\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \">\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"|\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"%\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"#\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"$\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"&\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"*\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"(\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \")\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"+\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"=\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"?\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \"!\", with: \"\")\n\tlet first_letter = first_letter.replacingOccurrences(of:\
    \ \";\", with: \"\")\n\t", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "    let file_name = file_name.lowercased()\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .punctuationCharacters)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n",
  "\tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet file_name = file_name.dropFirst()\n\
    \tlet file_name = file_name.dropLast()\n\tlet ", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n  \
    \  let file_name = file_name.lowercased()\n    let letter_index = (file_name.startIndex..<file_name.endIndex).filter{\
    \ $0.isLetter }\n    let letter_index = letter_index.count\n    let dot_index\
    \ = file_name.index(of: \".\")\n    let dot_index = dot_index!\n    let file_name\
    \ = file_name.substring(from: dot_index!)\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n\
    \    let letter_index = (file_name.startIndex..<file_name.endIndex).filter{ $0.isLetter\
    \ }\n    let letter_index = letter_index.count\n    if letter_index == 0 {\n \
    \       return \"No\"\n    }\n    if dot_index == 0 {\n        return \"No\"\n\
    \    }\n    if dot_index == dot_index! {\n        if letter_index == 1 {\n   \
    \         return \"Yes\"\n        }\n    }\n    return \"No\"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z.]+$\", options: [])\n    let matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.count))\n\
    \    if matches.count > 0 {\n        let match = matches.first\n        let range\
    \ = match.range\n        let start = range.lowerBound\n        let end = range.upperBound\n\
    \        let substring = file_name[start..<end]\n        let isFilenameValid =\
    \ substring == \"txt\" || substring == \"exe\" || substring == \"dll\"\n     \
    \   return isFilenameValid ? \"Yes\" : \"No\"\n    }\n    return \"No\"", "\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_", "    let file_name = file_name.lowercased()\n\
    \    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n\
    \    let file_name = file_name.dropFirst()\n    let file_name = file_name.dropLast()\n",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.firstIndex(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_index\
    \ = dot_index + 1\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != file_name.count ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != file_name.count ? dot_index : 0\n\tlet dot_index = ", "\tlet regex = try!\
    \ NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{3,4}$\")\n\t\
    let range = NSRange(location: 0, length: file_name.utf16.count)\n\tlet result\
    \ = regex.firstMatch(in: file_name, options: [], range: range)\n\treturn result\
    \ != nil ? \"Yes\" : \"No\"", "    let file_name = file_name.lowercased()\n  \
    \  let dot_index = file_name.rangeOfString(\".\").location\n    let dot_length\
    \ = file_name.rangeOfString(\".\").length\n    let dot_index = dot_index != nil\
    \ ? dot_index! : 0\n    let dot_length = dot_length != nil ? dot_length! : 0\n\
    \    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length\
    \ != nil ? dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index!\
    \ : 0\n    let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length != nil\
    \ ? dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n \
    \   let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index =\
    \ dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length != nil ?\
    \ dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n   \
    \ let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_length = dot_length != nil ? dot_length!\
    \ : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_length\
    \ = dot_length != nil ? dot_length! : 0\n    let dot_index = dot_index != nil\
    \ ? dot_index! : 0\n    let dot_length = dot_length != nil ? dot_length! : 0\n\
    \    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length\
    \ != nil ? dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index!\
    \ : 0\n    let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length != nil\
    \ ? dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n \
    \   let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index =\
    \ dot_index != nil ? dot_index! : 0\n    let dot_length = dot_length != nil ?\
    \ dot_length! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n   \
    \ let dot_length = dot_length != nil ? dot_length! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_length = dot_length != nil ? dot_length!\
    \ : 0\n    let dot_index = dot_", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\.[a-zA-Z]+$\", options: [])\n    return regex.firstMatch(in: file_name,\
    \ options: [], range: NSRange(location: 0, length: file_name.characters.count)).rangeAt(1).length\
    \ == 0 ? \"Yes\" : \"No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.", "\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\.[a-zA-Z]+$\")\n\tlet result = regex.firstMatch(in: file_name,\
    \ options: [], range: NSRange(location: 0, length: file_name.count))\n\tif result\
    \ != nil {\n\t\treturn \"Yes\"\n\t}\n\treturn \"No\"", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet file_name\
    \ = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\
    \ == 3 && file_name.contains(\".\") && file_name.characters.first >= 'a' && file_name.characters.first\
    \ <= 'z' && file_name.characters.last >= 'a' && file_name.characters.last <= 'z'\n\
    \tif file_name == true {\n\t\treturn \"Yes\"\n\t} else {\n\t\treturn \"No\"\n\t\
    }", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "\tlet regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    \\.[a-z]+$\", options: .caseInsensitive)\n\tlet matches = regex.matches(in: file_name,\
    \ options: .anchored, range: NSRange(location: 0, length: file_name.count))\n\t\
    \n\tguard matches.count == 1 else {\n\t\treturn \"No\"\n\t}\n\t\n\tlet range =\
    \ matches[0].range\n\t\n\tlet start = file_name.index(range.lowerBound, offsetBy:\
    \ 0)\n\tlet end = file_name.index(range.upperBound, offsetBy: 0)\n\t\n\tlet file_name\
    \ = file_name[start..<end]\n\t\n\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[a-z]+$\", options: .caseInsensitive)\n\tlet matches = regex.matches(in:\
    \ file_name, options: .anchored, range: NSRange(location: 0, length: file_name.count))\n\
    \t\n\tguard matches.count == 1 else {\n\t\treturn \"No\"\n\t}\n\t\n\tlet range\
    \ = matches[0].range\n\t\n\tlet start = file_name.index(range.lowerBound, offsetBy:\
    \ 0)\n\tlet end = file_name.index(range.upperBound, offsetBy: 0)\n\t\n\tlet file_name\
    \ = file_name[start..<end]\n\t\n\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[a-z]+$\", options: .caseInsensitive)\n\tlet matches = regex.matches(in:\
    \ file_name, options: .anchored, range: NSRange(location: 0, length: file_name.count))\n\
    \t\n\tguard matches.count == 1 else {\n\t\treturn \"No\"\n\t}\n\t\n\tlet range\
    \ = matches[0].range\n\t\n\tlet start = file_name.index(range.lowerBound, offsetBy:\
    \ 0)\n\tlet end = file_name.index(range.upperBound, offsetBy: 0)\n\t\n\tlet file_name\
    \ = file_name[start..<end]\n\t\n\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[a-z]+$\", options: .caseInsensitive)\n\tlet matches = regex.matches(in:\
    \ file_name, options: .anchored, range: NSRange(location: 0, length: file_name.count))\n\
    \t\n\tguard matches.count == 1 else {\n\t\treturn \"No\"\n\t}\n\t\n\tlet range\
    \ = matches[0].range\n\t\n\tlet start = file_name.index(range.lowerBound, offsetBy:\
    \ 0)\n\tlet end = file_name.index(range.upperBound, offsetBy: 0)\n\t\n\tlet file_name\
    \ = file_name[start..<end]\n\t\n\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[a-z]+$\", options: .caseInsensitive)\n\tlet ", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index + 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet file_name = file_name.substring(from:\
    \ dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count == 3 && file_name.contains(\".\"\
    ) && file_name.starts(with: \"a\") && file_name.ends(with: \"z\") && file_name.starts(with:\
    \ \"A\") && file_name.ends(with: \"Z\")\n\treturn file_name ? \"Yes\" : \"No\"",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet dot_index =\
    \ file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{2,3}$\")\n    return regex.firstMatch(in:\
    \ file_name, options: .regularExpression) != nil ? \"Yes\" : \"No\"", "    let\
    \ regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options:\
    \ [])\n    return regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).length == 0 ? \"Yes\" : \"No\"", " \
    \   let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\")\n\
    \    let results = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.count))\n    if !results.isEmpty {\n        let range =\
    \ results.first!.range\n        let start = range.lowerBound\n        let end\
    \ = range.upperBound\n        let substr = file_name[start..<end]\n        if\
    \ substr.count != 1 || substr[0] != 'a' || substr[1] != 'z' || substr[2] != 'A'\
    \ || substr[3] != 'Z' {\n            return \"No\"\n        }\n    }\n    return\
    \ \"Yes\"", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\"\
    )\n    let matches = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.count))\n    if matches.count == 0 {\n        return \"\
    No\"\n    }\n    if matches.count > 1 {\n        return \"No\"\n    }\n    if\
    \ matches.count == 1 && matches[0].rangeAt(0) != nil {\n        if let range =\
    \ matches[0].range(at: 0) {\n            if let string = file_name.substring(with:\
    \ range) {\n                if string.lowercased() == \"txt\" ||\n           \
    \         string.lowercased() == \"exe\" ||\n                    string.lowercased()\
    \ == \"dll\" {\n                    return \"Yes\"\n                }\n      \
    \      }\n        }\n    }\n    return \"No\"", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\")\n    let matches = regex.matches(in: file_name,\
    \ range: NSRange(location: 0, length: file_name.count))\n    if matches.count\
    \ == 0 {\n        return \"No\"\n    }\n    if matches.count == 1 {\n        if\
    \ file_name[matches[0].range.lowerBound..<matches[0].range.upperBound].isEmpty\
    \ {\n            return \"No\"\n        }\n    }\n    return \"Yes\"", "    let\
    \ regex = try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z.][a-zA-Z.]+$\"\
    , options: [])\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSMakeRange(0, file_name.characters.count)).rangeAt(1).length == 0 ? \"Yes\"\
    \ : \"No\"", "    let file_name = file_name.lowercased()\n    let dot_index =\
    \ file_name.firstIndex(of: \".\")\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \    let dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let\
    \ dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n    let dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.rangeOfString(\".\").location\n\tlet dot_length = file_name.rangeOfString(\"\
    .\").length\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length\
    \ = dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ?\
    \ dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet\
    \ dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length\
    \ != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! :\
    \ 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index =\
    \ dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ?\
    \ dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet\
    \ dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : 0\n\tlet dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ?\
    \ dot_length! : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet\
    \ dot_length = dot_length != nil ? dot_length! : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : 0\n\tlet dot_length = dot_length != nil ? dot_length!\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index! : 0\n\tlet dot_length =\
    \ dot_length != nil ? dot_length!", "\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{3,4}$\")\n\tlet result = regex.firstMatch(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.utf8.count))\n\
    \tif let range = result.range, range.location == 0 && range.length == file_name.utf8.count\
    \ {\n\t\treturn \"Yes\"\n\t} else {\n\t\treturn \"No\"\n\t}", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_length = dot_index\
    \ != nil ? dot_index!.count : 0\n\tlet dot_length = dot_length < 3 ? 0 : dot_length\n\
    \tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_length =\
    \ dot_index != nil ? dot_index!.count : 0\n\tlet dot_length = dot_length < 3 ?\
    \ 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\
    \tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length =\
    \ dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_length = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length\
    \ = dot_length < 3 ? 0 : dot_length\n\tlet dot_index = dot_index != nil", "\t\
    let file_name = file_name.lowercased()\n\tlet dot_index = file_name.rangeOfString(\"\
    .\").location\n\tlet dot_length = file_name.rangeOfString(\".\").length\n\tlet\
    \ dot_string = file_name[dot_index..<dot_index+dot_length]\n\tlet dot_first_letter\
    \ = dot_string.first\n\tlet dot_second_letter = dot_string.second\n\tlet dot_first_letter_is_latin_letter\
    \ = dot_first_letter.isLatinLetter\n\tlet dot_second_letter_is_valid = dot_second_letter.isValid\n\
    \tlet dot_first_letter_is_latin_letter_or_valid = dot_first_letter_is_latin_letter\
    \ || dot_second_letter_is_valid\n\tlet dot_first_letter_is_latin_letter_or_valid_or_empty\
    \ = dot_first_letter_is_latin_letter_or_valid || dot_first_letter.isEmpty\n\t\
    let dot_second_letter_is_valid_or_empty = dot_second_letter_is_valid || dot_second_letter.isEmpty\n\
    \tlet dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty = dot_first_letter_is_latin_letter_or_valid\
    \ || dot_first_letter_is_latin_letter_or_valid_or_empty\n\tlet dot_second_letter_is_valid_or_empty_or_empty\
    \ = dot_second_letter_is_valid || dot_second_letter_is_valid_or_empty\n\tlet dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty_or_empty\
    \ = dot_first_letter_is_latin_letter_or_valid || dot_first_letter_is_latin_letter_or_valid_or_empty\
    \ || dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty\n\tlet dot_second_letter_is_valid_or_empty_or_empty_or_empty\
    \ = dot_second_letter_is_valid || dot_second_letter_is_valid_or_empty || dot_second_letter_is_valid_or_empty_or_empty\n\
    \tlet dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty_or_empty_or_empty\
    \ = dot_first_letter_is_latin_letter_or_valid || dot_first_letter_is_latin_letter_or_valid_or_empty\
    \ || dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty || dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty_or_empty\n\
    \tlet dot_second_letter_is_valid_or_empty_or_empty_or_empty_or_empty = dot_second_letter_is_valid\
    \ || dot_second_letter_is_valid_or_empty || dot_second_letter_is_valid_or_empty_or_empty\
    \ || dot_second_letter_is_valid_or_empty_or_empty_or_empty\n\tlet dot_first_letter_is_latin_letter_or_valid_or_empty_or_empty_or_empty_or_empty_or_empty\
    \ = dot_first_letter_is_latin_letter_or_valid || dot_first_letter_is_latin_letter_or_valid_or_empty\
    \ || dot_first_letter_is_latin_", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_length = dot_index - file_name.startIndex\n\tlet dot_length = dot_length!\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length\
    \ = dot_length\n\tlet dot_length = dot_length\n\tlet dot_length = dot_length\n\
    \tlet dot_length = dot_length\n\tlet ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet\
    \ dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet\
    \ dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet\
    \ dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet\
    \ dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0\
    \ ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index\
    \ = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index != 0 ? dot_index\
    \ : 0\n\tlet dot_index = dot_index != 0 ? dot_index : 0\n\tlet dot_index = dot_index\
    \ != 0 ? dot_", "\tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : 0\n\tlet file_name = file_name.substring(from:\
    \ dot_index)\n\tlet letter_index = file_name.index(of: \"a\")\n\tlet letter_index\
    \ = letter_index != nil ? letter_index! : 0\n\tlet letter = file_name[letter_index!]\n\
    \tlet letter = Character(letter)\n\tlet letter_index = file_name.index(of: \"\
    A\")\n\tlet letter_index = letter_index != nil ? letter_index! : 0\n\tlet letter\
    \ = file_name[letter_index!]\n\tlet letter = Character(letter)\n\tlet letter_index\
    \ = file_name.index(of: \"z\")\n\tlet letter_index = letter_index != nil ? letter_index!\
    \ : 0\n\tlet letter = file_name[letter_index!]\n\tlet letter = Character(letter)\n\
    \tlet letter_index = file_name.index(of: \"Z\")\n\tlet letter_index = letter_index\
    \ != nil ? letter_index! : 0\n\tlet letter = file_name[letter_index!]\n\tlet letter\
    \ = Character(letter)\n\tlet letter_index = file_name.index(of: \"0\")\n\tlet\
    \ letter_index = letter_index != nil ? letter_index! : 0\n\tlet letter = file_name[letter_index!]\n\
    \tlet letter = Character(letter)\n\tlet letter_index = file_name.index(of: \"\
    9\")\n\tlet letter_index = letter_index != nil ? letter_index! : 0\n\tlet letter\
    \ = file_name[letter_index!]\n\tlet letter = Character(letter)\n\tlet letter_index\
    \ = file_name.index(of: \"_\")\n\tlet letter_index = letter_index != nil ? letter_index!\
    \ : 0\n\tlet letter = file_name[letter_index!]\n\tlet letter = Character(letter)\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index\
    \ != nil ? letter_index! : 0\n\tlet letter = file_name[letter_index!]\n\tlet letter\
    \ = Character(letter)\n\tlet letter_index = file_name.index(of: \"+\")\n\tlet\
    \ letter_index = letter_index != nil ? letter_index! : 0\n\tlet letter = file_name[letter_index!]\n\
    \tlet letter = Character(letter)\n\tlet letter_index = file_name.index(of: \"\
    /\")\n\tlet letter_index = letter_index != nil ? letter_index! : 0\n\tlet letter\
    \ = file_name[letter_index!]\n\tlet letter = Character(letter)\n\tlet letter_index\
    \ = file_name.index(of: \"'\")", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options: [])\n    let matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.count))\n\
    \    if matches.count == 0 {\n        return \"No\"\n    }\n    if matches.count\
    \ == 1 {\n        let range = matches[0].range\n        let start = range.lowerBound\n\
    \        let end = range.upperBound\n        let substring = file_name[start..<end]\n\
    \        if substring == \".\" {\n            return \"Yes\"\n        }\n    }\n\
    \    return \"No\"", "    let file_name = file_name.lowercased()\n    let dot_index\
    \ = file_name.rangeOfString(\".\").location\n    let dot_index = dot_index !=\
    \ nil ? dot_index! : 0\n    let dot_index = dot_index + 1\n    let dot_index =\
    \ dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index!\
    \ : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ?\
    \ dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let\
    \ dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! :\
    \ 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ?\
    \ dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let\
    \ dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! :\
    \ 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ?\
    \ dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let\
    \ dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! :\
    \ 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ?\
    \ dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let\
    \ dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index\
    \ != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ? dot_index! :\
    \ 0\n    let dot_index = dot_index != nil ? dot_index! : 0\n    let dot_index\
    \ = dot_index != nil ? dot_index! : 0\n    let dot_index = dot_index != nil ?\
    \ dot_index! : 0\n    let dot_index = dot_index != nil ? dot_", "    let file_name\
    \ = file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n \
    \   let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name[dot_index..<file_name.endIndex]\n\
    \    let ", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "    let file_name = file_name.lowercased()\n    let dot_index\
    \ = file_name.index(of: \".\")\n    let dot_index = dot_index!\n    let first_letter\
    \ = file_name.substring(from: dot_index!)\n    let first_letter = first_letter?.lowercased()\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.letters)\n   \
    \ let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.uppercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.uppercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet\
    \ file_name = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet file_name\
    \ = file_name.characters.count\n\tif file_name <= 3 {\n\t\treturn \"No\"\n\t}\n\
    \tif dot_index == 0 {\n\t\treturn \"No\"\n\t}\n\tif dot_index == file_name.startIndex\
    \ {\n\t\treturn \"No\"\n\t}\n\tif dot_index == file_name.endIndex {\n\t\treturn\
    \ \"No\"\n\t}\n\tif file_name[dot_index-1].isLetter == false {\n\t\treturn \"\
    No\"\n\t}\n\tif file_name[dot_index..<dot_index+1].contains(where: { $0.isLetter\
    \ }) == false {\n\t\treturn \"No\"\n\t}\n\tif file_name[dot_index..<dot_index+1].contains(where:\
    \ { $0.isNumber }) == false {\n\t\treturn \"No\"\n\t}\n\treturn \"Yes\"", "\t\
    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{2,3}$\"\
    , options: [])\n\tif regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.count)) != nil {\n\t\treturn \"Yes\"\n\t}\n\treturn \"No\"", "\tlet\
    \ regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\", options:\
    \ [])\n\tlet matches = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.count))\n\t\n\tif matches.count == 0 {\n\t\treturn \"No\"\
    \n\t} else {\n\t\treturn \"Yes\"\n\t}", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    \\.[^.]+$\", options: [])\n    let matches = regex.matches(in: file_name, options:\
    \ [], range: NSRange(location: 0, length: file_name.count))\n    if matches.count\
    \ == 0 {\n        return \"No\"\n    }\n    if matches.count == 1 {\n        let\
    \ range = matches[0].range\n        let start = range.lowerBound\n        let\
    \ end = range.upperBound\n        let substring = file_name[start..<end]\n   \
    \     let regex = try! NSRegularExpression(pattern: \"^[a-zA-Z]+$\", options:\
    \ [])\n        let matches = regex.matches(in: substring, options: [], range:\
    \ NSRange(location: 0, length: substring.count))\n        if matches.count ==\
    \ 0 {\n            return \"No\"\n        }\n    }\n    return \"Yes\"", "   \
    \ let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n   \
    \ let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_index!\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index!\n    let dot_index = dot_index!\n    let dot_index\
    \ = dot_index!\n    let dot_index = dot_", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : 0\n\tlet file_name = file_name[dot_index..<file_name.endIndex]\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet letter_index = file_name.index(of:\
    \ \"a\")\n\tlet letter_index = letter_index != nil ? letter_index! : 0\n\tlet\
    \ letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index\
    \ = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index\
    \ < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count\
    \ ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index\
    \ : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\
    \tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet\
    \ letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index\
    \ = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index\
    \ < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count\
    \ ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index\
    \ : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\
    \tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet\
    \ letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index\
    \ = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index\
    \ < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count\
    \ ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index\
    \ : 0\n\tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\
    \tlet letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet\
    \ letter_index = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index\
    \ = letter_index < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index\
    \ < file_name.count ? letter_index : 0\n\tlet letter_index = letter_index < file_name.count\
    \ ? letter_index : 0\n\tlet letter_index = letter_index", "    let file_name =\
    \ file_name.lowercased()\n    let dot_index = file_name.index(of: \".\")\n   \
    \ let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let\
    \ dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index\
    \ = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index\
    \ != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index !=\
    \ nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index != nil\
    \ ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by:\
    \ 1) : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1)\
    \ : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n\
    \    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n   \
    \ let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let\
    \ dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index\
    \ = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index\
    \ != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index !=\
    \ nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index != nil\
    \ ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by:\
    \ 1) : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1)\
    \ : nil\n    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n\
    \    let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n   \
    \ let dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let\
    \ dot_index = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index\
    \ = dot_index != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index\
    \ != nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index !=\
    \ nil ? dot_index!.advanced(by: 1) : nil\n    let dot_index = dot_index != nil\
    \ ? dot_index!.advanced(by: 1) : nil\n", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()",
  "\tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.components(separatedBy:\
    \ \".\")\n\tlet file_name = file_name[0]\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = ", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.index(of: \".\", in: 0)\n\tlet dot_index = dot_index != nil ? dot_index!",
  "\tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.components(separatedBy:\
    \ \".\")\n\tlet file_name = file_name.first\n\tlet file_name = file_name.count\n\
    \tlet file_name = file_name.characters.count\n\tlet file_name = file_name.characters.count\
    \ > 3 && file_name.characters.count < file_name.count\n\tlet file_name = file_name.characters.count\
    \ > 0 && file_name.characters.count < file_name.count\n\tlet file_name = file_name.characters.count\
    \ > 0 && file_name.characters.count > 1 && file_name.characters.count < file_name.count\n\
    \tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count < file_name.count\n\
    \tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ < file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count < file_name.count\n\tlet file_name = file_name.characters.count\
    \ > 0 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count < file_name.count\n\tlet file_name = file_name.characters.count\
    \ > 0 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ < file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count < file_name.count\n\tlet file_name = file_name.characters.count\
    \ > 0 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.count > 1 && file_name.characters.count > 1 && file_name.characters.count\
    \ > 1 && file_name.characters.", "\tlet file_name = file_name.lowercased()\n\t\
    let dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index\
    \ = dot_index != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index\
    \ != nil ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil\
    \ ? dot_index! : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index!\
    \ : file_name.endIndex\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet dot_index = dot_index", "    let file_name = file_name.lowercased()\n  \
    \  let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\
    \ - 1\n    let first_letter = file_name[dot_index..<dot_index+1]\n    let first_letter\
    \ = first_letter?.lowercased()\n    let first_letter = first_letter?.prefix(with:\
    \ CharacterSet.letters)\n    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.uppercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.uppercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = first_letter?.prefix(with: CharacterSet.lowercaseLetters)\n\
    \    let first_letter = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\\\.[a-zA-Z]+$\", options: [])\n    let matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.count))\n\
    \    if matches.count == 0 {\n        return \"No\"\n    }\n    if matches.count\
    \ == 1 {\n        if file_name[matches[0].range.lowerBound] == \"0\" {\n     \
    \       return \"No\"\n        }\n    }\n    return \"Yes\"", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "\t\
    let file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.components(separatedBy:\
    \ \".\")\n\tlet file_name = file_name.first\n\tlet file_name = file_name.characters.count\
    \ > 3 ? false : true\n\tlet file_name = file_name.characters.count > 1 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = file_name.characters.count\
    \ > 0 ? true : false\n\tlet file_name = file_name.characters.count > 0 ? true\
    \ : false\n\tlet file_name = file_name.characters.count > 0 ? true : false\n\t\
    let file_name = file_name.characters.count > 0 ? true : false\n\tlet file_name\
    \ = file_name.characters.count > 0 ? true : false\n\tlet file_name = ", "\tlet\
    \ file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index!", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\
    \ - 1\n    let file_name = file_name[dot_index...dot_index+3]\n    let file_name\
    \ = file_name.lowercased()\n    let letter_index = file_name.index(of: \"a\")\n\
    \    let letter_index = letter_index! - 1\n    let letter_index = file_name.index(of:\
    \ \"A\")\n    let letter_index = letter_index! - 1\n    if dot_index != nil &&\
    \ dot_index! < 3 && file_name[dot_index!] != \".\" {\n        return \"No\"\n\
    \    }\n    if letter_index != nil && letter_index! < 3 && file_name[letter_index!]\
    \ != \".\" && file_name[letter_index!] != \".\" {\n        return \"No\"\n   \
    \ }\n    if dot_index != nil && dot_index! < 3 && file_name[dot_index!] != \"\
    .\" && file_name[dot_index!] != \".\" && file_name[dot_index!] != \".\" {\n  \
    \      return \"No\"\n    }\n    if letter_index != nil && letter_index! < 3 &&\
    \ file_name[letter_index!] != \".\" && file_name[letter_index!] != \".\" && file_name[letter_index!]\
    \ != \".\" && file_name[letter_index!] != \".\" {\n        return \"No\"\n   \
    \ }\n    if dot_index != nil && dot_index! < 3 && file_name[dot_index!] != \"\
    .\" && file_name[dot_index!] != \".\" && file_name[dot_index!] != \".\" && file_name[dot_index!]\
    \ != \".\" && file_name[dot_index!] != \".\" {\n        return \"No\"\n    }\n\
    \    if letter_index != nil && letter_index! < 3 && file_name[letter_index!] !=\
    \ \".\" && file_name[letter_index!] != \".\" && file_name[letter_index!] != \"\
    .\" && file_name[letter_index!] != \".\" && file_name[letter_index!] != \".\"\
    \ && file_name[letter_index!] != \".\" {\n        return \"No\"\n    }\n    if\
    \ dot_index != nil && dot_index! < 3 && file_name[dot_index!] != \".\" && file_name[dot_index!]\
    \ != \".\" && file_name[dot_index!] != \".\" && file_name[dot_index!] != \".\"\
    \ && file_name[dot_index!] != \".\" && file_name[dot_index!] != \".\" && file_name[dot_index!]\
    \ != \".\" {\n        return \"No\"\n    }\n    if letter_index != nil && letter_index!\
    \ < 3 && file_name[letter_index!] != \".\" && file_name[letter_index!] != \".\"\
    \ && file_name[letter_index!] != \".\" && file_name[letter_index!] != \".\" &&\
    \ file_name[letter_index!] != \".\" && file_name[letter_index!] != \".\" && file_name[letter_index",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    \\.[a-zA-Z]+$\", options: [])\n    let result = regex.firstMatch(in: file_name,\
    \ options: [], range: NSRange(location: 0, length: file_name.count))\n    if result\
    \ != nil {\n        let range = NSRange(location: result.range.location, length:\
    \ result.range.length)\n        let file_name = file_name.substring(with: range)\n\
    \        if file_name.contains(\".\") {\n            if file_name.characters.count\
    \ != 1 {\n                return \"No\"\n            }\n            if let first_letter\
    \ = file_name.first?.unicodeScalars.first {\n                if first_letter >=\
    \ \"a\" && first_letter <= \"z\" || first_letter >= \"A\" && first_letter <= \"\
    Z\" {\n                    return \"Yes\"\n                }\n            }\n\
    \        }\n    }\n    return \"No\"", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n  \
    \  let file_name = file_name.lowercased()\n    let letter_index = (file_name.startIndex..<file_name.endIndex).filter({\
    \ $0.isLetter })\n    let letter_index = letter_index.first\n    let letter_index\
    \ = letter_index!\n    let letter_index = letter_index.advanced(by: 1)\n    let\
    \ letter_index = letter_index.first\n    let letter_index = letter_index!\n  \
    \  let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.first\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.first\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "\tlet file_name = file_name.lowercased()\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\tlet\
    \ file_name = file_name.components(separatedBy: \".\")\n\tlet file_name = file_name.first\n\
    \tlet file_name = file_name.characters.count > 3 ? \"No\" : \"Yes\"\n\treturn\
    \ file_name", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "\tlet regex = try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z][a-zA-Z0-9.]*$\"\
    )\n\tlet matches = regex.matches(in: file_name, options: [], range: NSRange(location:\
    \ 0, length: file_name.count))\n\tif matches.count > 0 {\n\t\treturn \"Yes\"\n\
    \t} else {\n\t\treturn \"No\"\n\t}", "\tlet regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\.[a-z][a-z][a-z]$\", options: [])\n\tlet matches = regex.matches(in:\
    \ file_name, options: [], range: NSRange(location: 0, length: file_name.count))\n\
    \t\n\tif matches.count == 0 {\n\t\treturn \"No\"\n\t} else {\n\t\treturn \"Yes\"\
    \n\t}", "\tlet file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.components(separatedBy:\
    \ \".\")\n\tlet file_name = file_name.first\n\tlet file_name = file_name.characters.count\
    \ != 3 || file_name.first == \"\" || file_name.first != \"a\" || file_name.first\
    \ != \"b\" || file_name.first != \"c\" || file_name.first != \"d\" || file_name.first\
    \ != \"e\" || file_name.first != \"f\" || file_name.first != \"g\" || file_name.first\
    \ != \"h\" || file_name.first != \"i\" || file_name.first != \"j\" || file_name.first\
    \ != \"k\" || file_name.first != \"l\" || file_name.first != \"m\" || file_name.first\
    \ != \"n\" || file_name.first != \"o\" || file_name.first != \"p\" || file_name.first\
    \ != \"q\" || file_name.first != \"r\" || file_name.first != \"s\" || file_name.first\
    \ != \"t\" || file_name.first != \"u\" || file_name.first != \"v\" || file_name.first\
    \ != \"w\" || file_name.first != \"x\" || file_name.first != \"y\" || file_name.first\
    \ != \"z\"\n\treturn file_name ? \"Yes\" : \"No\"", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "    let file_name = file_name.lowercased()\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.components(separatedBy: \".\")\n    let file_name\
    \ = file_name.first\n    let file_name = file_name.count\n    if file_name ==\
    \ 0 || file_name == 1 || file_name == 2 {\n        return \"No\"\n    }\n    if\
    \ file_name != 3 && file_name.first != Character('a') && file_name.first != Character('A')\
    \ && file_name.first != Character('z') && file_name.first != Character('Z') {\n\
    \        return \"No\"\n    }\n    if file_name.last != [\"txt\", \"exe\", \"\
    dll\"].contains(where: {$0 == file_name.last}) {\n        return \"No\"\n    }\n\
    \    return \"Yes\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = ", "    let file_name\
    \ = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.components(separatedBy:\
    \ \".\")\n    let file_name = file_name[0]\n    let file_name = file_name.characters.count\n\
    \    if file_name <= 3 {\n        return \"No\"\n    }\n    if file_name.contains(\"\
    .\") {\n        return \"No\"\n    }\n    if file_name.starts(with: \"a\") {\n\
    \        return \"No\"\n    }\n    if file_name.starts(with: \"A\") {\n      \
    \  return \"No\"\n    }\n    if file_name.characters.count != 1 {\n        return\
    \ \"No\"\n    }\n    if file_name.characters.first != (file_name.characters.first\
    \ ?? \"\").lowercased() {\n        return \"No\"\n    }\n    return \"Yes\"",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = ", "\tlet file_name = file_name.lowercased()\n\tlet file_name =\
    \ file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\tlet\
    \ file_name = file_name.components(separatedBy: \".\")\n\tlet file_name = file_name.first\n\
    \tlet file_name = file_name.count\n\tlet file_name = file_name.characters.count\n\
    \tlet file_name = file_name.characters.count > 3 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name.characters.count > 0 && file_name.characters.count\
    \ <= file_name.count\n\tlet file_name = file_name", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index\
    \ - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet\
    \ dot_index = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index\
    \ = dot_index - 1\n\tlet dot_index = dot_index - 1\n\tlet dot_index = ", "   \
    \ let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name.substring(from:\
    \ dot_index!)\n    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let letter_index = file_name.index(of:\
    \ \"a\")\n    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter", "\tlet file_name = file_name.lowercased()\n\tlet dot_index =\
    \ file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\tlet letter_index\
    \ = file_name.index(of: \"a\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"A\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"z\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"Z\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"0\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"9\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"1\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"2\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"3\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"4\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"5\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"6\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"7\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"8\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"9\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"0\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \".\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"+\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"/\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"\\\\\")\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = file_name.index(of: \"'\")\n\tlet letter_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name.substring(from: dot_index!)\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet letter_index = file_name.index(of: \"a\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index\
    \ = letter_index!\n\tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = letter_index!\n\tlet letter_index = letter_index!\n\tlet\
    \ letter_index = letter_index!\n\tlet letter_index = letter", "    let regex =\
    \ try! NSRegularExpression(pattern: \"^[0-9]{3}[a-zA-Z]{1}\\.[a-zA-Z]{2,3}$\"\
    )\n    return regex.firstMatch(in: file_name, options: .regularExpression) !=\
    \ nil ? \"Yes\" : \"No\"", "    let file_name = file_name.lowercased()\n    let\
    \ file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.components(separatedBy: \".\")\n    let file_name\
    \ = file_name.first\n    let file_name = file_name.flatMap { $0.isLetter }\n \
    \   let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap\
    \ { $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n\
    \    let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name =\
    \ file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap {\
    \ $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n \
    \   let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap\
    \ { $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n\
    \    let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name =\
    \ file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap {\
    \ $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n \
    \   let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap\
    \ { $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n\
    \    let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name =\
    \ file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap {\
    \ $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n \
    \   let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap\
    \ { $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n\
    \    let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name =\
    \ file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap {\
    \ $0.isNotEmpty }\n    let file_name = file_name.flatMap { $0.isNotEmpty }\n \
    \   let file_name = file_name.flatMap { $0.isNotEmpty }\n    let file_name = file_name.flatMap\
    \ { $0.isNotEmpty }", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\tlet dot_index\
    \ = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = ", "    let regex = try! NSRegularExpression(pattern:\
    \ \"^[0-9]{3}\\.[a-zA-Z]+$\", options: [])\n    return regex.firstMatch(in: file_name,\
    \ options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length\
    \ == 0 &&\n        regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).location == 0 &&\n        regex.firstMatch(in:\
    \ file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).length\
    \ > 0 &&\n        regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).location != 0 &&\n        regex.firstMatch(in:\
    \ file_name, options: [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).location\
    \ != file_name.characters.count &&\n        regex.firstMatch(in: file_name, options:\
    \ [], range: NSMakeRange(0, file_name.characters.count)).rangeAt(1).location !=\
    \ file_name.characters.count - 1\n        ? \"Yes\"\n        : \"No\"", "\tlet\
    \ file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \"\
    .\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet file_name = file_name[dot_index..<file_name.endIndex]\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet file_name = file_name[dot_index..<file_name.endIndex]\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet file_name = file_name[dot_index..<file_name.endIndex]\n\
    \tlet file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet file_name\
    \ = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()",
  "    let file_name = file_name.lowercased()\n    let file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n    let file_name = file_name.components(separatedBy:\
    \ \".\")\n    \n    if file_name.count < 3 {\n        return \"No\"\n    }\n \
    \   \n    if file_name.count > 3 {\n        return \"No\"\n    }\n    \n    if\
    \ file_name.first == \"\" {\n        return \"No\"\n    }\n    \n    if file_name.first\
    \ != \"a\" && file_name.first != \"b\" && file_name.first != \"c\" && file_name.first\
    \ != \"d\" && file_name.first != \"e\" && file_name.first != \"f\" && file_name.first\
    \ != \"g\" && file_name.first != \"h\" && file_name.first != \"i\" && file_name.first\
    \ != \"j\" && file_name.first != \"k\" && file_name.first != \"l\" && file_name.first\
    \ != \"m\" && file_name.first != \"n\" && file_name.first != \"o\" && file_name.first\
    \ != \"p\" && file_name.first != \"q\" && file_name.first != \"r\" && file_name.first\
    \ != \"s\" && file_name.first != \"t\" && file_name.first != \"u\" && file_name.first\
    \ != \"v\" && file_name.first != \"w\" && file_name.first != \"x\" && file_name.first\
    \ != \"y\" && file_name.first != \"z\" {\n        return \"No\"\n    }\n    \n\
    \    if file_name.last != \"txt\" && file_name.last != \"exe\" && file_name.last\
    \ != \"dll\" {\n        return \"No\"\n    }\n    \n    return \"Yes\"", "   \
    \ let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name.substring(from:\
    \ dot_index!)\n    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let letter_index = (file_name.startIndex..<file_name.endIndex).filter({\
    \ $0.isLetter })\n    let letter_index = letter_index.first!\n    let letter_index\
    \ = letter_index.distance(from: file_name.startIndex)\n    if letter_index > 3\
    \ {\n        return \"No\"\n    }\n    if dot_index == 0 {\n        return \"\
    No\"\n    }\n    if dot_index == file_name.endIndex {\n        return \"No\"\n\
    \    }\n    if dot_index != 0 {\n        let dot_index = file_name.index(of: \"\
    .\")\n        let dot_index = dot_index!\n        let file_name = file_name.substring(from:\
    \ dot_index!)\n        let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \        let file_name = file_name.lowercased()\n        let letter_index = (file_name.startIndex..<file_name.endIndex).filter({\
    \ $0.isLetter })\n        let letter_index = letter_index.first!\n        let\
    \ letter_index = letter_index.distance(from: file_name.startIndex)\n        if\
    \ letter_index > 3 {\n            return \"No\"\n        }\n    }\n    return\
    \ \"Yes\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!", "    let file_name = file_name.lowercased()\n    let dot_index\
    \ = file_name.index(of: \".\")\n    let dot_index = dot_index!\n    let file_name\
    \ = file_name.substring(from: dot_index!)\n    let file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n    let file_name = file_name.lowercased()\n    let\
    \ letter_index = file_name.index(of: \"a\")\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter", "    let\
    \ regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\", options:\
    \ [])\n    return regex.firstMatch(in: file_name, options: [], range: NSMakeRange(0,\
    \ file_name.characters.count)).rangeAt(1).length == 0 ? \"Yes\" : \"No\"", "\t\
    let file_name = file_name.lowercased()\n\tlet dot_index = file_name.firstIndex(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index! : file_name.endIndex\n\
    \tlet first_letter = file_name.prefix(upTo: dot_index)\n\tlet second_letter =\
    \ file_name.suffix(from: dot_index)\n\tlet first_letter_is_latin_letter = first_letter.isLatinLetter()\n\
    \tlet second_letter_is_valid = second_letter == \"txt\" || second_letter == \"\
    exe\" || second_letter == \"dll\"\n\tlet file_name_is_valid = dot_index != nil\
    \ && dot_index != file_name.endIndex && first_letter.isValid() && second_letter_is_valid\
    \ && first_letter_is_latin_letter\n\treturn file_name_is_valid ? \"Yes\" : \"\
    No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.rangeOfString(\"\
    .\").location\n\tlet dot_index = dot_index == NSNotFound ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == file_name.characters.count\
    \ - 1 ? file_name.characters.count - 1 : dot_index\n\tlet dot_index = dot_index\
    \ == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0\
    \ ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index\
    \ = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\
    \tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index\
    \ == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0\
    \ ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index\
    \ = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\
    \tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index\
    \ == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0\
    \ ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index\
    \ = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\
    \tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index\
    \ == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0\
    \ ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index\
    \ = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\
    \tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index\
    \ == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_index\n\tlet\
    \ dot_index = dot_index == 0 ? 0 : dot_index\n\tlet dot_index = dot_index == 0\
    \ ? 0 : dot_index\n\tlet dot_index = dot_index == 0 ? 0 : dot_", "\tlet file_name\
    \ = file_name.lowercased()\n\tlet dot_index = file_name.index(of: \".\")\n\tlet\
    \ dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index\
    \ != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!", "\t\
    let file_name = file_name.lowercased()\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ .whitespacesAndNewlines)\n\tlet file_name = file_name.dropFirst()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = file_name.dropLast()\n\tlet file_name\
    \ = file_name.dropLast()\n\tlet file_name = ", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index\
    \ - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n\
    \    let dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let\
    \ dot_index = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index\
    \ = dot_index - 1\n    let dot_index = dot_index - 1\n    let dot_index = dot_",
  "\tlet file_name = file_name.lowercased()\n\tlet dot_index = file_name.index(of:\
    \ \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_length\
    \ = dot_index != nil ? dot_index!.count : 0\n\tlet dot_length = dot_length !=\
    \ 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\t\
    let dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_length != 0 ? dot_length : 0\n\tlet dot_length = dot_length\
    \ != 0 ? dot_length : 0\n\tlet dot_length = dot_length != 0 ? dot_length : 0\n\
    \tlet dot_length = dot_", "\tlet regex = try! NSRegularExpression(pattern: \"\
    ^[0-9]{3}\\\\.[a-zA-Z]+$\", options: [])\n\tlet matches = regex.matches(in: file_name,\
    \ options: [], range: NSRange(location: 0, length: file_name.count))\n\t\n\tif\
    \ matches.count > 0 {\n\t\treturn \"Yes\"\n\t} else {\n\t\treturn \"No\"\n\t}",
  "    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let file_name = file_name.substring(from:\
    \ dot_index!)\n    let file_name = file_name.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let letter_index = (file_name.startIndex..<file_name.endIndex).filter({\
    \ $0.isLetter })\n    let letter_index = letter_index.first\n    let letter_index\
    \ = letter_index!\n    let letter_index = letter_index.advanced(by: 1)\n    let\
    \ letter_index = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter_index\
    \ = letter_index.advanced(by: 1)\n    let letter_index = letter_index.advanced(by:\
    \ 1)\n    let letter_index = letter_index.advanced(by: 1)\n    let letter", " \
    \   let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\.[a-zA-Z]+$\",\
    \ options: [])\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSMakeRange(0, file_name.characters.count)).rangeAt(1).length == 0 ?\n     \
    \   \"Yes\" : \"No\"", "\tlet file_name = file_name.lowercased()\n\tlet dot_index\
    \ = file_name.index(of: \".\")\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil\
    \ ? dot_index!.offset : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset\
    \ : 0\n\tlet dot_index = dot_index != nil ? dot_index!.offset : 0\n\tlet dot_index\
    \ = dot_index != nil ? dot_index!", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "    let file_name = file_name.lowercased()\n\
    \    let dot_index = file_name.index(of: \".\")\n    let dot_index = dot_index!\n\
    \    let file_name = file_name.substring(from: dot_index!)\n    let file_name\
    \ = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n  \
    \  let file_name = file_name.lowercased()\n    let letter_index = file_name.index(of:\
    \ \"a\")\n    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter_index = letter_index!\n    let letter_index = letter_index!\n\
    \    let letter", "    let regex = try! NSRegularExpression(pattern: \"^[0-9]{3}\\\
    \\.[a-zA-Z]+$\")\n    return regex.firstMatch(in: file_name, options: [], range:\
    \ NSMakeRange(0, file_name.characters.count)).rangeAt(1).length == 0 &&\n    \
    \    file_name.characters.count > 3 &&\n        file_name.characters.first >=\
    \ 'a' && file_name.characters.first <= 'z' &&\n        file_name.characters.last\
    \ == '.' &&\n        file_name.characters.dropFirst().contains(where: { $0.isLetter\
    \ })\n        ? \"Yes\"\n        : \"No\"", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index =\
    \ dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet\
    \ dot_index = dot_index!\n\tlet dot_index = dot_index!\n\tlet dot_index = dot_index!\n\
    \tlet dot_index = dot_index!\n\tlet dot_index = ", "\tlet file_name = file_name.lowercased()\n\
    \tlet dot_index = file_name.index(of: \".\")\n\tlet dot_index = dot_index!\n\t\
    let file_name = file_name[dot_index..<file_name.endIndex]\n\tlet file_name = file_name.trimmingCharacters(in:\
    \ CharacterSet.whitespacesAndNewlines)\n\tlet file_name = file_name.lowercased()\n\
    \tlet letter_index = file_name.index(of: \"a\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"A\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"0\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"9\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"_\")\n\tlet letter_index = letter_index!\n\
    \tlet letter_index = file_name.index(of: \"-\")\n\tlet letter_index = letter_index!\n",
  "    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let first_letter = file_name[..<dot_index]\n\
    \    let last_letter = file_name[dot_index..<file_name.count]\n    let first_letter\
    \ = first_letter?.unicodeScalars\n    let last_letter = last_letter?.unicodeScalars\n\
    \    let first_letter = first_letter?.first!\n    let last_letter = last_letter?.first!\n\
    \    if dot_index == 0 || dot_index == file_name.count || first_letter == nil\
    \ || last_letter == nil || first_letter! < 'a' || first_letter! > 'z' || last_letter!\
    \ < 'a' || last_letter! > 'z' {\n        return \"No\"\n    }\n    if dot_index\
    \ == file_name.count {\n        return \"Yes\"\n    }\n    if first_letter! <\
    \ 'a' || first_letter! > 'z' {\n        return \"No\"\n    }\n    if last_letter!\
    \ < 'a' || last_letter! > 'z' {\n        return \"No\"\n    }\n    if first_letter!\
    \ > last_letter! {\n        return \"No\"\n    }\n    return \"Yes\"", "    let\
    \ file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index!\n    let first_letter = file_name[..<dot_index]\n\
    \    let last_letter = file_name[dot_index..<file_name.count]\n    let first_letter\
    \ = first_letter?.unicodeScalars\n    let last_letter = last_letter?.unicodeScalars\n\
    \    let first_letter = first_letter?.first!\n    let last_letter = last_letter?.first!\n\
    \    if dot_index == 0 || first_letter == nil || last_letter == nil || first_letter\
    \ !=  first_letter.unicodeScalars.first || last_letter !=  last_letter.unicodeScalars.first\
    \ {\n        return \"No\"\n    }\n    if dot_index == file_name.count - 1 ||\
    \ first_letter == nil || last_letter == nil || first_letter !=  first_letter.unicodeScalars.first\
    \ || last_letter !=  last_letter.unicodeScalars.first {\n        return \"No\"\
    \n    }\n    if dot_index == 0 || first_letter == nil || last_letter == nil ||\
    \ first_letter !=  first_letter.unicodeScalars.first || last_letter !=  last_letter.unicodeScalars.first\
    \ {\n        return \"No\"\n    }\n    if dot_index == file_name.count - 1 ||\
    \ first_letter == nil || last_letter == nil || first_letter !=  first_letter.unicodeScalars.first\
    \ || last_letter !=  last_letter.unicodeScalars.first {\n        return \"No\"\
    \n    }\n    if dot_index == 0 || first_letter == nil || last_letter == nil ||\
    \ first_letter !=  first_letter.unicodeScalars.first || last_letter !=  last_letter.unicodeScalars.first\
    \ {\n        return \"No\"\n    }\n    if dot_index == file_name.count - 1 ||\
    \ first_letter == nil || last_letter == nil || first_letter !=  first_letter.unicodeScalars.first\
    \ || last_letter !=  last_letter.unicodeScalars.first {\n        return \"No\"\
    \n    }\n    if dot_index == 0 || first_letter == nil || last_letter == nil ||\
    \ first_letter !=  first_letter.unicodeScalars.first || last_letter !=  last_letter.unicodeScalars.first\
    \ {\n        return \"No\"\n    }\n    if dot_index == file_name.count - 1 ||\
    \ first_letter == nil || last_letter == nil || first_letter !=  first_letter.unicodeScalars.first\
    \ || last_letter !=  last_letter.unicodeScalars.first {\n        return \"No\"\
    \n    }\n    if dot_index == 0 || first_letter == nil || last_letter == nil ||\
    \ first_letter !=  first_letter.unicodeScalars.first || last_letter !=  last_letter.unicode",
  "    let file_name = file_name.lowercased()\n    let dot_index = file_name.index(of:\
    \ \".\")\n    let dot_index = dot_index! - 1\n    let file_name = file_name[dot_index..<file_name.count]\n\
    \    let file_name = file_name.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines)\n\
    \    let file_name = file_name.lowercased()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = file_name.dropLast()\n    let file_name = file_name.dropFirst()\n\
    \    let file_name = "]
stop_tokens:
- "\n}"

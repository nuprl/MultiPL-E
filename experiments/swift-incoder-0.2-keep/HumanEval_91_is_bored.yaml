name: HumanEval_91_is_bored
language: swift
prompt: "\n/// You'll be given a string of words, and your task is to count the number\n\
  /// of boredoms. A boredom is a sentence that starts with the word \"I\".\n/// Sentences\
  \ are delimited by '.', '?' or '!'.\n/// For example:\n/// >>> is_bored(\"Hello\
  \ world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun is shining. I love\
  \ this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
  \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
  \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
  \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\")\
  \ == 0)"
completions: ["    var count = 0\n    for s in S.split(separator: \".?!\") {\n   \
    \     if s.starts(with: \"I\") {\n            count += 1\n        }\n    }\n \
    \   return count", "    let boredoms = S.components(separatedBy: \".?!\")\n  \
    \      .filter({ $0.hasPrefix(\"I\") })\n        .count\n    return boredoms",
  '    return is_bored_helper(S, "", 0, 0, 0)', "    var count = 0\n    for s in S.split(separator:\
    \ \".?!\") {\n        if s.starts(with: \"I\") {\n            count += 1\n   \
    \     }\n    }\n    return count", '    return is_bored_impl(S, "")', "    let\
    \ boredoms = S.split(separator: \".?!\").filter({ $0.hasPrefix(\"I\") }).count\n\
    \    return boredoms", "    let boredoms = S.components(separatedBy: \".?!\").filter{$0.hasPrefix(\"\
    I\")}\n    return boredoms.count", "    var boredoms = 0\n    for s in S.split(separator:\
    \ \".?!\") {\n        if s.starts(with: \"I\") {\n            boredoms += 1\n\
    \        }\n    }\n    return boredoms", "    var count = 0\n    for s in S.split(separator:\
    \ \".,?!\") {\n        if s.starts(with: \"I\") {\n            count += 1\n  \
    \      }\n    }\n    return count", "    let boredoms = S.components(separatedBy:\
    \ \".?!\")\n    return boredoms.count { $0.hasPrefix(\"I\") }", '    return is_bored_helper(S,
    "", 0, 0, 0)', "    let boredoms = S.components(separatedBy: \".?!\")\n      \
    \  .filter{$0.hasPrefix(\"I\")}\n    return boredoms.count", "    var bored =\
    \ 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n\
    \    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n \
    \   var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n  \
    \  var x = 0\n    var y = 0\n    var z = 0\n    var A = 0\n    var B = 0\n   \
    \ var C = 0\n    var D = 0\n    var E = 0\n    var F = 0\n    var G = 0\n    var\
    \ H = 0\n    var I = 0\n    var J = 0\n    var K = 0\n    var L = 0\n    var M\
    \ = 0\n    var N = 0\n    var O = 0\n    var P = 0\n    var Q = 0\n    var R =\
    \ 0\n    var S = 0\n    var T = 0\n    var U = 0\n    var V = 0\n    var W = 0\n\
    \    var X = 0\n    var Y = 0\n    var Z = 0\n    var a = 0\n    var b = 0\n \
    \   var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n  \
    \  var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n   \
    \ var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var\
    \ r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w\
    \ = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var A = 0\n    var B =\
    \ 0\n    var C = 0\n    var D = 0\n    var E = 0\n    var F = 0\n    var G = 0\n\
    \    var H = 0\n    var I = 0\n    var J = 0\n    var K = 0\n    var L = 0\n \
    \   var M = 0\n    var N = 0\n    var O = 0\n    var P = 0\n    var Q = 0\n  \
    \  var R = 0\n    var S = 0\n    var T = 0\n    var U = 0\n    var V = 0\n   \
    \ var W = 0\n    var X = 0\n    var Y = 0\n    var Z = 0\n    var a = 0\n    var\
    \ b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g\
    \ = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var A = 0\n  \
    \  var B = 0\n    var C = 0\n    var D = 0\n    var E = 0\n    var F = 0\n   \
    \ var ", "    guard S.count > 0 else {\n        return 0\n    }\n    var bored\
    \ = 0\n    var last = 0\n    for c in S {\n        if c == '.' || c == '?' ||\
    \ c == '!' {\n            bored++\n        }\n        if last == c {\n       \
    \     bored++\n        }\n        last = c\n    }\n    return bored", "    \n\
    \    let boredoms = S.components(separatedBy: \".\")\n    \n    if boredoms.count\
    \ < 1 {\n        return 0\n    }\n    \n    if boredoms.first == \"I\" {\n   \
    \     return 1\n    }\n    \n    return 0", "    let boredoms = S.components(separatedBy:\
    \ \".?!\")\n    return boredoms.filter({ $0.hasPrefix(\"I\") }).count", "    let\
    \ boredoms = S.components(separatedBy: \".?!\").filter({ $0.hasPrefix(\"I\") }).count\n\
    \    return boredoms", "    let boredoms = S.components(separatedBy: \".?!\")\n\
    \        .filter({ $0.hasPrefix(\"I\") })\n        .count\n    return boredoms",
  "    let boredoms = S.components(separatedBy: \".?!\")\n    return boredoms.filter({\
    \ $0.hasPrefix(\"I\") }).count", "    let boredoms = S.components(separatedBy:\
    \ \".?!\").filter{ $0.hasPrefix(\"I\") }\n    return boredoms.count"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_121_solution
results:
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ 0..<lst.count {\n        if i % 2 == 0 {\n            sum += lst[i]\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpq49_e9ko/tmpq49_e9ko.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9422741c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9422438b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9422438988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94224377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq49_e9ko                        0x000055dad79536ec <unavailable> + 5868

    5    libc.so.6                          0x00002b942292d460 __libc_start_main +
    245

    6    tmpq49_e9ko                        0x000055dad79531a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{ $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpzq7bc9e_.swift:8:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter { $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpd2e1fc6_.swift:8:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{ $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpzq7bc9e_.swift:8:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{ $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpzq7bc9e_.swift:8:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{ $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpzq7bc9e_.swift:8:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ 0..<lst.count {\n        if lst[i] % 2 == 0 {\n            sum += lst[i]\n \
    \       }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmphqlx6rxx/tmphqlx6rxx.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd3bc7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd38beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd38be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd38bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphqlx6rxx                        0x0000557f5b89e54a <unavailable> + 5450

    5    libc.so.6                          0x00002afbd3db3460 __libc_start_main +
    245

    6    tmphqlx6rxx                        0x0000557f5b89e1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 1 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpbaep53cj/tmpbaep53cj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ebc93ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ebc635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ebc635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ebc6347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbaep53cj                        0x000056084059850a <unavailable> + 5386

    5    libc.so.6                          0x00002b5ebcb2a460 __libc_start_main +
    245

    6    tmpbaep53cj                        0x0000560840598169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ 0..<lst.count {\n        if lst[i] % 2 == 0 {\n            sum += lst[i]\n \
    \       }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmphqlx6rxx/tmphqlx6rxx.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd3bc7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd38beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd38be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd38bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphqlx6rxx                        0x0000557f5b89e54a <unavailable> + 5450

    5    libc.so.6                          0x00002afbd3db3460 __libc_start_main +
    245

    6    tmphqlx6rxx                        0x0000557f5b89e1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ 0..<lst.count {\n        if i % 2 == 0 {\n            sum += lst[i]\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpq49_e9ko/tmpq49_e9ko.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9422741c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9422438b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9422438988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94224377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq49_e9ko                        0x000055dad79536ec <unavailable> + 5868

    5    libc.so.6                          0x00002b942292d460 __libc_start_main +
    245

    6    tmpq49_e9ko                        0x000055dad79531a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{$0 % 2\
    \ == 1}.sum() + (lst.filter{$0 % 2 == 0}).sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq4_5qcfk.swift:8:36: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{$0 % 2 == 1}.sum() + (lst.filter{$0 % 2 == 0}).sum()\n\
    \           ~~~~~~~~~~~~~~~~~~~~~~~ ^~~\n/tmp/tmpq4_5qcfk.swift:8:70: error: value\
    \ of type '[Int]' has no member 'sum'\n    return lst.filter{$0 % 2 == 1}.sum()\
    \ + (lst.filter{$0 % 2 == 0}).sum()\n                                        \
    \   ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~\n"
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ 0..<lst.count {\n        if i % 2 == 0 {\n            sum += lst[i]\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpq49_e9ko/tmpq49_e9ko.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9422741c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9422438b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9422438988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94224377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq49_e9ko                        0x000055dad79536ec <unavailable> + 5868

    5    libc.so.6                          0x00002b942292d460 __libc_start_main +
    245

    6    tmpq49_e9ko                        0x000055dad79531a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for element\
    \ in lst {\n        if element % 2 == 0 {\n            sum += element\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp1nz_kuuc/tmp1nz_kuuc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f8c9cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f8c6c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f8c6c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f8c6c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1nz_kuuc                        0x00005586ff9bd50a <unavailable> + 5386

    5    libc.so.6                          0x00002b2f8cbbb460 __libc_start_main +
    245

    6    tmp1nz_kuuc                        0x00005586ff9bd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for x in\
    \ lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpr3vjjqmi/tmpr3vjjqmi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad31d3ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad31d0e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad31d0e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad31d0e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3vjjqmi                        0x000055e2c57f550a <unavailable> + 5386

    5    libc.so.6                          0x00002ad31d5d7460 __libc_start_main +
    245

    6    tmpr3vjjqmi                        0x000055e2c57f5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for i in\
    \ lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n    }\n   \
    \ return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpjcjvrjqt/tmpjcjvrjqt.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432732bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4327022b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4327022988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43270217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjcjvrjqt                        0x000055b0cd06d50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4327517460 __libc_start_main +
    245

    6    tmpjcjvrjqt                        0x000055b0cd06d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    var sum = 0\n    for index\
    \ in 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solution(lst:\
    \ [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmprub4g56u/tmprub4g56u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa096fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa0666b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa0666988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa06657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub4g56u                        0x0000564eebc8c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b9aa0b5b460 __libc_start_main +
    245

    6    tmprub4g56u                        0x0000564eebc8c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013489
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// solution([5, 8,\
    \ 7, 1]) ==> 12\n/// solution([3, 3, 3, 3, 3]) ==> 9\n/// solution([30, 13, 24,\
    \ 321]) ==>0\nfunc solution(lst: [Int]) -> Int {\n    return lst.filter{ $0 %\
    \ 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solution(lst: [5,\
    \ 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst:\
    \ [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5, 9]) == 5)\nassert(solution(lst:\
    \ [2, 4, 8]) == 0)\nassert(solution(lst: [30, 13, 23, 32]) == 23)\nassert(solution(lst:\
    \ [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpzq7bc9e_.swift:8:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013489

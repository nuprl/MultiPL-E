name: HumanEval_39_prime_fib
language: swift
prompt: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n\
  /// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfunc prime_fib(n:\
  \ Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
  \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
  \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n:\
  \ 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
completions: ["    if n < 2 {\n        return n\n    }\n    var a = 2\n    var b =\
    \ 1\n    for _ in 0..<n {\n        var c = a + b\n        a = b\n        b = c\n\
    \    }\n    return b", "    let mut fib = [0, 1]\n    for _ in 0..<n {\n     \
    \   fib[1] = fib[0] + fib[1]\n        fib[0] = fib[1]\n    }\n    return fib[n]",
  "    var a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n    var nn = n\n  \
    \  var prime = 0\n    var prime_found = 0\n    var prime_found2 = 0\n    var prime_found3\
    \ = 0\n    var prime_found4 = 0\n    var prime_found5 = 0\n    var prime_found6\
    \ = 0\n    var prime_found7 = 0\n    var prime_found8 = 0\n    var prime_found9\
    \ = 0\n    var prime_found10 = 0\n    var prime_found11 = 0\n    var prime_found12\
    \ = 0\n    var prime_found13 = 0\n    var prime_found14 = 0\n    var prime_found15\
    \ = 0\n    var prime_found16 = 0\n    var prime_found17 = 0\n    var prime_found18\
    \ = 0\n    var prime_found19 = 0\n    var prime_found20 = 0\n    var prime_found21\
    \ = 0\n    var prime_found22 = 0\n    var prime_found23 = 0\n    var prime_found24\
    \ = 0\n    var prime_found25 = 0\n    var prime_found26 = 0\n    var prime_found27\
    \ = 0\n    var prime_found28 = 0\n    var prime_found29 = 0\n    var prime_found30\
    \ = 0\n    var prime_found31 = 0\n    var prime_found32 = 0\n    var prime_found33\
    \ = 0\n    var prime_found34 = 0\n    var prime_found35 = 0\n    var prime_found36\
    \ = 0\n    var prime_found37 = 0\n    var prime_found38 = 0\n    var prime_found39\
    \ = 0\n    var prime_found40 = 0\n    var prime_found41 = 0\n    var prime_found42\
    \ = 0\n    var prime_found43 = 0\n    var prime_found44 = 0\n    var prime_found45\
    \ = 0\n    var prime_found46 = 0\n    var prime_found47 = 0\n    var prime_found48\
    \ = 0\n    var prime_found49 = 0\n    var prime_found50 = 0\n    var prime_found51\
    \ = 0\n    var prime_found52 = 0\n    var prime_found53 = 0\n    var prime_found54\
    \ = 0\n    var prime_found55 = 0\n    var prime_found56 = 0\n    var prime_found57\
    \ = 0\n    var prime_found58 = 0\n    var prime_found59 = 0\n    var prime_found60\
    \ = 0\n    var prime_found61 = 0\n    var prime_found62 = 0\n    var prime_found63\
    \ = 0\n    var prime_found64 = 0\n    var prime_found65 = 0\n    var prime_found66\
    \ = 0\n    var prime_found67 = 0\n    var prime_found68 = 0\n    var prime_found69\
    \ = 0\n    var prime_found70", "    if n < 2 {\n        return n\n    }\n    var\
    \ a = 2\n    var b = 1\n    for _ in 0..<n {\n        let c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return b", "    let mut prime_fib_cache = [Int]()\n\
    \    prime_fib_cache[0] = prime_fib_cache[1] = 1\n    for _ in 1..n {\n      \
    \  let mut prime_fib_cache_tmp = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp.clone()\n\
    \        let mut prime_fib_cache_tmp2 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp2.clone()\n        let mut prime_fib_cache_tmp3 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp3.clone()\n        let mut prime_fib_cache_tmp4\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp4.clone()\n\
    \        let mut prime_fib_cache_tmp5 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp5.clone()\n        let mut prime_fib_cache_tmp6 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp6.clone()\n        let mut prime_fib_cache_tmp7\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp7.clone()\n\
    \        let mut prime_fib_cache_tmp8 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp8.clone()\n        let mut prime_fib_cache_tmp9 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp9.clone()\n        let mut prime_fib_cache_tmp10\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp10.clone()\n\
    \        let mut prime_fib_cache_tmp11 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp11.clone()\n        let mut prime_fib_cache_tmp12 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp12.clone()\n        let mut prime_fib_cache_tmp13\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp13.clone()\n\
    \        let mut prime_fib_cache_tmp14 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp14.clone()\n        let mut prime_fib_cache_tmp15 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp15.clone()\n        let mut prime_fib_cache_tmp",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1261025\n\
    \    }\n    if n == 32 {\n        return 1699776\n    }\n    if n == 33 {\n  \
    \      return 2554560\n    }\n    if n == 34 {\n        return 4107520\n    }\n\
    \    if n == 35 {\n        return 570288\n    }\n    if n == 36 {\n        return\
    \ 716336\n    }\n    if n == 37 {\n        return 926690\n    }\n    if n == 38\
    \ {\n        return 1138080\n    }\n    if n == 39 {\n        return 1459312\n\
    \    }\n    if n == 40 {\n        return 1713220\n    }\n    if n == 41 {\n  \
    \      return 1948160\n    }\n    if n == 42 {\n        return 2299520\n    }\n\
    \    if n == 43 {\n        return 2739560\n    }\n    if n == 44 {\n        return\
    \ 3250240\n    }\n    if n == 45 {\n        return 3895280\n    }\n    if n ==\
    \ 46 {\n        return 4494480\n", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n  \
    \  }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n \
    \   if n == 31 {\n        return 1261035\n    }\n    if n == 32 {\n        return\
    \ 1699827\n    }\n    if n == 33 {\n        return 2554560\n    }\n    if n ==\
    \ 34 {\n        return 4107515\n    }\n    if n == 35 {\n        return 5702887\n\
    \    }\n    if n == 36 {\n        return 7163351\n    }\n    if n == 37 {\n  \
    \      return 9281771\n    }\n    if n == 38 {\n        return 11332111\n    }\n\
    \    if n == 39 {\n        return 13222871\n    }\n    if n == 40 {\n        return\
    \ 15443568\n    }\n    if n == 41 {\n        return 17498571\n    }\n    if n\
    \ == 42 {\n        return 19685671\n    }\n    if n == 43 {\n        return 22830671\n\
    \    }\n    if n == 44 {\n        return 25101467\n    }\n    if n == 45 {\n \
    \       return 27475771\n    }\n    if n == 46 {\n", "    if n < 2 {\n       \
    \ return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    let fibs = (0..<n).map\
    \ { i in\n        let a = 2\n        let b = a + 1\n        while b < n {\n  \
    \          let c = a + b\n            a = b\n            b = c\n        }\n  \
    \      b\n    }\n    return fibs.last!", "    let mut fib = [0, 1]\n    for i\
    \ in 2..<n {\n        fib[i] = fib[i - 1] + fib[i - 2]\n    }\n    return fib[n]",
  "    let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97]\n    let prime = primes[Int(arc4random_uniform(UInt32(primes.count)))]\n\
    \    let result = prime * prime_fib(n-1) + prime\n    return result", "    var\
    \ a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n    var n1 = n - 1\n   \
    \ var n2 = n - 1\n    var n3 = n - 1\n    var n4 = n - 1\n    var n5 = n - 1\n\
    \    var n6 = n - 1\n    var n7 = n - 1\n    var n8 = n - 1\n    var n9 = n -\
    \ 1\n    var n10 = n - 1\n    var n11 = n - 1\n    var n12 = n - 1\n    var n13\
    \ = n - 1\n    var n14 = n - 1\n    var n15 = n - 1\n    var n16 = n - 1\n   \
    \ var n17 = n - 1\n    var n18 = n - 1\n    var n19 = n - 1\n    var n20 = n -\
    \ 1\n    var n21 = n - 1\n    var n22 = n - 1\n    var n23 = n - 1\n    var n24\
    \ = n - 1\n    var n25 = n - 1\n    var n26 = n - 1\n    var n27 = n - 1\n   \
    \ var n28 = n - 1\n    var n29 = n - 1\n    var n30 = n - 1\n    var n31 = n -\
    \ 1\n    var n32 = n - 1\n    var n33 = n - 1\n    var n34 = n - 1\n    var n35\
    \ = n - 1\n    var n36 = n - 1\n    var n37 = n - 1\n    var n38 = n - 1\n   \
    \ var n39 = n - 1\n    var n40 = n - 1\n    var n41 = n - 1\n    var n42 = n -\
    \ 1\n    var n43 = n - 1\n    var n44 = n - 1\n    var n45 = n - 1\n    var n46\
    \ = n - 1\n    var n47 = n - 1\n    var n48 = n - 1\n    var n49 = n - 1\n   \
    \ var n50 = n - 1\n    var n51 = n - 1\n    var n52 = n - 1\n    var n53 = n -\
    \ 1\n    var n54 = n - 1\n    var n55 = n - 1\n    var n56 = n - 1\n    var n57\
    \ = n - 1\n    var n58 = n - 1\n    var n59 = n - 1\n    var n60 = n - 1\n   \
    \ var n61 = n - 1\n    var n62 = n - 1\n    var n63 = n - 1\n    var n64 = n -\
    \ 1\n    var n65 = n - 1\n    var n66 = n - 1\n    var n67 = n - 1\n    var n68\
    \ = n - 1\n    var n69 = n - 1\n    var n70 = n - 1\n    var n71 = n - 1\n   \
    \ var n72 = n - 1\n    var n73 = n - ", "    var fib: Int = 0\n    var prime:\
    \ Int = 0\n    var prime_found: Bool = false\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var temp: Int = 0\n    var temp_prime: Int = 0\n\
    \    var temp_prime_found: Bool = false\n    var temp_i: Int = 0\n    var temp_j:\
    \ Int = 0\n    var temp_k: Int = 0\n    var temp_temp: Int = 0\n    var temp_temp_prime:\
    \ Int = 0\n    var temp_temp_prime_found: Bool = false\n    var temp_temp_i: Int\
    \ = 0\n    var temp_temp_j: Int = 0\n    var temp_temp_k: Int = 0\n    var temp_temp_temp:\
    \ Int = 0\n    var temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j: Int\
    \ = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int = 0\n\
    \    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var ", "    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found:\
    \ Bool = false\n    var prime_found2: Bool = false\n    var prime_found3: Bool\
    \ = false\n    var prime_found4: Bool = false\n    var prime_found5: Bool = false\n\
    \    var prime_found6: Bool = false\n    var prime_found7: Bool = false\n    var\
    \ prime_found8: Bool = false\n    var prime_found9: Bool = false\n    var prime_found10:\
    \ Bool = false\n    var prime_found11: Bool = false\n    var prime_found12: Bool\
    \ = false\n    var prime_found13: Bool = false\n    var prime_found14: Bool =\
    \ false\n    var prime_found15: Bool = false\n    var prime_found16: Bool = false\n\
    \    var prime_found17: Bool = false\n    var prime_found18: Bool = false\n  \
    \  var prime_found19: Bool = false\n    var prime_found20: Bool = false\n    var\
    \ prime_found21: Bool = false\n    var prime_found22: Bool = false\n    var prime_found23:\
    \ Bool = false\n    var prime_found24: Bool = false\n    var prime_found25: Bool\
    \ = false\n    var prime_found26: Bool = false\n    var prime_found27: Bool =\
    \ false\n    var prime_found28: Bool = false\n    var prime_found29: Bool = false\n\
    \    var prime_found30: Bool = false\n    var prime_found31: Bool = false\n  \
    \  var prime_found32: Bool = false\n    var prime_found33: Bool = false\n    var\
    \ prime_found34: Bool = false\n    var prime_found35: Bool = false\n    var prime_found36:\
    \ Bool = false\n    var prime_found37: Bool = false\n    var prime_found38: Bool\
    \ = false\n    var prime_found39: Bool = false\n    var prime_found40: Bool =\
    \ false\n    var prime_found41: Bool = false\n    var prime_found42: Bool = false\n\
    \    var prime_found43: Bool = false\n    var prime_found44: Bool = false\n  \
    \  var prime_found45: Bool = false\n    var prime_found46: Bool = false\n    var\
    \ prime_found47: Bool = false\n    var prime_found48: Bool = false\n    var prime_found49:\
    \ Bool = false\n    var prime_found50: Bool = false\n    var prime_found51: Bool\
    \ = false\n    var prime_found52: Bool = false\n    var prime_found53: Bool =\
    \ false\n    var prime_found54: Bool = false\n    var prime_found55: Bool = false\n\
    \    var prime_found56: Bool = false\n    var ", "    if n <= 1 {\n        return\
    \ n\n    }\n    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found\
    \ = false\n    var prime_found2 = false\n    var prime_found3 = false\n    var\
    \ prime_found4 = false\n    var prime_found5 = false\n    var prime_found6 = false\n\
    \    var prime_found7 = false\n    var prime_found8 = false\n    var prime_found9\
    \ = false\n    var prime_found10 = false\n    var prime_found11 = false\n    var\
    \ prime_found12 = false\n    var prime_found13 = false\n    var prime_found14\
    \ = false\n    var prime_found15 = false\n    var prime_found16 = false\n    var\
    \ prime_found17 = false\n    var prime_found18 = false\n    var prime_found19\
    \ = false\n    var prime_found20 = false\n    var prime_found21 = false\n    var\
    \ prime_found22 = false\n    var prime_found23 = false\n    var prime_found24\
    \ = false\n    var prime_found25 = false\n    var prime_found26 = false\n    var\
    \ prime_found27 = false\n    var prime_found28 = false\n    var prime_found29\
    \ = false\n    var prime_found30 = false\n    var prime_found31 = false\n    var\
    \ prime_found32 = false\n    var prime_found33 = false\n    var prime_found34\
    \ = false\n    var prime_found35 = false\n    var prime_found36 = false\n    var\
    \ prime_found37 = false\n    var prime_found38 = false\n    var prime_found39\
    \ = false\n    var prime_found40 = false\n    var prime_found41 = false\n    var\
    \ prime_found42 = false\n    var prime_found43 = false\n    var prime_found44\
    \ = false\n    var prime_found45 = false\n    var prime_found46 = false\n    var\
    \ prime_found47 = false\n    var prime_found48 = false\n    var prime_found49\
    \ = false\n    var prime_found50 = false\n    var prime_found51 = false\n    var\
    \ prime_found52 = false\n    var prime_found53 = false\n    var prime_found54\
    \ = false\n    var prime_found55 = false\n    var prime_found56 = false\n    var\
    \ prime_found57 = false\n    var prime_found58 = false\n    var prime_found59\
    \ = false\n    var prime_found60 = false\n    var prime_found61 = false\n    var\
    \ prime_found62 = false\n    var prime_found63 = false\n    var prime_found64\
    \ = false\n    var prime_found65 = false\n    var prime_found66 = false\n    var\
    \ prime_found67 = false\n    var prime_found68 = false\n    var prime", "    let\
    \ mut fib = [0, 1]\n    for i in 2..<n {\n        fib[i] = fib[i - 1] + fib[i\
    \ - 2]\n    }\n    return fib[n]", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3) + prime_fib(n - 4)", "    if n <= 1 {\n        return n\n \
    \   }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return\
    \ 3\n    }\n    if n == 4 {\n        return 5\n    }\n    if n == 5 {\n      \
    \  return 13\n    }\n    if n == 6 {\n        return 89\n    }\n    if n == 7\
    \ {\n        return 97\n    }\n    if n == 8 {\n        return 173\n    }\n  \
    \  if n == 9 {\n        return 341\n    }\n    if n == 10 {\n        return 683\n\
    \    }\n    if n == 11 {\n        return 1267\n    }\n    if n == 12 {\n     \
    \   return 987\n    }\n    if n == 13 {\n        return 1797\n    }\n    if n\
    \ == 14 {\n        return 2583\n    }\n    if n == 15 {\n        return 4181\n\
    \    }\n    if n == 16 {\n        return 6765\n    }\n    if n == 17 {\n     \
    \   return 13579\n    }\n    if n == 18 {\n        return 28657\n    }\n    if\
    \ n == 19 {\n        return 51441\n    }\n    if n == 20 {\n        return 8031\n\
    \    }\n    if n == 21 {\n        return 12143\n    }\n    if n == 22 {\n    \
    \    return 16227\n    }\n    if n == 23 {\n        return 24593\n    }\n    if\
    \ n == 24 {\n        return 39293\n    }\n    if n == 25 {\n        return 55769\n\
    \    }\n    if n == 26 {\n        return 82367\n    }\n    if n == 27 {\n    \
    \    return 104097\n    }\n    if n == 28 {\n        return 126729\n    }\n  \
    \  if n == 29 {\n        return 152789\n    }\n    if n == 30 {\n        return\
    \ 209239\n    }\n    if n == 31 {\n        return 254789\n    }\n    if n == 32\
    \ {\n        return 293079\n    }\n    if n == 33 {\n        return 341589\n \
    \   }\n    if n == 34 {\n        return 371349\n    }\n    if n == 35 {\n    \
    \    return 411991\n    }\n    if n == 36 {\n        return 455199\n    }\n  \
    \  if n == 37 {\n        return 496899\n    }\n    if n == 38 {\n        return\
    \ 539689\n    }\n    if n == 39 {\n        return 592789\n    }\n    if n == 40\
    \ {\n        return 635189\n    }\n    if n == 41 {\n        return 675599\n \
    \   }\n    if n == 42 {\n        return 716999\n    }\n    if n == 43 {\n    \
    \    return 767999\n    }\n    if n == 44 {\n        return 823199\n    }\n  \
    \  if n == 45 {\n        return 872399\n    }\n    if n == ", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 765366\n    }\n    if n == 31 {\n        return 1199231\n    }\n \
    \   if n == 32 {\n        return 1655801\n    }\n    if n == 33 {\n        return\
    \ 2189311\n    }\n    if n == 34 {\n        return 2867671\n    }\n    if n ==\
    \ 35 {\n        return 4258111\n    }\n    if n == 36 {\n        return 5702881\n\
    \    }\n    if n == 37 {\n        return 7168061\n    }\n    if n == 38 {\n  \
    \      return 9263361\n    }\n    if n == 39 {\n        return 11878112\n    }\n\
    \    if n == 40 {\n        return 15673312\n    }\n    if n == 41 {\n        return\
    \ 19497461\n    }\n    if n == 42 {\n        return 23204061\n    }\n    if n\
    \ == 43 {\n        return 28684211\n    }\n    if n == 44 {\n        return 36548112\n\
    \    }\n    if n == 45 {\n        return 41849311\n    }\n    if n == 46 {", " \
    \   if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n \
    \   }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 765571\n    }\n    if n == 31 {\n        return 1311569\n\
    \    }\n    if n == 32 {\n        return 1972370\n    }\n    if n == 33 {\n  \
    \      return 3175879\n    }\n    if n == 34 {\n        return 514229\n    }\n\
    \    if n == 35 {\n        return 765571\n    }\n    if n == 36 {\n        return\
    \ 1311569\n    }\n    if n == 37 {\n        return 1972370\n    }\n    if n ==\
    \ 38 {\n        return 3175879\n    }\n    if n == 39 {\n        return 514229\n\
    \    }\n    if n == 40 {\n        return 765571\n    }\n    if n == 41 {\n   \
    \     return 1311569\n    }\n    if n == 42 {\n        return 1972370\n    }\n\
    \    if n == 43 {\n        return 3175879\n    }\n    if n == 44 {\n        return\
    \ 514229\n    }\n    if n == 45 {\n        return 765571\n    }\n    if n == 46\
    \ {\n        return 1311569\n    }\n    if ", '    return Int(pow(Double(n), Double(2.0)))',
  "    var result = 1\n    var prime = 1\n    var fib = 1\n    for _ in 0..<n {\n\
    \        prime = prime*2 + 1\n        fib = fib*3 + 2\n        result = prime\
    \ + fib\n    }\n    return result", "    let limit = sqrt(Double(n))\n    var\
    \ a = 2\n    var b = 1\n    var c = 0\n    while b < limit {\n        c = a +\
    \ b\n        if isPrime(c) {\n            a = b\n            b = c\n        }\
    \ else {\n            b = c\n        }\n    }\n    return b", "    if n <= 1 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 2\n    }\n    if n ==\
    \ 3 {\n        return 5\n    }\n    if n == 4 {\n        return 13\n    }\n  \
    \  if n == 5 {\n        return 89\n    }\n    if n == 6 {\n        return 97\n\
    \    }\n    if n == 7 {\n        return 173\n    }\n    if n == 8 {\n        return\
    \ 251\n    }\n    if n == 9 {\n        return 413\n    }\n    if n == 10 {\n \
    \       return 673\n    }\n    if n == 11 {\n        return 1093\n    }\n    if\
    \ n == 12 {\n        return 1771\n    }\n    if n == 13 {\n        return 2529\n\
    \    }\n    if n == 14 {\n        return 4337\n    }\n    if n == 15 {\n     \
    \   return 6979\n    }\n    if n == 16 {\n        return 12289\n    }\n    if\
    \ n == 17 {\n        return 19399\n    }\n    if n == 18 {\n        return 31707\n\
    \    }\n    if n == 19 {\n        return 51407\n    }\n    if n == 20 {\n    \
    \    return 72917\n    }\n    if n == 21 {\n        return 104023\n    }\n   \
    \ if n == 22 {\n        return 126453\n    }\n    if n == 23 {\n        return\
    \ 151069\n    }\n    if n == 24 {\n        return 188231\n    }\n    if n == 25\
    \ {\n        return 225439\n    }\n    if n == 26 {\n        return 251709\n \
    \   }\n    if n == 27 {\n        return 292427\n    }\n    if n == 28 {\n    \
    \    return 327637\n    }\n    if n == 29 {\n        return 362999\n    }\n  \
    \  if n == 30 {\n        return 400907\n    }\n    if n == 31 {\n        return\
    \ 436191\n    }\n    if n == 32 {\n        return 467773\n    }\n    if n == 33\
    \ {\n        return 495141\n    }\n    if n == 34 {\n        return 526367\n \
    \   }\n    if n == 35 {\n        return 569919\n    }\n    if n == 36 {\n    \
    \    return 615231\n    }\n    if n == 37 {\n        return 659073\n    }\n  \
    \  if n == 38 {\n        return 704591\n    }\n    if n == 39 {\n        return\
    \ 741723\n    }\n    if n == 40 {\n        return 776773\n    }\n    if n == 41\
    \ {\n        return 812831\n    }\n    if n == 42 {\n        return 859007\n \
    \   }\n    if n == 43 {\n        return 895217\n    }\n    if n == 44 {\n    \
    \    return 930701\n    }\n    if n == 45 {\n        return ", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n \
    \   if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return\
    \ 2554560\n    }\n    if n == 34 {\n        return 4107561\n    }\n    if n ==\
    \ 35 {\n        return 5702881\n    }\n    if n == 36 {\n        return 7163351\n\
    \    }\n    if n == 37 {\n        return 9261682\n    }\n    if n == 38 {\n  \
    \      return 11310067\n    }\n    if n == 39 {\n        return 13844219\n   \
    \ }\n    if n == 40 {\n        return 17377287\n    }\n    if n == 41 {\n    \
    \    return 20951863\n    }\n    if n == 42 {\n        return 26355373\n    }\n\
    \    if n == 43 {\n        return 32750725\n    }\n    if n == 44 {\n        return\
    \ 46045711\n    }\n    if n == 45 {\n        return 51070215\n    }\n    if n\
    \ == 46", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4)", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n      \
    \  return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n\
    \        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n\
    \ == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n\
    \    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n        return\
    \ 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n \
    \       return 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if\
    \ n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return 987\n\
    \    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n     \
    \   return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n    if n\
    \ == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return 10946\n\
    \    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23 {\n    \
    \    return 28657\n    }\n    if n == 24 {\n        return 46368\n    }\n    if\
    \ n == 25 {\n        return 75025\n    }\n    if n == 26 {\n        return 121393\n\
    \    }\n    if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n   \
    \     return 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n \
    \   if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n        return\
    \ 1188704\n    }\n    if n == 32 {\n        return 1819871\n    }\n    if n ==\
    \ 33 {\n        return 3028877\n    }\n    if n == 34 {\n        return 4967660\n\
    \    }\n    if n == 35 {\n        return 8059642\n    }\n    if n == 36 {\n  \
    \      return 13049697\n    }\n    if n == 37 {\n        return 21199596\n   \
    \ }\n    if n == 38 {\n        return 2882579\n    }\n    if n == 39 {\n     \
    \   return 4659747\n    }\n    if n == 40 {\n        return 6139968\n    }\n \
    \   if n == 41 {\n        return 7619968\n    }\n    if n == 42 {\n        return\
    \ 11343150\n    }\n    if n == 43 {\n        return 16628530\n    }\n    if n\
    \ == 44 {\n        return 26791429\n    }\n    if n == 45 {\n        return 43349445\n\
    \    }\n    if n == 46 {\n        return ", "    var a = 2\n    var b = 1\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var h = 0\n    var i = 1\n    var j = 1\n    var k = 0\n    var l = 0\n    var\
    \ m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r\
    \ = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w =\
    \ 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n\
    \    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n \
    \   var h = 0\n    var i = 1\n    var j = 1\n    var k = 0\n    var l = 0\n  \
    \  var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n   \
    \ var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var\
    \ w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b\
    \ = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g =\
    \ 0\n    var h = 0\n    var i = 1\n    var j = 1\n    var k = 0\n    var l = 0\n\
    \    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n \
    \   var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n  \
    \  var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n   \
    \ var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var\
    \ g = 0\n    var h = 0\n    var i = 1\n    var j = 1\n    var k = 0\n    var l\
    \ = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q =\
    \ 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n\
    \    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n \
    \   var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n  \
    \  var g = 0\n    var h = 0\n    var i = 1\n    var j = 1\n    var k = 0\n   \
    \ var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var\
    \ q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v\
    \ = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var ", "    let primes\
    \ = prime_table()\n    var result = primes[n]\n    if result > n {\n        result\
    \ = prime_fib(n + 2)\n    }\n    return result", "    let primes = prime_table()\n\
    \    let result = primes[n]\n    if result == -1 {\n        return 0\n    }\n\
    \    return result", "    if n <= 1 {\n        return n\n    }\n    if n == 2\
    \ {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if\
    \ n == 4 {\n        return 5\n    }\n    if n == 5 {\n        return 13\n    }\n\
    \    if n == 6 {\n        return 89\n    }\n    if n == 7 {\n        return 97\n\
    \    }\n    if n == 8 {\n        return 173\n    }\n    if n == 9 {\n        return\
    \ 233\n    }\n    if n == 10 {\n        return 297\n    }\n    if n == 11 {\n\
    \        return 389\n    }\n    if n == 12 {\n        return 521\n    }\n    if\
    \ n == 13 {\n        return 647\n    }\n    if n == 14 {\n        return 797\n\
    \    }\n    if n == 15 {\n        return 919\n    }\n    if n == 16 {\n      \
    \  return 1041\n    }\n    if n == 17 {\n        return 1173\n    }\n    if n\
    \ == 18 {\n        return 1301\n    }\n    if n == 19 {\n        return 1429\n\
    \    }\n    if n == 20 {\n        return 1553\n    }\n    if n == 21 {\n     \
    \   return 1679\n    }\n    if n == 22 {\n        return 1823\n    }\n    if n\
    \ == 23 {\n        return 1959\n    }\n    if n == 24 {\n        return 2087\n\
    \    }\n    if n == 25 {\n        return 2213\n    }\n    if n == 26 {\n     \
    \   return 2329\n    }\n    if n == 27 {\n        return 2459\n    }\n    if n\
    \ == 28 {\n        return 2597\n    }\n    if n == 29 {\n        return 2723\n\
    \    }\n    if n == 30 {\n        return 2839\n    }\n    if n == 31 {\n     \
    \   return 2973\n    }\n    if n == 32 {\n        return 3109\n    }\n    if n\
    \ == 33 {\n        return 3247\n    }\n    if n == 34 {\n        return 3375\n\
    \    }\n    if n == 35 {\n        return 3511\n    }\n    if n == 36 {\n     \
    \   return 3629\n    }\n    if n == 37 {\n        return 3753\n    }\n    if n\
    \ == 38 {\n        return 3897\n    }\n    if n == 39 {\n        return 4021\n\
    \    }\n    if n == 40 {\n        return 4153\n    }\n    if n == 41 {\n     \
    \   return 4277\n    }\n    if n == 42 {\n        return 4311\n    }\n    if n\
    \ == 43 {\n        return 4347\n    }\n    if n == 44 {\n        return 4479\n\
    \    }\n    if n == 45 {\n        return 4551\n    }\n    if n == 46 {\n     \
    \   return 4615\n    }\n    if n == 47 {\n        return 4677\n    }\n    if n\
    \ == 48 {\n        return ", "    if n < 2 {\n        return n\n    }\n\n    var\
    \ a = 2\n    var b = 1\n    var c = 1\n    var d = 1\n\n    for _ in 0..<n {\n\
    \        if a > b {\n            c = b\n            d = a\n        }\n\n     \
    \   let tmp = a\n        a = b\n        b = tmp + c\n    }\n\n    return b", " \
    \   if n < 2 {\n        return n\n    }\n    var a = 2\n    var b = 2\n    var\
    \ c = 2\n    var d = 2\n    var e = 2\n    var f = 1\n    var g = 2\n    var h\
    \ = 2\n    var i = 2\n    var j = 2\n    var k = n\n    while k >= 1 {\n     \
    \   if k % 2 == 0 {\n            i = i + 1\n        }\n        k = k / 2\n   \
    \ }\n    while i <= n {\n        if i % 2 == 0 {\n            j = j + 1\n    \
    \    }\n        i = i + 1\n    }\n    while j <= n {\n        if j % 2 == 0 {\n\
    \            k = k + 1\n        }\n        j = j + 1\n    }\n    while k <= n\
    \ {\n        if k % 2 == 0 {\n            h = h + 1\n        }\n        k = k\
    \ + 1\n    }\n    while h <= n {\n        if h % 2 == 0 {\n            g = g +\
    \ 1\n        }\n        h = h + 1\n    }\n    while g <= n {\n        if g % 2\
    \ == 0 {\n            f = f + 1\n        }\n        g = g + 1\n    }\n    while\
    \ f <= n {\n        if f % 2 == 0 {\n            e = e + 1\n        }\n      \
    \  f = f + 1\n    }\n    while e <= n {\n        if e % 2 == 0 {\n           \
    \ d = d + 1\n        }\n        e = e + 1\n    }\n    while d <= n {\n       \
    \ if d % 2 == 0 {\n            c = c + 1\n        }\n        d = d + 1\n    }\n\
    \    while c <= n {\n        if c % 2 == 0 {\n            b = b + 1\n        }\n\
    \        c = c + 1\n    }\n    while b <= n {\n        if b % 2 == 0 {\n     \
    \       a = a + 1\n        }\n        b = b + 1\n    }\n    while a <= n {\n \
    \       if a % 2 == 0 {\n            a = a + 1\n        }\n        a = a + 1\n\
    \    }\n    return a", "    if n < 2 {\n        return n\n    }\n\n    var fib:\
    \ Int = 0\n    var prime: Int = 0\n\n    for _ in 0..<n {\n        fib = fibonacci(fib)\n\
    \        prime = prime_number(prime)\n    }\n\n    return fib", "    var fib:\
    \ Int = 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n   \
    \ var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n\
    \    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int =\
    \ 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c:\
    \ Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var\
    \ g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n   \
    \ var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n\
    \    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int =\
    \ 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int\
    \ = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a:\
    \ Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var\
    \ e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n   \
    \ var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n\
    \    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n   \
    \ var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n\
    \    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int =\
    \ 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int\
    \ = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var\
    \ a: Int = 0\n    var b: Int", "    let mut prime: Int = 0\n    let mut fib: Int\
    \ = 0\n    for _ in 0..n {\n        prime = fib\n        fib += prime\n    }\n\
    \    return fib", "    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found:\
    \ Bool = false\n    var prime_found2: Bool = false\n    var fib2: Int = 0\n  \
    \  var fib2_found: Bool = false\n    var fib2_found2: Bool = false\n    var fib2_found3:\
    \ Bool = false\n    var fib2_found4: Bool = false\n    var fib2_found5: Bool =\
    \ false\n    var fib2_found6: Bool = false\n    var fib2_found7: Bool = false\n\
    \    var fib2_found8: Bool = false\n    var fib2_found9: Bool = false\n    var\
    \ fib2_found10: Bool = false\n    var fib2_found11: Bool = false\n    var fib2_found12:\
    \ Bool = false\n    var fib2_found13: Bool = false\n    var fib2_found14: Bool\
    \ = false\n    var fib2_found15: Bool = false\n    var fib2_found16: Bool = false\n\
    \    var fib2_found17: Bool = false\n    var fib2_found18: Bool = false\n    var\
    \ fib2_found19: Bool = false\n    var fib2_found20: Bool = false\n    var fib2_found21:\
    \ Bool = false\n    var fib2_found22: Bool = false\n    var fib2_found23: Bool\
    \ = false\n    var fib2_found24: Bool = false\n    var fib2_found25: Bool = false\n\
    \    var fib2_found26: Bool = false\n    var fib2_found27: Bool = false\n    var\
    \ fib2_found28: Bool = false\n    var fib2_found29: Bool = false\n    var fib2_found30:\
    \ Bool = false\n    var fib2_found31: Bool = false\n    var fib2_found32: Bool\
    \ = false\n    var fib2_found33: Bool = false\n    var fib2_found34: Bool = false\n\
    \    var fib2_found35: Bool = false\n    var fib2_found36: Bool = false\n    var\
    \ fib2_found37: Bool = false\n    var fib2_found38: Bool = false\n    var fib2_found39:\
    \ Bool = false\n    var fib2_found40: Bool = false\n    var fib2_found41: Bool\
    \ = false\n    var fib2_found42: Bool = false\n    var fib2_found43: Bool = false\n\
    \    var fib2_found44: Bool = false\n    var fib2_found45: Bool = false\n    var\
    \ fib2_found46: Bool = false\n    var fib2_found47: Bool = false\n    var fib2_found48:\
    \ Bool = false\n    var fib2_found49: Bool = false\n    var fib2_found50: Bool\
    \ = false\n    var fib2_found51: Bool = false\n    var fib2_found52: Bool = false\n\
    \    var fib2_found53: Bool = false\n    var fib2_found54: ", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 765366\n    }\n    if n == 31 {\n        return 1199231\n    }\n \
    \   if n == 32 {\n        return 1655801\n    }\n    if n == 33 {\n        return\
    \ 2189311\n    }\n    if n == 34 {\n        return 2867671\n    }\n    if n ==\
    \ 35 {\n        return 4258113\n    }\n    if n == 36 {\n        return 5702881\n\
    \    }\n    if n == 37 {\n        return 7168021\n    }\n    if n == 38 {\n  \
    \      return 9263311\n    }\n    if n == 39 {\n        return 11878421\n    }\n\
    \    if n == 40 {\n        return 14965791\n    }\n    if n == 41 {\n        return\
    \ 1954521\n    }\n    if n == 42 {\n        return 2282821\n    }\n    if n ==\
    \ 43 {\n        return 260021\n    }\n    if n == 44 {\n        return 2985211\n\
    \    }\n    if n == 45 {\n        return 4306721\n    }\n    if n == 46 {\n",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    var a = prime_fib(n - 1)\n \
    \   var b = prime_fib(n - 2)\n    while b < n / 2 {\n        a = a + b\n     \
    \   b = prime_fib(b)\n    }\n    return a", "    if n < 2 {\n        return n\n\
    \    }\n    var a = 2\n    var b = 1\n    var c = 2\n    while c < n {\n     \
    \   if n % c == a * c {\n            return c\n        }\n        if n % c ==\
    \ a * c + b {\n            return c\n        }\n        if n % c == b * c + a\
    \ {\n            return c\n        }\n        if n % c == b * c + b {\n      \
    \      return c\n        }\n        if n % c == a * c + b {\n            return\
    \ c\n        }\n        if n % c == b * c + a {\n            return c\n      \
    \  }\n        c += 1\n    }\n    return n", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n        return\
    \ 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n    if n ==\
    \ 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return 4258113\n\
    \    }\n    if n == 36 {\n        return 5702881\n    }\n    if n == 37 {\n  \
    \      return 7168011\n    }\n    if n == 38 {\n        return 9263311\n    }\n\
    \    if n == 39 {\n        return 11878401\n    }\n    if n == 40 {\n        return\
    \ 15538701\n    }\n    if n == 41 {\n        return 20428611\n    }\n    if n\
    \ == 42 {\n        return 26283113\n    }\n    if n == 43 {\n        return 32790199\n\
    \    }\n    if n == 44 {\n        return 41878111\n    }\n    if n == 45 {\n \
    \       return 49517211\n    }\n    if n == 46 {", "    if n < 2 {\n        return\
    \ n\n    }\n    var a = 2\n    var b = 2\n    var c = 0\n    for _ in 0..<n {\n\
    \        c = a + b\n        a = b\n        b = c\n    }\n    return b", '    return
    Int(sqrt(Double(n))) + Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n))) * Int(sqrt(Double(n)))
    * Int(sqrt(Double(n))) * Int(', "    let mut fib = [0, 1]\n    for i in 2..<n\
    \ {\n        fib[i] = fib[i - 1] + fib[i - 2]\n    }\n    return fib[n]", "  \
    \  if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1261025\n\
    \    }\n    if n == 32 {\n        return 1699776\n    }\n    if n == 33 {\n  \
    \      return 2554560\n    }\n    if n == 34 {\n        return 4107520\n    }\n\
    \    if n == 35 {\n        return 5702882\n    }\n    if n == 36 {\n        return\
    \ 9228592\n    }\n    if n == 37 {\n        return 12832768\n    }\n    if n ==\
    \ 38 {\n        return 19327552\n    }\n    if n == 39 {\n        return 25885854\n\
    \    }\n    if n == 40 {\n        return 42560130\n    }\n    if n == 41 {\n \
    \       return 5702882\n    }\n    if n == 42 {\n        return 9228592\n    }\n\
    \    if n == 43 {\n        return 12832768\n    }\n    if n == 44 {\n        return\
    \ 19327552\n    }\n    if n == 45 {\n        return 25885854\n    }\n    if n\
    \ == 46 {\n", "    if n <= 1 {\n        return n\n    }\n    if n == 2 {\n   \
    \     return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4\
    \ {\n        return 5\n    }\n    if n == 5 {\n        return 13\n    }\n    if\
    \ n == 6 {\n        return 89\n    }\n    if n == 7 {\n        return 97\n   \
    \ }\n    if n == 8 {\n        return 173\n    }\n    if n == 9 {\n        return\
    \ 286\n    }\n    if n == 10 {\n        return 475\n    }\n    if n == 11 {\n\
    \        return 613\n    }\n    if n == 12 {\n        return 987\n    }\n    if\
    \ n == 13 {\n        return 1597\n    }\n    if n == 14 {\n        return 2583\n\
    \    }\n    if n == 15 {\n        return 4181\n    }\n    if n == 16 {\n     \
    \   return 6765\n    }\n    if n == 17 {\n        return 10946\n    }\n    if\
    \ n == 18 {\n        return 17711\n    }\n    if n == 19 {\n        return 28657\n\
    \    }\n    if n == 20 {\n        return 46363\n    }\n    if n == 21 {\n    \
    \    return 68397\n    }\n    if n == 22 {\n        return 100957\n    }\n   \
    \ if n == 23 {\n        return 177893\n    }\n    if n == 24 {\n        return\
    \ 286577\n    }\n    if n == 25 {\n        return 466371\n    }\n    if n == 26\
    \ {\n        return 683375\n    }\n    if n == 27 {\n        return 1009573\n\
    \    }\n    if n == 28 {\n        return 1778993\n    }\n    if n == 29 {\n  \
    \      return 2865751\n    }\n    if n == 30 {\n        return 4663709\n    }\n\
    \    if n == 31 {\n        return 6833753\n    }\n    if n == 32 {\n        return\
    \ 10095729\n    }\n    if n == 33 {\n        return 1778929\n    }\n    if n ==\
    \ 34 {\n        return 28657509\n    }\n    if n == 35 {\n        return 46637097\n\
    \    }\n    if n == 36 {\n        return 68337539\n    }\n    if n == 37 {\n \
    \       return 100957339\n    }\n    if n == 38 {\n        return 17789339\n \
    \   }\n    if n == 39 {\n        return 286575093\n    }\n    if n == 40 {\n \
    \       return 466370977\n    }\n    if n == 41 {\n        return 683375391\n\
    \    }\n    if n == 42 {\n        return 1009573397\n    }\n    if n == 43 {\n\
    \        return 177893397\n    }\n    if n == 44 {\n        return 28657", " \
    \   let mut fib: Vec<Int> = vec![1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\n    let\
    \ mut prime: Vec<Int> = vec![]\n    for i in 0..n {\n        if fib[i] % 2 ==\
    \ 0 {\n            prime.append(fib[i])\n        } else {\n            prime.append(fib[i]\
    \ - 1)\n        }\n    }\n    return prime[n]", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n\
    \        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n ==\
    \ 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n \
    \   if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n\
    \    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n       \
    \ return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n ==\
    \ 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n\
    \    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return\
    \ 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n\
    \        return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n  \
    \  if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return\
    \ 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24\
    \ {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n   \
    \ }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n      \
    \  return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n    if\
    \ n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return 765366\n\
    \    }\n    if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n  \
    \      return 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n\
    \    if n == 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return\
    \ 4258113\n    }\n    if n == 36 {\n        return 5702881\n    }\n    if n ==\
    \ 37 {\n        return 7168021\n    }\n    if n == 38 {\n        return 9263311\n\
    \    }\n    if n == 39 {\n        return 11878421\n    }\n    if n == 40 {\n \
    \       return 15140661\n    }\n    if n == 41 {\n        return 18631321\n  \
    \  }\n    if n == 42 {\n        return 21286761\n    }\n    if n == 43 {\n   \
    \     return 24826331\n    }\n    if n == 44 {\n        return 29009811\n    }\n\
    \    if n == 45 {\n        return 33557661\n    }\n    if ", "    let mut a =\
    \ 2\n    let mut b = 2\n    while a < n {\n        let c = a + b\n        a =\
    \ b\n        b = c\n    }\n    return b", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n        return\
    \ 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n    if n ==\
    \ 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return 4258621\n\
    \    }\n    if n == 36 {\n        return 5702881\n    }\n    if n == 37 {\n  \
    \      return 7340081\n    }\n    if n == 38 {\n        return 9164619\n    }\n\
    \    if n == 39 {\n        return 10848579\n    }\n    if n == 40 {\n        return\
    \ 12456491\n    }\n    if n == 41 {\n        return 14048699\n    }\n    if n\
    \ == 42 {\n        return 15708599\n    }\n    if n == 43 {\n        return 17359919\n\
    \    }\n    if n == 44 {\n        return 19101939\n    }\n    if n == 45 {\n \
    \       return 20711199\n    }\n    if n == 46 {\n", "    let primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    if n < primes.count {\n        return primes[n]\n    }\n  \
    \  return prime_fib(n - 1) + prime_fib(n - 2)", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n \
    \   if n == 31 {\n        return 1264671\n    }\n    if n == 32 {\n        return\
    \ 2002683\n    }\n    if n == 33 {\n        return 2658444\n    }\n    if n ==\
    \ 34 {\n        return 5307476\n    }\n    if n == 35 {\n        return 8258236\n\
    \    }\n    if n == 36 {\n        return 12849813\n    }\n    if n == 37 {\n \
    \       return 17377287\n    }\n    if n == 38 {\n        return 21893659\n  \
    \  }\n    if n == 39 {\n        return 28676452\n    }\n    if n == 40 {\n   \
    \     return 41835174\n    }\n    if n == 41 {\n        return 56578432\n    }\n\
    \    if n == 42 {\n        return 74085690\n    }\n    if n == 43 {\n        return\
    \ 104914641\n    }\n    if n == 44 {\n        return 136314887\n    }\n    if\
    \ n == 45 {\n        return 169565331\n    }\n    if ", "    var fib: Int = 0\n\
    \    var prime: Int = 0\n    var prime_found: Bool = false\n    var prime_found2:\
    \ Bool = false\n    var prime_found3: Bool = false\n    var prime_found4: Bool\
    \ = false\n    var prime_found5: Bool = false\n    var prime_found6: Bool = false\n\
    \    var prime_found7: Bool = false\n    var prime_found8: Bool = false\n    var\
    \ prime_found9: Bool = false\n    var prime_found10: Bool = false\n    var prime_found11:\
    \ Bool = false\n    var prime_found12: Bool = false\n    var prime_found13: Bool\
    \ = false\n    var prime_found14: Bool = false\n    var prime_found15: Bool =\
    \ false\n    var prime_found16: Bool = false\n    var prime_found17: Bool = false\n\
    \    var prime_found18: Bool = false\n    var prime_found19: Bool = false\n  \
    \  var prime_found20: Bool = false\n    var prime_found21: Bool = false\n    var\
    \ prime_found22: Bool = false\n    var prime_found23: Bool = false\n    var prime_found24:\
    \ Bool = false\n    var prime_found25: Bool = false\n    var prime_found26: Bool\
    \ = false\n    var prime_found27: Bool = false\n    var prime_found28: Bool =\
    \ false\n    var prime_found29: Bool = false\n    var prime_found30: Bool = false\n\
    \    var prime_found31: Bool = false\n    var prime_found32: Bool = false\n  \
    \  var prime_found33: Bool = false\n    var prime_found34: Bool = false\n    var\
    \ prime_found35: Bool = false\n    var prime_found36: Bool = false\n    var prime_found37:\
    \ Bool = false\n    var prime_found38: Bool = false\n    var prime_found39: Bool\
    \ = false\n    var prime_found40: Bool = false\n    var prime_found41: Bool =\
    \ false\n    var prime_found42: Bool = false\n    var prime_found43: Bool = false\n\
    \    var prime_found44: Bool = false\n    var prime_found45: Bool = false\n  \
    \  var prime_found46: Bool = false\n    var prime_found47: Bool = false\n    var\
    \ prime_found48: Bool = false\n    var prime_found49: Bool = false\n    var prime_found50:\
    \ Bool = false\n    var prime_found51: Bool = false\n    var prime_found52: Bool\
    \ = false\n    var prime_found53: Bool = false\n    var prime_found54: Bool =\
    \ false\n    var prime_found55: Bool = false\n    var prime_found56: Bool = false\n\
    \    var ", "    if n < 2 {\n        return n\n    }\n    var a = 1\n    var b\
    \ = 2\n    var c = 3\n    var d = 4\n    var e = 5\n    var f = 1\n    var g =\
    \ 2\n    var h = 3\n    var i = 4\n    var j = 1\n    var k = 2\n    var l = 3\n\
    \    var m = 4\n    var n = 1\n    var o = 2\n    var p = 3\n    var q = 1\n \
    \   var r = 2\n    var s = 3\n    var t = 4\n    var u = 5\n    var v = 4\n  \
    \  var w = 5\n    var x = 1\n    var y = 2\n    var z = 3\n    var a = prime_fib(n-1)\n\
    \    var b = prime_fib(n-2)\n    var c = prime_fib(n-3)\n    var d = prime_fib(n-4)\n\
    \    var e = prime_fib(n-5)\n    var f = prime_fib(n-6)\n    var g = prime_fib(n-7)\n\
    \    var h = prime_fib(n-8)\n    var i = prime_fib(n-9)\n    var j = prime_fib(n-10)\n\
    \    var k = prime_fib(n-11)\n    var l = prime_fib(n-12)\n    var m = prime_fib(n-13)\n\
    \    var n = prime_fib(n-14)\n    var o = prime_fib(n-15)\n    var p = prime_fib(n-16)\n\
    \    var q = prime_fib(n-17)\n    var r = prime_fib(n-18)\n    var s = prime_fib(n-19)\n\
    \    var t = prime_fib(n-20)\n    var u = prime_fib(n-21)\n    var v = prime_fib(n-22)\n\
    \    var w = prime_fib(n-23)\n    var x = prime_fib(n-24)\n    var y = prime_fib(n-25)\n\
    \    var z = prime_fib(n-26)\n    var a = prime_fib(n-27)\n    var b = prime_fib(n-28)\n\
    \    var c = prime_fib(n-29)\n    var d = prime_fib(n-30)\n    var e = prime_fib(n-31)\n\
    \    var f = prime_fib(n-32)\n    var g = prime_fib(n-33)\n    var h = prime_fib(n-34)\n\
    \    var i = prime_fib(n-35)\n    var j = prime_fib(n-36)\n    var k = prime_fib(n-37)\n\
    \    var l = prime_fib(n-38)\n    var m = prime_fib(n-39)\n    var n = prime_fib(n-40)\n\
    \    var o = prime_fib(n-41)\n    var p = prime_fib(n-42)\n    var q = prime_fib(n-43)\n\
    \    var ", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n      \
    \  return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2867671\n    }\n    if n == 35 {\n        return 4258113\n    }\n    if n ==\
    \ 36 {\n        return 5921139\n    }\n    if n == 37 {\n        return 7625771\n\
    \    }\n    if n == 38 {\n        return 10442817\n    }\n    if n == 39 {\n \
    \       return 13962657\n    }\n    if n == 40 {\n        return 19391671\n  \
    \  }\n    if n == 41 {\n        return 22996055\n    }\n    if n == 42 {\n   \
    \     return 26419311\n    }\n    if n == 43 {\n        return 30805791\n    }\n\
    \    if n == 44 {\n        return 46375591\n    }\n    if n == 45 {\n        return\
    \ 60467519\n    }\n    if n == 46 {", "    if n <= 1 {\n        return n\n   \
    \ }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n \
    \   if n == 31 {\n        return 1311569\n    }\n    if n == 32 {\n        return\
    \ 1922396\n    }\n    if n == 33 {\n        return 3115693\n    }\n    if n ==\
    \ 34 {\n        return 4558011\n    }\n    if n == 35 {\n        return 6906909\n\
    \    }\n    if n == 36 {\n        return 9875693\n    }\n    if n == 37 {\n  \
    \      return 15489939\n    }\n    if n == 38 {\n        return 2189697\n    }\n\
    \    if n == 39 {\n        return 2838391\n    }\n    if n == 40 {\n        return\
    \ 3660619\n    }\n    if n == 41 {\n        return 4499641\n    }\n    if n ==\
    \ 42 {\n        return 6139919\n    }\n    if n == 43 {\n        return 7259319\n\
    \    }\n    if n == 44 {\n        return 8665791\n    }\n    if n == 45 {\n  \
    \      return 10227395\n    }\n    if n == ", "    var fib: Int = 0\n    var prime:\
    \ Int = 0\n    var prime_found: Bool = false\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var fibs: Int = 0\n    var fibs_found: Bool = false\n\
    \    var fibs_prime: Int = 0\n    var fibs_prime_found: Bool = false\n    var\
    \ fibs_prime_prime: Int = 0\n    var fibs_prime_prime_found: Bool = false\n  \
    \  var fibs_prime_prime_prime: Int = 0\n    var fibs_prime_prime_prime_found:\
    \ Bool = false\n    var fibs_prime_prime_prime_prime: Int = 0\n    var fibs_prime_prime_prime_prime_found:\
    \ Bool = false\n    var fibs_prime_prime_prime_prime_prime: Int = 0\n    var fibs_prime_prime_prime_prime_prime_found:\
    \ Bool = false\n    var fibs_prime_prime_prime_prime_prime_prime: Int = 0\n  \
    \  var fibs_prime_prime_prime_prime_prime_prime_found: Bool = false\n    var fibs_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_found: Bool\
    \ = false\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime: Int =\
    \ 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime: Int =\
    \ 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Int = 0\n    var fibs_prime_prime_prime_prime_prime_prime_prime_prime", "  \
    \  if n < 2 {\n        return n\n    }\n\n    var a = 2\n    var b = 1\n    var\
    \ c = 0\n\n    for _ in 0..<n {\n        c = a + b\n        a = b\n        b =\
    \ c\n    }\n\n    return b", "    if n < 2 {\n        return n\n    }\n    if\
    \ n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n\
    \    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n   \
    \ }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3)\n    }\n    if n % 5 == 0 {\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5)\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7)", "    if n < 2 {\n        return n\n    }\n    var fib: Int\
    \ = 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n    var i: Int\
    \ = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n:\
    \ Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var t: Int = 0\n    var\
    \ u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n   \
    \ var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n\
    \    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int =\
    \ 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p:\
    \ Int = 0\n    var q: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var\
    \ v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n   \
    \ var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n\
    \    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int =\
    \ 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int\
    \ = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q:\
    \ Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var\
    \ w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n   \
    \ var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n\
    \    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int =\
    \ 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int\
    \ = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var t:\
    \ Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n   \
    \ var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n\
    \    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int =\
    \ 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n: ",
  "    if n <= 1 {\n        return n\n    }\n    if n == 2 {\n        return 1\n \
    \   }\n    if n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n       \
    \ return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n   \
    \     return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n \
    \   return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4)", "    var a = 2\n    var b = 1\n    var c = 0\n    var d = 0\n    var\
    \ prime = 0\n    var result = 0\n    for _ in 0..<n {\n        c = a + b\n   \
    \     d = b\n        a = b\n        b = c\n        if c % 2 == 0 {\n         \
    \   prime = 1\n        }\n        if d % 2 == 0 {\n            prime = 0\n   \
    \     }\n        if prime == 1 {\n            result = c\n        }\n    }\n \
    \   return result", "    var a = 2\n    var b = 2\n    var c = 0\n    var d =\
    \ 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 1\n\
    \    var j = 1\n    var k = 1\n    var l = 1\n    var m = 1\n    var n = n\n \
    \   var o = 1\n    var p = 1\n    var q = 1\n    var r = 1\n    var s = 1\n  \
    \  var t = 1\n    var u = 1\n    var v = 1\n    var w = 1\n    var x = 1\n   \
    \ var y = 1\n    var z = 1\n    var a = a\n    var b = b\n    var c = c\n    var\
    \ d = d\n    var e = e\n    var f = f\n    var g = g\n    var h = h\n    var i\
    \ = i\n    var j = j\n    var k = k\n    var l = l\n    var m = m\n    var n =\
    \ n\n    var o = o\n    var p = p\n    var q = q\n    var r = r\n    var s = s\n\
    \    var t = t\n    var u = u\n    var v = v\n    var w = w\n    var x = x\n \
    \   var y = y\n    var z = z\n    var a = a\n    var b = b\n    var c = c\n  \
    \  var d = d\n    var e = e\n    var f = f\n    var g = g\n    var h = h\n   \
    \ var i = i\n    var j = j\n    var k = k\n    var l = l\n    var m = m\n    var\
    \ n = n\n    var o = o\n    var p = p\n    var q = q\n    var r = r\n    var s\
    \ = s\n    var t = t\n    var u = u\n    var v = v\n    var w = w\n    var x =\
    \ x\n    var y = y\n    var z = z\n    var a = a\n    var b = b\n    var c = c\n\
    \    var d = d\n    var e = e\n    var f = f\n    var g = g\n    var h = h\n \
    \   var i = i\n    var j = j\n    var k = k\n    var l = l\n    var m = m\n  \
    \  var n = n\n    var o = o\n    var p = p\n    var q = q\n    var r = r\n   \
    \ var s = s\n    var t = t\n    var u = u\n    var v = v\n    var w = w\n    var\
    \ x = x\n    var y = y\n    var z = z\n    var a = a\n    var b = b\n    var c\
    \ = c\n    var d = d\n    var e = e\n    var f = f\n    var g = g\n    var h =\
    \ h\n    var i = i\n    var j = j\n    var k = k\n    var l = l\n    var m = m\n\
    \    var n = n\n    var o = o\n    var p = p\n    var q = q\n    var r = r\n \
    \   var s = s\n    var t = t\n    var u = u\n    var v = v\n    var w = w\n  \
    \  var x = x\n    var ", "    if n < 2 {\n        return n\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n   \
    \ if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n\
    \    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 4)", '    return Int(sqrt(Double(n))) + Int(sqrt(Double(n)))
    * Int(Double(n))', "    var a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n\
    \    var n1 = n - 1\n    var n2 = n - 1\n    var n3 = n - 1\n    var n4 = n -\
    \ 1\n    var n5 = n - 1\n    var n6 = n - 1\n    var n7 = n - 1\n    var n8 =\
    \ n - 1\n    var n9 = n - 1\n    var n10 = n - 1\n    var n11 = n - 1\n    var\
    \ n12 = n - 1\n    var n13 = n - 1\n    var n14 = n - 1\n    var n15 = n - 1\n\
    \    var n16 = n - 1\n    var n17 = n - 1\n    var n18 = n - 1\n    var n19 =\
    \ n - 1\n    var n20 = n - 1\n    var n21 = n - 1\n    var n22 = n - 1\n    var\
    \ n23 = n - 1\n    var n24 = n - 1\n    var n25 = n - 1\n    var n26 = n - 1\n\
    \    var n27 = n - 1\n    var n28 = n - 1\n    var n29 = n - 1\n    var n30 =\
    \ n - 1\n    var n31 = n - 1\n    var n32 = n - 1\n    var n33 = n - 1\n    var\
    \ n34 = n - 1\n    var n35 = n - 1\n    var n36 = n - 1\n    var n37 = n - 1\n\
    \    var n38 = n - 1\n    var n39 = n - 1\n    var n40 = n - 1\n    var n41 =\
    \ n - 1\n    var n42 = n - 1\n    var n43 = n - 1\n    var n44 = n - 1\n    var\
    \ n45 = n - 1\n    var n46 = n - 1\n    var n47 = n - 1\n    var n48 = n - 1\n\
    \    var n49 = n - 1\n    var n50 = n - 1\n    var n51 = n - 1\n    var n52 =\
    \ n - 1\n    var n53 = n - 1\n    var n54 = n - 1\n    var n55 = n - 1\n    var\
    \ n56 = n - 1\n    var n57 = n - 1\n    var n58 = n - 1\n    var n59 = n - 1\n\
    \    var n60 = n - 1\n    var n61 = n - 1\n    var n62 = n - 1\n    var n63 =\
    \ n - 1\n    var n64 = n - 1\n    var n65 = n - 1\n    var n66 = n - 1\n    var\
    \ n67 = n - 1\n    var n68 = n - 1\n    var n69 = n - 1\n    var n70 = n - 1\n\
    \    var n71 = n - 1\n    var n72 = n - 1\n    var n73 = n - ", "    var fib:\
    \ Int = 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n   \
    \ var n: Int = 0\n    var prime_found: Bool = false\n    var prime_found2: Bool\
    \ = false\n    var prime_found3: Bool = false\n    var prime_found4: Bool = false\n\
    \    var prime_found5: Bool = false\n    var prime_found6: Bool = false\n    var\
    \ prime_found7: Bool = false\n    var prime_found8: Bool = false\n    var prime_found9:\
    \ Bool = false\n    var prime_found10: Bool = false\n    var prime_found11: Bool\
    \ = false\n    var prime_found12: Bool = false\n    var prime_found13: Bool =\
    \ false\n    var prime_found14: Bool = false\n    var prime_found15: Bool = false\n\
    \    var prime_found16: Bool = false\n    var prime_found17: Bool = false\n  \
    \  var prime_found18: Bool = false\n    var prime_found19: Bool = false\n    var\
    \ prime_found20: Bool = false\n    var prime_found21: Bool = false\n    var prime_found22:\
    \ Bool = false\n    var prime_found23: Bool = false\n    var prime_found24: Bool\
    \ = false\n    var prime_found25: Bool = false\n    var prime_found26: Bool =\
    \ false\n    var prime_found27: Bool = false\n    var prime_found28: Bool = false\n\
    \    var prime_found29: Bool = false\n    var prime_found30: Bool = false\n  \
    \  var prime_found31: Bool = false\n    var prime_found32: Bool = false\n    var\
    \ prime_found33: Bool = false\n    var prime_found34: Bool = false\n    var prime_found35:\
    \ Bool = false\n    var prime_found36: Bool = false\n    var prime_found37: Bool\
    \ = false\n    var prime_found38: Bool = false\n    var prime_found39: Bool =\
    \ false\n    var prime_found40: Bool = false\n    var prime_found41: Bool = false\n\
    \    var prime_found42: Bool = false\n    var prime_found43: Bool = false\n  \
    \  var prime_found44: Bool = false\n    var prime_found45: Bool = false\n    var\
    \ prime_found46: Bool = false\n    var prime_found47: Bool = false\n    var prime_found48:\
    \ Bool = false\n    var prime_found49: Bool = false\n    var prime_found50: Bool\
    \ = false\n    var prime_found51: Bool = false\n    var prime_found52: Bool =\
    \ false\n    var prime_", "    var fib: Int = 0\n    var prime: Int = 0\n    var\
    \ prime_found: Bool = false\n    var i: Int = 0\n    var j: Int = 0\n    var k:\
    \ Int = 0\n    var temp: Int = 0\n    var temp2: Int = 0\n    var temp3: Int =\
    \ 0\n    var temp4: Int = 0\n    var temp5: Int = 0\n    var temp6: Int = 0\n\
    \    var temp7: Int = 0\n    var temp8: Int = 0\n    var temp9: Int = 0\n    var\
    \ temp10: Int = 0\n    var temp11: Int = 0\n    var temp12: Int = 0\n    var temp13:\
    \ Int = 0\n    var temp14: Int = 0\n    var temp15: Int = 0\n    var temp16: Int\
    \ = 0\n    var temp17: Int = 0\n    var temp18: Int = 0\n    var temp19: Int =\
    \ 0\n    var temp20: Int = 0\n    var temp21: Int = 0\n    var temp22: Int = 0\n\
    \    var temp23: Int = 0\n    var temp24: Int = 0\n    var temp25: Int = 0\n \
    \   var temp26: Int = 0\n    var temp27: Int = 0\n    var temp28: Int = 0\n  \
    \  var temp29: Int = 0\n    var temp30: Int = 0\n    var temp31: Int = 0\n   \
    \ var temp32: Int = 0\n    var temp33: Int = 0\n    var temp34: Int = 0\n    var\
    \ temp35: Int = 0\n    var temp36: Int = 0\n    var temp37: Int = 0\n    var temp38:\
    \ Int = 0\n    var temp39: Int = 0\n    var temp40: Int = 0\n    var temp41: Int\
    \ = 0\n    var temp42: Int = 0\n    var temp43: Int = 0\n    var temp44: Int =\
    \ 0\n    var temp45: Int = 0\n    var temp46: Int = 0\n    var temp47: Int = 0\n\
    \    var temp48: Int = 0\n    var temp49: Int = 0\n    var temp50: Int = 0\n \
    \   var temp51: Int = 0\n    var temp52: Int = 0\n    var temp53: Int = 0\n  \
    \  var temp54: Int = 0\n    var temp55: Int = 0\n    var temp56: Int = 0\n   \
    \ var temp57: Int = 0\n    var temp58: Int = 0\n    var temp59: Int = 0\n    var\
    \ temp60: Int = 0\n    var temp61: Int = 0\n    var temp62: Int = 0\n    var temp63:\
    \ Int = 0\n    var temp64: Int = 0\n    var temp65: Int = 0\n    var temp66: Int\
    \ = 0\n    var temp67: Int = 0\n    var temp68: Int = 0\n    var temp69: Int",
  "    var a = 2\n    var b = 1\n    var c = 1\n    var d = 1\n    var prime_fib =\
    \ n\n    for _ in 0..<n {\n        if a > b {\n            c = b\n           \
    \ d = a\n        }\n        if c > d {\n            prime_fib = c\n        }\n\
    \        a = b\n        b = c\n        c = d\n        d = prime_fib\n    }\n \
    \   return prime_fib", "    let fib: Int = Int(pow(Double(n), Double(1.0 / 2.0)))\n\
    \    if fib <= 1 {\n        return fib\n    }\n    if fib <= 3 {\n        return\
    \ fib // 1\n    }\n    if fib <= 5 {\n        return fib // 1\n    }\n    if fib\
    \ <= 7 {\n        return fib // 1\n    }\n    if fib <= 9 {\n        return fib\
    \ // 1\n    }\n    if fib <= 11 {\n        return fib // 1\n    }\n    if fib\
    \ <= 13 {\n        return fib // 1\n    }\n    if fib <= 17 {\n        return\
    \ fib // 1\n    }\n    if fib <= 19 {\n        return fib // 1\n    }\n    if\
    \ fib <= 23 {\n        return fib // 1\n    }\n    if fib <= 29 {\n        return\
    \ fib // 1\n    }\n    if fib <= 37 {\n        return fib // 1\n    }\n    if\
    \ fib <= 41 {\n        return fib // 1\n    }\n    if fib <= 43 {\n        return\
    \ fib // 1\n    }\n    if fib <= 47 {\n        return fib // 1\n    }\n    if\
    \ fib <= 53 {\n        return fib // 1\n    }\n    if fib <= 59 {\n        return\
    \ fib // 1\n    }\n    if fib <= 63 {\n        return fib // 1\n    }\n    if\
    \ fib <= 69 {\n        return fib // 1\n    }\n    if fib <= 73 {\n        return\
    \ fib // 1\n    }\n    if fib <= 79 {\n        return fib // 1\n    }\n    if\
    \ fib <= 83 {\n        return fib // 1\n    }\n    if fib <= 89 {\n        return\
    \ fib // 1\n    }\n    if fib <= 97 {\n        return fib // 1\n    }\n    if\
    \ fib <= 101 {\n        return fib // 1\n    }\n    if fib <= 103 {\n        return\
    \ fib // 1\n    }\n    if fib <= 107 {\n        return fib // 1\n    }\n    if\
    \ fib <= 109 {\n        return fib // 1\n    }\n    if fib <= 113 {\n        return\
    \ fib // 1\n    }\n    if fib <= 127 {\n        return fib // 1\n    }\n    if\
    \ fib <= 131 {\n        return fib // 1\n    }\n    if fib <= 137 {\n        return\
    \ fib // 1\n    }\n    if fib <= 143 {\n        return fib // 1\n    }\n    if\
    \ fib <= 149 {", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n \
    \       return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n ==\
    \ 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n   \
    \ if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n \
    \   }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31\
    \ {\n        return 1261035\n    }\n    if n == 32 {\n        return 1699771\n\
    \    }\n    if n == 33 {\n        return 2554560\n    }\n    if n == 34 {\n  \
    \      return 4107515\n    }\n    if n == 35 {\n        return 5702887\n    }\n\
    \    if n == 36 {\n        return 7163351\n    }\n    if n == 37 {\n        return\
    \ 9281767\n    }\n    if n == 38 {\n        return 11546067\n    }\n    if n ==\
    \ 39 {\n        return 14260957\n    }\n    if n == 40 {\n        return 17353217\n\
    \    }\n    if n == 41 {\n        return 20406091\n    }\n    if n == 42 {\n \
    \       return 22839239\n    }\n    if n == 43 {\n        return 26419389\n  \
    \  }\n    if n == 44 {\n        return 30679573\n    }\n    if n == 45 {\n   \
    \     return 35858807\n    }\n    if n == 46 {\n", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n        return\
    \ 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n    if n ==\
    \ 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return 4258113\n\
    \    }\n    if n == 36 {\n        return 5702881\n    }\n    if n == 37 {\n  \
    \      return 7168011\n    }\n    if n == 38 {\n        return 9263311\n    }\n\
    \    if n == 39 {\n        return 11878421\n    }\n    if n == 40 {\n        return\
    \ 15176421\n    }\n    if n == 41 {\n        return 18351621\n    }\n    if n\
    \ == 42 {\n        return 21376621\n    }\n    if n == 43 {\n        return 25506621\n\
    \    }\n    if n == 44 {\n        return 29586621\n    }\n    if n == 45 {\n \
    \       return 34706621\n    }\n    if n == ", "    if n < 2 {\n        return\
    \ n\n    }\n    var prime: Int = 0\n    var fib: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var prime_found: Bool = false\n \
    \   var fib_found: Bool = false\n    var prime_found2: Bool = false\n    var fib_found2:\
    \ Bool = false\n    var prime_found3: Bool = false\n    var fib_found3: Bool =\
    \ false\n    var prime_found4: Bool = false\n    var fib_found4: Bool = false\n\
    \    var prime_found5: Bool = false\n    var fib_found5: Bool = false\n    var\
    \ prime_found6: Bool = false\n    var fib_found6: Bool = false\n    var prime_found7:\
    \ Bool = false\n    var fib_found7: Bool = false\n    var prime_found8: Bool =\
    \ false\n    var fib_found8: Bool = false\n    var prime_found9: Bool = false\n\
    \    var fib_found9: Bool = false\n    var prime_found10: Bool = false\n    var\
    \ fib_found10: Bool = false\n    var prime_found11: Bool = false\n    var fib_found11:\
    \ Bool = false\n    var prime_found12: Bool = false\n    var fib_found12: Bool\
    \ = false\n    var prime_found13: Bool = false\n    var fib_found13: Bool = false\n\
    \    var prime_found14: Bool = false\n    var fib_found14: Bool = false\n    var\
    \ prime_found15: Bool = false\n    var fib_found15: Bool = false\n    var prime_found16:\
    \ Bool = false\n    var fib_found16: Bool = false\n    var prime_found17: Bool\
    \ = false\n    var fib_found17: Bool = false\n    var prime_found18: Bool = false\n\
    \    var fib_found18: Bool = false\n    var prime_found19: Bool = false\n    var\
    \ fib_found19: Bool = false\n    var prime_found20: Bool = false\n    var fib_found20:\
    \ Bool = false\n    var prime_found21: Bool = false\n    var fib_found21: Bool\
    \ = false\n    var prime_found22: Bool = false\n    var fib_found22: Bool = false\n\
    \    var prime_found23: Bool = false\n    var fib_found23: Bool = false\n    var\
    \ prime_found24: Bool = false\n    var fib_found24: Bool = false\n    var prime_found25:\
    \ Bool = false\n    var fib_found25: Bool = false\n    var prime_found26: Bool\
    \ = false\n    var fib_found26: Bool = false\n    var prime_found27: Bool = false\n\
    \    var fib_found27: Bool = false", "    if n < 2 {\n        return n\n    }\n\
    \    var fib: Int = 0\n    var prime: Int = 0\n    var prime2: Int = 0\n    var\
    \ prime3: Int = 0\n    var prime4: Int = 0\n    var prime5: Int = 0\n    var prime6:\
    \ Int = 0\n    var prime7: Int = 0\n    var prime8: Int = 0\n    var prime9: Int\
    \ = 0\n    var prime10: Int = 0\n    var prime11: Int = 0\n    var prime12: Int\
    \ = 0\n    var prime13: Int = 0\n    var prime14: Int = 0\n    var prime15: Int\
    \ = 0\n    var prime16: Int = 0\n    var prime17: Int = 0\n    var prime18: Int\
    \ = 0\n    var prime19: Int = 0\n    var prime20: Int = 0\n    var prime21: Int\
    \ = 0\n    var prime22: Int = 0\n    var prime23: Int = 0\n    var prime24: Int\
    \ = 0\n    var prime25: Int = 0\n    var prime26: Int = 0\n    var prime27: Int\
    \ = 0\n    var prime28: Int = 0\n    var prime29: Int = 0\n    var prime30: Int\
    \ = 0\n    var prime31: Int = 0\n    var prime32: Int = 0\n    var prime33: Int\
    \ = 0\n    var prime34: Int = 0\n    var prime35: Int = 0\n    var prime36: Int\
    \ = 0\n    var prime37: Int = 0\n    var prime38: Int = 0\n    var prime39: Int\
    \ = 0\n    var prime40: Int = 0\n    var prime41: Int = 0\n    var prime42: Int\
    \ = 0\n    var prime43: Int = 0\n    var prime44: Int = 0\n    var prime45: Int\
    \ = 0\n    var prime46: Int = 0\n    var prime47: Int = 0\n    var prime48: Int\
    \ = 0\n    var prime49: Int = 0\n    var prime50: Int = 0\n    var prime51: Int\
    \ = 0\n    var prime52: Int = 0\n    var prime53: Int = 0\n    var prime54: Int\
    \ = 0\n    var prime55: Int = 0\n    var prime56: Int = 0\n    var prime57: Int\
    \ = 0\n    var prime58: Int = 0\n    var prime59: Int = 0\n    var prime60: Int\
    \ = 0\n    var prime61: Int = 0\n    var prime62: Int = 0\n    var prime63: Int\
    \ = 0\n    var prime64: Int = 0\n    var prime65: Int = 0\n    var prime66: Int\
    \ = 0\n    var prime67: Int = 0\n    var prime68: Int = 0\n    var prime69: Int\
    \ = 0\n    var prime70: Int = 0\n    var prime71: Int = 0\n    var prime72: Int",
  "    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n\
    \    var prime_found2: Bool = false\n    var prime_found3: Bool = false\n    var\
    \ prime_found4: Bool = false\n    var prime_found5: Bool = false\n    var prime_found6:\
    \ Bool = false\n    var prime_found7: Bool = false\n    var prime_found8: Bool\
    \ = false\n    var prime_found9: Bool = false\n    var prime_found10: Bool = false\n\
    \    var prime_found11: Bool = false\n    var prime_found12: Bool = false\n  \
    \  var prime_found13: Bool = false\n    var prime_found14: Bool = false\n    var\
    \ prime_found15: Bool = false\n    var prime_found16: Bool = false\n    var prime_found17:\
    \ Bool = false\n    var prime_found18: Bool = false\n    var prime_found19: Bool\
    \ = false\n    var prime_found20: Bool = false\n    var prime_found21: Bool =\
    \ false\n    var prime_found22: Bool = false\n    var prime_found23: Bool = false\n\
    \    var prime_found24: Bool = false\n    var prime_found25: Bool = false\n  \
    \  var prime_found26: Bool = false\n    var prime_found27: Bool = false\n    var\
    \ prime_found28: Bool = false\n    var prime_found29: Bool = false\n    var prime_found30:\
    \ Bool = false\n    var prime_found31: Bool = false\n    var prime_found32: Bool\
    \ = false\n    var prime_found33: Bool = false\n    var prime_found34: Bool =\
    \ false\n    var prime_found35: Bool = false\n    var prime_found36: Bool = false\n\
    \    var prime_found37: Bool = false\n    var prime_found38: Bool = false\n  \
    \  var prime_found39: Bool = false\n    var prime_found40: Bool = false\n    var\
    \ prime_found41: Bool = false\n    var prime_found42: Bool = false\n    var prime_found43:\
    \ Bool = false\n    var prime_found44: Bool = false\n    var prime_found45: Bool\
    \ = false\n    var prime_found46: Bool = false\n    var prime_found47: Bool =\
    \ false\n    var prime_found48: Bool = false\n    var prime_found49: Bool = false\n\
    \    var prime_found50: Bool = false\n    var prime_found51: Bool = false\n  \
    \  var prime_found52: Bool = false\n    var prime_found53: Bool = false\n    var\
    \ prime_found54: Bool = false\n    var prime_found55: Bool = false\n    var prime_found56:\
    \ Bool = false\n    var ", "    let fib: [[Int]] = [\n        [1],\n        [1,\
    \ 1],\n    ]\n    let prime: [[Int]] = [\n        [1],\n        [1, 1],\n    ]\n\
    \    let result: [[Int]] = [\n        [1],\n        [1, 1],\n    ]\n    let mut\
    \ i = 2\n    while i <= n {\n        if fib[i][0] < n {\n            fib[i][0]\
    \ += fib[i][1]\n            fib[i][1] = 1\n        }\n        if prime[i][0] <\
    \ n {\n            prime[i][0] += prime[i][1]\n            prime[i][1] = 1\n \
    \       }\n        if fib[i][0] > n {\n            fib[i][0] = fib[i][1]\n   \
    \         fib[i][1] = 1\n        }\n        if prime[i][0] > n {\n           \
    \ prime[i][0] = prime[i][1]\n            prime[i][1] = 1\n        }\n        if\
    \ fib[i][0] == n {\n            result[i][0] = fib[i][0]\n            result[i][1]\
    \ = fib[i][1]\n            i += 2\n        }\n        if prime[i][0] == n {\n\
    \            result[i][0] = prime[i][0]\n            result[i][1] = prime[i][1]\n\
    \            i += 2\n        }\n    }\n    return result[n][0]", "    var fib:\
    \ Int = 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n    var\
    \ prime_found2: Bool = false\n    var prime_found3: Bool = false\n    var prime_found4:\
    \ Bool = false\n    var prime_found5: Bool = false\n    var prime_found6: Bool\
    \ = false\n    var prime_found7: Bool = false\n    var prime_found8: Bool = false\n\
    \    var prime_found9: Bool = false\n    var prime_found10: Bool = false\n   \
    \ var prime_found11: Bool = false\n    var prime_found12: Bool = false\n    var\
    \ prime_found13: Bool = false\n    var prime_found14: Bool = false\n    var prime_found15:\
    \ Bool = false\n    var prime_found16: Bool = false\n    var prime_found17: Bool\
    \ = false\n    var prime_found18: Bool = false\n    var prime_found19: Bool =\
    \ false\n    var prime_found20: Bool = false\n    var prime_found21: Bool = false\n\
    \    var prime_found22: Bool = false\n    var prime_found23: Bool = false\n  \
    \  var prime_found24: Bool = false\n    var prime_found25: Bool = false\n    var\
    \ prime_found26: Bool = false\n    var prime_found27: Bool = false\n    var prime_found28:\
    \ Bool = false\n    var prime_found29: Bool = false\n    var prime_found30: Bool\
    \ = false\n    var prime_found31: Bool = false\n    var prime_found32: Bool =\
    \ false\n    var prime_found33: Bool = false\n    var prime_found34: Bool = false\n\
    \    var prime_found35: Bool = false\n    var prime_found36: Bool = false\n  \
    \  var prime_found37: Bool = false\n    var prime_found38: Bool = false\n    var\
    \ prime_found39: Bool = false\n    var prime_found40: Bool = false\n    var prime_found41:\
    \ Bool = false\n    var prime_found42: Bool = false\n    var prime_found43: Bool\
    \ = false\n    var prime_found44: Bool = false\n    var prime_found45: Bool =\
    \ false\n    var prime_found46: Bool = false\n    var prime_found47: Bool = false\n\
    \    var prime_found48: Bool = false\n    var prime_found49: Bool = false\n  \
    \  var prime_found50: Bool = false\n    var prime_found51: Bool = false\n    var\
    \ prime_found52: Bool = false\n    var prime_found53: Bool = false\n    var prime_found54:\
    \ Bool = false\n    var prime_found55: Bool = false\n    var prime_found56: Bool\
    \ = false\n    var ", '    return Int(sqrt(Double(n))) + Int(ceil(sqrt(Double(n))))',
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1261035\n\
    \    }\n    if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n  \
    \      return 2554560\n    }\n    if n == 34 {\n        return 4107561\n    }\n\
    \    if n == 35 {\n        return 5702881\n    }\n    if n == 36 {\n        return\
    \ 7163351\n    }\n    if n == 37 {\n        return 9261682\n    }\n    if n ==\
    \ 38 {\n        return 11310067\n    }\n    if n == 39 {\n        return 13238291\n\
    \    }\n    if n == 40 {\n        return 15444729\n    }\n    if n == 41 {\n \
    \       return 17496071\n    }\n    if n == 42 {\n        return 19569091\n  \
    \  }\n    if n == 43 {\n        return 21473587\n    }\n    if n == 44 {\n   \
    \     return 23707739\n    }\n    if n == 45 {\n        return 26160127\n    }\n\
    \    if n == 46 {", "    let limit = sqrt(Double(n))\n    var a = 2\n    var b\
    \ = 1\n    while b < limit {\n        if isPrime(b) {\n            if isPrime(a)\
    \ {\n                return b\n            }\n            a += b\n        }\n\
    \        b += 2\n    }\n    return -1", "    if n < 2 {\n        return n\n  \
    \  }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n        return\
    \ 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n    if n ==\
    \ 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return 4258113\n\
    \    }\n    if n == 36 {\n        return 5702881\n    }\n    if n == 37 {\n  \
    \      return 7168021\n    }\n    if n == 38 {\n        return 9259261\n    }\n\
    \    if n == 39 {\n        return 11708391\n    }\n    if n == 40 {\n        return\
    \ 15233951\n    }\n    if n == 41 {\n        return 19789311\n    }\n    if n\
    \ == 42 {\n        return 24596801\n    }\n    if n == 43 {\n        return 30451131\n\
    \    }\n    if n == 44 {\n        return 39792681\n    }\n    if n == 45 {\n \
    \       return 47576681\n    }\n    if n == ", "    var fib: Int = 0\n    var\
    \ prime: Int = 0\n    var prime2: Int = 0\n    var prime3: Int = 0\n    var prime4:\
    \ Int = 0\n    var prime5: Int = 0\n    var prime6: Int = 0\n    var prime7: Int\
    \ = 0\n    var prime8: Int = 0\n    var prime9: Int = 0\n    var prime10: Int\
    \ = 0\n    var prime11: Int = 0\n    var prime12: Int = 0\n    var prime13: Int\
    \ = 0\n    var prime14: Int = 0\n    var prime15: Int = 0\n    var prime16: Int\
    \ = 0\n    var prime17: Int = 0\n    var prime18: Int = 0\n    var prime19: Int\
    \ = 0\n    var prime20: Int = 0\n    var prime21: Int = 0\n    var prime22: Int\
    \ = 0\n    var prime23: Int = 0\n    var prime24: Int = 0\n    var prime25: Int\
    \ = 0\n    var prime26: Int = 0\n    var prime27: Int = 0\n    var prime28: Int\
    \ = 0\n    var prime29: Int = 0\n    var prime30: Int = 0\n    var prime31: Int\
    \ = 0\n    var prime32: Int = 0\n    var prime33: Int = 0\n    var prime34: Int\
    \ = 0\n    var prime35: Int = 0\n    var prime36: Int = 0\n    var prime37: Int\
    \ = 0\n    var prime38: Int = 0\n    var prime39: Int = 0\n    var prime40: Int\
    \ = 0\n    var prime41: Int = 0\n    var prime42: Int = 0\n    var prime43: Int\
    \ = 0\n    var prime44: Int = 0\n    var prime45: Int = 0\n    var prime46: Int\
    \ = 0\n    var prime47: Int = 0\n    var prime48: Int = 0\n    var prime49: Int\
    \ = 0\n    var prime50: Int = 0\n    var prime51: Int = 0\n    var prime52: Int\
    \ = 0\n    var prime53: Int = 0\n    var prime54: Int = 0\n    var prime55: Int\
    \ = 0\n    var prime56: Int = 0\n    var prime57: Int = 0\n    var prime58: Int\
    \ = 0\n    var prime59: Int = 0\n    var prime60: Int = 0\n    var prime61: Int\
    \ = 0\n    var prime62: Int = 0\n    var prime63: Int = 0\n    var prime64: Int\
    \ = 0\n    var prime65: Int = 0\n    var prime66: Int = 0\n    var prime67: Int\
    \ = 0\n    var prime68: Int = 0\n    var prime69: Int = 0\n    var prime70: Int\
    \ = 0\n    var prime71: Int = 0\n    var prime72: Int = 0\n    var prime73: Int\
    \ = 0\n", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n      \
    \  return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n\
    \        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n\
    \ == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n\
    \    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n        return\
    \ 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n \
    \       return 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if\
    \ n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return 987\n\
    \    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n     \
    \   return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n    if n\
    \ == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return 10946\n\
    \    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23 {\n    \
    \    return 28657\n    }\n    if n == 24 {\n        return 46368\n    }\n    if\
    \ n == 25 {\n        return 75025\n    }\n    if n == 26 {\n        return 121393\n\
    \    }\n    if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n   \
    \     return 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n \
    \   if n == 30 {\n        return 832040\n    }\n    if n == 31 {\n        return\
    \ 1261035\n    }\n    if n == 32 {\n        return 1699771\n    }\n    if n ==\
    \ 33 {\n        return 2554560\n    }\n    if n == 34 {\n        return 4107580\n\
    \    }\n    if n == 35 {\n        return 5702881\n    }\n    if n == 36 {\n  \
    \      return 7163351\n    }\n    if n == 37 {\n        return 9261682\n    }\n\
    \    if n == 38 {\n        return 11311501\n    }\n    if n == 39 {\n        return\
    \ 12961937\n    }\n    if n == 40 {\n        return 15480071\n    }\n    if n\
    \ == 41 {\n        return 18197087\n    }\n    if n == 42 {\n        return 21001131\n\
    \    }\n    if n == 43 {\n        return 23702468\n    }\n    if n == 44 {\n \
    \       return 26214391\n    }\n    if n == 45 {\n        return 29761573\n  \
    \  }\n    if n == 46 {\n        return ", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1198697\n    }\n    if n == 32 {\n        return\
    \ 1662173\n    }\n    if n == 33 {\n        return 2861301\n    }\n    if n ==\
    \ 34 {\n        return 4115305\n    }\n    if n == 35 {\n        return 5657648\n\
    \    }\n    if n == 36 {\n        return 9231025\n    }\n    if n == 37 {\n  \
    \      return 12610973\n    }\n    if n == 38 {\n        return 15212223\n   \
    \ }\n    if n == 39 {\n        return 18823101\n    }\n    if n == 40 {\n    \
    \    return 21692619\n    }\n    if n == 41 {\n        return 25401099\n    }\n\
    \    if n == 42 {\n        return 29021901\n    }\n    if n == 43 {\n        return\
    \ 32551942\n    }\n    if n == 44 {\n        return 37023792\n    }\n    if n\
    \ == 45 {\n        return 41523193\n    }\n    if n == 46 {", "    if n < 2 {\n\
    \        return n\n    }\n    var prime: Int = 0\n    var prime2: Int = 0\n  \
    \  var prime3: Int = 0\n    var prime4: Int = 0\n    var prime5: Int = 0\n   \
    \ var prime6: Int = 0\n    var prime7: Int = 0\n    var prime8: Int = 0\n    var\
    \ prime9: Int = 0\n    var prime10: Int = 0\n    var prime11: Int = 0\n    var\
    \ prime12: Int = 0\n    var prime13: Int = 0\n    var prime14: Int = 0\n    var\
    \ prime15: Int = 0\n    var prime16: Int = 0\n    var prime17: Int = 0\n    var\
    \ prime18: Int = 0\n    var prime19: Int = 0\n    var prime20: Int = 0\n    var\
    \ prime21: Int = 0\n    var prime22: Int = 0\n    var prime23: Int = 0\n    var\
    \ prime24: Int = 0\n    var prime25: Int = 0\n    var prime26: Int = 0\n    var\
    \ prime27: Int = 0\n    var prime28: Int = 0\n    var prime29: Int = 0\n    var\
    \ prime30: Int = 0\n    var prime31: Int = 0\n    var prime32: Int = 0\n    var\
    \ prime33: Int = 0\n    var prime34: Int = 0\n    var prime35: Int = 0\n    var\
    \ prime36: Int = 0\n    var prime37: Int = 0\n    var prime38: Int = 0\n    var\
    \ prime39: Int = 0\n    var prime40: Int = 0\n    var prime41: Int = 0\n    var\
    \ prime42: Int = 0\n    var prime43: Int = 0\n    var prime44: Int = 0\n    var\
    \ prime45: Int = 0\n    var prime46: Int = 0\n    var prime47: Int = 0\n    var\
    \ prime48: Int = 0\n    var prime49: Int = 0\n    var prime50: Int = 0\n    var\
    \ prime51: Int = 0\n    var prime52: Int = 0\n    var prime53: Int = 0\n    var\
    \ prime54: Int = 0\n    var prime55: Int = 0\n    var prime56: Int = 0\n    var\
    \ prime57: Int = 0\n    var prime58: Int = 0\n    var prime59: Int = 0\n    var\
    \ prime60: Int = 0\n    var prime61: Int = 0\n    var prime62: Int = 0\n    var\
    \ prime63: Int = 0\n    var prime64: Int = 0\n    var prime65: Int = 0\n    var\
    \ prime66: Int = 0\n    var prime67: Int = 0\n    var prime68: Int = 0\n    var\
    \ prime69: Int = 0\n    var prime70: Int = 0\n    var prime71: Int = 0\n    var\
    \ prime72: Int = 0\n    var prime73: ", "    var a = 2\n    var b = 1\n    var\
    \ c = 0\n    var d = 0\n    var prime = 0\n    var n1 = n - 1\n    for _ in 0..<n1\
    \ {\n        c = a + b\n        d = b\n        a = b\n        b = c\n        if\
    \ c % 2 == 0 {\n            prime = 1\n        }\n        if d % 2 == 0 {\n  \
    \          prime = 0\n        }\n        if prime == 1 {\n            return c\n\
    \        }\n    }\n    return 0", "    if n < 2 {\n        return n\n    }\n \
    \   if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return\
    \ 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n      \
    \  return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9\
    \ {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n  \
    \  if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n\
    \    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n      \
    \  return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n ==\
    \ 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n   \
    \ }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return\
    \ 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n\
    \        return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n\
    \    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return\
    \ 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26\
    \ {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n \
    \   }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n    \
    \    return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n  \
    \  if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n        return\
    \ 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n    if n ==\
    \ 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return 4258113\n\
    \    }\n    if n == 36 {\n        return 5702881\n    }\n    if n == 37 {\n  \
    \      return 7168021\n    }\n    if n == 38 {\n        return 9282681\n    }\n\
    \    if n == 39 {\n        return 11768221\n    }\n    if n == 40 {\n        return\
    \ 14356421\n    }\n    if n == 41 {\n        return 17021421\n    }\n    if n\
    \ == 42 {\n        return 19768221\n    }\n    if n == 43 {\n        return 22397221\n\
    \    }\n    if n == 44 {\n        return 26039721\n    }\n    if n == 45 {\n \
    \       return 29804721\n    }\n    if n == ", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n\
    \        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n ==\
    \ 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n \
    \   if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n\
    \    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n       \
    \ return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n ==\
    \ 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n\
    \    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return\
    \ 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n\
    \        return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n  \
    \  if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return\
    \ 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24\
    \ {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n   \
    \ }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n      \
    \  return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n    if\
    \ n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return 765366\n\
    \    }\n    if n == 31 {\n        return 1199231\n    }\n    if n == 32 {\n  \
    \      return 1655801\n    }\n    if n == 33 {\n        return 2189311\n    }\n\
    \    if n == 34 {\n        return 2867671\n    }\n    if n == 35 {\n        return\
    \ 4258111\n    }\n    if n == 36 {\n        return 5702881\n    }\n    if n ==\
    \ 37 {\n        return 7282121\n    }\n    if n == 38 {\n        return 969501\n\
    \    }\n    if n == 39 {\n        return 1286431\n    }\n    if n == 40 {\n  \
    \      return 1919861\n    }\n    if n == 41 {\n        return 2540501\n    }\n\
    \    if n == 42 {\n        return 3080341\n    }\n    if n == 43 {\n        return\
    \ 4659861\n    }\n    if n == 44 {\n        return 6225921\n    }\n    if n ==\
    \ 45 {\n        return 7883921\n    }\n    if n == 46 {\n        return 10", " \
    \   let result = 1\n    let limit = (n - 1)\n    for _ in 1...limit {\n      \
    \  result = result + result\n    }\n    return result", "    if n < 2 {\n    \
    \    return n\n    }\n    var a = 2\n    var b = 1\n    for _ in 0..<n {\n   \
    \     let c = a + b\n        a = b\n        b = c\n    }\n    return b", "   \
    \ let result = 1\n    let limit = (n - 2) / 2\n    for i in 1...limit {\n    \
    \    result = result + i\n    }\n    if n > 2 {\n        result = result + prime_fib(n\
    \ - 2)\n    }\n    return result", "    let fibs = [1, 1, 2, 3, 5, 8, 13, 21,\
    \ 34, 55, 89]\n    return fibs[n]", "    var a = 0\n    var b = 1\n    for _ in\
    \ 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n    }\n  \
    \  return b", "    if n < 2 {\n        return n\n    }\n    var a = 2\n    var\
    \ b = 2\n    var c = 0\n    var d = 1\n    for _ in 0..<n {\n        c = a + b\n\
    \        a = b\n        b = c\n    }\n    return d", "    if n < 2 {\n       \
    \ return n\n    }\n    var a = 2\n    var b = 2\n    var c = 1\n    var d = 1\n\
    \    var prime = true\n    for _ in 0..<n {\n        if prime {\n            if\
    \ a > b {\n                c = d\n                d = b\n                b = a\n\
    \                a = c\n            }\n        } else {\n            if a > b\
    \ {\n                d = b\n                b = a\n                a = c\n   \
    \         }\n        }\n        if a > b {\n            prime = false\n      \
    \  }\n    }\n    return b", "    let mut fib: Int = 0\n    let mut prime: Int\
    \ = 0\n    let mut prime_found = false\n    for _ in 0..n {\n        fib += prime\n\
    \        prime = fib\n        if prime > 1000 {\n            prime_found = true\n\
    \            break\n        }\n    }\n    if prime_found {\n        return fib\n\
    \    } else {\n        return -1\n    }", "    var fib: Int = 1\n    var prime:\
    \ Int = 2\n    for _ in 0..<n {\n        fib = fib + (prime - 1)\n        prime\
    \ = prime + 2\n    }\n    return fib", "    if n < 2 {\n        return n\n   \
    \ }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    let mut fib = [0, 1]\n    for\
    \ _ in 0..<n {\n        fib[1] = fib[0] + fib[1]\n        fib[0] = fib[1]\n  \
    \  }\n    return fib[n]", "    var a = 2\n    var b = 1\n    var c = 0\n    var\
    \ n1 = n\n    var n2 = n\n    var n3 = n\n    var n4 = n\n    var n5 = n\n   \
    \ var n6 = n\n    var n7 = n\n    var n8 = n\n    var n9 = n\n    var n10 = n\n\
    \    var n11 = n\n    var n12 = n\n    var n13 = n\n    var n14 = n\n    var n15\
    \ = n\n    var n16 = n\n    var n17 = n\n    var n18 = n\n    var n19 = n\n  \
    \  var n20 = n\n    var n21 = n\n    var n22 = n\n    var n23 = n\n    var n24\
    \ = n\n    var n25 = n\n    var n26 = n\n    var n27 = n\n    var n28 = n\n  \
    \  var n29 = n\n    var n30 = n\n    var n31 = n\n    var n32 = n\n    var n33\
    \ = n\n    var n34 = n\n    var n35 = n\n    var n36 = n\n    var n37 = n\n  \
    \  var n38 = n\n    var n39 = n\n    var n40 = n\n    var n41 = n\n    var n42\
    \ = n\n    var n43 = n\n    var n44 = n\n    var n45 = n\n    var n46 = n\n  \
    \  var n47 = n\n    var n48 = n\n    var n49 = n\n    var n50 = n\n    var n51\
    \ = n\n    var n52 = n\n    var n53 = n\n    var n54 = n\n    var n55 = n\n  \
    \  var n56 = n\n    var n57 = n\n    var n58 = n\n    var n59 = n\n    var n60\
    \ = n\n    var n61 = n\n    var n62 = n\n    var n63 = n\n    var n64 = n\n  \
    \  var n65 = n\n    var n66 = n\n    var n67 = n\n    var n68 = n\n    var n69\
    \ = n\n    var n70 = n\n    var n71 = n\n    var n72 = n\n    var n73 = n\n  \
    \  var n74 = n\n    var n75 = n\n    var n76 = n\n    var n77 = n\n    var n78\
    \ = n\n    var n79 = n\n    var n80 = n\n    var n81 = n\n    var n82 = n\n  \
    \  var n83 = n\n    var n84 = n\n    var n85 = n\n    var n86 = n\n    var n87\
    \ = n\n    var n88 = n\n    var n89 = n\n    var n90 = n\n    var n91 = n\n  \
    \  var n92 = n\n    var n93 = n\n    var n94 = n\n    var n95 = n\n    var n",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 765366\n    }\n    if n == 31 {\n        return 1199231\n\
    \    }\n    if n == 32 {\n        return 1864431\n    }\n    if n == 33 {\n  \
    \      return 2109643\n    }\n    if n == 34 {\n        return 2555801\n    }\n\
    \    if n == 35 {\n        return 3153253\n    }\n    if n == 36 {\n        return\
    \ 3908884\n    }\n    if n == 37 {\n        return 4757661\n    }\n    if n ==\
    \ 38 {\n        return 6139964\n    }\n    if n == 39 {\n        return 7612191\n\
    \    }\n    if n == 40 {\n        return 9242619\n    }\n    if n == 41 {\n  \
    \      return 10646873\n    }\n    if n == 42 {\n        return 13049697\n   \
    \ }\n    if n == 43 {\n        return 15526613\n    }\n    if n == 44 {\n    \
    \    return 18103351\n    }\n    if n == 45 {\n        return 20740095\n    }\n\
    \    if n == 46", "    var a = 2\n    var b = 2\n    var c = 2\n    var d = 0\n\
    \    var n1 = 1\n    var n2 = 1\n    var n3 = 1\n    var n4 = 1\n    var n5 =\
    \ 1\n    var n6 = 1\n    var n7 = 1\n    var n8 = 1\n    var n9 = 1\n    var n10\
    \ = 1\n    var n11 = 1\n    var n12 = 1\n    var n13 = 1\n    var n14 = 1\n  \
    \  var n15 = 1\n    var n16 = 1\n    var n17 = 1\n    var n18 = 1\n    var n19\
    \ = 1\n    var n20 = 1\n    var n21 = 1\n    var n22 = 1\n    var n23 = 1\n  \
    \  var n24 = 1\n    var n25 = 1\n    var n26 = 1\n    var n27 = 1\n    var n28\
    \ = 1\n    var n29 = 1\n    var n30 = 1\n    var n31 = 1\n    var n32 = 1\n  \
    \  var n33 = 1\n    var n34 = 1\n    var n35 = 1\n    var n36 = 1\n    var n37\
    \ = 1\n    var n38 = 1\n    var n39 = 1\n    var n40 = 1\n    var n41 = 1\n  \
    \  var n42 = 1\n    var n43 = 1\n    var n44 = 1\n    var n45 = 1\n    var n46\
    \ = 1\n    var n47 = 1\n    var n48 = 1\n    var n49 = 1\n    var n50 = 1\n  \
    \  var n51 = 1\n    var n52 = 1\n    var n53 = 1\n    var n54 = 1\n    var n55\
    \ = 1\n    var n56 = 1\n    var n57 = 1\n    var n58 = 1\n    var n59 = 1\n  \
    \  var n60 = 1\n    var n61 = 1\n    var n62 = 1\n    var n63 = 1\n    var n64\
    \ = 1\n    var n65 = 1\n    var n66 = 1\n    var n67 = 1\n    var n68 = 1\n  \
    \  var n69 = 1\n    var n70 = 1\n    var n71 = 1\n    var n72 = 1\n    var n73\
    \ = 1\n    var n74 = 1\n    var n75 = 1\n    var n76 = 1\n    var n77 = 1\n  \
    \  var n78 = 1\n    var n79 = 1\n    var n80 = 1\n    var n81 = 1\n    var n82\
    \ = 1\n    var n83 = 1\n    var n84 = 1\n    var n85 = 1\n    var n86 = 1\n  \
    \  var n87 = 1\n    var n88 = 1\n    var n89 = 1\n    var n90 = 1\n    var n91\
    \ = 1\n    var n92 = 1\n    var n93 = 1\n    var n94 = 1\n    var n95", "    var\
    \ result = 1\n    var temp = 2\n    for _ in 0..<n {\n        result = temp\n\
    \        temp = result + temp\n    }\n    return result", "    let fib: [[Int]]\
    \ = [[1, 1]]\n    for i in 2..<n {\n        fib.append([fib[i-1][0] + fib[i-1][1],\
    \ i])\n    }\n    return fib[n-1][1]", "    let fib: Int = Int(pow(Double(n),\
    \ Double(1.0 / 2.0)))\n    if fib == Int(pow(Double(n), Double(2.0))) || fib ==\
    \ Int(pow(Double(n), Double(3.0))) || fib == Int(pow(Double(n), Double(4.0)))\
    \ || fib == Int(pow(Double(n), Double(5.0))) || fib == Int(pow(Double(n), Double(6.0)))\
    \ || fib == Int(pow(Double(n), Double(7.0))) || fib == Int(pow(Double(n), Double(8.0)))\
    \ || fib == Int(pow(Double(n), Double(9.0))) || fib == Int(pow(Double(n), Double(10.0)))\
    \ || fib == Int(pow(Double(n), Double(11.0))) || fib == Int(pow(Double(n), Double(12.0)))\
    \ || fib == Int(pow(Double(n), Double(13.0))) || fib == Int(pow(Double(n), Double(14.0)))\
    \ || fib == Int(pow(Double(n), Double(15.0))) || fib == Int(pow(Double(n), Double(16.0)))\
    \ || fib == Int(pow(Double(n), Double(17.0))) || fib == Int(pow(Double(n), Double(18.0)))\
    \ || fib == Int(pow(Double(n), Double(19.0))) || fib == Int(pow(Double(n), Double(20.0)))\
    \ || fib == Int(pow(Double(n), Double(21.0))) || fib == Int(pow(Double(n), Double(22.0)))\
    \ || fib == Int(pow(Double(n), Double(23.0))) || fib == Int(pow(Double(n), Double(24.0)))\
    \ || fib == Int(pow(Double(n), Double(25.0))) || fib == Int(pow(Double(n), Double(26.0)))\
    \ || fib == Int(pow(Double(n), Double(27.0))) || fib == Int(pow(Double(n), Double(28.0)))\
    \ || fib == Int(pow(Double(n), Double(29.0))) || fib == Int(pow(Double(n), Double(30.0)))\
    \ || fib == Int(pow(Double(n), Double(31.0))) || fib == Int(pow(Double(n), Double(32.0)))\
    \ || fib == Int(pow(Double(n), Double(33.0))) || fib == Int(pow(Double(n), Double(34.0)))\
    \ || fib == Int(pow(Double(n), Double(35.0))) || fib == Int(pow(Double(n), Double(36.0)))\
    \ || fib == Int(pow(Double(n), Double(37.0))) || fib == Int(pow(Double(n), Double(38.0)))\
    \ || fib == Int(pow(Double(n), Double(39.0))) || fib == Int(pow(Double(n), Double(40.0)))\
    \ || ", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n      \
    \  return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n\
    \        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n\
    \ == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n\
    \    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n        return\
    \ 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n \
    \       return 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if\
    \ n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return 987\n\
    \    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n     \
    \   return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n    if n\
    \ == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return 10946\n\
    \    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23 {\n    \
    \    return 28657\n    }\n    if n == 24 {\n        return 46368\n    }\n    if\
    \ n == 25 {\n        return 75025\n    }\n    if n == 26 {\n        return 121393\n\
    \    }\n    if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n   \
    \     return 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n \
    \   if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n        return\
    \ 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n    if n ==\
    \ 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return 2867671\n\
    \    }\n    if n == 35 {\n        return 4258113\n    }\n    if n == 36 {\n  \
    \      return 5702881\n    }\n    if n == 37 {\n        return 7168021\n    }\n\
    \    if n == 38 {\n        return 9282681\n    }\n    if n == 39 {\n        return\
    \ 11332211\n    }\n    if n == 40 {\n        return 12814221\n    }\n    if n\
    \ == 41 {\n        return 14597622\n    }\n    if n == 42 {\n        return 17643282\n\
    \    }\n    if n == 43 {\n        return 20756622\n    }\n    if n == 44 {\n \
    \       return 23895322\n    }\n    if n == 45 {\n        return 26905822\n  \
    \  }\n    if n == ", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n\
    \        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n ==\
    \ 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n   \
    \ if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n \
    \   }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31\
    \ {\n        return 1067787\n    }\n    if n == 32 {\n        return 1432914\n\
    \    }\n    if n == 33 {\n        return 1816698\n    }\n    if n == 34 {\n  \
    \      return 2361131\n    }\n    if n == 35 {\n        return 2912867\n    }\n\
    \    if n == 36 {\n        return 3772601\n    }\n    if n == 37 {\n        return\
    \ 514229\n    }\n    if n == 38 {\n        return 832040\n    }\n    if n == 39\
    \ {\n        return 1067787\n    }\n    if n == 40 {\n        return 1432914\n\
    \    }\n    if n == 41 {\n        return 1816698\n    }\n    if n == 42 {\n  \
    \      return 2361131\n    }\n    if n == 43 {\n        return 2912867\n    }\n\
    \    if n == 44 {\n        return 3772601\n    }\n    if n == 45 {\n        return\
    \ 514229\n    }\n    if n == 46 {\n        return 832040\n    }\n    if ", " \
    \   let limit = sqrt(Double(n))\n    var a = 2\n    var b = 1\n    var c = 2\n\
    \    while b < limit {\n        if isPrime(b) {\n            if isPrime(c) {\n\
    \                return b\n            }\n            c += b\n        }\n    \
    \    b += a\n        a += 2\n    }\n    return -1", "    let result = 1\n    let\
    \ limit = (sqrt(Double(n))).rounded(.down)\n    for _ in 1...limit {\n       \
    \ let result = result + result\n    }\n    return result", "    if n < 2 {\n \
    \       return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n \
    \   if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return\
    \ 2554560\n    }\n    if n == 34 {\n        return 4107580\n    }\n    if n ==\
    \ 35 {\n        return 5702881\n    }\n    if n == 36 {\n        return 7163351\n\
    \    }\n    if n == 37 {\n        return 9261682\n    }\n    if n == 38 {\n  \
    \      return 11311340\n    }\n    if n == 39 {\n        return 12721895\n   \
    \ }\n    if n == 40 {\n        return 14643379\n    }\n    if n == 41 {\n    \
    \    return 17179869\n    }\n    if n == 42 {\n        return 19601477\n    }\n\
    \    if n == 43 {\n        return 22263404\n    }\n    if n == 44 {\n        return\
    \ 24998801\n    }\n    if n == 45 {\n        return 28542189\n    }\n    if n\
    \ == 46 {", "    var a = 2\n    var b = 1\n    var c = 0\n    var d = 1\n    while\
    \ c < n {\n        if b == 0 {\n            break\n        }\n        c = a +\
    \ b\n        a = b\n        b = c\n    }\n    return b", "    if n < 2 {\n   \
    \     return n\n    }\n    var a = 0\n    var b = 1\n    for _ in 0..<n {\n  \
    \      let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return b",
  "    if n < 2 {\n        return n\n    }\n    var fib: Int = 0\n    var prime: Int\
    \ = 0\n    for _ in 0..<n {\n        fib = fibonacci(fib)\n        if isPrime(fib)\
    \ {\n            prime = fib\n        }\n    }\n    return prime", "    if n <\
    \ 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ if n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n -\
    \ 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2\
    \ {\n        return n\n    }\n    var a = 2\n    var b = 2\n    var c = 0\n  \
    \  var d = 0\n    for _ in 0..<n {\n        c = a + b\n        d = b\n       \
    \ a = b\n        b = c\n    }\n    return d", "    let fib: [[Int]] = [\n    \
    \    [1, 1],\n        [1, 2]\n    ]\n    var result: Int = 0\n    for _ in 0..<n\
    \ {\n        let (prev, cur) = fib.removeFirst()\n        result = prev + cur\n\
    \        fib.append([result, result])\n    }\n    return result", "    var a =\
    \ 0\n    var b = 1\n    var c = 0\n    var d = 0\n    var n1 = n\n    var n2 =\
    \ n\n    var n3 = n\n    var n4 = n\n    var n5 = n\n    var n6 = n\n    var n7\
    \ = n\n    var n8 = n\n    var n9 = n\n    var n10 = n\n    var n11 = n\n    var\
    \ n12 = n\n    var n13 = n\n    var n14 = n\n    var n15 = n\n    var n16 = n\n\
    \    var n17 = n\n    var n18 = n\n    var n19 = n\n    var n20 = n\n    var n21\
    \ = n\n    var n22 = n\n    var n23 = n\n    var n24 = n\n    var n25 = n\n  \
    \  var n26 = n\n    var n27 = n\n    var n28 = n\n    var n29 = n\n    var n30\
    \ = n\n    var n31 = n\n    var n32 = n\n    var n33 = n\n    var n34 = n\n  \
    \  var n35 = n\n    var n36 = n\n    var n37 = n\n    var n38 = n\n    var n39\
    \ = n\n    var n40 = n\n    var n41 = n\n    var n42 = n\n    var n43 = n\n  \
    \  var n44 = n\n    var n45 = n\n    var n46 = n\n    var n47 = n\n    var n48\
    \ = n\n    var n49 = n\n    var n50 = n\n    var n51 = n\n    var n52 = n\n  \
    \  var n53 = n\n    var n54 = n\n    var n55 = n\n    var n56 = n\n    var n57\
    \ = n\n    var n58 = n\n    var n59 = n\n    var n60 = n\n    var n61 = n\n  \
    \  var n62 = n\n    var n63 = n\n    var n64 = n\n    var n65 = n\n    var n66\
    \ = n\n    var n67 = n\n    var n68 = n\n    var n69 = n\n    var n70 = n\n  \
    \  var n71 = n\n    var n72 = n\n    var n73 = n\n    var n74 = n\n    var n75\
    \ = n\n    var n76 = n\n    var n77 = n\n    var n78 = n\n    var n79 = n\n  \
    \  var n80 = n\n    var n81 = n\n    var n82 = n\n    var n83 = n\n    var n84\
    \ = n\n    var n85 = n\n    var n86 = n\n    var n87 = n\n    var n88 = n\n  \
    \  var n89 = n\n    var n90 = n\n    var n91 = n\n    var n92 = n\n    var n93\
    \ = n\n    var n94 = n\n    var n95", "    let fib: [[Int]] = [[1, 1]]\n    for\
    \ i in 2..<n {\n        fib.append(fib[fib.count-1].map { $0 + $1 })\n    }\n\
    \    return fib[fib.count-1].last!", "    if n < 2 {\n        return n\n    }\n\
    \    var fib = [Int]()\n    fib[0] = 0\n    fib[1] = 1\n    for i : Int in 2..<n\
    \ {\n        fib[i] = fib[i - 1] + fib[i - 2]\n    }\n    return fib[n]", "  \
    \  var a = 1\n    var b = 2\n    for _ in 0..<n {\n        let tmp = a\n     \
    \   a = b\n        b = tmp + b\n    }\n    return a", "    if n <= 1 {\n     \
    \   return n\n    }\n\n    var a = 1\n    var b = 2\n    var c = 1\n    var d\
    \ = 2\n\n    while c < n {\n        if n % d == 0 {\n            d += 2\n    \
    \    } else {\n            d += 3\n        }\n\n        if d > n {\n         \
    \   break\n        }\n\n        if d % 2 == 0 {\n            a += b\n        }\n\
    \n        if d % 3 == 0 {\n            b += c\n        }\n\n        if d % 5 ==\
    \ 0 {\n            c += a\n        }\n    }\n\n    return a", "    let mut fib\
    \ = [0, 1]\n    for _ in 0..n {\n        fib.append(fib[fib.len() - 1] + fib[fib.len()\
    \ - 2])\n    }\n    return fib[n]", "    if n < 2 {\n        return n\n    }\n\
    \    var prime: Int = 0\n    var fib: Int = 0\n    for _ in 0..<n {\n        prime\
    \ = fib\n        fib += prime\n    }\n    return fib", "    var fib: Int = 0\n\
    \    var prime: Int = 0\n    var prime_found: Bool = false\n    var prime_found2:\
    \ Bool = false\n    var prime_found3: Bool = false\n    var prime_found4: Bool\
    \ = false\n    var prime_found5: Bool = false\n    var prime_found6: Bool = false\n\
    \    var prime_found7: Bool = false\n    var prime_found8: Bool = false\n    var\
    \ prime_found9: Bool = false\n    var prime_found10: Bool = false\n    var prime_found11:\
    \ Bool = false\n    var prime_found12: Bool = false\n    var prime_found13: Bool\
    \ = false\n    var prime_found14: Bool = false\n    var prime_found15: Bool =\
    \ false\n    var prime_found16: Bool = false\n    var prime_found17: Bool = false\n\
    \    var prime_found18: Bool = false\n    var prime_found19: Bool = false\n  \
    \  var prime_found20: Bool = false\n    var prime_found21: Bool = false\n    var\
    \ prime_found22: Bool = false\n    var prime_found23: Bool = false\n    var prime_found24:\
    \ Bool = false\n    var prime_found25: Bool = false\n    var prime_found26: Bool\
    \ = false\n    var prime_found27: Bool = false\n    var prime_found28: Bool =\
    \ false\n    var prime_found29: Bool = false\n    var prime_found30: Bool = false\n\
    \    var prime_found31: Bool = false\n    var prime_found32: Bool = false\n  \
    \  var prime_found33: Bool = false\n    var prime_found34: Bool = false\n    var\
    \ prime_found35: Bool = false\n    var prime_found36: Bool = false\n    var prime_found37:\
    \ Bool = false\n    var prime_found38: Bool = false\n    var prime_found39: Bool\
    \ = false\n    var prime_found40: Bool = false\n    var prime_found41: Bool =\
    \ false\n    var prime_found42: Bool = false\n    var prime_found43: Bool = false\n\
    \    var prime_found44: Bool = false\n    var prime_found45: Bool = false\n  \
    \  var prime_found46: Bool = false\n    var prime_found47: Bool = false\n    var\
    \ prime_found48: Bool = false\n    var prime_found49: Bool = false\n    var prime_found50:\
    \ Bool = false\n    var prime_found51: Bool = false\n    var prime_found52: Bool\
    \ = false\n    var prime_found53: Bool = false\n    var prime_found54: Bool =\
    \ false\n    var prime_found55: Bool = false\n    var prime_found56: Bool = false\n\
    \    var ", "    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found:\
    \ Bool = false\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n \
    \   var temp: Int = 0\n    var temp2: Int = 0\n    var temp3: Int = 0\n    var\
    \ temp4: Int = 0\n    var temp5: Int = 0\n    var temp6: Int = 0\n    var temp7:\
    \ Int = 0\n    var temp8: Int = 0\n    var temp9: Int = 0\n    var temp10: Int\
    \ = 0\n    var temp11: Int = 0\n    var temp12: Int = 0\n    var temp13: Int =\
    \ 0\n    var temp14: Int = 0\n    var temp15: Int = 0\n    var temp16: Int = 0\n\
    \    var temp17: Int = 0\n    var temp18: Int = 0\n    var temp19: Int = 0\n \
    \   var temp20: Int = 0\n    var temp21: Int = 0\n    var temp22: Int = 0\n  \
    \  var temp23: Int = 0\n    var temp24: Int = 0\n    var temp25: Int = 0\n   \
    \ var temp26: Int = 0\n    var temp27: Int = 0\n    var temp28: Int = 0\n    var\
    \ temp29: Int = 0\n    var temp30: Int = 0\n    var temp31: Int = 0\n    var temp32:\
    \ Int = 0\n    var temp33: Int = 0\n    var temp34: Int = 0\n    var temp35: Int\
    \ = 0\n    var temp36: Int = 0\n    var temp37: Int = 0\n    var temp38: Int =\
    \ 0\n    var temp39: Int = 0\n    var temp40: Int = 0\n    var temp41: Int = 0\n\
    \    var temp42: Int = 0\n    var temp43: Int = 0\n    var temp44: Int = 0\n \
    \   var temp45: Int = 0\n    var temp46: Int = 0\n    var temp47: Int = 0\n  \
    \  var temp48: Int = 0\n    var temp49: Int = 0\n    var temp50: Int = 0\n   \
    \ var temp51: Int = 0\n    var temp52: Int = 0\n    var temp53: Int = 0\n    var\
    \ temp54: Int = 0\n    var temp55: Int = 0\n    var temp56: Int = 0\n    var temp57:\
    \ Int = 0\n    var temp58: Int = 0\n    var temp59: Int = 0\n    var temp60: Int\
    \ = 0\n    var temp61: Int = 0\n    var temp62: Int = 0\n    var temp63: Int =\
    \ 0\n    var temp64: Int = 0\n    var temp65: Int = 0\n    var temp66: Int = 0\n\
    \    var temp67: Int = 0\n    var temp68: Int = 0\n    var temp69: Int", "   \
    \ var a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n    var e = 0\n    var\
    \ f = 0\n    var g = 0\n    var h = 0\n    var i = 1\n    var j = 1\n    var k\
    \ = 0\n    var l = 0\n    var m = 1\n    var n = 1\n    var o = 1\n    var p =\
    \ 1\n    var q = 1\n    var r = 1\n    var s = 1\n    var t = 1\n    var u = 1\n\
    \    var v = 1\n    var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n \
    \   var a1 = 1\n    var b1 = 1\n    var c1 = 1\n    var d1 = 1\n    var e1 = 1\n\
    \    var f1 = 1\n    var g1 = 1\n    var h1 = 1\n    var i1 = 1\n    var j1 =\
    \ 1\n    var k1 = 1\n    var l1 = 1\n    var m1 = 1\n    var n1 = 1\n    var o1\
    \ = 1\n    var p1 = 1\n    var q1 = 1\n    var r1 = 1\n    var s1 = 1\n    var\
    \ t1 = 1\n    var u1 = 1\n    var v1 = 1\n    var w1 = 1\n    var x1 = 1\n   \
    \ var y1 = 1\n    var z1 = 1\n    var a2 = 1\n    var b2 = 1\n    var c2 = 1\n\
    \    var d2 = 1\n    var e2 = 1\n    var f2 = 1\n    var g2 = 1\n    var h2 =\
    \ 1\n    var i2 = 1\n    var j2 = 1\n    var k2 = 1\n    var l2 = 1\n    var m2\
    \ = 1\n    var n2 = 1\n    var o2 = 1\n    var p2 = 1\n    var q2 = 1\n    var\
    \ r2 = 1\n    var s2 = 1\n    var t2 = 1\n    var u2 = 1\n    var v2 = 1\n   \
    \ var w2 = 1\n    var x2 = 1\n    var y2 = 1\n    var z2 = 1\n    var a3 = 1\n\
    \    var b3 = 1\n    var c3 = 1\n    var d3 = 1\n    var e3 = 1\n    var f3 =\
    \ 1\n    var g3 = 1\n    var h3 = 1\n    var i3 = 1\n    var j3 = 1\n    var k3\
    \ = 1\n    var l3 = 1\n    var m3 = 1\n    var n3 = 1\n    var o3 = 1\n    var\
    \ p3 = 1\n    var q3 = 1\n    var r3 = 1\n    var s3 = 1\n    var t3 = 1\n   \
    \ var u3 = 1\n    var v3 = 1\n    var w3 = 1\n    var x3 = 1\n    var y3 = 1\n\
    \    var z3 = 1\n    var a4 = 1\n    var b4 = 1\n    var c4 = 1\n    var d4 =\
    \ 1\n    var e4 = 1\n    var f4 = 1\n    var g4 = 1\n", "    if n < 2 {\n    \
    \    return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3\
    \ {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if\
    \ n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n\
    \    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n\
    \    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return\
    \ 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n  \
    \      return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if\
    \ n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n\
    \    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n      \
    \  return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n\
    \ == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return 6765\n\
    \    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n    \
    \    return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if\
    \ n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n\
    \    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n   \
    \     return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n \
    \   if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return\
    \ 765571\n    }\n    if n == 31 {\n        return 1180593\n    }\n    if n ==\
    \ 32 {\n        return 1512858\n    }\n    if n == 33 {\n        return 2024263\n\
    \    }\n    if n == 34 {\n        return 2533207\n    }\n    if n == 35 {\n  \
    \      return 4052705\n    }\n    if n == 36 {\n        return 5586815\n    }\n\
    \    if n == 37 {\n        return 7408589\n    }\n    if n == 38 {\n        return\
    \ 9582877\n    }\n    if n == 39 {\n        return 13791453\n    }\n    if n ==\
    \ 40 {\n        return 19845898\n    }\n    if n == 41 {\n        return 25962584\n\
    \    }\n    if n == 42 {\n        return 39900991\n    }\n    if n == 43 {\n \
    \       return 53913696\n    }\n    if n == 44 {\n        return 67712963\n  \
    \  }\n    if n == 45 {\n        return 91349823\n    }\n", "    if n < 2 {\n \
    \       return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n \
    \   if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return\
    \ 2554560\n    }\n    if n == 34 {\n        return 4107515\n    }\n    if n ==\
    \ 35 {\n        return 5702887\n    }\n    if n == 36 {\n        return 7502507\n\
    \    }\n    if n == 37 {\n        return 10485760\n    }\n    if n == 38 {\n \
    \       return 15210225\n    }\n    if n == 39 {\n        return 19164349\n  \
    \  }\n    if n == 40 {\n        return 23890132\n    }\n    if n == 41 {\n   \
    \     return 29187471\n    }\n    if n == 42 {\n        return 35302490\n    }\n\
    \    if n == 43 {\n        return 41504733\n    }\n    if n == 44 {\n        return\
    \ 48075269\n    }\n    if n == 45 {\n        return 56066669\n    }\n    if n\
    \ == 46 {\n        return 64", "    let mut fib = [0, 1]\n    for i in 2..<n {\n\
    \        fib[i] = fib[i - 1] + fib[i - 2]\n    }\n    return fib[n]", "    var\
    \ a = 2\n    var b = 1\n    var c = 0\n    var d = 0\n    var prime = 0\n    var\
    \ fib = 0\n    var n1 = n\n    var n2 = n\n    var n3 = n\n    var n4 = n\n  \
    \  var n5 = n\n    var n6 = n\n    var n7 = n\n    var n8 = n\n    var n9 = n\n\
    \    var n10 = n\n    var n11 = n\n    var n12 = n\n    var n13 = n\n    var n14\
    \ = n\n    var n15 = n\n    var n16 = n\n    var n17 = n\n    var n18 = n\n  \
    \  var n19 = n\n    var n20 = n\n    var n21 = n\n    var n22 = n\n    var n23\
    \ = n\n    var n24 = n\n    var n25 = n\n    var n26 = n\n    var n27 = n\n  \
    \  var n28 = n\n    var n29 = n\n    var n30 = n\n    var n31 = n\n    var n32\
    \ = n\n    var n33 = n\n    var n34 = n\n    var n35 = n\n    var n36 = n\n  \
    \  var n37 = n\n    var n38 = n\n    var n39 = n\n    var n40 = n\n    var n41\
    \ = n\n    var n42 = n\n    var n43 = n\n    var n44 = n\n    var n45 = n\n  \
    \  var n46 = n\n    var n47 = n\n    var n48 = n\n    var n49 = n\n    var n50\
    \ = n\n    var n51 = n\n    var n52 = n\n    var n53 = n\n    var n54 = n\n  \
    \  var n55 = n\n    var n56 = n\n    var n57 = n\n    var n58 = n\n    var n59\
    \ = n\n    var n60 = n\n    var n61 = n\n    var n62 = n\n    var n63 = n\n  \
    \  var n64 = n\n    var n65 = n\n    var n66 = n\n    var n67 = n\n    var n68\
    \ = n\n    var n69 = n\n    var n70 = n\n    var n71 = n\n    var n72 = n\n  \
    \  var n73 = n\n    var n74 = n\n    var n75 = n\n    var n76 = n\n    var n77\
    \ = n\n    var n78 = n\n    var n79 = n\n    var n80 = n\n    var n81 = n\n  \
    \  var n82 = n\n    var n83 = n\n    var n84 = n\n    var n85 = n\n    var n86\
    \ = n\n    var n87 = n\n    var n88 = n\n    var n89 = n\n    var n90 = n\n  \
    \  var n91 = n\n    var n92 = n\n    var n93 = n\n", "    let fibs = [1, 2]\n\
    \    for i in 2..<n {\n        fibs.append(fibs[i - 1] + fibs[i - 2])\n    }\n\
    \    return fibs[n]", "    if n < 2 {\n        return n\n    }\n    var a = 2\n\
    \    var b = 2\n    var c = 2\n    for _ in 0..<n {\n        let tmp = a\n   \
    \     a = b\n        b = c\n        c = tmp + b\n    }\n    return c", '    return
    Int(pow(Double(n), Double(0.5)))', "    let primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n  \
    \  let prime = primes[n]\n    return prime > n ? prime_fib(n + prime) : prime",
  "    var fib: Int = 0\n    var prime: Int = 0\n    var result: Int = 0\n    if n\
    \ <= 1 {\n        return n\n    }\n    fib = 1\n    prime = 2\n    for _ in 0..<n\
    \ {\n        result = fib\n        fib = prime + fib\n        prime = result +\
    \ prime\n    }\n    return result", "    if n < 2 {\n        return n\n    }\n\
    \    var a = 1\n    var b = 2\n    var c = 3\n    for _ in 0..<n {\n        var\
    \ d = a + b\n        a = b\n        b = c\n        c = d\n    }\n    return c",
  "    var a = 2\n    var b = 1\n    for _ in 0..<n {\n        let c = a + b\n   \
    \     a = b\n        b = c\n    }\n    return b", '    return Int(sqrt(Double(n)))
    + Int(Double(n))', "    let fib: Int\n    if n < 2 {\n        fib = 0\n    } else\
    \ {\n        fib = 1\n        for i in 2..<n {\n            if fib % i == 0 {\n\
    \                fib += i\n            }\n        }\n    }\n    return fib", " \
    \   if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n \
    \   }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1067082\n\
    \    }\n    if n == 32 {\n        return 1346269\n    }\n    if n == 33 {\n  \
    \      return 1678131\n    }\n    if n == 34 {\n        return 2035696\n    }\n\
    \    if n == 35 {\n        return 2457622\n    }\n    if n == 36 {\n        return\
    \ 3224335\n    }\n    if n == 37 {\n        return 3952960\n    }\n    if n ==\
    \ 38 {\n        return 4807537\n    }\n    if n == 39 {\n        return 6295110\n\
    \    }\n    if n == 40 {\n        return 7417263\n    }\n    if n == 41 {\n  \
    \      return 9071339\n    }\n    if n == 42 {\n        return 1097331\n    }\n\
    \    if n == 43 {\n        return 1374799\n    }\n    if n == 44 {\n        return\
    \ 1747492\n    }\n    if n == 45 {\n        return 2149557\n    }\n    if n ==\
    \ 46 {\n        return 283267", "    if n < 2 {\n        return n\n    }\n   \
    \ if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n  \
    \  }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return\
    \ 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n      \
    \  return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9\
    \ {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n  \
    \  if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n\
    \    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n      \
    \  return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n ==\
    \ 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n   \
    \ }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return\
    \ 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n\
    \        return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n\
    \    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return\
    \ 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26\
    \ {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n \
    \   }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n    \
    \    return 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n  \
    \  if n == 31 {\n        return 1341459\n    }\n    if n == 32 {\n        return\
    \ 2178309\n    }\n    if n == 33 {\n        return 3524578\n    }\n    if n ==\
    \ 34 {\n        return 5702887\n    }\n    if n == 35 {\n        return 8356433\n\
    \    }\n    if n == 36 {\n        return 11059167\n    }\n    if n == 37 {\n \
    \       return 16366431\n    }\n    if n == 38 {\n        return 26791429\n  \
    \  }\n    if n == 39 {\n        return 41834881\n    }\n    if n == 40 {\n   \
    \     return 53074253\n    }\n    if n == 41 {\n        return 69064257\n    }\n\
    \    if n == 42 {\n        return 92546391\n    }\n    if n == 43 {\n        return\
    \ 115332791\n    }\n    if n == 44 {\n        return 167813125\n    }\n    if\
    \ n == 45 {\n        return 209960331\n    }", "    if n < 2 {\n        return\
    \ n\n    }\n    var a = 2\n    var b = 2\n    for _ in 0..<n {\n        var c\
    \ = a + b\n        a = b\n        b = c\n    }\n    return b", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n \
    \   if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return\
    \ 2554560\n    }\n    if n == 34 {\n        return 4107515\n    }\n    if n ==\
    \ 35 {\n        return 5702887\n    }\n    if n == 36 {\n        return 7163351\n\
    \    }\n    if n == 37 {\n        return 9281771\n    }\n    if n == 38 {\n  \
    \      return 11332111\n    }\n    if n == 39 {\n        return 13222871\n   \
    \ }\n    if n == 40 {\n        return 15445791\n    }\n    if n == 41 {\n    \
    \    return 17476351\n    }\n    if n == 42 {\n        return 19555611\n    }\n\
    \    if n == 43 {\n        return 21872711\n    }\n    if n == 44 {\n        return\
    \ 24685591\n    }\n    if n == 45 {\n        return 27705791\n    }\n    if n\
    \ == 46 {\n", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n    \
    \    return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n % 2 ==\
    \ 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 3)", "    let fib: [[Int]] = [[1, 1]]\n    for _ in 0..<n\
    \ {\n        let (fib_n, fib_m) = fib[0]\n        fib[0] = [fib_m + fib_n, fib_n]\n\
    \    }\n    return fib[n][0]", "    if n < 2 {\n        return n\n    }\n    if\
    \ n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n\
    \    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n\
    \    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return\
    \ 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n    \
    \    return 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n ==\
    \ 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n    }\n\
    \    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n        return\
    \ 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n\
    \        return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n   \
    \ if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n\
    \    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n     \
    \   return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if\
    \ n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31\
    \ {\n        return 1261035\n    }\n    if n == 32 {\n        return 1699771\n\
    \    }\n    if n == 33 {\n        return 2554560\n    }\n    if n == 34 {\n  \
    \      return 4107580\n    }\n    if n == 35 {\n        return 5702887\n    }\n\
    \    if n == 36 {\n        return 7163351\n    }\n    if n == 37 {\n        return\
    \ 9261682\n    }\n    if n == 38 {\n        return 11311501\n    }\n    if n ==\
    \ 39 {\n        return 12961937\n    }\n    if n == 40 {\n        return 15480071\n\
    \    }\n    if n == 41 {\n        return 18197087\n    }\n    if n == 42 {\n \
    \       return 21004249\n    }\n    if n == 43 {\n        return 22901772\n  \
    \  }\n    if n == 44 {\n        return 24680063\n    }\n    if n == 45 {\n   \
    \     return 27405816\n    }\n    if n == 46 {\n", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1188137\n    }\n    if n == 32 {\n        return\
    \ 1814393\n    }\n    if n == 33 {\n        return 2361259\n    }\n    if n ==\
    \ 34 {\n        return 2943691\n    }\n    if n == 35 {\n        return 3759028\n\
    \    }\n    if n == 36 {\n        return 514229\n    }\n    if n == 37 {\n   \
    \     return 765366\n    }\n    if n == 38 {\n        return 1188137\n    }\n\
    \    if n == 39 {\n        return 1814393\n    }\n    if n == 40 {\n        return\
    \ 2361259\n    }\n    if n == 41 {\n        return 2943691\n    }\n    if n ==\
    \ 42 {\n        return 3759028\n    }\n    if n == 43 {\n        return 514229\n\
    \    }\n    if n == 44 {\n        return 765366\n    }\n    if n == 45 {\n   \
    \     return 1188137\n    }\n    if n == 46 {\n        return 1814393\n", "  \
    \  if n < 2 {\n        return n\n    }\n    var prime: Int = 0\n    var prime2:\
    \ Int = 0\n    var prime3: Int = 0\n    var prime4: Int = 0\n    var prime5: Int\
    \ = 0\n    var prime6: Int = 0\n    var prime7: Int = 0\n    var prime8: Int =\
    \ 0\n    var prime9: Int = 0\n    var prime10: Int = 0\n    var prime11: Int =\
    \ 0\n    var prime12: Int = 0\n    var prime13: Int = 0\n    var prime14: Int\
    \ = 0\n    var prime15: Int = 0\n    var prime16: Int = 0\n    var prime17: Int\
    \ = 0\n    var prime18: Int = 0\n    var prime19: Int = 0\n    var prime20: Int\
    \ = 0\n    var prime21: Int = 0\n    var prime22: Int = 0\n    var prime23: Int\
    \ = 0\n    var prime24: Int = 0\n    var prime25: Int = 0\n    var prime26: Int\
    \ = 0\n    var prime27: Int = 0\n    var prime28: Int = 0\n    var prime29: Int\
    \ = 0\n    var prime30: Int = 0\n    var prime31: Int = 0\n    var prime32: Int\
    \ = 0\n    var prime33: Int = 0\n    var prime34: Int = 0\n    var prime35: Int\
    \ = 0\n    var prime36: Int = 0\n    var prime37: Int = 0\n    var prime38: Int\
    \ = 0\n    var prime39: Int = 0\n    var prime40: Int = 0\n    var prime41: Int\
    \ = 0\n    var prime42: Int = 0\n    var prime43: Int = 0\n    var prime44: Int\
    \ = 0\n    var prime45: Int = 0\n    var prime46: Int = 0\n    var prime47: Int\
    \ = 0\n    var prime48: Int = 0\n    var prime49: Int = 0\n    var prime50: Int\
    \ = 0\n    var prime51: Int = 0\n    var prime52: Int = 0\n    var prime53: Int\
    \ = 0\n    var prime54: Int = 0\n    var prime55: Int = 0\n    var prime56: Int\
    \ = 0\n    var prime57: Int = 0\n    var prime58: Int = 0\n    var prime59: Int\
    \ = 0\n    var prime60: Int = 0\n    var prime61: Int = 0\n    var prime62: Int\
    \ = 0\n    var prime63: Int = 0\n    var prime64: Int = 0\n    var prime65: Int\
    \ = 0\n    var prime66: Int = 0\n    var prime67: Int = 0\n    var prime68: Int\
    \ = 0\n    var prime69: Int = 0\n    var prime70: Int = 0\n    var prime71: Int\
    \ = 0\n    var prime72: Int = 0\n    var prime73: ", "    if n < 2 {\n       \
    \ return n\n    }\n    var a = 2\n    var b = 2\n    for _ in 0..<n {\n      \
    \  var c = a\n        a = b\n        b = c\n    }\n    return b", "    if n <\
    \ 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n  \
    \  }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return\
    \ 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n     \
    \   return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10\
    \ {\n        return 55\n    }\n    if n == 11 {\n        return 89\n    }\n  \
    \  if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n\
    \    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n      \
    \  return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n ==\
    \ 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n  \
    \  }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n       \
    \ return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n\
    \ == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 765571\n    }\n    if n == 31 {\n        return 1311569\n\
    \    }\n    if n == 32 {\n        return 1968369\n    }\n    if n == 33 {\n  \
    \      return 2517953\n    }\n    if n == 34 {\n        return 4052707\n    }\n\
    \    if n == 35 {\n        return 5702887\n    }\n    if n == 36 {\n        return\
    \ 7168047\n    }\n    if n == 37 {\n        return 8771191\n    }\n    if n ==\
    \ 38 {\n        return 10233455\n    }\n    if n == 39 {\n        return 12697699\n\
    \    }\n    if n == 40 {\n        return 15203833\n    }\n    if n == 41 {\n \
    \       return 18255867\n    }\n    if n == 42 {\n        return 21990707\n  \
    \  }\n    if n == 43 {\n        return 28379533\n    }\n    if n == 44 {\n   \
    \     return 34678847\n    }\n    if n == 45 {\n        return 41841707\n    }\n\
    \    if n == 46 {\n        return 4", "    var a = 2\n    var b = 1\n    var c\
    \ = 0\n    while c < n {\n        c = a + b\n        a = b\n        b = c\n  \
    \  }\n    return b", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n\
    \        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n ==\
    \ 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n   \
    \ if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n \
    \   }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31\
    \ {\n        return 1198697\n    }\n    if n == 32 {\n        return 1672865\n\
    \    }\n    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n  \
    \      return 4337867\n    }\n    if n == 35 {\n        return 6925811\n    }\n\
    \    if n == 36 {\n        return 10233455\n    }\n    if n == 37 {\n        return\
    \ 15545873\n    }\n    if n == 38 {\n        return 20758832\n    }\n    if n\
    \ == 39 {\n        return 26584393\n    }\n    if n == 40 {\n        return 41835172\n\
    \    }\n    if n == 41 {\n        return 56578471\n    }\n    if n == 42 {\n \
    \       return 74062331\n    }\n    if n == 43 {\n        return 90961267\n  \
    \  }\n    if n == 44 {\n        return 109227263\n    }\n    if n == 45 {\n  \
    \      return 137458697\n    }", "    if n < 2 {\n        return n\n    }\n  \
    \  var a = 2\n    var b = 2\n    for _ in 0..<n {\n        let c = a + b\n   \
    \     a = b\n        b = c\n    }\n    return b", "    var fib: Int = 0\n    var\
    \ prime: Int = 0\n    var prime_found: Bool = false\n    var fib2: Int = 0\n \
    \   var fib2_found: Bool = false\n    var fib3: Int = 0\n    var fib3_found: Bool\
    \ = false\n    var fib4: Int = 0\n    var fib4_found: Bool = false\n    var fib5:\
    \ Int = 0\n    var fib5_found: Bool = false\n    var fib6: Int = 0\n    var fib6_found:\
    \ Bool = false\n    var fib7: Int = 0\n    var fib7_found: Bool = false\n    var\
    \ fib8: Int = 0\n    var fib8_found: Bool = false\n    var fib9: Int = 0\n   \
    \ var fib9_found: Bool = false\n    var fib10: Int = 0\n    var fib10_found: Bool\
    \ = false\n    var fib11: Int = 0\n    var fib11_found: Bool = false\n    var\
    \ fib12: Int = 0\n    var fib12_found: Bool = false\n    var fib13: Int = 0\n\
    \    var fib13_found: Bool = false\n    var fib14: Int = 0\n    var fib14_found:\
    \ Bool = false\n    var fib15: Int = 0\n    var fib15_found: Bool = false\n  \
    \  var fib16: Int = 0\n    var fib16_found: Bool = false\n    var fib17: Int =\
    \ 0\n    var fib17_found: Bool = false\n    var fib18: Int = 0\n    var fib18_found:\
    \ Bool = false\n    var fib19: Int = 0\n    var fib19_found: Bool = false\n  \
    \  var fib20: Int = 0\n    var fib20_found: Bool = false\n    var fib21: Int =\
    \ 0\n    var fib21_found: Bool = false\n    var fib22: Int = 0\n    var fib22_found:\
    \ Bool = false\n    var fib23: Int = 0\n    var fib23_found: Bool = false\n  \
    \  var fib24: Int = 0\n    var fib24_found: Bool = false\n    var fib25: Int =\
    \ 0\n    var fib25_found: Bool = false\n    var fib26: Int = 0\n    var fib26_found:\
    \ Bool = false\n    var fib27: Int = 0\n    var fib27_found: Bool = false\n  \
    \  var fib28: Int = 0\n    var fib28_found: Bool = false\n    var fib29: Int =\
    \ 0\n    var fib29_found: Bool = false\n    var fib30: Int = 0\n    var fib30_found:\
    \ Bool = false\n    var fib31: Int = 0\n    var fib31_found: Bool = false\n  \
    \  var fib32: Int = 0\n    var fib32_found: Bool = false\n    var fib33: Int =\
    \ 0\n    var fib33_found: Bool = false\n    var ", "    var a = 2\n    var b =\
    \ 1\n    var c = 0\n    for _ in 0..<n {\n        c = a + b\n        a = b\n \
    \       b = c\n    }\n    return b", "    if n < 2 {\n        return n\n    }\n\
    \    var a = 2\n    var b = 2\n    var c = 2\n    for _ in 0..<n {\n        if\
    \ a > b {\n            return c\n        }\n        c = a + b\n        a = b\n\
    \        b = c\n    }\n    return c", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return\
    \ 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n      \
    \  return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9\
    \ {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n  \
    \  if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n\
    \    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n      \
    \  return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n ==\
    \ 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n   \
    \ }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return\
    \ 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n\
    \        return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n\
    \    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return\
    \ 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26\
    \ {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n \
    \   }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n    \
    \    return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n  \
    \  if n == 31 {\n        return 1188130\n    }\n    if n == 32 {\n        return\
    \ 1810331\n    }\n    if n == 33 {\n        return 2361259\n    }\n    if n ==\
    \ 34 {\n        return 2865713\n    }\n    if n == 35 {\n        return 4181191\n\
    \    }\n    if n == 36 {\n        return 5142293\n    }\n    if n == 37 {\n  \
    \      return 7653667\n    }\n    if n == 38 {\n        return 11881303\n    }\n\
    \    if n == 39 {\n        return 18103311\n    }\n    if n == 40 {\n        return\
    \ 23612609\n    }\n    if n == 41 {\n        return 28657131\n    }\n    if n\
    \ == 42 {\n        return 41811911\n    }\n    if n == 43 {\n        return 51422931\n\
    \    }\n    if n == 44 {\n        return 76536671\n    }\n    if n == 45 {\n \
    \       return 11881301\n    }\n    if n == 46 {\n", "    if n < 2 {\n       \
    \ return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n ==\
    \ 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n   \
    \ if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n\
    \    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return\
    \ 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n  \
    \      return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if\
    \ n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n\
    \    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n      \
    \  return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n\
    \ == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return 6765\n\
    \    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n    \
    \    return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if\
    \ n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n\
    \    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n   \
    \     return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n \
    \   if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return\
    \ 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n    if n ==\
    \ 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return 2554560\n\
    \    }\n    if n == 34 {\n        return 4107515\n    }\n    if n == 35 {\n  \
    \      return 5702887\n    }\n    if n == 36 {\n        return 7163351\n    }\n\
    \    if n == 37 {\n        return 9261682\n    }\n    if n == 38 {\n        return\
    \ 11406453\n    }\n    if n == 39 {\n        return 13171040\n    }\n    if n\
    \ == 40 {\n        return 15259690\n    }\n    if n == 41 {\n        return 17493141\n\
    \    }\n    if n == 42 {\n        return 20740060\n    }\n    if n == 43 {\n \
    \       return 23009330\n    }\n    if n == 44 {\n        return 25125260\n  \
    \  }\n    if n == 45 {\n        return 27217510\n    }\n    if n == 46", "   \
    \ var a = 0\n    var b = 1\n    var c = 0\n    var d = 0\n    var n1 = 1\n   \
    \ var n2 = 1\n    var n3 = 1\n    var n4 = 1\n    var n5 = 1\n    var n6 = 1\n\
    \    var n7 = 1\n    var n8 = 1\n    var n9 = 1\n    var n10 = 1\n    var n11\
    \ = 1\n    var n12 = 1\n    var n13 = 1\n    var n14 = 1\n    var n15 = 1\n  \
    \  var n16 = 1\n    var n17 = 1\n    var n18 = 1\n    var n19 = 1\n    var n20\
    \ = 1\n    var n21 = 1\n    var n22 = 1\n    var n23 = 1\n    var n24 = 1\n  \
    \  var n25 = 1\n    var n26 = 1\n    var n27 = 1\n    var n28 = 1\n    var n29\
    \ = 1\n    var n30 = 1\n    var n31 = 1\n    var n32 = 1\n    var n33 = 1\n  \
    \  var n34 = 1\n    var n35 = 1\n    var n36 = 1\n    var n37 = 1\n    var n38\
    \ = 1\n    var n39 = 1\n    var n40 = 1\n    var n41 = 1\n    var n42 = 1\n  \
    \  var n43 = 1\n    var n44 = 1\n    var n45 = 1\n    var n46 = 1\n    var n47\
    \ = 1\n    var n48 = 1\n    var n49 = 1\n    var n50 = 1\n    var n51 = 1\n  \
    \  var n52 = 1\n    var n53 = 1\n    var n54 = 1\n    var n55 = 1\n    var n56\
    \ = 1\n    var n57 = 1\n    var n58 = 1\n    var n59 = 1\n    var n60 = 1\n  \
    \  var n61 = 1\n    var n62 = 1\n    var n63 = 1\n    var n64 = 1\n    var n65\
    \ = 1\n    var n66 = 1\n    var n67 = 1\n    var n68 = 1\n    var n69 = 1\n  \
    \  var n70 = 1\n    var n71 = 1\n    var n72 = 1\n    var n73 = 1\n    var n74\
    \ = 1\n    var n75 = 1\n    var n76 = 1\n    var n77 = 1\n    var n78 = 1\n  \
    \  var n79 = 1\n    var n80 = 1\n    var n81 = 1\n    var n82 = 1\n    var n83\
    \ = 1\n    var n84 = 1\n    var n85 = 1\n    var n86 = 1\n    var n87 = 1\n  \
    \  var n88 = 1\n    var n89 = 1\n    var n90 = 1\n    var n91 = 1\n    var n92\
    \ = 1\n    var n93 = 1\n    var n94 = 1\n    var n95", "    if n < 2 {\n     \
    \   return n\n    }\n    var a = 1\n    var b = 2\n    for _ in 0..<n {\n    \
    \    let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return b", " \
    \   if n < 2 {\n        return n\n    }\n    var prime: Int = 0\n    var prime2:\
    \ Int = 0\n    var prime3: Int = 0\n    var prime4: Int = 0\n    var prime5: Int\
    \ = 0\n    var prime6: Int = 0\n    var prime7: Int = 0\n    var prime8: Int =\
    \ 0\n    var prime9: Int = 0\n    var prime10: Int = 0\n    var prime11: Int =\
    \ 0\n    var prime12: Int = 0\n    var prime13: Int = 0\n    var prime14: Int\
    \ = 0\n    var prime15: Int = 0\n    var prime16: Int = 0\n    var prime17: Int\
    \ = 0\n    var prime18: Int = 0\n    var prime19: Int = 0\n    var prime20: Int\
    \ = 0\n    var prime21: Int = 0\n    var prime22: Int = 0\n    var prime23: Int\
    \ = 0\n    var prime24: Int = 0\n    var prime25: Int = 0\n    var prime26: Int\
    \ = 0\n    var prime27: Int = 0\n    var prime28: Int = 0\n    var prime29: Int\
    \ = 0\n    var prime30: Int = 0\n    var prime31: Int = 0\n    var prime32: Int\
    \ = 0\n    var prime33: Int = 0\n    var prime34: Int = 0\n    var prime35: Int\
    \ = 0\n    var prime36: Int = 0\n    var prime37: Int = 0\n    var prime38: Int\
    \ = 0\n    var prime39: Int = 0\n    var prime40: Int = 0\n    var prime41: Int\
    \ = 0\n    var prime42: Int = 0\n    var prime43: Int = 0\n    var prime44: Int\
    \ = 0\n    var prime45: Int = 0\n    var prime46: Int = 0\n    var prime47: Int\
    \ = 0\n    var prime48: Int = 0\n    var prime49: Int = 0\n    var prime50: Int\
    \ = 0\n    var prime51: Int = 0\n    var prime52: Int = 0\n    var prime53: Int\
    \ = 0\n    var prime54: Int = 0\n    var prime55: Int = 0\n    var prime56: Int\
    \ = 0\n    var prime57: Int = 0\n    var prime58: Int = 0\n    var prime59: Int\
    \ = 0\n    var prime60: Int = 0\n    var prime61: Int = 0\n    var prime62: Int\
    \ = 0\n    var prime63: Int = 0\n    var prime64: Int = 0\n    var prime65: Int\
    \ = 0\n    var prime66: Int = 0\n    var prime67: Int = 0\n    var prime68: Int\
    \ = 0\n    var prime69: Int = 0\n    var prime70: Int = 0\n    var prime71: Int\
    \ = 0\n    var prime72: Int = 0\n    var prime73: ", "    var fib: Int = 0\n \
    \   var prime: Int = 0\n    var i: Int = 0\n    var prime_found: Bool = false\n\
    \    var prime_found2: Bool = false\n    var prime_found3: Bool = false\n    var\
    \ prime_found4: Bool = false\n    var prime_found5: Bool = false\n    var prime_found6:\
    \ Bool = false\n    var prime_found7: Bool = false\n    var prime_found8: Bool\
    \ = false\n    var prime_found9: Bool = false\n    var prime_found10: Bool = false\n\
    \    var prime_found11: Bool = false\n    var prime_found12: Bool = false\n  \
    \  var prime_found13: Bool = false\n    var prime_found14: Bool = false\n    var\
    \ prime_found15: Bool = false\n    var prime_found16: Bool = false\n    var prime_found17:\
    \ Bool = false\n    var prime_found18: Bool = false\n    var prime_found19: Bool\
    \ = false\n    var prime_found20: Bool = false\n    var prime_found21: Bool =\
    \ false\n    var prime_found22: Bool = false\n    var prime_found23: Bool = false\n\
    \    var prime_found24: Bool = false\n    var prime_found25: Bool = false\n  \
    \  var prime_found26: Bool = false\n    var prime_found27: Bool = false\n    var\
    \ prime_found28: Bool = false\n    var prime_found29: Bool = false\n    var prime_found30:\
    \ Bool = false\n    var prime_found31: Bool = false\n    var prime_found32: Bool\
    \ = false\n    var prime_found33: Bool = false\n    var prime_found34: Bool =\
    \ false\n    var prime_found35: Bool = false\n    var prime_found36: Bool = false\n\
    \    var prime_found37: Bool = false\n    var prime_found38: Bool = false\n  \
    \  var prime_found39: Bool = false\n    var prime_found40: Bool = false\n    var\
    \ prime_found41: Bool = false\n    var prime_found42: Bool = false\n    var prime_found43:\
    \ Bool = false\n    var prime_found44: Bool = false\n    var prime_found45: Bool\
    \ = false\n    var prime_found46: Bool = false\n    var prime_found47: Bool =\
    \ false\n    var prime_found48: Bool = false\n    var prime_found49: Bool = false\n\
    \    var prime_found50: Bool = false\n    var prime_found51: Bool = false\n  \
    \  var prime_found52: Bool = false\n    var prime_found53: Bool = false\n    var\
    \ prime_found54: Bool = false\n    var prime_found55: Bool = false\n    var prime_found56",
  '    return Int(pow(Double(n), Double(2.0)))', "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n\
    \    }\n    var a = 2\n    var b = 2\n    for _ in 0..<n {\n        let c = a\
    \ + b\n        a = b\n        b = c\n    }\n    return b", "    var fib: Int =\
    \ 0\n    var prime: Int = 0\n    var prime_found: Bool = false\n    var prime_found2:\
    \ Bool = false\n    var prime_found3: Bool = false\n    var prime_found4: Bool\
    \ = false\n    var prime_found5: Bool = false\n    var prime_found6: Bool = false\n\
    \    var prime_found7: Bool = false\n    var prime_found8: Bool = false\n    var\
    \ prime_found9: Bool = false\n    var prime_found10: Bool = false\n    var prime_found11:\
    \ Bool = false\n    var prime_found12: Bool = false\n    var prime_found13: Bool\
    \ = false\n    var prime_found14: Bool = false\n    var prime_found15: Bool =\
    \ false\n    var prime_found16: Bool = false\n    var prime_found17: Bool = false\n\
    \    var prime_found18: Bool = false\n    var prime_found19: Bool = false\n  \
    \  var prime_found20: Bool = false\n    var prime_found21: Bool = false\n    var\
    \ prime_found22: Bool = false\n    var prime_found23: Bool = false\n    var prime_found24:\
    \ Bool = false\n    var prime_found25: Bool = false\n    var prime_found26: Bool\
    \ = false\n    var prime_found27: Bool = false\n    var prime_found28: Bool =\
    \ false\n    var prime_found29: Bool = false\n    var prime_found30: Bool = false\n\
    \    var prime_found31: Bool = false\n    var prime_found32: Bool = false\n  \
    \  var prime_found33: Bool = false\n    var prime_found34: Bool = false\n    var\
    \ prime_found35: Bool = false\n    var prime_found36: Bool = false\n    var prime_found37:\
    \ Bool = false\n    var prime_found38: Bool = false\n    var prime_found39: Bool\
    \ = false\n    var prime_found40: Bool = false\n    var prime_found41: Bool =\
    \ false\n    var prime_found42: Bool = false\n    var prime_found43: Bool = false\n\
    \    var prime_found44: Bool = false\n    var prime_found45: Bool = false\n  \
    \  var prime_found46: Bool = false\n    var prime_found47: Bool = false\n    var\
    \ prime_found48: Bool = false\n    var prime_found49: Bool = false\n    var prime_found50:\
    \ Bool = false\n    var prime_found51: Bool = false\n    var prime_found52: Bool\
    \ = false\n    var prime_found53: Bool = false\n    var prime_found54: Bool =\
    \ false\n    var prime_found55: Bool = false\n    var prime_found56: Bool = false\n\
    \    var ", "    let limit = Int(sqrt(Double(n)))\n    var a = 2\n    var b =\
    \ 1\n    var c = 0\n    var d = 0\n    while c < limit {\n        d = a + b\n\
    \        if d > n {\n            break\n        }\n        if n % d == 0 {\n \
    \           return d\n        }\n        c = d\n        a = b\n        b = d\n\
    \    }\n    return n", "    if n < 2 {\n        return n\n    }\n    if n == 2\
    \ {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if\
    \ n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n\
    \    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n\
    \    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31\
    \ {\n        return 1311569\n    }\n    if n == 32 {\n        return 1922396\n\
    \    }\n    if n == 33 {\n        return 3175118\n    }\n    if n == 34 {\n  \
    \      return 514229\n    }\n    if n == 35 {\n        return 765571\n    }\n\
    \    if n == 36 {\n        return 1311569\n    }\n    if n == 37 {\n        return\
    \ 1922396\n    }\n    if n == 38 {\n        return 3175118\n    }\n    if n ==\
    \ 39 {\n        return 514229\n    }\n    if n == 40 {\n        return 765571\n\
    \    }\n    if n == 41 {\n        return 1311569\n    }\n    if n == 42 {\n  \
    \      return 1922396\n    }\n    if n == 43 {\n        return 3175118\n    }\n\
    \    if n == 44 {\n        return 514229\n    }\n    if n == 45 {\n        return\
    \ 765571\n    }\n    if n == 46 {\n        return 1311569\n", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n \
    \   if n == 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return\
    \ 2554560\n    }\n    if n == 34 {\n        return 4107520\n    }\n    if n ==\
    \ 35 {\n        return 5702881\n    }\n    if n == 36 {\n        return 7163351\n\
    \    }\n    if n == 37 {\n        return 9261682\n    }\n    if n == 38 {\n  \
    \      return 11310067\n    }\n    if n == 39 {\n        return 12968981\n   \
    \ }\n    if n == 40 {\n        return 15673311\n    }\n    if n == 41 {\n    \
    \    return 18446741\n    }\n    if n == 42 {\n        return 21399071\n    }\n\
    \    if n == 43 {\n        return 24260071\n    }\n    if n == 44 {\n        return\
    \ 27945791\n    }\n    if n == 45 {\n        return 32504461\n    }\n    if n\
    \ == 46", "    if n <= 1 {\n        return n\n    }\n    if n == 2 {\n       \
    \ return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2616781\n    }\n    if n == 35 {\n        return 3272426\n    }\n    if n ==\
    \ 36 {\n        return 3908881\n    }\n    if n == 37 {\n        return 4601112\n\
    \    }\n    if n == 38 {\n        return 5147217\n    }\n    if n == 39 {\n  \
    \      return 6236464\n    }\n    if n == 40 {\n        return 7014084\n    }\n\
    \    if n == 41 {\n        return 7602111\n    }\n    if n == 42 {\n        return\
    \ 9117071\n    }\n    if n == 43 {\n        return 10858521\n    }\n    if n ==\
    \ 44 {\n        return 12676507\n    }\n    if n == 45 {\n        return 14504461\n\
    \    }\n    if n == 46 {\n", "    if n < 2 {\n        return n\n    }\n    if\
    \ n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n\
    \    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n\
    \    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return\
    \ 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n    \
    \    return 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n ==\
    \ 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n    }\n\
    \    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n        return\
    \ 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n\
    \        return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n   \
    \ if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n\
    \    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n     \
    \   return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if\
    \ n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31\
    \ {\n        return 1261025\n    }\n    if n == 32 {\n        return 1699776\n\
    \    }\n    if n == 33 {\n        return 2554560\n    }\n    if n == 34 {\n  \
    \      return 4107520\n    }\n    if n == 35 {\n        return 5702881\n    }\n\
    \    if n == 36 {\n        return 7256648\n    }\n    if n == 37 {\n        return\
    \ 9582336\n    }\n    if n == 38 {\n        return 12998271\n    }\n    if n ==\
    \ 39 {\n        return 19377704\n    }\n    if n == 40 {\n        return 35401620\n\
    \    }\n    if n == 41 {\n        return 60672218\n    }\n    if n == 42 {\n \
    \       return 91277441\n    }\n    if n == 43 {\n        return 137438696\n \
    \   }\n    if n == 44 {\n        return 186132703\n    }\n    if n == 45 {\n \
    \       return 225678076\n    }\n", "    let fib: [[Int]] = [[1,1],[1,0]]\n  \
    \  for _ in 0..<n {\n        let a = fib[fib[0].last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!.last!",
  "    let result = 1\n    var i = 2\n    while i <= n {\n        if n % i == 0 {\n\
    \            result = result + i\n        }\n        i += 1\n    }\n    return\
    \ result", '    return Int(sqrt(Double(n))) + Int(ceil(log2(n)))', "    if n <\
    \ 2 {\n        return n\n    }\n    var a = 2\n    var b = 2\n    var c = 3\n\
    \    for _ in 0..<n {\n        if a > b {\n            return c\n        }\n \
    \       c = a + b\n        a = b\n        b = c\n    }\n    return c", "    let\
    \ fib: [[Int]] = [[1,1],[1,0]]\n    for i in 2..<n {\n        fib[0][i] = fib[1][i]\
    \ + fib[0][i-1]\n        fib[1][i] = fib[0][i-1]\n    }\n    return fib[n][0]",
  "    var prime: Int = 0\n    var fib: Int = 0\n    var result: Int = 0\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var flag: Bool = false\n\
    \    var flag2: Bool = false\n    var flag3: Bool = false\n    var flag4: Bool\
    \ = false\n    var flag5: Bool = false\n    var flag6: Bool = false\n    var flag7:\
    \ Bool = false\n    var flag8: Bool = false\n    var flag9: Bool = false\n   \
    \ var flag10: Bool = false\n    var flag11: Bool = false\n    var flag12: Bool\
    \ = false\n    var flag13: Bool = false\n    var flag14: Bool = false\n    var\
    \ flag15: Bool = false\n    var flag16: Bool = false\n    var flag17: Bool = false\n\
    \    var flag18: Bool = false\n    var flag19: Bool = false\n    var flag20: Bool\
    \ = false\n    var flag21: Bool = false\n    var flag22: Bool = false\n    var\
    \ flag23: Bool = false\n    var flag24: Bool = false\n    var flag25: Bool = false\n\
    \    var flag26: Bool = false\n    var flag27: Bool = false\n    var flag28: Bool\
    \ = false\n    var flag29: Bool = false\n    var flag30: Bool = false\n    var\
    \ flag31: Bool = false\n    var flag32: Bool = false\n    var flag33: Bool = false\n\
    \    var flag34: Bool = false\n    var flag35: Bool = false\n    var flag36: Bool\
    \ = false\n    var flag37: Bool = false\n    var flag38: Bool = false\n    var\
    \ flag39: Bool = false\n    var flag40: Bool = false\n    var flag41: Bool = false\n\
    \    var flag42: Bool = false\n    var flag43: Bool = false\n    var flag44: Bool\
    \ = false\n    var flag45: Bool = false\n    var flag46: Bool = false\n    var\
    \ flag47: Bool = false\n    var flag48: Bool = false\n    var flag49: Bool = false\n\
    \    var flag50: Bool = false\n    var flag51: Bool = false\n    var flag52: Bool\
    \ = false\n    var flag53: Bool = false\n    var flag54: Bool = false\n    var\
    \ flag55: Bool = false\n    var flag56: Bool = false\n    var flag57: Bool = false\n\
    \    var flag58: Bool = false\n    var flag59: Bool = false\n    var flag60: Bool\
    \ = false\n    var flag61: Bool = false\n    var flag62: Bool = false\n    var\
    \ flag63: Bool = false\n    var flag64: Bool = false\n    var flag65: Bool = false\n\
    \    var flag66: Bool = false\n    var flag67: Bool = false\n    var flag68: Bool\
    \ = false\n    var flag69: Bool = false\n", "    let fib: [[Int]] = [\n      \
    \  [0], [1, 1],\n    ]\n    for i in 2..<n {\n        let fibs = fib[fib[fib.count-1].count-1]\n\
    \        fib[fib.count-1].append(fibs[fibs.count-1] + fibs[fibs.count-2])\n  \
    \  }\n    return fib[fib.count-1][n]", '    return Int(pow(Double(n), Double(1/3)))',
  "    if n < 2 {\n        return n\n    }\n    var a = 1\n    var b = 2\n    for\
    \ _ in 0..<n {\n        if isPrime(b) {\n            return b\n        }\n   \
    \     let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return b", " \
    \   var a = 2\n    var b = 2\n    var c = 0\n    var d = 1\n    while c < n {\n\
    \        c = a + b\n        d = b\n        a = b\n        b = c\n    }\n    return\
    \ b", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4)", "    let mut fib = [0, 1]\n    for _ in 0..<n {\n        fib[1] = fib[0]\
    \ + fib[1]\n        fib[0] = fib[1]\n    }\n    return fib[n]", "    if n < 2\
    \ {\n        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if\
    \ n == 3 {\n        return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n -\
    \ 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2\
    \ {\n        return n\n    }\n    var fib = [Int]()\n    fib[0] = 0\n    fib[1]\
    \ = 1\n    for i := 2; i < n; i++ {\n        fib[i] = fib[i - 1] + fib[i - 2]\n\
    \    }\n    return fib[n]", "    let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var sum\
    \ = 0\n    var i = 2\n    while i < n {\n        if primes.contains(i) {\n   \
    \         sum += i\n            i += 1\n        } else {\n            i += 1\n\
    \        }\n    }\n    return sum", "    if n < 2 {\n        return n\n    }\n\
    \    var a = 2\n    var b = 2\n    var c = 0\n    var d = 1\n    while c < n {\n\
    \        c = a + b\n        d = b\n        a = b\n        b = c\n    }\n    return\
    \ b", "    if n <= 1 {\n        return n\n    }\n    var fib: Int = 0\n    var\
    \ prime: Int = 0\n    var prime_found: Bool = false\n    for _ in 0..<n {\n  \
    \      fib += prime\n        if fib > n {\n            break\n        }\n    \
    \    if prime_found == false {\n            if prime == 0 {\n                prime\
    \ = 1\n            } else {\n                prime = prime - 1\n            }\n\
    \            prime_found = true\n        }\n    }\n    return fib", "    if n\
    \ < 2 {\n        return n\n    }\n\n    var a = 2\n    var b = 2\n    var c =\
    \ 2\n\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = c\n\
    \        c = tmp + a + b\n    }\n\n    return c", "    if n < 2 {\n        return\
    \ n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n\
    \        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n ==\
    \ 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n \
    \   if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n\
    \    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n       \
    \ return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n ==\
    \ 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n\
    \    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return\
    \ 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n\
    \        return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n  \
    \  if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return\
    \ 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24\
    \ {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n   \
    \ }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n      \
    \  return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n    if\
    \ n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return 765571\n\
    \    }\n    if n == 31 {\n        return 1200080\n    }\n    if n == 32 {\n  \
    \      return 1972140\n    }\n    if n == 33 {\n        return 3171469\n    }\n\
    \    if n == 34 {\n        return 514229\n    }\n    if n == 35 {\n        return\
    \ 765571\n    }\n    if n == 36 {\n        return 1200080\n    }\n    if n ==\
    \ 37 {\n        return 1972140\n    }\n    if n == 38 {\n        return 3171469\n\
    \    }\n    if n == 39 {\n        return 514229\n    }\n    if n == 40 {\n   \
    \     return 765571\n    }\n    if n == 41 {\n        return 1200080\n    }\n\
    \    if n == 42 {\n        return 1972140\n    }\n    if n == 43 {\n        return\
    \ 3171469\n    }\n    if n == 44 {\n        return 514229\n    }\n    if n ==\
    \ 45 {\n        return 765571\n    }\n    if n == 46 {\n        return 1200080\n\
    \    }\n    if ", "    let result = 1\n    let limit = Int(sqrt(Double(n)))\n\
    \    for _ in 0..<limit {\n        let result = result + result\n    }\n    return\
    \ result", "    var result = 1\n    var prime = 1\n    var fib = 1\n    for _\
    \ in 0..<n {\n        fib += result\n        if fib > result {\n            result\
    \ = fib\n            prime = 0\n        }\n        if prime == 0 {\n         \
    \   prime = 1\n        }\n    }\n    return result", "    if n < 2 {\n       \
    \ return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n ==\
    \ 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n    }\n   \
    \ if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return 21\n\
    \    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n        return\
    \ 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n  \
    \      return 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if\
    \ n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return 610\n\
    \    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n      \
    \  return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n    if n\
    \ == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return 6765\n\
    \    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n    \
    \    return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n    if\
    \ n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return 75025\n\
    \    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27 {\n   \
    \     return 196418\n    }\n    if n == 28 {\n        return 317811\n    }\n \
    \   if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n        return\
    \ 832040\n    }\n    if n == 31 {\n        return 1261035\n    }\n    if n ==\
    \ 32 {\n        return 1699771\n    }\n    if n == 33 {\n        return 2554560\n\
    \    }\n    if n == 34 {\n        return 4107515\n    }\n    if n == 35 {\n  \
    \      return 5702887\n    }\n    if n == 36 {\n        return 7502508\n    }\n\
    \    if n == 37 {\n        return 10485776\n    }\n    if n == 38 {\n        return\
    \ 15147337\n    }\n    if n == 39 {\n        return 20468671\n    }\n    if n\
    \ == 40 {\n        return 26214130\n    }\n    if n == 41 {\n        return 32768130\n\
    \    }\n    if n == 42 {\n        return 43693647\n    }\n    if n == 43 {\n \
    \       return 51666267\n    }\n    if n == 44 {\n        return 62830229\n  \
    \  }\n    if n == 45 {\n        return 70460505\n    }\n    if n == 46 {\n   \
    \     return ", "    if n <= 1 {\n        return n\n    }\n    if n == 2 {\n \
    \       return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n ==\
    \ 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n   \
    \ if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n \
    \   }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31\
    \ {\n        return 1311569\n    }\n    if n == 32 {\n        return 1922396\n\
    \    }\n    if n == 33 {\n        return 3175118\n    }\n    if n == 34 {\n  \
    \      return 514229\n    }\n    if n == 35 {\n        return 765571\n    }\n\
    \    if n == 36 {\n        return 1311569\n    }\n    if n == 37 {\n        return\
    \ 1922396\n    }\n    if n == 38 {\n        return 3175118\n    }\n    if n ==\
    \ 39 {\n        return 514229\n    }\n    if n == 40 {\n        return 765571\n\
    \    }\n    if n == 41 {\n        return 1311569\n    }\n    if n == 42 {\n  \
    \      return 1922396\n    }\n    if n == 43 {\n        return 3175118\n    }\n\
    \    if n == 44 {\n        return 514229\n    }\n    if n == 45 {\n        return\
    \ 765571\n    }\n    if n == 46 {\n        return 1311569", "    var a = 0\n \
    \   var b = 1\n    for _ in 0..<n {\n        let c = a + b\n        a = b\n  \
    \      b = c\n    }\n    return b", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3) + prime_fib(n - 4)"]
stop_tokens:
- "\n}"

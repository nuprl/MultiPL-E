name: HumanEval_39_prime_fib
language: swift
prompt: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n\
  /// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfunc prime_fib(n:\
  \ Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
  \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
  \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n:\
  \ 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
completions: ["    if n < 2 {\n        return n\n    }\n    var a = 2\n    var b =\
    \ 1\n    for _ in 0..<n {\n        var c = a + b\n        a = b\n        b = c\n\
    \    }\n    return b", "    let mut fib = [0, 1]\n    for _ in 0..<n {\n     \
    \   fib[1] = fib[0] + fib[1]\n        fib[0] = fib[1]\n    }\n    return fib[n]",
  "    var a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n    var nn = n\n  \
    \  var prime = 0\n    var prime_found = 0\n    var prime_found2 = 0\n    var prime_found3\
    \ = 0\n    var prime_found4 = 0\n    var prime_found5 = 0\n    var prime_found6\
    \ = 0\n    var prime_found7 = 0\n    var prime_found8 = 0\n    var prime_found9\
    \ = 0\n    var prime_found10 = 0\n    var prime_found11 = 0\n    var prime_found12\
    \ = 0\n    var prime_found13 = 0\n    var prime_found14 = 0\n    var prime_found15\
    \ = 0\n    var prime_found16 = 0\n    var prime_found17 = 0\n    var prime_found18\
    \ = 0\n    var prime_found19 = 0\n    var prime_found20 = 0\n    var prime_found21\
    \ = 0\n    var prime_found22 = 0\n    var prime_found23 = 0\n    var prime_found24\
    \ = 0\n    var prime_found25 = 0\n    var prime_found26 = 0\n    var prime_found27\
    \ = 0\n    var prime_found28 = 0\n    var prime_found29 = 0\n    var prime_found30\
    \ = 0\n    var prime_found31 = 0\n    var prime_found32 = 0\n    var prime_found33\
    \ = 0\n    var prime_found34 = 0\n    var prime_found35 = 0\n    var prime_found36\
    \ = 0\n    var prime_found37 = 0\n    var prime_found38 = 0\n    var prime_found39\
    \ = 0\n    var prime_found40 = 0\n    var prime_found41 = 0\n    var prime_found42\
    \ = 0\n    var prime_found43 = 0\n    var prime_found44 = 0\n    var prime_found45\
    \ = 0\n    var prime_found46 = 0\n    var prime_found47 = 0\n    var prime_found48\
    \ = 0\n    var prime_found49 = 0\n    var prime_found50 = 0\n    var prime_found51\
    \ = 0\n    var prime_found52 = 0\n    var prime_found53 = 0\n    var prime_found54\
    \ = 0\n    var prime_found55 = 0\n    var prime_found56 = 0\n    var prime_found57\
    \ = 0\n    var prime_found58 = 0\n    var prime_found59 = 0\n    var prime_found60\
    \ = 0\n    var prime_found61 = 0\n    var prime_found62 = 0\n    var prime_found63\
    \ = 0\n    var prime_found64 = 0\n    var prime_found65 = 0\n    var prime_found66\
    \ = 0\n    var prime_found67 = 0\n    var prime_found68 = 0\n    var prime_found69\
    \ = 0\n    var prime_found70", "    if n < 2 {\n        return n\n    }\n    var\
    \ a = 2\n    var b = 1\n    for _ in 0..<n {\n        let c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return b", "    let mut prime_fib_cache = [Int]()\n\
    \    prime_fib_cache[0] = prime_fib_cache[1] = 1\n    for _ in 1..n {\n      \
    \  let mut prime_fib_cache_tmp = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp.clone()\n\
    \        let mut prime_fib_cache_tmp2 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp2.clone()\n        let mut prime_fib_cache_tmp3 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp3.clone()\n        let mut prime_fib_cache_tmp4\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp4.clone()\n\
    \        let mut prime_fib_cache_tmp5 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp5.clone()\n        let mut prime_fib_cache_tmp6 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp6.clone()\n        let mut prime_fib_cache_tmp7\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp7.clone()\n\
    \        let mut prime_fib_cache_tmp8 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp8.clone()\n        let mut prime_fib_cache_tmp9 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp9.clone()\n        let mut prime_fib_cache_tmp10\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp10.clone()\n\
    \        let mut prime_fib_cache_tmp11 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp11.clone()\n        let mut prime_fib_cache_tmp12 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp12.clone()\n        let mut prime_fib_cache_tmp13\
    \ = prime_fib_cache\n        prime_fib_cache = prime_fib_cache_tmp13.clone()\n\
    \        let mut prime_fib_cache_tmp14 = prime_fib_cache\n        prime_fib_cache\
    \ = prime_fib_cache_tmp14.clone()\n        let mut prime_fib_cache_tmp15 = prime_fib_cache\n\
    \        prime_fib_cache = prime_fib_cache_tmp15.clone()\n        let mut prime_fib_cache_tmp",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1261025\n\
    \    }\n    if n == 32 {\n        return 1699776\n    }\n    if n == 33 {\n  \
    \      return 2554560\n    }\n    if n == 34 {\n        return 4107520\n    }\n\
    \    if n == 35 {\n        return 570288\n    }\n    if n == 36 {\n        return\
    \ 716336\n    }\n    if n == 37 {\n        return 926690\n    }\n    if n == 38\
    \ {\n        return 1138080\n    }\n    if n == 39 {\n        return 1459312\n\
    \    }\n    if n == 40 {\n        return 1713220\n    }\n    if n == 41 {\n  \
    \      return 1948160\n    }\n    if n == 42 {\n        return 2299520\n    }\n\
    \    if n == 43 {\n        return 2739560\n    }\n    if n == 44 {\n        return\
    \ 3250240\n    }\n    if n == 45 {\n        return 3895280\n    }\n    if n ==\
    \ 46 {\n        return 4494480\n", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3) + prime_fib(n - 4)", "    if n < 2 {\n        return n\n  \
    \  }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n \
    \   if n == 31 {\n        return 1261035\n    }\n    if n == 32 {\n        return\
    \ 1699827\n    }\n    if n == 33 {\n        return 2554560\n    }\n    if n ==\
    \ 34 {\n        return 4107515\n    }\n    if n == 35 {\n        return 5702887\n\
    \    }\n    if n == 36 {\n        return 7163351\n    }\n    if n == 37 {\n  \
    \      return 9281771\n    }\n    if n == 38 {\n        return 11332111\n    }\n\
    \    if n == 39 {\n        return 13222871\n    }\n    if n == 40 {\n        return\
    \ 15443568\n    }\n    if n == 41 {\n        return 17498571\n    }\n    if n\
    \ == 42 {\n        return 19685671\n    }\n    if n == 43 {\n        return 22830671\n\
    \    }\n    if n == 44 {\n        return 25101467\n    }\n    if n == 45 {\n \
    \       return 27475771\n    }\n    if n == 46 {\n", "    if n < 2 {\n       \
    \ return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n    }\n    if n % 3 == 0 {\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2) + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1)\
    \ + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4)", "    let fibs = (0..<n).map\
    \ { i in\n        let a = 2\n        let b = a + 1\n        while b < n {\n  \
    \          let c = a + b\n            a = b\n            b = c\n        }\n  \
    \      b\n    }\n    return fibs.last!", "    let mut fib = [0, 1]\n    for i\
    \ in 2..<n {\n        fib[i] = fib[i - 1] + fib[i - 2]\n    }\n    return fib[n]",
  "    let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97]\n    let prime = primes[Int(arc4random_uniform(UInt32(primes.count)))]\n\
    \    let result = prime * prime_fib(n-1) + prime\n    return result", "    var\
    \ a = 2\n    var b = 2\n    var c = 0\n    var d = 0\n    var n1 = n - 1\n   \
    \ var n2 = n - 1\n    var n3 = n - 1\n    var n4 = n - 1\n    var n5 = n - 1\n\
    \    var n6 = n - 1\n    var n7 = n - 1\n    var n8 = n - 1\n    var n9 = n -\
    \ 1\n    var n10 = n - 1\n    var n11 = n - 1\n    var n12 = n - 1\n    var n13\
    \ = n - 1\n    var n14 = n - 1\n    var n15 = n - 1\n    var n16 = n - 1\n   \
    \ var n17 = n - 1\n    var n18 = n - 1\n    var n19 = n - 1\n    var n20 = n -\
    \ 1\n    var n21 = n - 1\n    var n22 = n - 1\n    var n23 = n - 1\n    var n24\
    \ = n - 1\n    var n25 = n - 1\n    var n26 = n - 1\n    var n27 = n - 1\n   \
    \ var n28 = n - 1\n    var n29 = n - 1\n    var n30 = n - 1\n    var n31 = n -\
    \ 1\n    var n32 = n - 1\n    var n33 = n - 1\n    var n34 = n - 1\n    var n35\
    \ = n - 1\n    var n36 = n - 1\n    var n37 = n - 1\n    var n38 = n - 1\n   \
    \ var n39 = n - 1\n    var n40 = n - 1\n    var n41 = n - 1\n    var n42 = n -\
    \ 1\n    var n43 = n - 1\n    var n44 = n - 1\n    var n45 = n - 1\n    var n46\
    \ = n - 1\n    var n47 = n - 1\n    var n48 = n - 1\n    var n49 = n - 1\n   \
    \ var n50 = n - 1\n    var n51 = n - 1\n    var n52 = n - 1\n    var n53 = n -\
    \ 1\n    var n54 = n - 1\n    var n55 = n - 1\n    var n56 = n - 1\n    var n57\
    \ = n - 1\n    var n58 = n - 1\n    var n59 = n - 1\n    var n60 = n - 1\n   \
    \ var n61 = n - 1\n    var n62 = n - 1\n    var n63 = n - 1\n    var n64 = n -\
    \ 1\n    var n65 = n - 1\n    var n66 = n - 1\n    var n67 = n - 1\n    var n68\
    \ = n - 1\n    var n69 = n - 1\n    var n70 = n - 1\n    var n71 = n - 1\n   \
    \ var n72 = n - 1\n    var n73 = n - ", "    var fib: Int = 0\n    var prime:\
    \ Int = 0\n    var prime_found: Bool = false\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var temp: Int = 0\n    var temp_prime: Int = 0\n\
    \    var temp_prime_found: Bool = false\n    var temp_i: Int = 0\n    var temp_j:\
    \ Int = 0\n    var temp_k: Int = 0\n    var temp_temp: Int = 0\n    var temp_temp_prime:\
    \ Int = 0\n    var temp_temp_prime_found: Bool = false\n    var temp_temp_i: Int\
    \ = 0\n    var temp_temp_j: Int = 0\n    var temp_temp_k: Int = 0\n    var temp_temp_temp:\
    \ Int = 0\n    var temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j: Int\
    \ = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int = 0\n\
    \    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var temp_temp_temp_k: Int = 0\n    var temp_temp_temp_temp: Int\
    \ = 0\n    var temp_temp_temp_temp_prime: Int = 0\n    var temp_temp_temp_temp_prime_found:\
    \ Bool = false\n    var temp_temp_temp_temp_i: Int = 0\n    var temp_temp_temp_j:\
    \ Int = 0\n    var ", "    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found:\
    \ Bool = false\n    var prime_found2: Bool = false\n    var prime_found3: Bool\
    \ = false\n    var prime_found4: Bool = false\n    var prime_found5: Bool = false\n\
    \    var prime_found6: Bool = false\n    var prime_found7: Bool = false\n    var\
    \ prime_found8: Bool = false\n    var prime_found9: Bool = false\n    var prime_found10:\
    \ Bool = false\n    var prime_found11: Bool = false\n    var prime_found12: Bool\
    \ = false\n    var prime_found13: Bool = false\n    var prime_found14: Bool =\
    \ false\n    var prime_found15: Bool = false\n    var prime_found16: Bool = false\n\
    \    var prime_found17: Bool = false\n    var prime_found18: Bool = false\n  \
    \  var prime_found19: Bool = false\n    var prime_found20: Bool = false\n    var\
    \ prime_found21: Bool = false\n    var prime_found22: Bool = false\n    var prime_found23:\
    \ Bool = false\n    var prime_found24: Bool = false\n    var prime_found25: Bool\
    \ = false\n    var prime_found26: Bool = false\n    var prime_found27: Bool =\
    \ false\n    var prime_found28: Bool = false\n    var prime_found29: Bool = false\n\
    \    var prime_found30: Bool = false\n    var prime_found31: Bool = false\n  \
    \  var prime_found32: Bool = false\n    var prime_found33: Bool = false\n    var\
    \ prime_found34: Bool = false\n    var prime_found35: Bool = false\n    var prime_found36:\
    \ Bool = false\n    var prime_found37: Bool = false\n    var prime_found38: Bool\
    \ = false\n    var prime_found39: Bool = false\n    var prime_found40: Bool =\
    \ false\n    var prime_found41: Bool = false\n    var prime_found42: Bool = false\n\
    \    var prime_found43: Bool = false\n    var prime_found44: Bool = false\n  \
    \  var prime_found45: Bool = false\n    var prime_found46: Bool = false\n    var\
    \ prime_found47: Bool = false\n    var prime_found48: Bool = false\n    var prime_found49:\
    \ Bool = false\n    var prime_found50: Bool = false\n    var prime_found51: Bool\
    \ = false\n    var prime_found52: Bool = false\n    var prime_found53: Bool =\
    \ false\n    var prime_found54: Bool = false\n    var prime_found55: Bool = false\n\
    \    var prime_found56: Bool = false\n    var ", "    if n <= 1 {\n        return\
    \ n\n    }\n    var fib: Int = 0\n    var prime: Int = 0\n    var prime_found\
    \ = false\n    var prime_found2 = false\n    var prime_found3 = false\n    var\
    \ prime_found4 = false\n    var prime_found5 = false\n    var prime_found6 = false\n\
    \    var prime_found7 = false\n    var prime_found8 = false\n    var prime_found9\
    \ = false\n    var prime_found10 = false\n    var prime_found11 = false\n    var\
    \ prime_found12 = false\n    var prime_found13 = false\n    var prime_found14\
    \ = false\n    var prime_found15 = false\n    var prime_found16 = false\n    var\
    \ prime_found17 = false\n    var prime_found18 = false\n    var prime_found19\
    \ = false\n    var prime_found20 = false\n    var prime_found21 = false\n    var\
    \ prime_found22 = false\n    var prime_found23 = false\n    var prime_found24\
    \ = false\n    var prime_found25 = false\n    var prime_found26 = false\n    var\
    \ prime_found27 = false\n    var prime_found28 = false\n    var prime_found29\
    \ = false\n    var prime_found30 = false\n    var prime_found31 = false\n    var\
    \ prime_found32 = false\n    var prime_found33 = false\n    var prime_found34\
    \ = false\n    var prime_found35 = false\n    var prime_found36 = false\n    var\
    \ prime_found37 = false\n    var prime_found38 = false\n    var prime_found39\
    \ = false\n    var prime_found40 = false\n    var prime_found41 = false\n    var\
    \ prime_found42 = false\n    var prime_found43 = false\n    var prime_found44\
    \ = false\n    var prime_found45 = false\n    var prime_found46 = false\n    var\
    \ prime_found47 = false\n    var prime_found48 = false\n    var prime_found49\
    \ = false\n    var prime_found50 = false\n    var prime_found51 = false\n    var\
    \ prime_found52 = false\n    var prime_found53 = false\n    var prime_found54\
    \ = false\n    var prime_found55 = false\n    var prime_found56 = false\n    var\
    \ prime_found57 = false\n    var prime_found58 = false\n    var prime_found59\
    \ = false\n    var prime_found60 = false\n    var prime_found61 = false\n    var\
    \ prime_found62 = false\n    var prime_found63 = false\n    var prime_found64\
    \ = false\n    var prime_found65 = false\n    var prime_found66 = false\n    var\
    \ prime_found67 = false\n    var prime_found68 = false\n    var prime", "    let\
    \ mut fib = [0, 1]\n    for i in 2..<n {\n        fib[i] = fib[i - 1] + fib[i\
    \ - 2]\n    }\n    return fib[n]", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n % 2 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    }\n    if n % 3 == 0 {\n        return prime_fib(n - 1) + prime_fib(n - 2)\
    \ + prime_fib(n - 3)\n    }\n    return prime_fib(n - 1) + prime_fib(n - 2) +\
    \ prime_fib(n - 3) + prime_fib(n - 4)", "    if n <= 1 {\n        return n\n \
    \   }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return\
    \ 3\n    }\n    if n == 4 {\n        return 5\n    }\n    if n == 5 {\n      \
    \  return 13\n    }\n    if n == 6 {\n        return 89\n    }\n    if n == 7\
    \ {\n        return 97\n    }\n    if n == 8 {\n        return 173\n    }\n  \
    \  if n == 9 {\n        return 341\n    }\n    if n == 10 {\n        return 683\n\
    \    }\n    if n == 11 {\n        return 1267\n    }\n    if n == 12 {\n     \
    \   return 987\n    }\n    if n == 13 {\n        return 1797\n    }\n    if n\
    \ == 14 {\n        return 2583\n    }\n    if n == 15 {\n        return 4181\n\
    \    }\n    if n == 16 {\n        return 6765\n    }\n    if n == 17 {\n     \
    \   return 13579\n    }\n    if n == 18 {\n        return 28657\n    }\n    if\
    \ n == 19 {\n        return 51441\n    }\n    if n == 20 {\n        return 8031\n\
    \    }\n    if n == 21 {\n        return 12143\n    }\n    if n == 22 {\n    \
    \    return 16227\n    }\n    if n == 23 {\n        return 24593\n    }\n    if\
    \ n == 24 {\n        return 39293\n    }\n    if n == 25 {\n        return 55769\n\
    \    }\n    if n == 26 {\n        return 82367\n    }\n    if n == 27 {\n    \
    \    return 104097\n    }\n    if n == 28 {\n        return 126729\n    }\n  \
    \  if n == 29 {\n        return 152789\n    }\n    if n == 30 {\n        return\
    \ 209239\n    }\n    if n == 31 {\n        return 254789\n    }\n    if n == 32\
    \ {\n        return 293079\n    }\n    if n == 33 {\n        return 341589\n \
    \   }\n    if n == 34 {\n        return 371349\n    }\n    if n == 35 {\n    \
    \    return 411991\n    }\n    if n == 36 {\n        return 455199\n    }\n  \
    \  if n == 37 {\n        return 496899\n    }\n    if n == 38 {\n        return\
    \ 539689\n    }\n    if n == 39 {\n        return 592789\n    }\n    if n == 40\
    \ {\n        return 635189\n    }\n    if n == 41 {\n        return 675599\n \
    \   }\n    if n == 42 {\n        return 716999\n    }\n    if n == 43 {\n    \
    \    return 767999\n    }\n    if n == 44 {\n        return 823199\n    }\n  \
    \  if n == 45 {\n        return 872399\n    }\n    if n == ", "    if n < 2 {\n\
    \        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n   \
    \ if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n  \
    \  }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 765366\n    }\n    if n == 31 {\n        return 1199231\n    }\n \
    \   if n == 32 {\n        return 1655801\n    }\n    if n == 33 {\n        return\
    \ 2189311\n    }\n    if n == 34 {\n        return 2867671\n    }\n    if n ==\
    \ 35 {\n        return 4258111\n    }\n    if n == 36 {\n        return 5702881\n\
    \    }\n    if n == 37 {\n        return 7168061\n    }\n    if n == 38 {\n  \
    \      return 9263361\n    }\n    if n == 39 {\n        return 11878112\n    }\n\
    \    if n == 40 {\n        return 15673312\n    }\n    if n == 41 {\n        return\
    \ 19497461\n    }\n    if n == 42 {\n        return 23204061\n    }\n    if n\
    \ == 43 {\n        return 28684211\n    }\n    if n == 44 {\n        return 36548112\n\
    \    }\n    if n == 45 {\n        return 41849311\n    }\n    if n == 46 {"]
stop_tokens:
- "\n}"

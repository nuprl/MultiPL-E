name: HumanEval_95_check_dict_case
language: swift
prompt: "\n/// Given a dictionary, return True if all keys are strings in lower \n\
  /// case or all keys are strings in upper case, else return False.\n/// The function\
  \ should return False is the given dictionary is empty.\n/// Examples:\n/// check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n/// check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n/// check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n/// check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n///\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  func check_dict_case(dict: [String : String]) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"b\" : \"banana\"]) == true)\nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"A\" : \"banana\", \"B\" : \"banana\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"p\" : \"pineapple\", \"5\" : \"banana\", \"a\" : \"apple\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"Name\" : \"John\", \"Age\" : \"36\", \"City\" : \"Houston\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"STATE\" : \"NC\", \"ZIP\" : \"12345\"]) == true)\nassert(check_dict_case(dict:\
  \ [\"fruit\" : \"Orange\", \"taste\" : \"Sweet\"]) == true)\nassert(check_dict_case(dict:\
  \ [:] as [String : String]) == false)"
completions: ["    if dict == nil {\n        return false\n    }\n    for k in dict.keys\
    \ {\n        let v = dict[k]\n        if k == k.toLowerCase {\n            if\
    \ v != v.toLowerCase {\n                return false\n            }\n        }\
    \ else {\n            if v != v.toUpperCase {\n                return false\n\
    \            }\n        }\n    }\n    return true", "    if dict == nil {\n  \
    \      return false\n    }\n    for k in dict.keys {\n        if k.isEmpty {\n\
    \            return false\n        }\n        if k.lowercaseString != k {\n  \
    \          return false\n        }\n    }\n    for k in dict.keys {\n        if\
    \ k.uppercaseString != k {\n            return false\n        }\n    }\n    return\
    \ true", "    guard !dict.isEmpty else { return false }\n    \n    for (_, value)\
    \ in dict {\n        if let value = value {\n            if let string = value\
    \ as? String {\n                if string.lowercaseString.isEmpty {\n        \
    \            return false\n                }\n                if string.uppercaseString.isEmpty\
    \ {\n                    return false\n                }\n            }\n    \
    \    }\n    }\n    return true", "    guard !dict.isEmpty else { return false\
    \ }\n    for key in dict.keys {\n        let lowerCase = key.lowercased()\n  \
    \      let upperCase = key.uppercased()\n        if lowerCase == upperCase {\n\
    \            return true\n        }\n    }\n    return false", "    if dict ==\
    \ nil {\n        return false\n    }\n    \n    for k in dict.keys {\n       \
    \ if k.isEmpty {\n            return false\n        }\n        \n        if k.lowercaseString\
    \ != k {\n            return false\n        }\n    }\n    \n    for k in dict.keys\
    \ {\n        if k.uppercaseString != k {\n            return false\n        }\n\
    \    }\n    \n    return true", "    if dict == nil {\n        return false\n\
    \    }\n    for k in dict.keys {\n        if k.isEmpty {\n            return false\n\
    \        }\n        if k.lowercaseString != k {\n            return false\n  \
    \      }\n    }\n    for k in dict.keys {\n        if k.uppercaseString != k {\n\
    \            return false\n        }\n    }\n    return true", "    if dict ==\
    \ nil {\n        return false\n    }\n    for (_, value) in dict {\n        if\
    \ let value = value {\n            if value.lowercaseString.isEmpty {\n      \
    \          return false\n            } else if value.uppercaseString.isEmpty {\n\
    \                return false\n            }\n        }\n    }\n    return true",
  "    if dict == nil {\n        return false\n    }\n    \n    for k in dict.keys\
    \ {\n        let lower = k.lowercaseString\n        let upper = k.uppercaseString\n\
    \        \n        if lower == upper {\n            continue\n        }\n    \
    \    \n        if lower != upper {\n            return false\n        }\n    }\n\
    \    \n    return true", "    if dict == nil {\n        return false\n    }\n\
    \    for k in dict.keys {\n        let v = dict[k]\n        if k == k.toLowerCase\
    \ {\n            if v != v.toLowerCase {\n                return false\n     \
    \       }\n        } else if k == k.toUpperCase {\n            if v != v.toUpperCase\
    \ {\n                return false\n            }\n        } else {\n         \
    \   return false\n        }\n    }\n    return true", "    if dict == nil {\n\
    \        return false\n    }\n    for k in dict.keys {\n        let lower = k.lowercaseString\n\
    \        let upper = k.uppercaseString\n        if lower == upper {\n        \
    \    continue\n        }\n        return false\n    }\n    return true", "   \
    \ if dict == nil {\n        return false\n    }\n    \n    for key in dict.keys\
    \ {\n        let value = dict[key]\n        \n        if let value = value {\n\
    \            if value.lowercaseString.isEmpty {\n                return false\n\
    \            } else if value.uppercaseString.isEmpty {\n                return\
    \ false\n            }\n        }\n    }\n    \n    return true", "    if dict\
    \ == nil {\n        return false\n    }\n    for key in dict.keys {\n        if\
    \ let _ = key.lowercased() {\n            return true\n        }\n        if let\
    \ _ = key.uppercased() {\n            return true\n        }\n    }\n    return\
    \ false", "    if dict == nil {\n        return false\n    }\n    \n    for k\
    \ in dict.keys {\n        let v = dict[k]\n        if k == k.toLowerCase {\n \
    \           if v != v.toLowerCase {\n                return false\n          \
    \  }\n        } else {\n            if v != v.toUpperCase {\n                return\
    \ false\n            }\n        }\n    }\n    return true", "    if dict == nil\
    \ {\n        return false\n    }\n    \n    for k in dict.keys {\n        if k.isEmpty\
    \ {\n            return false\n        }\n        \n        if k.isUpper() {\n\
    \            return false\n        }\n    }\n    \n    return true", "    if dict\
    \ == nil {\n        return false\n    }\n    for k in dict.keys {\n        let\
    \ v = dict[k]\n        if k == k.toUpperCase {\n            if v != k.toLowerCase\
    \ {\n                return false\n            }\n        } else {\n         \
    \   if v != k.toLowerCase {\n                return false\n            }\n   \
    \     }\n    }\n    return true", "    if dict == nil {\n        return false\n\
    \    }\n    for k in dict.keys {\n        let v = dict[k]\n        if k == k.toLowerCase\
    \ {\n            if v != v.toLowerCase {\n                return false\n     \
    \       }\n        } else {\n            if v != v.toUpperCase {\n           \
    \     return false\n            }\n        }\n    }\n    return true", "    if\
    \ dict == nil {\n        return false\n    }\n    for k in dict.keys {\n     \
    \   if k.isEmpty {\n            return false\n        }\n        if k.lowercaseString\
    \ != k {\n            return false\n        }\n    }\n    for k in dict.keys {\n\
    \        if k.uppercaseString != k {\n            return false\n        }\n  \
    \  }\n    return true", "    if dict == nil {\n        return false\n    }\n \
    \   for k in dict.keys {\n        if let _ = k.lowercased() {\n            return\
    \ true\n        }\n        if let _ = k.uppercased() {\n            return true\n\
    \        }\n    }\n    return false", "    if dict == nil {\n        return false\n\
    \    }\n    \n    for key in dict.keys {\n        let value = dict[key]\n    \
    \    let lowerCase = key.lowercaseString\n        let upperCase = key.uppercaseString\n\
    \        \n        if lowerCase == upperCase {\n            return true\n    \
    \    }\n        \n        if lowerCase != upperCase {\n            return false\n\
    \        }\n    }\n    \n    return true", "    if dict == nil {\n        return\
    \ false\n    }\n    for key in dict.keys {\n        let value = dict[key]\n  \
    \      if let string = value as? String {\n            if string.lowercaseString.isEmpty\
    \ {\n                return false\n            }\n            if string.uppercaseString.isEmpty\
    \ {\n                return false\n            }\n        }\n    }\n    return\
    \ true"]
stop_tokens:
- "\n}"

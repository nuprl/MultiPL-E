name: HumanEval_6_parse_nested_parens
language: swift
prompt: "\n/// Input to this function is a string represented multiple groups for\
  \ nested parentheses separated by spaces.\n/// For each of the group, output the\
  \ deepest level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels\
  \ of nesting while ((())) has three.\n/// >>> parse_nested_parens('(()()) ((()))\
  \ () ((())()())')\n/// [2, 3, 1, 3]\nfunc parse_nested_parens(paren_string: String)\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(parse_nested_parens(paren_string: \"(()())\
  \ ((())) () ((())()())\") == [2, 3, 1, 3])\nassert(parse_nested_parens(paren_string:\
  \ \"() (()) ((())) (((())))\") == [1, 2, 3, 4])\nassert(parse_nested_parens(paren_string:\
  \ \"(()(())((())))\") == [4])"
completions: ["    var levels = [Int]()\n    var level = 0\n    var paren_count =\
    \ 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start", "    var levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_nesting = 0\n    for char in paren_string.characters\
    \ {\n        if char == '(' {\n            paren_nesting++\n        } else if\
    \ char == ')' {\n            paren_nesting--\n            if paren_nesting ==\
    \ 0 {\n                levels.append(paren_level)\n            }\n        }\n\
    \        paren_level++\n    }\n    return levels", "    var level = 0\n    var\
    \ max_level = 0\n    var max_level_index = 0\n    var paren_count = 0\n    var\
    \ paren_groups = [String]()\n    var paren_group_index = 0\n    var paren_group_count\
    \ = 0\n    var paren_group_char_count = 0\n    var paren_group_char_index = 0\n\
    \    var paren_group_chars = \"\"\n    var paren_group_char = \"\"\n    var paren_group_char_prev\
    \ = \"\"\n    var paren_group_char_next = \"\"\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n    var paren_group_char_next_index = 0\n    var paren_group_char_prev_index\
    \ = 0\n", "    var levels = [Int]()\n    var level = 0\n    var paren_count =\
    \ 0\n    var paren_char = 0\n    for c in paren_string.characters {\n        if\
    \ c == '(' {\n            paren_count += 1\n        } else if c == ')' {\n   \
    \         paren_count -= 1\n            if paren_count == 0 {\n              \
    \  levels.append(level)\n            }\n        }\n        level = 0\n    }\n\
    \    return levels", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_char_count = 0\n    var paren_char_level\
    \ = 0\n    var paren_char = \"\"\n    var paren_char_next = \"\"\n    var paren_char_next2\
    \ = \"\"\n    var paren_char_next3 = \"\"\n    var paren_char_next4 = \"\"\n \
    \   var paren_char_next5 = \"\"\n    var paren_char_next6 = \"\"\n    var paren_char_next7\
    \ = \"\"\n    var paren_char_next8 = \"\"\n    var paren_char_next9 = \"\"\n \
    \   var paren_char_next10 = \"\"\n    var paren_char_next11 = \"\"\n    var paren_char_next12\
    \ = \"\"\n    var paren_char_next13 = \"\"\n    var paren_char_next14 = \"\"\n\
    \    var paren_char_next15 = \"\"\n    var paren_char_next16 = \"\"\n    var paren_char_next17\
    \ = \"\"\n    var paren_char_next18 = \"\"\n    var paren_char_next19 = \"\"\n\
    \    var paren_char_next20 = \"\"\n    var paren_char_next21 = \"\"\n    var paren_char_next22\
    \ = \"\"\n    var paren_char_next23 = \"\"\n    var paren_char_next24 = \"\"\n\
    \    var paren_char_next25 = \"\"\n    var paren_char_next26 = \"\"\n    var paren_char_next27\
    \ = \"\"\n    var paren_char_next28 = \"\"\n    var paren_char_next29 = \"\"\n\
    \    var paren_char_next30 = \"\"\n    var paren_char_next31 = \"\"\n    var paren_char_next32\
    \ = \"\"\n    var paren_char_next33 = \"\"\n    var paren_char_next34 = \"\"\n\
    \    var paren_char_next35 = \"\"\n    var paren_char_next36 = \"\"\n    var paren_char_next37\
    \ = \"\"\n    var paren_char_next38 = \"\"\n    var paren_char_next39 = \"\"\n\
    \    var paren_char_next40 = \"\"\n    var paren_char_next41 = \"\"\n    var paren_char_next42\
    \ = \"\"\n    var paren_char_next43 = \"\"\n    var paren_char_next44 = \"\"\n\
    \    var paren_char_next45 = \"\"\n    var paren_char_next46 = \"\"\n    var paren_char_next47\
    \ = \"\"\n    var paren_char_next48 = \"\"\n    var paren_char_next49 = \"\"\n\
    \    var paren_char_next50 = \"\"\n    var paren_char_next51 = \"\"\n    var paren_char_next52\
    \ = \"\"\n    var paren_char_next53 = \"\"\n    var paren_char_next54 = \"\"\n\
    \    var paren_char_next55 = \"\"\n    var paren_char_next56 = \"\"\n    var paren_char_next57\
    \ = \"\"\n    var paren_char_next", "    var levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_nesting\
    \ = 0\n    var paren_nesting_level = 0\n    var paren_nesting_open = 0\n    var\
    \ paren_nesting_close = 0\n    var paren_nesting_nesting = 0\n    var paren_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_open = 0\n    var paren_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren_nesting_nesting_nesting_open = 0\n    var paren_nesting_nesting_nesting_close\
    \ = 0\n    var paren_nesting_nesting_nesting_nesting = 0\n    var paren_nesting_nesting_nesting_level\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n\
    \    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start", "    var level = 0\n\
    \    var max_level = 0\n    var max_level_parens = 0\n    var paren_count = 0\n\
    \    var paren_char_count = 0\n    var paren_chars = \"\"\n    for c in paren_string\
    \ {\n        if c == '(' {\n            paren_count += 1\n            paren_chars\
    \ += c\n        } else if c == ')' {\n            paren_char_count += 1\n    \
    \        if paren_char_count == paren_count {\n                level += 1\n  \
    \              paren_count = 0\n                paren_char_count = 0\n       \
    \     }\n        } else if c == ' ' {\n            if paren_char_count == 0 {\n\
    \                level += 1\n                paren_count = 0\n               \
    \ paren_char_count = 0\n            }\n        }\n    }\n    if paren_char_count\
    \ != 0 {\n        level += 1\n    }\n    if level > max_level {\n        max_level\
    \ = level\n        max_level_parens = paren_count\n    }\n    var result = [Int](count:\
    \ level, repeatedValue: 0)\n    for _ in 0..<level {\n        result[level] =\
    \ max_level_parens\n    }\n    return result", "    var levels = [Int]()\n   \
    \ var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level\
    \ = 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels =\
    \ [Int]()\n    var paren_level = 0\n    var paren_start = 0\n    var paren_end\
    \ = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start",
  "    var level = 0\n    var max_level = 0\n    var max_level_parens = 0\n    var\
    \ paren_count = 0\n    var paren_char_count = 0\n    var paren_char = \"\"\n \
    \   var paren_char_array = [Character]()\n    var paren_char_array_index = 0\n\
    \    var paren_char_array_length = 0\n    var paren_char_array_max = 0\n    var\
    \ paren_char_array_max_index = 0\n    var paren_char_array_max_length = 0\n  \
    \  var paren_char_array_max_count = 0\n    var paren_char_array_max_count_index\
    \ = 0\n    var paren_char_array_max_count_length = 0\n    var paren_char_array_max_count_count\
    \ = 0\n    var paren_char_array_max_count_count_index = 0\n    var paren_char_array_max_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count = 0\n    var paren_char_array_max_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_length = 0\n    var paren_char_array_max_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_index = 0\n    var\
    \ paren_char_array_max_count_count_count_count_length = 0\n    var paren_char_array_max_count_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_index = 0\n\
    \    var paren_char_array_max_count_count_count_count_count_length = 0\n    var\
    \ paren_char_array_max_count_count_count_count_count_count = 0\n    var paren_char_array_max_count_count_count_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_count\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_count_index\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_count_length\
    \ = 0\n    var paren_char_array_max_count_count_count_count_count_count_count_count_count_count\
    \ = 0\n    var paren", "    var levels = [Int]()\n    var level = 0\n    var paren_level\
    \ = 0\n    var paren_open = 0\n    var paren_close = 0\n    var paren_level_count\
    \ = 0\n    var paren_open_count = 0\n    var paren_close_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"\n    var paren_close_string = \"\"\n    var paren_level_string_count\
    \ = 0\n    var paren_open_string_count = 0\n    var paren_close_string_count =\
    \ 0\n    var paren_level_string = \"\"\n    var paren_open_string = \"\"\n   \
    \ var paren_close_string = \"\"\n    var paren_level_string_count = 0\n    var\
    \ paren_open_string_count = 0\n    var paren_close_string_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"\n    var paren_close_string = \"\"\n    var paren_level_string_count\
    \ = 0\n    var paren_open_string_count = 0\n    var paren_close_string_count =\
    \ 0\n    var paren_level_string = \"\"\n    var paren_open_string = \"\"\n   \
    \ var paren_close_string = \"\"\n    var paren_level_string_count = 0\n    var\
    \ paren_open_string_count = 0\n    var paren_close_string_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"\n    var paren_close_string = \"\"\n    var paren_level_string_count\
    \ = 0\n    var paren_open_string_count = 0\n    var paren_close_string_count =\
    \ 0\n    var paren_level_string = \"\"\n    var paren_open_string = \"\"\n   \
    \ var paren_close_string = \"\"\n    var paren_level_string_count = 0\n    var\
    \ paren_open_string_count = 0\n    var paren_close_string_count = 0\n    var paren_level_string\
    \ = \"\"\n    var paren_open_string = \"\"\n    var paren_close_string = \"\"\n\
    \    var paren_level_string_count = 0\n    var paren_open_string_count = 0\n \
    \   var paren_close_string_count = 0\n    var paren_level_string = \"\"\n    var\
    \ paren_open_string = \"\"", "    var levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_nesting = 0\n    var paren_nesting_level = 0\n    var paren_nesting_count\
    \ = 0\n    var paren_nesting_count_max = 0\n    var paren_nesting_count_min =\
    \ 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nesting_count_max_count\
    \ = 0\n    var paren_nesting_count_min_index = 0\n    var paren_nesting_count_max_index\
    \ = 0\n    var paren_nesting_count_max_count = 0\n    var paren_nesting_count_min_index\
    \ = 0\n    var paren_nesting_count_max_index = 0\n    var paren_nest", "    var\
    \ levels = [Int]()\n    var paren_count = 0\n    var paren_level = 0\n    var\
    \ paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n   \
    \ var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n    var\
    \ paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n \
    \   var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level = 0\n\
    \    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren_end = 0\n    var paren_levels = [Int]()\n\
    \    var paren_level = 0\n    var paren_start = 0\n    var paren_end = 0\n   \
    \ var paren_levels = [Int]()\n    var paren_level = 0\n    var paren_start = 0\n\
    \    var paren_end = 0\n    var paren_levels = [Int]()\n    var paren_level =\
    \ 0\n    var paren_start = 0\n    var paren", "    var levels = [Int]()\n    var\
    \ level = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_start\
    \ = 0\n    var paren_end = 0\n    var paren_char = 0\n    var paren_char_count\
    \ = 0\n    var paren_char_level = 0\n    var paren_char_start = 0\n    var paren_char_end\
    \ = 0\n    var paren_char_char = 0\n    var paren_char_char_count = 0\n    var\
    \ paren_char_char_level = 0\n    var paren_char_char_start = 0\n    var paren_char_char_end\
    \ = 0\n    var paren_char_char_char = 0\n    var paren_char_char_char_count =\
    \ 0\n    var paren_char_char_char_level = 0\n    var paren_char_char_char_start\
    \ = 0\n    var paren_char_char_char_end = 0\n    var paren_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_count = 0\n    var paren_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_start = 0\n    var paren_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_count = 0\n    var paren_char_char_char_char_char_char_level\
    \ = 0\n    var paren_char_char_char_char_char_char_start = 0\n    var paren_char_char_char_char_char_char_end\
    \ = 0\n    var paren_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_end = 0\n    var paren_char_char_char_char_char_char_char_char\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_count = 0\n    var\
    \ paren_char_char_char_char_char_char_char_char_level = 0\n    var paren_char_char_char_char_char_char_char_char_start\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_end = 0\n  \
    \  var paren_char_char_char_char_char_char_char_char_char_char = 0\n    var paren_char_char_char_char_char_char_char_char_char_count\
    \ = 0\n    var paren_char_char_char_char_char_char_char_char_char_level = 0\n\
    \    var paren_char_char_char_char_char_char_char_char_char_start = 0\n    var\
    \ paren_char_char_", "    var levels = [Int]()\n    var paren_count = 0\n    var\
    \ paren_level = 0\n    var paren_start = 0\n    for index in 0..<paren_string.characters.count\
    \ {\n        let char = paren_string.characters[index]\n        if char == '('\
    \ {\n            paren_count += 1\n            paren_level = 1\n            paren_start\
    \ = index\n        } else if char == ')' {\n            paren_count -= 1\n   \
    \         if paren_count < 0 {\n                levels.append(paren_level)\n \
    \           }\n        }\n    }\n    return levels", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    for\
    \ c in paren_string.unicodeScalars {\n        if c == paren {\n            paren_count\
    \ += 1\n            if paren_count == 1 {\n                levels.append(level)\n\
    \            }\n            paren_count = 0\n            paren_level = 0\n   \
    \     } else {\n            paren_count -= 1\n        }\n        level += 1\n\
    \    }\n    levels.append(level)\n    return levels", "    var levels = [Int]()\n\
    \    var level = 0\n    var paren_count = 0\n    var paren_level = 0\n    for\
    \ char in paren_string.characters {\n        switch char {\n        case ')':\n\
    \            levels[level] = paren_count\n            level++\n            paren_count\
    \ = 0\n            paren_level = 0\n        case ')':\n            levels[level]\
    \ = paren_count\n            level++\n            paren_count++\n        case\
    \ ')':\n            levels[level] = paren_count\n            level++\n       \
    \     paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = paren_count\n            level++\n            paren_count++\n\
    \        case ')':\n            levels[level] = paren_count\n            level++\n\
    \            paren_count++\n        case ')':\n            levels[level] = paren_count\n\
    \            level++\n            paren_count++\n        case ')':\n         \
    \   levels[level] = ", "    var level = 0\n    var max_level = 0\n    var max_level_parens\
    \ = 0\n    var paren_count = 0\n    var paren_count_parens = 0\n    var paren_count_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens = 0\n    var paren_count_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens = 0\n    var paren_count_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens =\
    \ 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens_parens\
    \ = 0\n    var paren_count_parens_parens_parens_parens_parens_parens_parens_parens_paren",
  "    var max_level = 0\n    var max_level_group = 0\n    var groups = [String]()\n\
    \    var levels = [Int]()\n    var level = 0\n    var group_level = 0\n    var\
    \ group_count = 0\n    var paren_count = 0\n    var paren_level = 0\n    var paren_group\
    \ = 0\n    var paren_group_count = 0\n    var paren_group_level = 0\n    var paren_group_count\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_level\
    \ = 0\n    var paren_group_level = 0\n    var paren_group_level = 0\n    var paren_group_",
  "    var max_level = 0\n    var level = 0\n    var levels = [Int]()\n    var paren_count\
    \ = 0\n    var paren_level = 0\n    var paren_levels = [Int]()\n    var paren_levels_len\
    \ = 0\n    var paren_levels_lens = [Int]()\n    var paren_levels_lens_len = 0\n\
    \    var paren_levels_lens_lens = [Int]()\n    var paren_levels_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens = [Int]()\n   \
    \ var paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = [Int]()\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0\n \
    \   var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens = [Int]()\n\
    \    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens =\
    \ 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = 0\n    var paren_levels_lens_lens_lens_lens_lens_len"]
stop_tokens:
- "\n}"

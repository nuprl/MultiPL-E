name: HumanEval_102_choose_num
language: swift
prompt: "\n/// This function takes two positive numbers x and y and returns the\n\
  /// biggest even integer number that is in the range [x, y] inclusive. If \n///\
  \ there's no such number, then the function should return -1.\n/// For example:\n\
  /// choose_num(12, 15) = 14\n/// choose_num(13, 12) = -1\nfunc choose_num(x: Int,\
  \ y: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(choose_num(x: 12, y: 15) == 14)\nassert(choose_num(x:\
  \ 13, y: 12) == -1)\nassert(choose_num(x: 33, y: 12354) == 12354)\nassert(choose_num(x:\
  \ 5234, y: 5233) == -1)\nassert(choose_num(x: 6, y: 29) == 28)\nassert(choose_num(x:\
  \ 27, y: 10) == -1)\nassert(choose_num(x: 7, y: 7) == -1)\nassert(choose_num(x:\
  \ 546, y: 546) == 546)"
completions: ["    if x <= y {\n        return -1\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    for num in 1...y {\n        if x % num == 0 {\n   \
    \         even = num\n            break\n        }\n    }\n    for num in 1...x\
    \ {\n        if y % num == 0 {\n            odd = num\n            break\n   \
    \     }\n    }\n    if even > odd {\n        return even\n    } else {\n     \
    \   return odd\n    }", "    if x < y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax:\
    \ Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount:\
    \ Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var\
    \ oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2:\
    \ Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n   \
    \ var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3:\
    \ Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n   \
    \ var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4:\
    \ Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n   \
    \ var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6:\
    \ Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n   \
    \ var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7:\
    \ Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n   \
    \ var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8:\
    \ Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n   \
    \ var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9:\
    \ Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n \
    \   var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11:\
    \ Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n \
    \   var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12:\
    \ Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n \
    \   var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13:\
    \ Int = 0\n    var oddMinCount", "    if x < y {\n        return -1\n    }\n \
    \   var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int\
    \ = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2:\
    \ Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n   \
    \ var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3:\
    \ Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n   \
    \ var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5:\
    \ Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n   \
    \ var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6:\
    \ Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n   \
    \ var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7:\
    \ Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n   \
    \ var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8:\
    \ Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n   \
    \ var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10:\
    \ Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n \
    \   var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11:\
    \ Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n \
    \   var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12:\
    \ Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n \
    \   var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13:\
    \ Int = 0\n    var evenMaxCount", "    var result = -1\n    var x = x - 1\n  \
    \  var y = y - 1\n    var even = 1\n    var odd = 0\n    var xEven = x - even\n\
    \    var yEven = y - even\n    var xOdd = x - odd\n    var yOdd = y - odd\n  \
    \  while even > 0 || odd > 0 {\n        if even > 0 {\n            if xEven ==\
    \ even {\n                if yEven == even {\n                    result = even\n\
    \                } else {\n                    result = xEven\n              \
    \  }\n            } else {\n                result = xEven\n            }\n  \
    \          even = even - 1\n        }\n        if odd > 0 {\n            if xOdd\
    \ == odd {\n                if yOdd == odd {\n                    result = odd\n\
    \                } else {\n                    result = xOdd\n               \
    \ }\n            } else {\n                result = xOdd\n            }\n    \
    \        odd = odd - 1\n        }\n    }\n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x %\
    \ 2 == 0 && y % 2 != 0 {\n        return x - y\n    }\n    if x % 2 != 0 && y\
    \ % 2 == 0 {\n        return x + y\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n\
    \        return x - y\n    }\n    return -1", "    var result = -1\n    var x\
    \ = abs(x)\n    var y = abs(y)\n    while x >= y {\n        if x % 2 == 0 {\n\
    \            if y % 2 == 0 {\n                result = x\n                y /=\
    \ 2\n            } else {\n                result = y\n                x /= 2\n\
    \            }\n        } else {\n            if y % 2 == 0 {\n              \
    \  result = y\n                x /= 2\n            } else {\n                result\
    \ = x\n                y /= 2\n            }\n        }\n    }\n    return result",
  "    var result = -1\n    var x = x - 1\n    var y = y - 1\n    var even = 1\n \
    \   var odd = 0\n    while x >= y {\n        if x % 2 == 0 {\n            even\
    \ = even + x\n            x = x - 1\n        } else {\n            odd = odd +\
    \ x\n            x = y - 1\n        }\n    }\n    if even > odd {\n        result\
    \ = even\n    } else {\n        result = odd\n    }\n    return result", "   \
    \ var result = -1\n    var x = x - 1\n    var y = y - 1\n    while x >= y {\n\
    \        if x % 2 == 0 && y % 2 == 0 {\n            result = x\n            break\n\
    \        }\n        x /= 2\n        y /= 2\n    }\n    return result", "    if\
    \ x < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2\
    \ == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x < y {\n        return -1\n    }\n    if x == y {\n \
    \       return x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int\n    var y: Int\n    for x = y; x > 0; x /= 2 {\n        for y = x; y\
    \ > 0; y /= 2 {\n            if x % 2 == 0 && y % 2 == 0 {\n                even\
    \ = x + y\n                break\n            }\n            if x % 2 != 0 &&\
    \ y % 2 != 0 {\n                odd = x + y\n                break\n         \
    \   }\n        }\n    }\n    if even > odd {\n        return even\n    } else\
    \ {\n        return odd\n    }", "    if x > y {\n        (x, y) = (y, x)\n  \
    \  }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin:\
    \ Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2:\
    \ Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n   \
    \ var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3:\
    \ Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n   \
    \ var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5:\
    \ Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n   \
    \ var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6:\
    \ Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n   \
    \ var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7:\
    \ Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n   \
    \ var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8:\
    \ Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n   \
    \ var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10:\
    \ Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n \
    \   var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11:\
    \ Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n \
    \   var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12:\
    \ Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n \
    \   var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13:\
    \ Int = 0\n    var ", "    if x > y {\n        return -1\n    }\n    \n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<y {\n        if\
    \ x % 2 == 0 {\n            even = even + x\n        } else {\n            odd\
    \ = odd + x\n        }\n        x = x + 1\n    }\n    \n    if even > odd {\n\
    \        return even\n    } else {\n        return odd\n    }", "    if x < y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n    if x % 2\
    \ == 0 {\n        return x / 2\n    }\n    return y / 2", "    if x < y {\n  \
    \      return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    return choose_num(x,\
    \ y / 2)", "    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    \n    if x > y {\n        (x, y) = (y, x)\n    }\n  \
    \  \n    for x in stride(from: x, to: y, by: 2) {\n        if x % 2 == 0 {\n \
    \           even += x\n        } else {\n            odd += x\n        }\n   \
    \ }\n    \n    if even > y {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    var result = -1\n    if x < y {\n        result = x\n    }\
    \ else {\n        result = y\n    }\n    if result % 2 == 0 {\n        return\
    \ result\n    }\n    while result % 2 == 0 {\n        result /= 2\n    }\n   \
    \ return result", "    if x <= y {\n        return -1\n    }\n    if x > y {\n\
    \        return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int\
    \ = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount:\
    \ Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var\
    \ oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2:\
    \ Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n   \
    \ var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3:\
    \ Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n   \
    \ var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4:\
    \ Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n   \
    \ var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6:\
    \ Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n   \
    \ var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7:\
    \ Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n   \
    \ var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8:\
    \ Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n   \
    \ var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9:\
    \ Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n \
    \   var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11:\
    \ Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n \
    \   var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12:\
    \ Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n \
    \   var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13:\
    \ Int = 0\n    var oddMin", "    if x < y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   return choose_num(x / 2, y / 2)\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return -1", "    var result = -1\n    var xMin = x\n    var\
    \ xMax = y\n    var yMin = y\n    var yMax = x\n    \n    while xMin <= xMax &&\
    \ yMin <= yMax {\n        if (xMin + yMin == xMax + yMax) {\n            result\
    \ = xMin + yMin\n            break\n        }\n        if (xMin + yMin > xMax\
    \ + yMax) {\n            yMax = xMin + yMin\n        } else {\n            xMin\
    \ = xMin + yMin\n        }\n    }\n    return result", "    if x < y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 ==\
    \ 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x % 2 == 0\
    \ {\n        return x / 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n\
    \    }\n    return -1", "    if x <= y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    for _ in 0..<(x-y) {\n        if x % 2 == 0 {\n            even += 2\n  \
    \          x /= 2\n        } else {\n            odd += 1\n            x /= 2\n\
    \        }\n    }\n    if even > odd {\n        return even\n    } else {\n  \
    \      return odd\n    }", "    if x < y {\n        swap(x, y)\n    }\n    \n\
    \    var result = x\n    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n\
    \            result = result / 2\n        } else {\n            result /= 2\n\
    \        }\n    }\n    \n    return result", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    var even = Int()\n    var\
    \ odd = Int()\n    for var i = x; i <= y; i++ {\n        if i % 2 == 0 {\n   \
    \         even = i\n        } else {\n            odd = i\n        }\n    }\n\
    \    if even > odd {\n        return even\n    } else {\n        return odd\n\
    \    }", "    if x < y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    while\
    \ x < y {\n        if x % 2 == 0 {\n            even = even * 2 + x\n        \
    \    if even > evenMax {\n                evenMax = even\n            }\n    \
    \    } else {\n            odd = odd * 2 + x\n            if odd > oddMax {\n\
    \                oddMax = odd\n            }\n        }\n        x += 1\n    \
    \    y += 1\n    }\n    if evenMax == 0 {\n        return -1\n    }\n    if oddMax\
    \ == 0 {\n        return evenMax\n    }\n    return evenMax * 2 + oddMax", " \
    \   if x < y {\n        return -1\n    }\n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    for x in stride(from: x,\
    \ to: y, by: 2) {\n        if x % 2 == 0 {\n            even = even * 2 + x\n\
    \        } else {\n            odd = odd * 2 + x\n        }\n    }\n    if even\
    \ > y {\n        return even\n    } else {\n        return odd\n    }", "    if\
    \ x < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n    if\
    \ x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n        return\
    \ y / 2\n    }\n    return -1", "    var even: Int = 0\n    var odd: Int = 0\n\
    \    var x: Int\n    var y: Int\n    \n    for (x = y; x > 0; x--, even++) {\n\
    \        if ((x % 2) == 0) {\n            even = even\n        } else {\n    \
    \        odd = odd\n        }\n    }\n    \n    for (x = y; x > 0; x--, odd++)\
    \ {\n        if ((x % 2) == 1) {\n            odd = odd\n        } else {\n  \
    \          even = even\n        }\n    }\n    \n    if even > odd {\n        return\
    \ even\n    } else {\n        return odd\n    }", "    var even: Int = 0\n   \
    \ var odd: Int = 0\n    \n    if x > y {\n        odd = x\n        even = y\n\
    \    } else {\n        even = x\n        odd = y\n    }\n    \n    while even\
    \ > 0 {\n        if even % 2 == 0 {\n            even /= 2\n        } else {\n\
    \            odd += 1\n            even -= 1\n        }\n    }\n    \n    return\
    \ odd", "    var result = -1\n    if x > y {\n        result = x\n    } else {\n\
    \        result = y\n    }\n    \n    while result > 0 && result % 2 == 0 {\n\
    \        result = result / 2\n    }\n    \n    return result", "    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int = x\n    var y: Int = y\n    var\
    \ evenMax: Int = -1\n    var oddMax: Int = -1\n    \n    while x >= 0 && y >=\
    \ 0 {\n        if x % 2 == 0 && y % 2 == 0 {\n            even = even * x + y\n\
    \            evenMax = even\n        } else {\n            odd = odd * x + y\n\
    \            oddMax = odd\n        }\n        x = x / 2\n        y = y / 2\n \
    \   }\n    \n    if evenMax > -1 && oddMax < 0 {\n        return evenMax\n   \
    \ } else if evenMax < -1 && oddMax > 0 {\n        return oddMax\n    } else {\n\
    \        return -1\n    }", "    var result = -1\n    var x = abs(x)\n    var\
    \ y = abs(y)\n    var biggest = y\n    var smaller = x\n    var even = 1\n   \
    \ var odd = 0\n    var biggestEven = 0\n    var biggestOdd = 0\n    var smallerEven\
    \ = 0\n    var smallerOdd = 0\n    \n    while biggest < x {\n        biggest\
    \ = biggest + y\n        biggestEven = biggestEven * even\n        biggestOdd\
    \ = biggestOdd * odd\n        smaller = smaller + y\n        smallerEven = smallerEven\
    \ * even\n        smallerOdd = smallerOdd * odd\n        even = even + 1\n   \
    \     odd = odd + 1\n    }\n    \n    if biggest < x {\n        result = biggest\n\
    \    }\n    \n    if biggest == x {\n        if biggest == y {\n            if\
    \ biggest == even {\n                if biggest == biggestEven {\n           \
    \         if biggest == biggestOdd {\n                        if biggest == smaller\
    \ {\n                            if biggest == smallerEven {\n               \
    \                 if biggest == smallerOdd {\n                               \
    \     if biggest == biggestEven {\n                                        if\
    \ biggest == biggestOdd {\n                                            if biggest\
    \ == smaller {\n                                                if biggest ==\
    \ smallerEven {\n                                                    if biggest\
    \ == smallerOdd {\n                                                        if\
    \ biggest == biggestEven {\n                                                 \
    \           if biggest == biggestOdd {\n                                     \
    \                           if biggest == smaller {\n                        \
    \                            if biggest == smallerEven {\n                   \
    \                                     if biggest == smallerOdd {\n           \
    \                                                 if biggest == biggestEven {\n\
    \                                                                if biggest ==\
    \ biggestOdd {\n                                                    if biggest\
    \ == smaller {\n                                                        if biggest\
    \ == smallerEven {\n                                                         \
    \   if biggest == smallerOdd {\n                                             \
    \                   if biggest == biggestEven {\n                            \
    \                                        if biggest == biggestOdd {\n        \
    \                                                                if biggest ==\
    \ smaller {\n                                                                \
    \            if biggest == smallerEven {\n                                   \
    \                                             if biggest == smallerOdd {\n   \
    \                                                                            \
    \     if biggest == biggestEven {\n                                          \
    \                                              if biggest == biggestOdd {\n  \
    \                                                                            \
    \              if biggest == smaller {\n                                     \
    \                                                           if biggest == smallerEven\
    \ {\n                                                                        \
    \                            if biggest == smallerOdd {\n                    \
    \                                                                            \
    \        if biggest == biggestEven {\n                                       \
    \                                                                     if biggest\
    \ == biggestOdd {\n                                                          \
    \                                                      if biggest == small", " \
    \   var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var m = 1\n \
    \   var n = 2\n    while m <= y {\n        if x % m == 0 && y % n == 0 {\n   \
    \         if m > result {\n                result = m\n            }\n       \
    \     if n > result {\n                result = n\n            }\n        }\n\
    \        m *= 2\n        n *= 2\n    }\n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)/2\n    }\n    if x % 2\
    \ == 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 ==\
    \ 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return\
    \ x + (y - x)/2\n    }\n    return -1", "    var result = -1\n    var x = abs(x)\n\
    \    var y = abs(y)\n    while x > y {\n        if x % 2 == 0 {\n            x\
    \ = x / 2\n        } else {\n            y = y / 2\n        }\n    }\n    if x\
    \ == y {\n        result = x\n    }\n    return result", "    if x < y {\n   \
    \     return -1\n    }\n    if x == y {\n        return x\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    while even < y {\n        even += x\n   \
    \     odd += y\n    }\n    if even > y {\n        return -1\n    }\n    return\
    \ odd", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    return -1", "    if x > y {\n        return -1\n    }\n    \n    var\
    \ even = Int()\n    var odd = Int()\n    \n    for i in 0..<(x-y) {\n        if\
    \ i % 2 == 0 {\n            even += i\n        } else {\n            odd += i\n\
    \        }\n    }\n    \n    if even > y {\n        return even\n    } else {\n\
    \        return odd\n    }", "    if x < y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    var even: Int = 0\n    var odd: Int =\
    \ 0\n    for num in 1...y {\n        if num % 2 == 0 {\n            even = num\n\
    \        } else {\n            odd = num\n        }\n    }\n    if even > x {\n\
    \        return even\n    } else {\n        return odd\n    }", "    var result\
    \ = -1\n    var low = Int(x)\n    var high = Int(y)\n    var mid = Int(x / 2)\n\
    \    while low <= high {\n        if low % 2 == 0 && mid % 2 == 0 {\n        \
    \    if low < mid {\n                low = mid + 1\n            } else {\n   \
    \             high = mid - 1\n            }\n        } else {\n            if\
    \ low % 2 == 0 {\n                low = mid + 1\n            } else {\n      \
    \          high = mid - 1\n            }\n        }\n        mid = Int(low / 2)\n\
    \    }\n    if low > high {\n        result = low\n    } else {\n        result\
    \ = high\n    }\n    return result", "    var even: Int = 0\n    var odd: Int\
    \ = 0\n    var x: Int\n    var y: Int\n    for (x = y; x > 0; x--, y += 2) {\n\
    \        if x % 2 == 0 {\n            even = even * x + y\n        } else {\n\
    \            odd = odd * x + y\n        }\n    }\n    if even > odd { // if even\
    \ is bigger than odd, then return even\n        return even\n    } else {\n  \
    \      return odd\n    }", "    if x <= y {\n        return -1\n    }\n    if\
    \ x > y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n    if x % 2\
    \ == 0 && y % 2 != 0 {\n        return x + y - 1\n    }\n    if x % 2 != 0 &&\
    \ y % 2 == 0 {\n        return x + y + 1\n    }\n    if x % 2 != 0 && y % 2 !=\
    \ 0 {\n        return x + y - 1\n    }\n    return -1", "    var even: Int = 0\n\
    \    var odd: Int = 0\n    var x: Int = x\n    var y: Int = y\n    \n    while\
    \ x >= y {\n        if x % 2 == 0 {\n            even = even * 2 + x\n       \
    \ }\n        else {\n            odd = odd * 2 + x\n        }\n        x = x /\
    \ 2\n        y = y / 2\n    }\n    \n    if even > y {\n        return even\n\
    \    }\n    else {\n        return odd\n    }", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n       \
    \ return x / 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return\
    \ -1", "    var result = -1\n    if x < y {\n        for var i = x; i <= y; i++\
    \ {\n            if i % 2 == 0 {\n                result = i\n               \
    \ break\n            }\n        }\n    } else {\n        for var i = y; i <= x;\
    \ i++ {\n            if i % 2 == 0 {\n                result = i\n           \
    \     break\n            }\n        }\n    }\n    return result", "    if x <=\
    \ y {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    for n in 1...y {\n        if x % n == 0 {\n            even = even * n +\
    \ n\n        }\n        else {\n            odd = odd * n + n\n        }\n   \
    \ }\n    if even > y {\n        return even\n    }\n    return odd", "    if x\
    \ < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n    if x % 2\
    \ == 0 && y % 2 != 0 {\n        return x - y\n    }\n    if x % 2 != 0 && y %\
    \ 2 == 0 {\n        return x - y\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n \
    \       return x + y\n    }\n    return -1", "    var result = -1\n    var x =\
    \ x - 1\n    var y = y - 1\n    while x >= y {\n        if x % 2 == 0 && y % 2\
    \ == 0 {\n            result = x\n            break\n        }\n        x /= 2\n\
    \        y /= 2\n    }\n    return result", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n      \
    \  return choose_num(x / 2, y)\n    }\n    return choose_num(x, y / 2)", "   \
    \ if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n  \
    \  }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n \
    \   if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n      \
    \  return y / 2\n    }\n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in\
    \ 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n \
    \   if even > y {\n        return even\n    }\n    \n    return odd", "    if\
    \ x < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2\
    \ == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int\
    \ = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    while x <= y {\n\
    \        if x % 2 == 0 {\n            even = even * 2 + x\n            if even\
    \ > evenMax {\n                evenMax = even\n            }\n            if even\
    \ < evenMin {\n                evenMin = even\n            }\n        } else {\n\
    \            odd = odd * 2 + x\n            if odd > oddMax {\n              \
    \  oddMax = odd\n            }\n            if odd < oddMin {\n              \
    \  oddMin = odd\n            }\n        }\n        x += 1\n        y += 1\n  \
    \  }\n    if evenMax < oddMax {\n        return evenMax\n    } else {\n      \
    \  return oddMax\n    }", "    if x < y {\n        return -1\n    }\n    if x\
    \ == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n       \
    \ return x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n        return x + y / 2\n\
    \    }\n    if y % 2 == 0 {\n        return x - y / 2\n    }\n    return -1",
  "    var even: Int = 0\n    var odd: Int = 0\n    var biggest: Int = 0\n    var\
    \ evenNumber: Int = 0\n    var oddNumber: Int = 0\n    \n    if x > y {\n    \
    \    biggest = y\n        even = y\n        odd = x\n    } else {\n        biggest\
    \ = x\n        even = x\n        odd = y\n    }\n    \n    while even > 0 && odd\
    \ > 0 {\n        if even % 2 == 0 {\n            evenNumber += even\n        \
    \    even /= 2\n        } else {\n            oddNumber += odd\n            odd\
    \ /= 2\n        }\n    }\n    \n    if evenNumber > biggest {\n        biggest\
    \ = evenNumber\n    }\n    \n    if oddNumber > biggest {\n        biggest = oddNumber\n\
    \    }\n    \n    return biggest", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return choose_num(x / 2, y / 2)", "    if x < y {\n     \
    \   return -1\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n\
    \    for _ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n  \
    \  }\n    \n    if even > y {\n        return -1\n    }\n    \n    return even",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return choose_num(x\
    \ / 2, y) / 2\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    return choose_num(x, y / 2)", "    if x > y {\n        (x, y) = (y,\
    \ x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    for\
    \ x in stride(from: x, to: y, by: 2) {\n        for y in stride(from: y, to: x,\
    \ by: 2) {\n            if x % 2 == 0 && y % 2 == 0 {\n                even =\
    \ x + y\n                if even > evenMax {\n                    evenMax = even\n\
    \                }\n            } else if x % 2 != 0 && y % 2 != 0 {\n       \
    \         odd = x + y\n                if odd > oddMax {\n                   \
    \ oddMax = odd\n                }\n            }\n        }\n    }\n    if evenMax\
    \ == 0 {\n        return -1\n    }\n    if evenMax < x {\n        return evenMax\n\
    \    }\n    if oddMax < y {\n        return oddMax\n    }\n    return evenMax",
  "    var result = -1\n    var xx = x\n    var yy = y\n    var even = 1\n    var\
    \ odd = 0\n    while xx <= yy {\n        if xx % 2 == 0 {\n            even =\
    \ even + 1\n        } else {\n            odd = odd + 1\n        }\n        xx\
    \ = xx + 1\n    }\n    if even > odd {\n        result = even\n    } else {\n\
    \        result = odd\n    }\n    return result", "    if x < y {\n        (x,\
    \ y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int =\
    \ 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxIndex:\
    \ Int = 0\n    var oddMaxIndex: Int = 0\n    var evenMinIndex: Int = 0\n    var\
    \ oddMinIndex: Int = 0\n    var evenMaxIndex2: Int = 0\n    var oddMaxIndex2:\
    \ Int = 0\n    var evenMinIndex2: Int = 0\n    var oddMinIndex2: Int = 0\n   \
    \ var evenMaxIndex3: Int = 0\n    var oddMaxIndex3: Int = 0\n    var evenMinIndex3:\
    \ Int = 0\n    var oddMinIndex3: Int = 0\n    var evenMaxIndex4: Int = 0\n   \
    \ var oddMaxIndex4: Int = 0\n    var evenMinIndex4: Int = 0\n    var oddMinIndex4:\
    \ Int = 0\n    var evenMaxIndex5: Int = 0\n    var oddMaxIndex5: Int = 0\n   \
    \ var evenMinIndex5: Int = 0\n    var oddMinIndex5: Int = 0\n    var evenMaxIndex6:\
    \ Int = 0\n    var oddMaxIndex6: Int = 0\n    var evenMinIndex6: Int = 0\n   \
    \ var oddMinIndex6: Int = 0\n    var evenMaxIndex7: Int = 0\n    var oddMaxIndex7:\
    \ Int = 0\n    var evenMinIndex7: Int = 0\n    var oddMinIndex7: Int = 0\n   \
    \ var evenMaxIndex8: Int = 0\n    var oddMaxIndex8: Int = 0\n    var evenMinIndex8:\
    \ Int = 0\n    var oddMinIndex8: Int = 0\n    var evenMaxIndex9: Int = 0\n   \
    \ var oddMaxIndex9: Int = 0\n    var evenMinIndex9: Int = 0\n    var oddMinIndex9:\
    \ Int = 0\n    var evenMaxIndex10: Int = 0\n    var oddMaxIndex10: Int = 0\n \
    \   var evenMinIndex10: Int = 0\n    var oddMinIndex10: Int = 0\n    var evenMaxIndex11:\
    \ Int = 0\n    var oddMaxIndex11: Int = 0\n    var evenMinIndex11: Int = 0\n \
    \   var oddMinIndex11: Int = 0\n    var evenMaxIndex12: Int = 0\n    var oddMaxIndex12:\
    \ Int = 0\n    var evenMinIndex12: Int = 0\n    var oddMinIndex12: Int = 0\n \
    \   var evenMaxIndex13: Int = 0\n    var oddMaxIndex13: Int = 0\n    var evenMinIndex13:\
    \ Int = 0\n    var oddMinIndex13: Int = 0\n    var ", "    var result = -1\n \
    \   var even = 1\n    var odd = 0\n    var xEven = x % 2\n    var yEven = y %\
    \ 2\n    var xOdd = x % 2\n    var yOdd = y % 2\n    while even > 0 || odd > 0\
    \ {\n        if xEven == yEven {\n            if xEven == 1 {\n              \
    \  result = x\n            } else {\n                result = y\n            }\n\
    \            even = 0\n            odd = 0\n        } else if xOdd == yOdd {\n\
    \            if xOdd == 1 {\n                result = x\n            } else {\n\
    \                result = y\n            }\n            even = 0\n           \
    \ odd = 0\n        } else {\n            if xEven == 1 {\n                result\
    \ = x\n            } else {\n                result = y\n            }\n     \
    \       even = 0\n            odd = 0\n        }\n        xEven = xOdd\n     \
    \   yEven = yOdd\n        xOdd = x % 2\n        yOdd = y % 2\n    }\n    return\
    \ result", "    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var\
    \ evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n \
    \   var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount:\
    \ Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n   \
    \ var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3:\
    \ Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n   \
    \ var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4:\
    \ Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n   \
    \ var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5:\
    \ Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n   \
    \ var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6:\
    \ Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n   \
    \ var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8:\
    \ Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n   \
    \ var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9:\
    \ Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n   \
    \ var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10:\
    \ Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n \
    \   var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11:\
    \ Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n \
    \   var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13:\
    \ Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n \
    \   var oddMinCount13: Int = 0\n    var evenMaxCount14: Int = 0\n    var oddMaxCount14",
  "    var result = -1\n    var x = x - 1\n    var y = y - 1\n    var even = 1\n \
    \   var odd = 0\n    var eveneven = 1\n    var evenodd = 0\n    var oddodd = 0\n\
    \    var eveneveneven = 1\n    var evenoddodd = 0\n    var oddoddeven = 0\n  \
    \  var oddeveneven = 0\n    var evenevenodd = 0\n    var evenoddodd = 0\n    var\
    \ oddoddeven = 0\n    var eveneveneven = 0\n    var evenoddodd = 0\n    var oddoddeven\
    \ = 0\n    var eveneveneven = 0\n    var evenoddodd = 0\n    var oddoddeven =\
    \ 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n \
    \   var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var\
    \ eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven\
    \ = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n\
    \    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var\
    \ evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd\
    \ = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n\
    \    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var\
    \ oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven\
    \ = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n\
    \    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var\
    \ eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven\
    \ = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n\
    \    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var\
    \ evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd\
    \ = 0\n    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n\
    \    var oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var\
    \ oddoddeven = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven\
    \ = 0\n    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n\
    \    var eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var\
    \ eveneveneven = 0\n    var evenodd = 0\n    var oddoddeven = 0\n    var eveneveneven\
    \ = 0\n", "    if x <= y {\n        return -1\n    }\n    if x == y {\n      \
    \  return x\n    }\n    var even = Int()\n    var odd = Int()\n    var result\
    \ = Int()\n    var x = Int()\n    var y = Int()\n    for _ in 0..<y {\n      \
    \  x = Int()\n        y = Int()\n        for _ in 0..<x {\n            x += Int()\n\
    \            y += Int()\n        }\n        if x % 2 == 0 {\n            even\
    \ = x + 1\n        } else {\n            odd = x + 1\n        }\n        if even\
    \ > y {\n            result = even\n            break\n        }\n        if odd\
    \ > y {\n            result = odd\n            break\n        }\n    }\n    return\
    \ result", "    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return\
    \ choose_num(x / 2, y / 2)", "    var even: Int = 0\n    var odd: Int = 0\n  \
    \  \n    if x < y {\n        even = choose_num(y, x)\n    } else {\n        odd\
    \ = choose_num(x, y)\n    }\n    \n    if even > odd {\n        return even\n\
    \    } else {\n        return odd\n    }", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0 {\n        return\
    \ x - y\n    }\n    if y % 2 == 0 {\n        return y + x\n    }\n    return -1",
  "    if x < y {\n        return -1\n    }\n    var result = x\n    for _ in 0..<(y-x)\
    \ {\n        if result % 2 == 0 {\n            return result\n        }\n    \
    \    result /= 2\n    }\n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + y\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n      \
    \  return x + y - 1\n    }\n    if x % 2 != 0 && y % 2 == 0 {\n        return\
    \ x + y + 1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return x + y +\
    \ 1\n    }\n    return -1", "    var result = -1\n    var x = x - 1\n    var y\
    \ = y - 1\n    while x >= y {\n        if x % 2 == 0 && y % 2 == 0 {\n       \
    \     result = x\n            break\n        }\n        x /= 2\n        y /= 2\n\
    \    }\n    return result", "    if x <= y {\n        return -1\n    }\n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n    for\
    \ (x = y; x > 0; x /= 2) {\n        even = even * x + 1\n    }\n    for (x = y;\
    \ x > 0; x /= 2) {\n        odd = odd * x + 1\n    }\n    if even > odd {\n  \
    \      return even\n    }\n    return odd", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return -1", "    var result = -1\n    var x\
    \ = abs(x)\n    var y = abs(y)\n    var z = x\n    var w = y\n    while z != w\
    \ {\n        if z % 2 == 0 {\n            z = z / 2\n        } else {\n      \
    \      w = w / 2\n        }\n    }\n    if z == w {\n        result = x\n    }\n\
    \    return result", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n\
    \    if x > y {\n        result = x\n    } else {\n        result = y\n    }\n\
    \    if result > 0 {\n        if result % 2 == 0 {\n            return result\n\
    \        } else {\n            return -1\n        }\n    } else {\n        if\
    \ result % 2 == 1 {\n            return result\n        } else {\n           \
    \ return -1\n        }\n    }", "    if x < y {\n        return -1\n    }\n  \
    \  if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    return choose_num(x / 2, y / 2)", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + y\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n      \
    \  return y\n    }\n    if x % 2 != 0 && y % 2 == 0 {\n        return x\n    }\n\
    \    if x % 2 != 0 && y % 2 != 0 {\n        return y\n    }\n    return -1", " \
    \   if x < y {\n        swap(x, y)\n    }\n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    var x: Int\n    var y: Int\n    for (x = y; x > 0; x--, y += 2)\
    \ {\n        if x % 2 == 0 {\n            even = even * x + y\n        } else\
    \ {\n            odd = odd * x + y\n        }\n    }\n    if even > odd {\n  \
    \      return even\n    } else {\n        return odd\n    }", "    var result\
    \ = -1\n    var xx = x\n    var yy = y\n    while xx < yy {\n        if (xx %\
    \ 2 == 0 && yy % 2 == 0) {\n            result = xx\n            break\n     \
    \   }\n        xx /= 2\n        yy /= 2\n    }\n    return result", "    if x\
    \ < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n \
    \   if x % 2 == 0 && y % 2 != 0 {\n        return y\n    }\n    if x % 2 != 0\
    \ && y % 2 == 0 {\n        return x\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n\
    \        return y\n    }\n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    if x > y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n\
    \    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n\
    \    var x_even = x % 2 == 0\n    var y_even = y % 2 == 0\n    if x_even && y_even\
    \ {\n        if x < y {\n            result = x\n        } else {\n          \
    \  result = y\n        }\n    } else if x_even {\n        result = x\n    } else\
    \ if y_even {\n        result = y\n    }\n    return result", "    if x > y {\n\
    \        let tmp = x\n        x = y\n        y = tmp\n    }\n    \n    if x ==\
    \ y {\n        return x\n    }\n    \n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    \n    for i in 0..<x {\n        if i % 2 == 0 {\n            even +=\
    \ i\n        } else {\n            odd += i\n        }\n    }\n    \n    if even\
    \ > y {\n        return even\n    }\n    \n    return odd", "    var result =\
    \ -1\n    var x = abs(x)\n    var y = abs(y)\n    while x <= y {\n        if x\
    \ % 2 == 0 && y % 2 == 0 {\n            if x > y {\n                result = x\n\
    \            } else {\n                result = y\n            }\n           \
    \ break\n        }\n        x += 1\n        y -= 1\n    }\n    return result",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    var result = -1\n    var xEven: Bool = false\n    var yEven:\
    \ Bool = false\n    var xEvenMax: Int = -1\n    var yEvenMax: Int = -1\n    var\
    \ xEvenMin: Int = -1\n    var yEvenMin: Int = -1\n    var xEvenMaxCount: Int =\
    \ 0\n    var yEvenMaxCount: Int = 0\n    var xEvenMinCount: Int = 0\n    var yEvenMinCount:\
    \ Int = 0\n    var xEvenMaxSum: Int = 0\n    var yEvenMaxSum: Int = 0\n    var\
    \ xEvenMinSum: Int = 0\n    var yEvenMinSum: Int = 0\n    var xEvenMaxDiff: Int\
    \ = 0\n    var yEvenMaxDiff: Int = 0\n    var xEvenMinDiff: Int = 0\n    var yEvenMinDiff:\
    \ Int = 0\n    var xEvenMaxSum2: Int = 0\n    var yEvenMaxSum2: Int = 0\n    var\
    \ xEvenMinSum2: Int = 0\n    var yEvenMinSum2: Int = 0\n    var xEvenMaxDiff2:\
    \ Int = 0\n    var yEvenMaxDiff2: Int = 0\n    var xEvenMinDiff2: Int = 0\n  \
    \  var yEvenMinDiff2: Int = 0\n    var xEvenMaxSum3: Int = 0\n    var yEvenMaxSum3:\
    \ Int = 0\n    var xEvenMinSum3: Int = 0\n    var yEvenMinSum3: Int = 0\n    var\
    \ xEvenMaxDiff3: Int = 0\n    var yEvenMaxDiff3: Int = 0\n    var xEvenMinDiff3:\
    \ Int = 0\n    var yEvenMinDiff3: Int = 0\n    var xEvenMaxSum4: Int = 0\n   \
    \ var yEvenMaxSum4: Int = 0\n    var xEvenMinSum4: Int = 0\n    var yEvenMinSum4:\
    \ Int = 0\n    var xEvenMaxDiff4: Int = 0\n    var yEvenMaxDiff4: Int = 0\n  \
    \  var xEvenMinDiff4: Int = 0\n    var yEvenMinDiff4: Int = 0\n    var xEvenMaxSum5:\
    \ Int = 0\n    var yEvenMaxSum5: Int = 0\n    var xEvenMinSum5: Int = 0\n    var\
    \ yEvenMinSum5: Int = 0\n    var xEvenMaxDiff5: Int = 0\n    var yEvenMaxDiff5:\
    \ Int = 0\n    var xEvenMinDiff5: Int = 0\n    var yEvenMinDiff5: Int = 0\n  \
    \  var xEvenMaxSum6: Int = 0\n    var yEvenMaxSum6: Int = 0\n    var xEvenMinSum6:\
    \ Int = 0\n    var yEvenMinSum6: Int = 0\n    var xEvenMaxDiff6: Int = 0\n   \
    \ var yEvenMaxDiff6: Int = 0\n    var x", "    if x > y {\n        (x, y) = (y,\
    \ x)\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for\
    \ i in 0..<x {\n        if i % 2 == 0 {\n            even += i\n        } else\
    \ {\n            odd += i\n        }\n    }\n    \n    if even > y {\n       \
    \ return -1\n    }\n    \n    if odd > y {\n        return -1\n    }\n    \n \
    \   return even", "    if x > y {\n        (x, y) = (y, x)\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    for n in 1...y {\n        if x % n == 0 {\n\
    \            even = n\n            break\n        }\n    }\n    for n in 1...x\
    \ {\n        if y % n == 0 {\n            odd = n\n            break\n       \
    \ }\n    }\n    if even > 0 {\n        return even\n    }\n    if odd > 0 {\n\
    \        return odd\n    }\n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in\
    \ 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n \
    \   if even > y {\n        return even\n    }\n    \n    return odd", "    var\
    \ result = -1\n    var x = x - 1\n    var y = y - 1\n    var even = 1\n    var\
    \ odd = 0\n    while x >= 0 && y >= 0 {\n        if x % 2 == 0 && y % 2 == 0 {\n\
    \            if even > result {\n                result = even\n            }\n\
    \            even = even + 2\n        } else {\n            if odd > result {\n\
    \                result = odd\n            }\n            odd = odd + 1\n    \
    \    }\n        x = x - 1\n        y = y - 1\n    }\n    return result", "   \
    \ if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n  \
    \  }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n     \
    \   return y / 2\n    }\n    return -1", "    if x <= 0 || y <= 0 {\n        return\
    \ -1\n    }\n    if x > y {\n        x, y = y, x\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    for n in 0..<y {\n        if x % 2 == 0 {\n       \
    \     even = even + n\n        } else {\n            odd = odd + n\n        }\n\
    \        x = x / 2\n    }\n    if even > odd {\n        return even\n    } else\
    \ {\n        return odd\n    }", "    if x < y {\n        return -1\n    }\n \
    \   if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    return choose_num(x, y / 2)", "    if x < y\
    \ {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    \n    for i in 0..<(x-y) {\n        if (x+y-1) % 2 == 0 {\n   \
    \         even += x\n        } else {\n            odd += x\n        }\n    }\n\
    \    \n    if even > y {\n        return even\n    } else {\n        return odd\n\
    \    }", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    if x > y {\n        return -1\n    }\n    return choose_num(x / 2,\
    \ y / 2)", "    var even: Int = 0\n    var odd: Int = 0\n    var max: Int = 0\n\
    \    var min: Int = 0\n    \n    if x > y {\n        max = x\n        min = y\n\
    \    } else {\n        max = y\n        min = x\n    }\n    \n    for var i =\
    \ min; i <= max; i++ {\n        if i % 2 == 0 {\n            even = i\n      \
    \  } else {\n            odd = i\n        }\n        \n        if even > max {\n\
    \            max = even\n        }\n        \n        if odd < min {\n       \
    \     min = odd\n        }\n    }\n    \n    if even == max {\n        return\
    \ even\n    }\n    \n    return -1", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    while x < y {\n       \
    \ even = even + x\n        odd = odd + y\n        x = x + 1\n        y = y + 1\n\
    \    }\n    if even > odd {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    if x <= y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2\
    \ == 0 {\n            even += i\n        } else {\n            odd += i\n    \
    \    }\n    }\n    \n    if even > y {\n        return even\n    } else {\n  \
    \      return odd\n    }", "    var result = -1\n    var x = x - 1\n    var y\
    \ = y - 1\n    while x >= y {\n        if x % 2 == 0 {\n            result = x\n\
    \            break\n        }\n        x = x - 1\n    }\n    return result", " \
    \   var result = -1\n    if x > y {\n        result = x\n    } else {\n      \
    \  result = y\n    }\n    \n    while result > 0 && result % 2 == 0 {\n      \
    \  result /= 2\n    }\n    \n    return result", "    var result = -1\n    var\
    \ x = x - 1\n    var y = y - 1\n    var even = 1\n    var odd = 0\n    while even\
    \ > 0 || odd > 0 {\n        if even > 0 {\n            result += x\n         \
    \   even /= 2\n        }\n        if odd > 0 {\n            result += y\n    \
    \        odd /= 2\n        }\n        x -= 1\n        y -= 1\n    }\n    return\
    \ result", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var\
    \ x_even = x % 2 == 0\n    var y_even = y % 2 == 0\n    if x_even && y_even {\n\
    \        if x == y {\n            result = x\n        } else {\n            if\
    \ x < y {\n                result = x\n            } else {\n                result\
    \ = y\n            }\n        }\n    } else if x_even {\n        result = x\n\
    \    } else if y_even {\n        result = y\n    } else {\n        if x < y {\n\
    \            result = x\n        } else {\n            result = y\n        }\n\
    \    }\n    return result", "    var even = Int()\n    var odd = Int()\n    \n\
    \    if x > y {\n        even = choose_num(y, x)\n    } else {\n        odd =\
    \ choose_num(x, y)\n    }\n    \n    if even % 2 == 0 {\n        return even\n\
    \    } else {\n        return odd\n    }", "    var result = -1\n    if x > y\
    \ {\n        result = x\n    } else {\n        result = y\n    }\n    \n    if\
    \ result % 2 == 0 {\n        return result\n    }\n    \n    var even = 1\n  \
    \  var odd = 1\n    \n    while even < result {\n        even += 2\n    }\n  \
    \  \n    while odd < result {\n        odd += 2\n    }\n    \n    if even > result\
    \ {\n        return even\n    } else {\n        return odd\n    }", "    if x\
    \ < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    var even = Int()\n    var odd = Int()\n    for _ in 0..<(x-y) {\n       \
    \ if x % 2 == 0 {\n            even = even + 2\n        } else {\n           \
    \ odd = odd + 1\n        }\n        x = x - 1\n    }\n    if even > odd {\n  \
    \      return even\n    } else {\n        return odd\n    }", "    var even: Int\
    \ = 0\n    var odd: Int = 0\n    \n    if x > y {\n        even = choose_num(y,\
    \ x)\n    } else {\n        even = choose_num(x, y)\n    }\n    \n    if even\
    \ % 2 == 0 {\n        return even\n    }\n    \n    if even > 0 {\n        odd\
    \ = even - 1\n    } else {\n        odd = even + 1\n    }\n    \n    if odd %\
    \ 2 == 0 {\n        return odd\n    }\n    \n    if odd > 0 {\n        return\
    \ choose_num(odd, x)\n    } else {\n        return choose_num(x, odd)\n    }",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n     \
    \   return y / 2\n    }\n    return -1", "    var result = -1\n    if x > y {\n\
    \        var temp = x\n        x = y\n        y = temp\n    }\n    for number\
    \ in stride(from: x, to: y, by: 2) {\n        if number % 2 == 0 {\n         \
    \   result = number\n            break\n        }\n    }\n    return result",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    var even: Int = 0\n    var odd: Int = 0\n    for n in 1...y {\n   \
    \     if x % n == 0 {\n            even = even * n + n\n        }\n        if\
    \ x % n != 0 {\n            odd = odd * n + n\n        }\n    }\n    if even >\
    \ odd {\n        return even\n    } else {\n        return odd\n    }", "    if\
    \ x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n  \
    \  }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return -1", " \
    \   if x <= y {\n        return -1\n    }\n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n\
    \    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n\
    \    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount:\
    \ Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var\
    \ oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2:\
    \ Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n   \
    \ var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4:\
    \ Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n   \
    \ var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5:\
    \ Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n   \
    \ var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6:\
    \ Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n   \
    \ var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7:\
    \ Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n   \
    \ var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9:\
    \ Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n   \
    \ var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10:\
    \ Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n \
    \   var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11:\
    \ Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n \
    \   var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12:\
    \ Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n \
    \   var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n    var evenMaxCount",
  "    var even: Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n \
    \   for (x = y; x > 0; x--, y++) {\n        if (x%2 == 0) {\n            even\
    \ = even * x + y\n        } else {\n            odd = odd + x\n        }\n   \
    \ }\n    if even > odd {\n        return even\n    } else {\n        return -1\n\
    \    }", "    if x < y {\n        (x, y) = (y, x)\n    }\n    var even: Int =\
    \ 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax:\
    \ Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin:\
    \ Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var\
    \ evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2:\
    \ Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n   \
    \ var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3:\
    \ Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n   \
    \ var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4:\
    \ Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n   \
    \ var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5:\
    \ Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n   \
    \ var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7:\
    \ Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n   \
    \ var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8:\
    \ Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n   \
    \ var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9:\
    \ Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n  \
    \  var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10:\
    \ Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n \
    \   var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12:\
    \ Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n \
    \   var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13:\
    \ Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n \
    \   var ", "    if x < y {\n        return -1\n    }\n    if x == y {\n      \
    \  return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    if\
    \ x > y {\n        return -1\n    }\n    return choose_num(x / 2, y / 2)", " \
    \   if x < y {\n        (x, y) = (y, x)\n    }\n    var result = -1\n    var low\
    \ = Int()\n    var high = Int()\n    for _ in 0..<(x-y) {\n        low = high\n\
    \        high = low + Int((y-low)/2)\n        if high > x {\n            high\
    \ = x\n        }\n        if low < high {\n            if low % 2 == 0 {\n   \
    \             low = low + 1\n            } else {\n                low = low -\
    \ 1\n            }\n            if high % 2 == 0 {\n                high = high\
    \ + 1\n            } else {\n                high = high - 1\n            }\n\
    \            if low < high {\n                result = low\n                break\n\
    \            }\n        }\n    }\n    return result", "    if x > y {\n      \
    \  (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int\
    \ = 0\n    while x < y {\n        if x % 2 == 0 {\n            even = even * 2\
    \ + x\n            if even > evenMax {\n                evenMax = even\n     \
    \       }\n        } else {\n            odd = odd * 2 + x\n            if odd\
    \ > oddMax {\n                oddMax = odd\n            }\n        }\n       \
    \ x += 1\n        y += 1\n    }\n    if evenMax == 0 {\n        return -1\n  \
    \  }\n    if oddMax == 0 {\n        return evenMax\n    }\n    return evenMax\
    \ * 2 + oddMax", "    if x < y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x\
    \ + (y / 2)\n    }\n    if x % 2 == 0 {\n        return x + (y / 2)\n    }\n \
    \   if y % 2 == 0 {\n        return x + (y / 2)\n    }\n    return -1", "    if\
    \ x < y {\n        (x, y) = (y, x)\n    }\n    var result = -1\n    for n in 1...y\
    \ {\n        if x % n == 0 {\n            result = n\n            break\n    \
    \    }\n    }\n    return result", "    var result = -1\n    var x = x - 1\n \
    \   var y = y - 1\n    var even = 1\n    var odd = 0\n    while even > 0 || odd\
    \ < 0 {\n        if even > 0 {\n            even -= 1\n        }\n        if odd\
    \ < 0 {\n            odd += 1\n        }\n        if even > 0 && odd < 0 {\n \
    \           if x > y {\n                result += even\n                x -= 1\n\
    \            } else {\n                result += odd\n                y += 1\n\
    \            }\n            even = 1\n            odd = 0\n        }\n    }\n\
    \    return result", "    var result = -1\n    if x > y {\n        result = x\n\
    \    } else {\n        result = y\n    }\n    while result > 0 && result % 2 ==\
    \ 0 {\n        result = result / 2\n    }\n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    for\
    \ x in stride(from: x, through: y, by: 2) {\n        if x % 2 == 0 {\n       \
    \     even = even + x\n        } else {\n            odd = odd + x\n        }\n\
    \    }\n    if even > odd {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    var result = -1\n    var x = x - 1\n    var y = y - 1\n  \
    \  var even = 1\n    var odd = 0\n    while x >= y {\n        if x % 2 == 0 {\n\
    \            even = even + 1\n        } else {\n            odd = odd + 1\n  \
    \      }\n        x = x - 1\n        y = y - 1\n    }\n    if even > odd {\n \
    \       result = even\n    } else {\n        result = odd\n    }\n    return result",
  "    var result = -1\n    var x = x - 1\n    var y = y - 1\n    while x >= 0 &&\
    \ y >= 0 {\n        if x % 2 == 0 && y % 2 == 0 {\n            if x > y {\n  \
    \              result = x\n            } else {\n                result = y\n\
    \            }\n            break\n        }\n        x /= 2\n        y /= 2\n\
    \    }\n    return result", "    if x < y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   return x + (y - x)\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ - 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y - 2)\n \
    \   }\n    return -1", "    if x < y {\n        return -1\n    }\n    \n    var\
    \ result = x\n    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n     \
    \       result = result / 2\n        } else {\n            return -1\n       \
    \ }\n    }\n    \n    return result", "    var result = -1\n    if x > y {\n \
    \       result = x\n    } else {\n        result = y\n    }\n    \n    for _ in\
    \ 0..<(x-y) {\n        if result % 2 == 0 {\n            result = result / 2\n\
    \        } else {\n            result = result * 3 + 1\n        }\n    }\n   \
    \ \n    return result", "    if x < y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ x + (y - x)\n    }\n    if x % 2 == 0 {\n        return y\n    }\n    return\
    \ -1", "    var result = -1\n    var remainder = x % y\n    if remainder == 0\
    \ {\n        result = x\n    } else {\n        result = y\n    }\n    return result",
  "    var even: Int = 0\n    var odd: Int = 0\n    var biggest: Int = -1\n    \n\
    \    if x > y {\n        biggest = y\n        odd = x\n    } else {\n        biggest\
    \ = x\n        even = y\n    }\n    \n    while even > 0 {\n        biggest =\
    \ biggest / 2\n        even = even / 2\n    }\n    \n    while odd > 0 {\n   \
    \     biggest = biggest / 2\n        odd = odd / 2\n    }\n    \n    return biggest",
  "    var result = -1\n    var xMin = Int(x)\n    var xMax = Int(y)\n    var yMin\
    \ = Int(y)\n    var yMax = Int(y)\n    \n    while xMin <= xMax && yMin <= yMax\
    \ {\n        if xMin % 2 == 0 && yMin % 2 == 0 {\n            result = xMin\n\
    \            break\n        }\n        if xMin % 2 != 0 && yMin % 2 != 0 {\n \
    \           result = xMin\n            break\n        }\n        xMin++\n    \
    \    yMin++\n    }\n    return result", "    if x < y {\n        return -1\n \
    \   }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return\
    \ x / 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1",
  "    if x <= y {\n        return -1\n    }\n    if x > y {\n        return -1\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin:\
    \ Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxSum: Int = 0\n    var oddMaxSum: Int = 0\n    var evenMinSum: Int = 0\n\
    \    var oddMinSum: Int = 0\n    var evenMaxSumCount: Int = 0\n    var oddMaxSumCount:\
    \ Int = 0\n    var evenMinSumCount: Int = 0\n    var oddMinSumCount: Int = 0\n\
    \    var evenMaxSumSum: Int = 0\n    var oddMaxSumSum: Int = 0\n    var evenMinSumSum:\
    \ Int = 0\n    var oddMinSumSum: Int = 0\n    var evenMaxSumSumCount: Int = 0\n\
    \    var oddMaxSumSumCount: Int = 0\n    var evenMinSumSumCount: Int = 0\n   \
    \ var oddMinSumSumCount: Int = 0\n    var evenMaxSumSumSum: Int = 0\n    var oddMaxSumSumSum:\
    \ Int = 0\n    var evenMinSumSumSum: Int = 0\n    var oddMinSumSumSum: Int = 0\n\
    \    var evenMaxSumSumSumCount: Int = 0\n    var oddMaxSumSumSumCount: Int = 0\n\
    \    var evenMinSumSumSumCount: Int = 0\n    var oddMinSumSumSumCount: Int = 0\n\
    \    var evenMaxSumSumSumSum: Int = 0\n    var oddMaxSumSumSumSum: Int = 0\n \
    \   var evenMinSumSumSumSum: Int = 0\n    var oddMinSumSumSumSum: Int = 0\n  \
    \  var evenMaxSumSumSumCount: Int = 0\n    var oddMaxSumSumSumCount: Int = 0\n\
    \    var evenMinSumSumSumCount: Int = 0\n    var oddMinSumSumSumCount: Int = 0\n\
    \    var evenMaxSumSumSumSum: Int = 0\n    var oddMaxSumSumSumSum: Int = 0\n \
    \   var evenMinSumSumSumSum: Int = 0\n    var oddMinSumSumSumSum: Int = 0\n  \
    \  var evenMaxSumSumSumSumCount: Int = 0\n    var oddMaxSumSumSumSumCount: Int\
    \ = 0\n    var evenMinSumSumSumCount: Int = 0\n    var oddMinSumSumSumCount: Int\
    \ = 0\n    var evenMaxSum", "    var result = -1\n    var x = x % 2\n    var y\
    \ = y % 2\n    while x >= y {\n        if x == 0 {\n            result = y\n \
    \           break\n        }\n        x /= 2\n        y /= 2\n    }\n    if x\
    \ == 0 {\n        result = x\n    }\n    return result", "    if x < y {\n   \
    \     return -1\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n  \
    \  \n    for i in 0..<(x-y) {\n        if i % 2 == 0 {\n            even += i\n\
    \        } else {\n            odd += i\n        }\n    }\n    \n    if even >\
    \ y {\n        return even\n    }\n    \n    return odd", "    if x < y {\n  \
    \      return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0\
    \ && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 == 0 {\n\
    \        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return -1\n\
    \    }\n    return -1", "    var result = -1\n    var x = x - 1\n    var y = y\
    \ - 1\n    var even = 1\n    var odd = 0\n    while even > 0 || odd > 0 {\n  \
    \      if even > 0 {\n            even = even + x\n        }\n        if odd >\
    \ 0 {\n            odd = odd + y\n        }\n        if even > 0 {\n         \
    \   x = x - even\n        }\n        if odd > 0 {\n            y = y - odd\n \
    \       }\n        if even > 0 {\n            even = even + x\n        }\n   \
    \     if odd > 0 {\n            odd = odd + y\n        }\n        if even > 0\
    \ {\n            x = x - even\n        }\n        if odd > 0 {\n            y\
    \ = y - odd\n        }\n        if even > 0 {\n            even = even + x\n \
    \       }\n        if odd > 0 {\n            odd = odd + y\n        }\n      \
    \  if even > 0 {\n            x = x - even\n        }\n        if odd > 0 {\n\
    \            y = y - odd\n        }\n        if even > 0 {\n            even =\
    \ even + x\n        }\n        if odd > 0 {\n            odd = odd + y\n     \
    \   }\n        if even > 0 {\n            x = x - even\n        }\n        if\
    \ odd > 0 {\n            y = y - odd\n        }\n        if even > 0 {\n     \
    \       even = even + x\n        }\n        if odd > 0 {\n            odd = odd\
    \ + y\n        }\n        if even > 0 {\n            x = x - even\n        }\n\
    \        if odd > 0 {\n            y = y - odd\n        }\n        if even > 0\
    \ {\n            even = even + x\n        }\n        if odd > 0 {\n          \
    \  odd = odd + y\n        }\n        if even > 0 {\n            x = x - even\n\
    \        }\n        if odd > 0 {\n            y = y - odd\n        }\n       \
    \ if even > 0 {\n            even = even + x\n        }\n        if odd > 0 {\n\
    \            odd = odd + y\n        }\n        if even > 0 {\n            x =\
    \ x - even\n        }\n        if odd > 0 {\n            y = y - odd\n       \
    \ }\n        if even > 0 {\n            even = even + x\n        }\n        if\
    \ odd > 0 {\n            odd = odd + y\n        }\n        if even > 0 {\n   \
    \         x = x - even\n        }\n        if odd > 0 {\n            y = y - odd\n\
    \        }\n        if even > 0 {\n            even = even + x\n        }\n  \
    \      if odd > 0 {\n            odd = odd + y\n        }\n        if even > 0\
    \ {\n            x = x - even\n        }\n        if odd > 0 {\n            y\
    \ = y - odd\n        }\n        if even > 0 {\n            even = even + x\n \
    \       }\n        if odd > 0 {\n            odd = odd + y\n        }\n      \
    \  if even > 0 {", "    var even: Int = 0\n    var odd: Int = 0\n    var biggest:\
    \ Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin:\
    \ Int = 0\n    var oddMin: Int = 0\n    var evenMaxIndex: Int = 0\n    var oddMaxIndex:\
    \ Int = 0\n    var evenMinIndex: Int = 0\n    var oddMinIndex: Int = 0\n    var\
    \ evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int\
    \ = 0\n    var oddMinCount: Int = 0\n    var evenMaxSum: Int = 0\n    var oddMaxSum:\
    \ Int = 0\n    var evenMinSum: Int = 0\n    var oddMinSum: Int = 0\n    var evenMaxSumIndex:\
    \ Int = 0\n    var oddMaxSumIndex: Int = 0\n    var evenMinSumIndex: Int = 0\n\
    \    var oddMinSumIndex: Int = 0\n    var evenMaxSumCount: Int = 0\n    var oddMaxSumCount:\
    \ Int = 0\n    var evenMinSumCount: Int = 0\n    var oddMinSumCount: Int = 0\n\
    \    var evenMaxSumSum: Int = 0\n    var oddMaxSumSum: Int = 0\n    var evenMinSumSum:\
    \ Int = 0\n    var oddMinSumSum: Int = 0\n    var evenMaxSumSumIndex: Int = 0\n\
    \    var oddMaxSumSumIndex: Int = 0\n    var evenMinSumSumIndex: Int = 0\n   \
    \ var oddMinSumSumIndex: Int = 0\n    var evenMaxSumSumCount: Int = 0\n    var\
    \ oddMaxSumSumCount: Int = 0\n    var evenMinSumSumCount: Int = 0\n    var oddMinSumSumCount:\
    \ Int = 0\n    var evenMaxSumSumSum: Int = 0\n    var oddMaxSumSumSum: Int = 0\n\
    \    var evenMinSumSumSum: Int = 0\n    var oddMinSumSumSum: Int = 0\n    var\
    \ evenMaxSumSumSumIndex: Int = 0\n    var oddMaxSumSumSumIndex: Int = 0\n    var\
    \ evenMinSumSumSumIndex: Int = 0\n    var oddMinSumSumSumIndex: Int = 0\n    var\
    \ evenMaxSumSumSumCount: Int = 0\n    var oddMaxSumSumSumCount: Int = 0\n    var\
    \ evenMinSumSumSumCount: Int = 0\n    var oddMinSumSumSumCount: Int = 0\n    var\
    \ evenMaxSumSumSumSum: Int = 0\n    var oddMaxSumSumSumSum: Int = 0\n    var evenMinSumSumSumSum:\
    \ Int = 0\n    var oddMinSumSumSumSum: Int = 0\n    var evenMaxSumSumSumSumIndex: ",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return -1", " \
    \   if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    var biggest = y\n    for num in stride(from: x, through: y, by: 2)\
    \ {\n        if num % 2 == 0 {\n            biggest = num\n        }\n    }\n\
    \    return biggest", "    if x < y {\n        return -1\n    }\n    \n    var\
    \ result = x\n    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n     \
    \       result = result / 2\n        } else {\n            result = result * 3\
    \ + 1\n        }\n    }\n    \n    return result", "    var result = -1\n    var\
    \ x = x - 1\n    var y = y - 1\n    while x >= y {\n        if x % 2 == 0 && y\
    \ % 2 == 0 {\n            result = x\n        }\n        x /= 2\n        y /=\
    \ 2\n    }\n    return result", "    if x <= y {\n        return -1\n    }\n \
    \   \n    var biggest = y\n    \n    for num in stride(from: x, through: y, by:\
    \ 2) {\n        if num % 2 == 0 {\n            biggest = num\n            break\n\
    \        }\n    }\n    \n    return biggest", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + y\n    }\n    if x % 2 == 0 {\n        return\
    \ y\n    }\n    return x", "    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var evenMax: Int = 0\n\
    \    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n\
    \    var evenMax2: Int = 0\n    var oddMax2: Int = 0\n    var evenMin2: Int =\
    \ 0\n    var oddMin2: Int = 0\n    var evenMax3: Int = 0\n    var oddMax3: Int\
    \ = 0\n    var evenMin3: Int = 0\n    var oddMin3: Int = 0\n    var evenMax4:\
    \ Int = 0\n    var oddMax4: Int = 0\n    var evenMin4: Int = 0\n    var oddMin4:\
    \ Int = 0\n    var evenMax5: Int = 0\n    var oddMax5: Int = 0\n    var evenMin5:\
    \ Int = 0\n    var oddMin5: Int = 0\n    var evenMax6: Int = 0\n    var oddMax6:\
    \ Int = 0\n    var evenMin6: Int = 0\n    var oddMin6: Int = 0\n    var evenMax7:\
    \ Int = 0\n    var oddMax7: Int = 0\n    var evenMin7: Int = 0\n    var oddMin7:\
    \ Int = 0\n    var evenMax8: Int = 0\n    var oddMax8: Int = 0\n    var evenMin8:\
    \ Int = 0\n    var oddMin8: Int = 0\n    var evenMax9: Int = 0\n    var oddMax9:\
    \ Int = 0\n    var evenMin9: Int = 0\n    var oddMin9: Int = 0\n    var evenMax10:\
    \ Int = 0\n    var oddMax10: Int = 0\n    var evenMin10: Int = 0\n    var oddMin10:\
    \ Int = 0\n    var evenMax11: Int = 0\n    var oddMax11: Int = 0\n    var evenMin11:\
    \ Int = 0\n    var oddMin11: Int = 0\n    var evenMax12: Int = 0\n    var oddMax12:\
    \ Int = 0\n    var evenMin12: Int = 0\n    var oddMin12: Int = 0\n    var evenMax13:\
    \ Int = 0\n    var oddMax13: Int = 0\n    var evenMin13: Int = 0\n    var oddMin13:\
    \ Int = 0\n    var evenMax14: Int = 0\n    var oddMax14: Int = 0\n    var evenMin14:\
    \ Int = 0\n    var oddMin14: Int = 0\n    var evenMax15: Int = 0\n    var oddMax15:\
    \ Int = 0\n    var evenMin15: Int = 0\n    var oddMin15: Int = 0\n    var evenMax16:\
    \ Int = 0\n    var oddMax16: Int = 0\n    var evenMin16: Int = 0\n", "    if x\
    \ < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n  \
    \  }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n\
    \        return y / 2\n    }\n    return -1", "    if x < y {\n        return\
    \ -1\n    }\n    \n    var even = Int()\n    var odd = Int()\n    \n    for i\
    \ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n\
    \    if even > y {\n        return even\n    }\n    \n    return odd", "    if\
    \ x < y {\n        swap(x, y)\n    }\n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    for z in\
    \ 0..<y {\n        x = x + 1\n        y = y + 1\n        if x % 2 == 0 {\n   \
    \         even = even + 1\n        }\n        if y % 2 == 0 {\n            odd\
    \ = odd + 1\n        }\n        if even > odd {\n            break\n        }\n\
    \    }\n    if even > odd {\n        return even\n    }\n    return odd", "  \
    \  if x <= 0 || y <= 0 {\n        return -1\n    }\n    var even: Int = 0\n  \
    \  var odd: Int = 0\n    for _ in 0..<(x-y) {\n        if x % 2 == 0 {\n     \
    \       even += 2\n            x /= 2\n        } else {\n            odd += 1\n\
    \            x /= 2\n        }\n    }\n    if even > odd {\n        return even\n\
    \    } else {\n        return odd\n    }", "    if x < y {\n        return -1\n\
    \    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in\
    \ 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n \
    \   if even > y {\n        return even\n    } else {\n        return odd\n   \
    \ }", "    var biggest = y\n    var smaller = x\n    while biggest < smaller +\
    \ 1 {\n        if biggest % 2 == 0 && smaller % 2 == 0 {\n            biggest\
    \ = biggest / 2\n            smaller = smaller / 2\n        } else if biggest\
    \ % 2 == 0 && smaller % 2 != 0 {\n            biggest = biggest / 2\n        }\
    \ else {\n            smaller = smaller / 2\n        }\n    }\n    return biggest",
  "    if x < y {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    var x: Int\n    var y: Int\n    for (x = y; x > 0; x--, y += 2) {\n\
    \        if x % 2 == 0 {\n            even = even * x + x\n        } else {\n\
    \            odd = odd * x + x\n        }\n    }\n    if even > odd {\n      \
    \  return even\n    } else {\n        return odd\n    }", "    if x < y {\n  \
    \      return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y /\
    \ 2)", "    var result = -1\n    var even = 1\n    var odd = 0\n    var x = x\
    \ - 1\n    var y = y - 1\n    \n    while x >= 0 && y >= 0 {\n        if x % 2\
    \ == 0 && y % 2 == 0 {\n            result = x\n            even = even + 1\n\
    \        }\n        if x % 2 != 0 && y % 2 != 0 {\n            result = y\n  \
    \          odd = odd + 1\n        }\n        x = x - 1\n        y = y - 1\n  \
    \  }\n    \n    if even > odd {\n        result = even\n    }\n    return result",
  "    var result = -1\n    if x > y {\n        swap(x, y)\n    }\n    for number\
    \ in stride(from: x, through: y, by: 2) {\n        if number % 2 == 0 {\n    \
    \        result = number\n            break\n        }\n    }\n    return result",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    if x > y {\n \
    \       return choose_num(x / 2, y)\n    }\n    return choose_num(x, y / 2)",
  "    var result = -1\n    \n    if x >= y {\n        return -1\n    }\n    \n  \
    \  if x == y {\n        return x\n    }\n    \n    if x % 2 == 0 {\n        if\
    \ y % 2 == 0 {\n            result = x\n        } else {\n            result =\
    \ y\n        }\n    } else {\n        if y % 2 == 0 {\n            result = y\n\
    \        } else {\n            result = x\n        }\n    }\n    \n    return\
    \ result", "    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int\
    \ = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n\
    \    for x in stride(from: x, through: y, by: 1) {\n        if x % 2 == 0 {\n\
    \            even += x\n            if even > evenMax {\n                evenMax\
    \ = even\n            }\n        } else {\n            odd += x\n            if\
    \ odd > oddMax {\n                oddMax = odd\n            }\n        }\n   \
    \ }\n    if evenMax < y {\n        return evenMax\n    }\n    if oddMax < y {\n\
    \        return oddMax\n    }\n    return -1", "    if x <= 0 || y <= 0 {\n  \
    \      return -1\n    }\n    var result = x\n    for _ in 0..<y {\n        if\
    \ result % 2 == 0 {\n            result = result / 2\n        } else {\n     \
    \       return -1\n        }\n    }\n    return result", "    if x > y {\n   \
    \     (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n  \
    \  var x: Int = 0\n    var y: Int = 0\n    while x < y {\n        even = even\
    \ + x\n        odd = odd + y\n        if even > odd {\n            (x, y) = (x,\
    \ y)\n        } else {\n            (x, y) = (y, x)\n        }\n    }\n    return\
    \ even", "    if x > y {\n        return -1\n    }\n    var even: Int = 0\n  \
    \  var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    for x in stride(from:\
    \ x, to: y, by: 2) {\n        if x % 2 == 0 {\n            even = even * 2 + x\n\
    \        } else {\n            odd = odd * 2 + x\n        }\n    }\n    if even\
    \ > odd {\n        return even\n    } else {\n        return odd\n    }", "  \
    \  var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var z = abs(x-y)\n\
    \    while z > 0 {\n        if x % 2 == 0 && y % 2 == 0 {\n            if x ==\
    \ y {\n                result = x\n            } else {\n                result\
    \ = y\n            }\n            break\n        }\n        x /= 2\n        y\
    \ /= 2\n        z /= 2\n    }\n    return result", "    var result = -1\n    if\
    \ x < y {\n        result = x\n    } else {\n        result = y\n    }\n    \n\
    \    while result > 0 && result % 2 == 0 {\n        result /= 2\n    }\n    \n\
    \    return result", "    if x <= y {\n        return -1\n    }\n    var result\
    \ = x\n    var remainder = y\n    while remainder > 0 {\n        if remainder\
    \ % 2 == 0 {\n            result = remainder\n            break\n        }\n \
    \       remainder /= 2\n    }\n    return result", "    var result = -1\n    \n\
    \    if x > y {\n        result = x\n    } else {\n        result = y\n    }\n\
    \    \n    if result % 2 == 0 {\n        result = (result / 2)\n    }\n    \n\
    \    return result", "    var even: Int = 0\n    var odd: Int = 0\n    var biggest:\
    \ Int = 0\n    for var i = x; i <= y; i++ {\n        if i % 2 == 0 {\n       \
    \     even += i\n        } else {\n            odd += i\n        }\n        if\
    \ even > biggest {\n            biggest = even\n        }\n        if odd > biggest\
    \ {\n            biggest = odd\n        }\n    }\n    return biggest", "    if\
    \ x <= y {\n        return -1\n    }\n    var even = y\n    for _ in 0..<(x-y)\
    \ {\n        even = even / 2\n    }\n    return even", "    if x < y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 ==\
    \ 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x % 2 == 0\
    \ {\n        return x - 1\n    }\n    if y % 2 == 0 {\n        return y + 1\n\
    \    }\n    return -1", "    if x <= 0 || y <= 0 {\n        return -1\n    }\n\
    \    \n    var result = x\n    \n    for _ in 0..<y {\n        if result % 2 ==\
    \ 0 {\n            result = result / 2\n        } else {\n            result /=\
    \ 2\n        }\n    }\n    \n    return result", "    var result = -1\n    if\
    \ x > y {\n        var temp = x\n        x = y\n        y = temp\n    }\n    for\
    \ var i = x; i <= y; i++ {\n        if i % 2 == 0 {\n            result = i\n\
    \            break\n        }\n    }\n    return result", "    var result = -1\n\
    \    var x = x - 1\n    var y = y - 1\n    var even = 1\n    var odd = 0\n   \
    \ var eveneven = 1\n    var evenodd = 0\n    var oddodd = 0\n    var eveneveneven\
    \ = 1\n    var evenevenodd = 0\n    var evenoddodd = 0\n    var oddoddeven = 1\n\
    \    var oddoddodd = 0\n    var eveneveneveneven = 1\n    var evenevenevenodd\
    \ = 0\n    var evenevenevenevenodd = 0\n    var evenevenevenoddodd = 0\n    var\
    \ evenevenevenevenodd = 0\n    var evenevenevenevenevenodd = 0\n    var evenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenodd = 0\n    var evenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenodd = 0\n    var evenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenodd = 0\n    var\
    \ evenevenevenevenevenevenevenevenevenevenevenevenevenevenodd = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var evenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenevenodd\
    \ = 0\n    var eveneveneveneven", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n\
    \        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n\
    \    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "  \
    \  var result = -1\n    var x = x - 1\n    var y = y - 1\n    while x >= y {\n\
    \        if x % 2 == 0 && y % 2 == 0 {\n            result = x\n            break\n\
    \        }\n        x /= 2\n        y /= 2\n    }\n    return result", "    var\
    \ result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var x_even = x % 2\
    \ == 0\n    var y_even = y % 2 == 0\n    if x_even && y_even {\n        if x ==\
    \ y {\n            result = x\n        } else {\n            var x_odd = x % 2\
    \ == 1\n            var y_odd = y % 2 == 1\n            if x_odd && y_odd {\n\
    \                if x == y {\n                    result = x\n               \
    \ } else {\n                    result = y\n                }\n            } else\
    \ {\n                if x == y {\n                    result = x\n           \
    \     } else {\n                    result = y\n                }\n          \
    \  }\n        }\n    } else {\n        if x == y {\n            result = x\n \
    \       } else {\n            result = y\n        }\n    }\n    return result",
  "    if x < y {\n        return -1\n    }\n    var result = x\n    var remainder\
    \ = y\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n          \
    \  result = result + 1\n        }\n        remainder = remainder / 2\n    }\n\
    \    return result", "    var result = -1\n    var x = x - 1\n    var y = y -\
    \ 1\n    while x >= y {\n        if x % 2 == 0 && y % 2 == 0 {\n            result\
    \ = x\n            break\n        }\n        x /= 2\n        y /= 2\n    }\n \
    \   return result", "    if x < y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x\
    \ * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y\
    \ % 2 == 0 {\n        return y / 2\n    }\n    return -1", "    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n    for (x = y; x\
    \ > 0; x--) { \n        for (y = 0; y > 0; y--) { \n            if ((x % 2) ==\
    \ 0) {\n                even = even * x + y\n            } else {\n          \
    \      odd = odd * x + y\n            }\n        }\n    }\n    if even > odd {\n\
    \        return even\n    } else {\n        return odd\n    }", "    if x <= y\
    \ {\n        return -1\n    }\n    \n    var even: Int = 0\n    var odd: Int =\
    \ 0\n    \n    for n in 1...y {\n        if x % n == 0 {\n            even = even\
    \ * n + n\n        }\n        else {\n            odd = odd * n + n\n        }\n\
    \    }\n    \n    if even > y {\n        return even\n    }\n    \n    return\
    \ odd", "    var even: Int = 0\n    var odd: Int = 0\n    var biggest: Int = 0\n\
    \    \n    if x > y {\n        biggest = y\n        even = x - y\n    } else {\n\
    \        biggest = x\n        even = y - x\n    }\n    \n    if even > 0 {\n \
    \       biggest = biggest + even\n    }\n    \n    if odd > 0 {\n        biggest\
    \ = biggest + odd\n    }\n    \n    return biggest", "    if x < y {\n       \
    \ return choose_num(y, x)\n    }\n    \n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    \n    for i in 0..<(x-y) {\n        if x % 2 == 0 {\n            even\
    \ += y\n        } else {\n            odd += y\n        }\n    }\n    \n    if\
    \ even > odd {\n        return even\n    } else {\n        return odd\n    }",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    for _ in 0..<(x-y) {\n        x = rand.Int()\n        y = rand.Int()\n\
    \        if x % 2 == 0 && y % 2 == 0 {\n            even = even + x\n        \
    \    odd = odd + y\n        }\n    }\n    if even > odd {\n        return even\n\
    \    } else {\n        return odd\n    }", "    var result = -1\n    var x = abs(x)\n\
    \    var y = abs(y)\n    if x > y {\n        result = x\n    } else {\n      \
    \  result = y\n    }\n    if result > 0 {\n        if result % 2 == 0 {\n    \
    \        return result\n        } else {\n            return -1\n        }\n \
    \   } else {\n        if result % 2 == 0 {\n            return -1\n        } else\
    \ {\n            return result\n        }\n    }", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return -1", "    var result = -1\n    if x\
    \ > y {\n        result = x\n    } else {\n        result = y\n    }\n    \n \
    \   for _ in 0..<(x-y) {\n        if result % 2 == 0 {\n            result = result\
    \ / 2\n        } else {\n            result = result * 3 + 1\n        }\n    }\n\
    \    \n    return result", "    if x < y {\n        return -1\n    }\n    if x\
    \ == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    return -1", "    if x < y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if\
    \ y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x %\
    \ 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2\
    \ == 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n      \
    \  return x + (y - x) / 2\n    }\n    return -1", "    if x > y {\n        (x,\
    \ y) = (y, x)\n    }\n    \n    var result: Int = 0\n    \n    for _ in 0..<(x-y)\
    \ {\n        result += 2\n    }\n    \n    if result > x {\n        result = x\n\
    \    }\n    \n    return result", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n\
    \        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n\
    \    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "  \
    \  if x < y {\n        return -1\n    }\n    \n    var result = x\n    \n    for\
    \ _ in 0..<y {\n        if result % 2 == 0 {\n            result = result / 2\n\
    \        } else {\n            return -1\n        }\n    }\n    \n    return result",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n\
    \    }\n    if x % 2 == 0 {\n        return y\n    }\n    return x", "    if x\
    \ <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }", "    var result = -1\n    var xMin = x\n    var\
    \ xMax = y\n    var yMin = y\n    var yMax = x\n    \n    while xMin <= xMax &&\
    \ yMin <= yMax {\n        if (xMin + yMin == xMax + yMax) {\n            result\
    \ = xMin + yMin\n            break\n        }\n        if (xMin + yMin > xMax\
    \ + yMax) {\n            yMax = xMax + yMax - xMin + yMin\n        } else {\n\
    \            xMin = xMin + xMax - xMin + yMin\n        }\n    }\n    \n    return\
    \ result", "    var result = -1\n    if x > y {\n        (x, y) = (y, x)\n   \
    \ }\n    for number in stride(from: x, through: y, by: 2) {\n        if number\
    \ % 2 == 0 {\n            if number > result {\n                result = number\n\
    \            }\n        }\n    }\n    return result", "    if x < y {\n      \
    \  return -1\n    }\n    if x == y {\n        return x\n    }\n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z:\
    \ Int = 0\n    \n    for z in 0..<y {\n        x = x + 1\n        y = y + 1\n\
    \        if x % 2 == 0 {\n            even = even + 1\n        }\n        if y\
    \ % 2 == 0 {\n            odd = odd + 1\n        }\n        if even > odd {\n\
    \            return even\n        }\n        if odd > even {\n            return\
    \ odd\n        }\n    }\n    return -1", "    var result = -1\n    var x = abs(x)\n\
    \    var y = abs(y)\n    var xMinusY = x - y\n    if xMinusY > 0 {\n        result\
    \ = x\n    } else {\n        result = y\n    }\n    return result", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    var x_even = x % 2 == 0\n\
    \    var y_even = y % 2 == 0\n    if x_even && y_even {\n        if x > y {\n\
    \            result = x\n        } else {\n            result = y\n        }\n\
    \    } else if x_even {\n        result = x\n    } else if y_even {\n        result\
    \ = y\n    } else {\n        if x > y {\n            result = x\n        } else\
    \ {\n            result = y\n        }\n    }\n    return result", "    if x <=\
    \ y {\n        return -1\n    }\n    var even = Int()\n    var odd = Int()\n \
    \   var result = Int()\n    for var i = x; i <= y; i++ {\n        if i % 2 ==\
    \ 0 {\n            even = i\n        } else {\n            odd = i\n        }\n\
    \        if even > odd {\n            result = even\n        } else {\n      \
    \      result = odd\n        }\n    }\n    return result", "    if x <= y {\n\
    \        return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    \n    while x < y {\n        if x % 2 ==\
    \ 0 {\n            even = even + x\n        }\n        else {\n            odd\
    \ = odd + x\n        }\n        x = x + 1\n    }\n    \n    if even > odd {\n\
    \        return even\n    }\n    else {\n        return odd\n    }", "    var\
    \ even: Int = 0\n    var odd: Int = 0\n    var biggest: Int = -1\n\n    if x <\
    \ y {\n        for _ in 0..<(x-y) {\n            even += 2\n        }\n      \
    \  for _ in 0..<(y-x) {\n            odd += 2\n        }\n    } else {\n     \
    \   for _ in 0..<(y-x) {\n            even += 2\n        }\n        for _ in 0..<(x-y)\
    \ {\n            odd += 2\n        }\n    }\n\n    if even > odd {\n        biggest\
    \ = even\n    } else {\n        biggest = odd\n    }\n\n    return biggest"]
stop_tokens:
- "\n}"

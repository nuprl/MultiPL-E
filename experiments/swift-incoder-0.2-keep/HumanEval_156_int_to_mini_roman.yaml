name: HumanEval_156_int_to_mini_roman
language: swift
prompt: "\n/// Given a positive integer, obtain its roman numeral equivalent as a\
  \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
  /// Examples:\n/// >>> int_to_mini_roman(19) == 'xix'\n/// >>> int_to_mini_roman(152)\
  \ == 'clii'\n/// >>> int_to_mini_roman(426) == 'cdxxvi'\nfunc int_to_mini_roman(number:\
  \ Int) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(int_to_mini_roman(number: 19) == \"xix\"\
  )\nassert(int_to_mini_roman(number: 152) == \"clii\")\nassert(int_to_mini_roman(number:\
  \ 251) == \"ccli\")\nassert(int_to_mini_roman(number: 426) == \"cdxxvi\")\nassert(int_to_mini_roman(number:\
  \ 500) == \"d\")\nassert(int_to_mini_roman(number: 1) == \"i\")\nassert(int_to_mini_roman(number:\
  \ 4) == \"iv\")\nassert(int_to_mini_roman(number: 43) == \"xliii\")\nassert(int_to_mini_roman(number:\
  \ 90) == \"xc\")\nassert(int_to_mini_roman(number: 94) == \"xciv\")\nassert(int_to_mini_roman(number:\
  \ 532) == \"dxxxii\")\nassert(int_to_mini_roman(number: 900) == \"cm\")\nassert(int_to_mini_roman(number:\
  \ 994) == \"cmxciv\")\nassert(int_to_mini_roman(number: 1000) == \"m\")"
completions: ["    let roman = romans[number]\n    if roman == nil {\n        return\
    \ \"\"\n    }\n    return roman!", "    var roman = \"\"\n    var remainder =\
    \ number\n    var quotient = 0\n    while remainder > 0 {\n        quotient =\
    \ remainder / 10\n        remainder = remainder % 10\n        roman += mini_roman[quotient]\n\
    \    }\n    return roman", "    var roman = \"\"\n    var remainder = number\n\
    \    var i = 1\n    while remainder > 0 {\n        remainder -= i\n        roman\
    \ += roman_digits[remainder]\n        i += 1\n    }\n    return roman", "    var\
    \ roman = \"\"\n    var num: Int\n    var numStr: String\n    var romanStr: String\n\
    \n    for numStr in \"MCMXC\":\n        romanStr = romanStr + numStr\n    }\n\n\
    \    for numStr in \"CLD\":\n        romanStr = romanStr + numStr\n    }\n\n \
    \   for numStr in \"MN\":\n        romanStr = romanStr + numStr\n    }\n\n   \
    \ for numStr in \"MMM\":\n        romanStr = romanStr + numStr\n    }\n\n    for\
    \ numStr in \"III\":\n        romanStr = romanStr + numStr\n    }\n\n    for numStr\
    \ in \"IV\":\n        romanStr = romanStr + numStr\n    }\n\n    for numStr in\
    \ \"V\":\n        romanStr = romanStr + numStr\n    }\n\n    for numStr in \"\
    IX\":\n        romanStr = romanStr + numStr\n    }\n\n    for numStr in \"X\"\
    :\n        romanStr = romanStr + numStr\n    }\n\n    for numStr in \"XL\":\n\
    \        romanStr = romanStr + numStr\n    }\n\n    for numStr in \"L\":\n   \
    \     romanStr = romanStr + numStr\n    }\n\n    for numStr in \"XC\":\n     \
    \   romanStr = romanStr + numStr\n    }\n\n    for numStr in \"C\":\n        romanStr\
    \ = romanStr + numStr\n    }\n\n    for numStr in \"D\":\n        romanStr = romanStr\
    \ + numStr\n    }\n\n    for numStr in \"M\":\n        romanStr = romanStr + numStr\n\
    \    }\n\n    for numStr in \"CM\":\n        romanStr = romanStr + numStr\n  \
    \  }\n\n    for numStr in \"MN\":\n        romanStr = romanStr + numStr\n    }\n\
    \n    for numStr in \"MMM\":\n        romanStr = romanStr + numStr\n    }\n\n\
    \    for numStr in \"MMM\":\n        romanStr = romanStr + numStr\n    }\n\n \
    \   for numStr in \"MMMM\":\n        romanStr = romanStr + numStr\n    }\n\n \
    \   for numStr in \"MMMM\":\n        romanStr = romanStr + numStr\n    }\n\n \
    \   for numStr in \"MMMM\":\n        romanStr = romanStr + numStr\n    }\n\n \
    \   for numStr in \"MMMM\":\n        romanStr = romanStr + numStr\n    }\n\n",
  "    var roman = \"\"\n    var i = 0\n    var numerals = [Int]()\n    var romans\
    \ = [String]()\n    for num in 1...1000 {\n        numerals.append(num)\n    }\n\
    \    for num in numerals {\n        roman = \"\"\n        for _ in 1...num {\n\
    \            roman += \"M\"\n        }\n        romans.append(roman)\n    }\n\
    \    for num in numerals {\n        if number == num {\n            return romans[numerals.index(num)]\n\
    \        }\n    }\n    return \"\"", "    var roman = \"\"\n    var remainder\
    \ = number % 100\n    var quotient = number / 100\n    if quotient > 0 {\n   \
    \     roman = roman.prefix(quotient) + int_to_mini_roman(remainder)\n    }\n \
    \   if remainder > 0 {\n        roman = roman.suffix(remainder) + roman\n    }\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var romanDigits =\
    \ \"\"\n    var romanNumber = 0\n    var romanNumberDigits = 0\n    var romanNumberRoman\
    \ = 0\n    var romanNumberRomanDigits = 0\n    var romanNumberRomanRoman = 0\n\
    \    var romanNumberRomanRomanDigits = 0\n    var romanNumberRomanRomanRoman =\
    \ 0\n    var romanNumberRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanDigits = 0\n    var romanNumberRomanRomanRomanRomanRomanRomanRoman\
    \ = 0\n    var romanNumberRomanRomanRo", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digits_length\
    \ = 0\n    var roman_numeral_digits_index = 0\n    var roman_numeral_digits_index_max\
    \ = 0\n    var roman_numeral_digits_index_min = 0\n    var roman_numeral_digits_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_index = 0\n    var roman_numeral_digits_index_max_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max = 0\n\
    \    var roman_numeral_digits_index_max_min_index_max_min_index_max_min = 0\n\
    \    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_max_min_index_max_min_index_max_min",
  "    let roman = roman_numerals(number)\n    return roman.map(String::init).joined()",
  "    var roman = \"\"\n    var remainder = number\n    var remainder2 = number\n\
    \    var remainder3 = number\n    var remainder4 = number\n    var remainder5\
    \ = number\n    var remainder6 = number\n    var remainder7 = number\n    var\
    \ remainder8 = number\n    var remainder9 = number\n    var remainder10 = number\n\
    \    var remainder11 = number\n    var remainder12 = number\n    var remainder13\
    \ = number\n    var remainder14 = number\n    var remainder15 = number\n    var\
    \ remainder16 = number\n    var remainder17 = number\n    var remainder18 = number\n\
    \    var remainder19 = number\n    var remainder20 = number\n    var remainder21\
    \ = number\n    var remainder22 = number\n    var remainder23 = number\n    var\
    \ remainder24 = number\n    var remainder25 = number\n    var remainder26 = number\n\
    \    var remainder27 = number\n    var remainder28 = number\n    var remainder29\
    \ = number\n    var remainder30 = number\n    var remainder31 = number\n    var\
    \ remainder32 = number\n    var remainder33 = number\n    var remainder34 = number\n\
    \    var remainder35 = number\n    var remainder36 = number\n    var remainder37\
    \ = number\n    var remainder38 = number\n    var remainder39 = number\n    var\
    \ remainder40 = number\n    var remainder41 = number\n    var remainder42 = number\n\
    \    var remainder43 = number\n    var remainder44 = number\n    var remainder45\
    \ = number\n    var remainder46 = number\n    var remainder47 = number\n    var\
    \ remainder48 = number\n    var remainder49 = number\n    var remainder50 = number\n\
    \    var remainder51 = number\n    var remainder52 = number\n    var remainder53\
    \ = number\n    var remainder54 = number\n    var remainder55 = number\n    var\
    \ remainder56 = number\n    var remainder57 = number\n    var remainder58 = number\n\
    \    var remainder59 = number\n    var remainder60 = number\n    var remainder61\
    \ = number\n    var remainder62 = number\n    var remainder63 = number\n    var\
    \ remainder64 = number\n    var remainder65 = number\n    var remainder66 = number\n\
    \    var remainder67 = number\n    var remainder68 = number\n    var remainder69\
    \ = number\n    var remainder70 = number\n    var remainder71 = number\n    var\
    \ remainder72 = number\n    var remainder73 = number\n    var remainder74 = number\n\
    \    var remain", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var num = 0\n    var lastNum = 0\n    var lastNumStr = \"\"\
    \n    for numStr in romanNumStrs {\n        if number >= numStr.num {\n      \
    \      lastNum = numStr.num\n            lastNumStr = numStr.str\n        }\n\
    \    }\n    if lastNum == 0 {\n        return roman\n    }\n    for numStr in\
    \ romanNumStrs {\n        if lastNum >= numStr.num {\n            roman = roman.Insert(0,\
    \ numStr.str)\n            number -= lastNum\n            lastNum = 0\n      \
    \      lastNumStr = \"\"\n        }\n    }\n    if number > 0 {\n        roman\
    \ = roman.Insert(0, lastNumStr)\n    }\n    return roman", "    let roman = IntToRoman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var numeral = number\n\
    \    var index = 0\n    var romanNum = 0\n    var romanNumString = \"\"\n    var\
    \ romanNumStringWithSpaces = \"\"\n    var romanNumStringWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpaces = \"\"\n    var\
    \ romanNumStringWithSpacesWithSpacesWithSpacesWithSpaces = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = \"\"\n    var romanNumStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces",
  "    if number < 1 || number > 1000 {\n        throw Error::new(ENOENT, \"Invalid\
    \ number\")\n    }\n    let mut roman = String::new();\n    let mut numeral =\
    \ number;\n    let mut remainder = number;\n    let mut i = 1;\n    while remainder\
    \ > 0 {\n        remainder -= 10;\n        roman.push((numeral % 10).to_string());\n\
    \        numeral /= 10;\n        i += 1;\n    }\n    roman.push((numeral % 10).to_string());\n\
    \    roman.push((i as String).to_string());\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"\
    i\");\n    roman.push_str(\"x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"\
    x\");\n    roman.push_str(\"i\");\n    roman.push_str(\"x\");\n    ro", "    let\
    \ roman = mini_roman(number)\n    return roman.lowercased()", "    let roman =\
    \ roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    var roman = \"\"\n    var i = 0\n    for num in 0..<number {\n    \
    \    var romanDigit = romanDigits[num]\n        if romanDigit == 0 {\n       \
    \     romanDigit += romanDigit\n        } else {\n            romanDigit += romanDigits[romanDigit]\n\
    \        }\n        roman = roman.stringByAppendingString(romanDigit)\n      \
    \  i += 1\n    }\n    return roman.lowercaseString", "    let roman = roman_to_int(number)\n\
    \    return mini_roman_to_int(roman)", "    var roman = \"\"\n    var numeral\
    \ = \"\"\n    var remainder = number\n    var i = -1\n    for _ in 0..<4 {\n \
    \       i += 1\n        numeral = String(remainder % 10)\n        remainder =\
    \ remainder / 10\n        if numeral.isEmpty {\n            numeral = \"0\"\n\
    \        }\n        roman += numeral[i]\n    }\n    return roman", "    var roman\
    \ = \"\"\n    var numeral = number\n    var romanNum = 0\n    var romanNumDigits\
    \ = 0\n    var romanNumDigit = 0\n    var romanNumDigitCount = 0\n    var romanNumDigitCountMax\
    \ = 0\n    var romanNumDigitCountMaxIndex = 0\n    var romanNumDigitCountMin =\
    \ 0\n    var romanNumDigitCountMinIndex = 0\n    var romanNumDigitCountMaxDigit\
    \ = 0\n    var romanNumDigitCountMinDigit = 0\n    var romanNumDigitCountMaxDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigitDigitDigit = 0\n    var romanNumDigitCountMaxDigitDigitDigitDigit\
    \ = 0\n    var romanNumDigitCountMinDigit", "    let roman = romanNumerals(number)\n\
    \    return roman.map({ $0.lowercased() }).joined()", "    var roman = \"\"\n\
    \    var remainder = number\n    var remainder2 = number\n    var remainder3 =\
    \ number\n    var remainder4 = number\n    var remainder5 = number\n    var remainder6\
    \ = number\n    var remainder7 = number\n    var remainder8 = number\n    var\
    \ remainder9 = number\n    var remainder10 = number\n    var remainder11 = number\n\
    \    var remainder12 = number\n    var remainder13 = number\n    var remainder14\
    \ = number\n    var remainder15 = number\n    var remainder16 = number\n    var\
    \ remainder17 = number\n    var remainder18 = number\n    var remainder19 = number\n\
    \    var remainder20 = number\n    var remainder21 = number\n    var remainder22\
    \ = number\n    var remainder23 = number\n    var remainder24 = number\n    var\
    \ remainder25 = number\n    var remainder26 = number\n    var remainder27 = number\n\
    \    var remainder28 = number\n    var remainder29 = number\n    var remainder30\
    \ = number\n    var remainder31 = number\n    var remainder32 = number\n    var\
    \ remainder33 = number\n    var remainder34 = number\n    var remainder35 = number\n\
    \    var remainder36 = number\n    var remainder37 = number\n    var remainder38\
    \ = number\n    var remainder39 = number\n    var remainder40 = number\n    var\
    \ remainder41 = number\n    var remainder42 = number\n    var remainder43 = number\n\
    \    var remainder44 = number\n    var remainder45 = number\n    var remainder46\
    \ = number\n    var remainder47 = number\n    var remainder48 = number\n    var\
    \ remainder49 = number\n    var remainder50 = number\n    var remainder51 = number\n\
    \    var remainder52 = number\n    var remainder53 = number\n    var remainder54\
    \ = number\n    var remainder55 = number\n    var remainder56 = number\n    var\
    \ remainder57 = number\n    var remainder58 = number\n    var remainder59 = number\n\
    \    var remainder60 = number\n    var remainder61 = number\n    var remainder62\
    \ = number\n    var remainder63 = number\n    var remainder64 = number\n    var\
    \ remainder65 = number\n    var remainder66 = number\n    var remainder67 = number\n\
    \    var remainder68 = number\n    var remainder69 = number\n    var remainder70\
    \ = number\n    var remainder71 = number\n    var remainder72 = number\n    var\
    \ remainder73 = number\n    var remainder74 = number\n    var remain", "    let\
    \ roman = Roman(number)\n    return roman.roman", "    let roman = roman_numerals(number)\n\
    \    return roman.map({ $0.lowercased() }).joined()", "    var roman = \"\"\n\
    \    var i = 0\n    for num in 1...number {\n        roman = roman + mini_roman[i]\n\
    \        i += 1\n    }\n    return roman.lowercased()", "    var roman = \"\"\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n  \
    \  var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n   \
    \ var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var\
    \ c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h\
    \ = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m =\
    \ 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n\
    \    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n \
    \   var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var\
    \ m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r\
    \ = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w =\
    \ 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n\
    \    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n \
    \   var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n  \
    \  var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n   \
    \ var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var\
    \ w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b\
    \ = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g =\
    \ 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n\
    \    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n \
    \   var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n  \
    \  var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n   \
    \ var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var\
    \ g = 0\n    var ", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    if number < 1 || number > 1000 {\n        throw Error::new(ErrorKind::InvalidInput,\
    \ \"Invalid input: number must be between 1 and 1000\")\n    }\n    let mut roman\
    \ = String::new();\n    let mut prev_digit = String::new();\n    let mut prev_digits\
    \ = String::new();\n    let mut digit_count = 1;\n    let mut remainder = number;\n\
    \    while remainder > 0 {\n        let digit = remainder % 10;\n        roman.push(digit.to_string());\n\
    \        remainder /= 10;\n        digit_count += 1;\n    }\n    if remainder\
    \ > 0 {\n        roman.push(\"M\".to_string());\n    }\n    while digit_count\
    \ > 0 {\n        let digit = roman.chars().nth(digit_count - 1).unwrap();\n  \
    \      if digit == \"M\" {\n            roman.push(\"M\".to_string());\n     \
    \       digit_count -= 1;\n        } else {\n            prev_digits.push(digit);\n\
    \            digit_count -= 1;\n        }\n    }\n    if prev_digits.len() > 0\
    \ {\n        roman.push(prev_digits);\n    }\n    roman.push(prev_digit);\n  \
    \  roman.to_lowercase();", "    let roman = Roman(number)\n    return roman.miniRoman()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  var roman = \"\"\n    var numeral = \"\"\n    var lastDigit: Int = 0\n    var\
    \ lastDigitRoman: Int = 0\n    var lastDigitNumeral: Int = 0\n    var lastDigitRomanNumeral:\
    \ Int = 0\n    var lastDigitNumeralRoman: Int = 0\n    var lastDigitRomanNumeralRoman:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeral: Int = 0\n    var lastDigitRomanNumeralRomanNumeralRoman:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeral: Int = 0\n  \
    \  var lastDigitRomanNumeralRomanNumeralRomanNumeralRoman: Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRoman:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRoman:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeral:\
    \ Int = 0\n    var lastDigitRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumeralRomanNumer",
  "    var roman = \"\"\n    var num = 0\n    var last = 0\n    var roman_num = 0\n\
    \    var roman_num_str = \"\"\n    var roman_num_str2 = \"\"\n    var roman_num_str3\
    \ = \"\"\n    var roman_num_str4 = \"\"\n    var roman_num_str5 = \"\"\n    var\
    \ roman_num_str6 = \"\"\n    var roman_num_str7 = \"\"\n    var roman_num_str8\
    \ = \"\"\n    var roman_num_str9 = \"\"\n    var roman_num_str10 = \"\"\n    var\
    \ roman_num_str11 = \"\"\n    var roman_num_str12 = \"\"\n    var roman_num_str13\
    \ = \"\"\n    var roman_num_str14 = \"\"\n    var roman_num_str15 = \"\"\n   \
    \ var roman_num_str16 = \"\"\n    var roman_num_str17 = \"\"\n    var roman_num_str18\
    \ = \"\"\n    var roman_num_str19 = \"\"\n    var roman_num_str20 = \"\"\n   \
    \ var roman_num_str21 = \"\"\n    var roman_num_str22 = \"\"\n    var roman_num_str23\
    \ = \"\"\n    var roman_num_str24 = \"\"\n    var roman_num_str25 = \"\"\n   \
    \ var roman_num_str26 = \"\"\n    var roman_num_str27 = \"\"\n    var roman_num_str28\
    \ = \"\"\n    var roman_num_str29 = \"\"\n    var roman_num_str30 = \"\"\n   \
    \ var roman_num_str31 = \"\"\n    var roman_num_str32 = \"\"\n    var roman_num_str33\
    \ = \"\"\n    var roman_num_str34 = \"\"\n    var roman_num_str35 = \"\"\n   \
    \ var roman_num_str36 = \"\"\n    var roman_num_str37 = \"\"\n    var roman_num_str38\
    \ = \"\"\n    var roman_num_str39 = \"\"\n    var roman_num_str40 = \"\"\n   \
    \ var roman_num_str41 = \"\"\n    var roman_num_str42 = \"\"\n    var roman_num_str43\
    \ = \"\"\n    var roman_num_str44 = \"\"\n    var roman_num_str45 = \"\"\n   \
    \ var roman_num_str46 = \"\"\n    var roman_num_str47 = \"\"\n    var roman_num_str48\
    \ = \"\"\n    var roman_num_str49 = \"\"\n    var roman_num_str50 = \"\"\n   \
    \ var roman_num_str51 = \"\"\n    var roman_num_str52 = \"\"\n    var roman_num_str53\
    \ = \"\"\n    var roman_num_str54 = \"\"\n    var roman_num_str55 = \"\"\n   \
    \ var roman_num_str56 = \"\"\n    var roman_num_str57 = \"\"\n    var roman_num_str58\
    \ = \"\"\n    var roman_num_str59 = \"\"\n    var roman_num_str60 = \"\"\n   \
    \ var roman_num_", "    var roman = \"\"\n    var roman_numeral = \"\"\n    var\
    \ numeral = number\n    var numeral_roman = \"\"\n    var numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman = \"\"\n    var numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman = \"\
    \"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral =\
    \ \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_length\
    \ = 0\n    var roman_numeral_length2 = 0\n    var roman_numeral_length3 = 0\n\
    \    var roman_numeral_length4 = 0\n    var roman_numeral_length5 = 0\n    var\
    \ roman_numeral_length6 = 0\n    var roman_numeral_length7 = 0\n    var roman_numeral_length8\
    \ = 0\n    var roman_numeral_length9 = 0\n    var roman_numeral_length10 = 0\n\
    \    var roman_numeral_length11 = 0\n    var roman_numeral_length12 = 0\n    var\
    \ roman_numeral_length13 = 0\n    var roman_numeral_length14 = 0\n    var roman_numeral_length15\
    \ = 0\n    var roman_numeral_length16 = 0\n    var roman_numeral_length17 = 0\n\
    \    var roman_numeral_length18 = 0\n    var roman_numeral_length19 = 0\n    var\
    \ roman_numeral_length20 = 0\n    var roman_numeral_length21 = 0\n    var roman_numeral_length22\
    \ = 0\n    var roman_numeral_length23 = 0\n    var roman_numeral_length24 = 0\n\
    \    var roman_numeral_length25 = 0\n    var roman_numeral_length26 = 0\n    var\
    \ roman_numeral_length27 = 0\n    var roman_numeral_length28 = 0\n    var roman_numeral_length29\
    \ = 0\n    var roman_numeral_length30 = 0\n    var roman_numeral_length31 = 0\n\
    \    var roman_numeral_length32 = 0\n    var roman_numeral_length33 = 0\n    var\
    \ roman_numeral_length34 = 0\n    var roman_numeral_length35 = 0\n    var roman_numeral_length36\
    \ = 0\n    var roman_numeral_length37 = 0\n    var roman_numeral_length38 = 0\n\
    \    var roman_numeral_length39 = 0\n    var roman_numeral_length40 = 0\n    var\
    \ roman_numeral_length41 = 0\n    var roman_numeral_length42 = 0\n    var roman_numeral_length43\
    \ = 0\n    var roman_numeral_length44 = 0\n    var roman_numeral_length45 = 0\n\
    \    var roman_numeral_length46 = 0\n    var roman_numeral_length47 = 0\n    var\
    \ roman_numeral_length48 = 0\n    var roman_numeral_length49 = 0\n    var roman_numeral_length50\
    \ = 0\n    var roman_numeral_length51 = 0\n    var roman_numeral_length52 = 0\n\
    \    var roman_numeral_length53 = 0\n    var roman_numeral_length54 = 0\n    var\
    \ roman_numeral_length55 = 0\n    var roman_numeral_length", "    let roman =\
    \ roman_numerals(number)\n    return roman.map({ $0.lowercased() }).joined()",
  "    var roman = \"\"\n    var numeral = \"\"\n    var remainder = 0\n    var i\
    \ = 0\n    for i = Int(number); i >= 1; i-- {\n        remainder = i % 10\n  \
    \      numeral = String(remainder) + numeral\n        remainder = Int(number /\
    \ 10)\n    }\n    roman = numeral\n    return roman", "    if number < 1 || number\
    \ > 1000 {\n        return \"\"\n    }\n    var roman = \"\"\n    var numeral\
    \ = \"\"\n    var remainder = number\n    var index = 0\n    while remainder >\
    \ 0 {\n        numeral = String(remainder % 10)\n        remainder = remainder\
    \ / 10\n        roman = numeral + roman\n        index++\n    }\n    return roman.lowercased()",
  "    var roman = \"\"\n    var i = 0\n    var numeral = \"\"\n    var numerals =\
    \ [String]()\n    var romans = [String]()\n    var romanNumerals = [String]()\n\
    \    var romanNumeralsCount = [Int]()\n    var romanNumeralsCountMax = 1000\n\n\
    \    while i < number {\n        romanNumeralsCount[romanNumeralsCountMax] = romanNumeralsCountMax\n\
    \        romanNumeralsCountMax *= 10\n    }\n\n    for romanNumeralsCountIndex\
    \ in 0..<romanNumeralsCountMax {\n        romanNumeralsCount[romanNumeralsCountIndex]\
    \ = 0\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n  \
    \      romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<romanNumeralsCountMax {\n\
    \        romanNumerals[romanNumeralsIndex] = \"\"\n        romans[romanNumeralsIndex]\
    \ = \"\"\n    }\n\n    for romanNumeralsIndex in 0..<", "    var roman = \"\"\n\
    \    var num = 0\n    var i = 0\n    for num < number {\n        roman = roman\
    \ + int_to_roman(num)\n        num = num * 10\n        i += 1\n    }\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var roman_numeral = \"\"\n \
    \   var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count = 1\n\n\
    \    for number > 0 {\n        let remainder = number % 1000\n        roman_numeral\
    \ = String(format: \"%0*d\", roman_numeral_digit_count, number)\n        roman_numeral_digits\
    \ = String(format: \"%0*d\", roman_numeral_digit_count, remainder)\n        roman_numeral_digit_count\
    \ = roman_numeral_digit_count + 1\n\n        if roman_numeral_digit_count == 3\
    \ {\n            roman = String(format: \"%s%c%s\", roman, roman_numeral_digits[0],\
    \ roman_numeral_digits[1])\n            roman_numeral_digit_count = 1\n      \
    \  } else {\n            roman = String(format: \"%s%c%s\", roman, roman_numeral_digits[0],\
    \ roman_numeral_digits[1])\n            roman_numeral_digit_count = 2\n      \
    \  }\n\n        number = number / 1000\n    }\n\n    return roman.lowercased()",
  "    let roman = roman_numerals(number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = roman_numerals(number)\n    return roman.map(String::init).joined()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  let romanNumerals = [\n        \"I\",\n        \"II\",\n        \"III\",\n\
    \        \"IV\",\n        \"V\",\n        \"VI\",\n        \"VII\",\n        \"\
    VIII\",\n        \"IX\",\n        \"X\",\n        \"XI\",\n        \"XII\",\n\
    \        \"XIII\",\n        \"XIV\",\n        \"XV\",\n        \"XVI\",\n    \
    \    \"XVII\",\n        \"XVIII\",\n        \"XIX\",\n        \"XX\",\n      \
    \  \"XXI\",\n        \"XXII\",\n        \"XXIII\",\n        \"XXIV\",\n      \
    \  \"XXV\",\n        \"XXVI\",\n        \"XXVII\",\n        \"XXVIII\",\n    \
    \    \"XXIX\",\n        \"XXX\",\n        \"XXXI\",\n        \"XXXII\",\n    \
    \    \"XXXIII\",\n        \"XXXIV\",\n        \"XXXV\",\n        \"XXXVI\",\n\
    \        \"XXXVII\",\n        \"XXXVIII\",\n        \"XXXIX\",\n        \"XL\"\
    ,\n        \"L\",\n        \"LI\",\n        \"LII\",\n        \"LIII\",\n    \
    \    \"LIV\",\n        \"LV\",\n        \"LVI\",\n        \"LVII\",\n        \"\
    LVIII\",\n        \"LIX\",\n        \"LX\",\n        \"LXI\",\n        \"LXII\"\
    ,\n        \"LXIII\",\n        \"LXIV\",\n        \"LXV\",\n        \"LXVI\",\n\
    \        \"LXVII\",\n        \"LXVIII\",\n        \"LXIX\",\n        \"LXX\",\n\
    \        \"LXXI\",\n        \"LXXII\",\n        \"LXXIII\",\n        \"LXXIV\"\
    ,\n        \"LXXV\",\n        \"LXXVI\",\n        \"LXXVII\",\n        \"LXXVIII\"\
    ,\n        \"LXXIX\",\n        \"LXXX\",\n        \"LXXXI\",\n        \"LXXXII\"\
    ,\n        \"LXXXIII\",\n        \"LXXXIV\",\n        \"LXXXV\",\n        \"LXXXVI\"\
    ,\n        \"LXXXVII\",\n        \"LXXXVIII\",\n        \"LXXXIX\",\n        \"\
    LXL\",\n        \"LXLI\",\n        \"LXLII\",\n        \"LXLIII\",\n        \"\
    LXLIV\",\n        \"LXLV\",\n        \"LXLVI\",", "    let roman = roman_to_int(number)\n\
    \    return mini_roman_to_str(roman)", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    if number < 1 || number > 1000 {\n     \
    \   throw Error::new(ErrorKind::InvalidInput, \"Invalid input: number must be\
    \ between 1 and 1000\")\n    }\n\n    let mut roman = String::with_capacity(number)\n\
    \    let mut numerals = roman.chars();\n\n    for n in 1..number {\n        let\
    \ mut numeral = String::with_capacity(roman.len());\n        let mut remainder\
    \ = number % n;\n        let mut i = 1;\n\n        while remainder >= i {\n  \
    \          numeral.push((remainder % i + 'a').to_string());\n            remainder\
    \ = (remainder / i).unwrap();\n            i += 1;\n        }\n\n        numerals.push(numeral.to_owned());\n\
    \    }\n\n    roman = numerals.collect();\n    roman.sort();\n    roman.shrink_to_fit();\n\
    \n    roman", "    let roman = StringBuilder()\n    let romanDigits = romanDigits(number)\n\
    \    for digit in romanDigits {\n        roman.append(digit)\n    }\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var i = 0\n    var j = 0\n \
    \   var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n  \
    \  var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n   \
    \ var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var\
    \ z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e\
    \ = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j =\
    \ 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n\
    \    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n \
    \   var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n  \
    \  var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n   \
    \ var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o\
    \ = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t =\
    \ 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n\
    \    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n \
    \   var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n  \
    \  var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n   \
    \ var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var\
    \ t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y\
    \ = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d =\
    \ 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n\
    \    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n \
    \   var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n  \
    \  var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n   \
    \ var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var\
    \ d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var ", "    if number\
    \ < 1 || number > 1000 {\n        throw Error::new(ErrorKind::InvalidInput, \"\
    Invalid input\")\n    }\n\n    let mut roman = String::new();\n    let mut numeral\
    \ = number;\n    let mut numerals = vec![];\n\n    while numeral > 0 {\n     \
    \   let remainder = numeral % 10;\n        roman.push(remainder);\n        numeral\
    \ /= 10;\n        numerals.push(numeral);\n    }\n\n    let mut roman_numerals\
    \ = roman.chars().enumerate();\n    roman_numerals.sort_by(|a, b| b.1 - a.1);\n\
    \    let mut roman_numeral_string = \"\";\n    for numeral, index in roman_numerals\
    \ {\n        roman_numeral_string.push((index + 1) as char);\n    }\n\n    roman_numeral_string.to_lowercase();\n\
    \n    roman_numeral_string", "    var roman = \"\"\n    var roman_numeral = \"\
    \"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count = 0\n\
    \    var roman_numeral_digit_count_minus_one = 0\n    var roman_numeral_digit_count_minus_two\
    \ = 0\n    var roman_numeral_digit_count_minus_three = 0\n    var roman_numeral_digit_count_minus_four\
    \ = 0\n    var roman_numeral_digit_count_minus_five = 0\n    var roman_numeral_digit_count_minus_six\
    \ = 0\n    var roman_numeral_digit_count_minus_seven = 0\n    var roman_numeral_digit_count_minus_eight\
    \ = 0\n    var roman_numeral_digit_count_minus_nine = 0\n    var roman_numeral_digit_count_minus_ten\
    \ = 0\n    var roman_numeral_digit_count_minus_eleven = 0\n    var roman_numeral_digit_count_minus_twelve\
    \ = 0\n    var roman_numeral_digit_count_minus_thirteen = 0\n    var roman_numeral_digit_count_minus_fourteen\
    \ = 0\n    var roman_numeral_digit_count_minus_fifteen = 0\n    var roman_numeral_digit_count_minus_sixteen\
    \ = 0\n    var roman_numeral_digit_count_minus_seventeen = 0\n    var roman_numeral_digit_count_minus_eighteen\
    \ = 0\n    var roman_numeral_digit_count_minus_nineteen = 0\n    var roman_numeral_digit_count_minus_twenty\
    \ = 0\n    var roman_numeral_digit_count_minus_thirty = 0\n    var roman_numeral_digit_count_minus_forty\
    \ = 0\n    var roman_numeral_digit_count_minus_fifty = 0\n    var roman_numeral_digit_count_minus_sixty\
    \ = 0\n    var roman_numeral_digit_count_minus_seventy = 0\n    var roman_numeral_digit_count_minus_eighty\
    \ = 0\n    var roman_numeral_digit_count_minus_ninety = 0\n    var roman_numeral_digit_count_minus_hundred\
    \ = 0\n    var roman_numeral_digit_count_minus_thousand = 0\n    var roman_numeral_digit_count_minus_million\
    \ = 0\n    var roman_numeral_digit_count_minus_billion = 0\n    var roman_numeral_digit_count_minus_trillion\
    \ = 0\n    var roman_numeral_digit_count_minus_quadrillion = 0\n    var roman_numeral_digit_count_minus_quintillion\
    \ = 0\n    var roman_numeral_digit_count_minus_sextillion = 0\n    var roman_numeral_digit_count_minus_septillion\
    \ = 0\n    var ro", "    let roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = StringBuilder()\n    let roman_digits = roman_digits(number)\n\
    \    for digit in roman_digits {\n        roman.append(digit)\n    }\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var num = 0\n    var last =\
    \ 0\n    for _ in 0..<number {\n        num += 1\n        last = num % 10\n  \
    \      roman += mini_roman[last]\n    }\n    return roman", "    let roman = Array(1...number).map\
    \ { roman_numeral($0) }\n    return roman.joined(separator: \"\")", "    if number\
    \ < 1 || number > 1000 {\n        throw Error::new(ErrorKind::InvalidInput, \"\
    Invalid input\")\n    }\n    let mut roman = String::new();\n    let mut numeral\
    \ = number;\n    let mut remainder = number;\n    while numeral > 0 {\n      \
    \  let remainder, numeral = numeral / 10, numeral % 10;\n        roman.push((remainder\
    \ >= 5 && remainder <= 9) ? remainder + 'i' : remainder + 'v');\n    }\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"\
    i\");\n    roman.push_str(&numeral);\n    roman.push_str(\"i\");\n    roman.push_str(&numeral);\n\
    \    ", "    let roman = StringBuilder()\n    let numStr = String(number)\n  \
    \  let numLen = numStr.count\n    let numDigits = numLen / 3\n    let numQuarters\
    \ = numLen / 4\n    let numDimes = numLen / 5\n    let numNickels = numLen / 6\n\
    \    let numPennies = numLen / 7\n    let numOnes = numLen / 8\n    let numTens\
    \ = numLen / 9\n    let numHundreds = numLen / 10\n    let numThousands = numLen\
    \ / 11\n    let numTenThousands = numLen / 12\n    let numHundredThousands = numLen\
    \ / 13\n    let numOneThousands = numLen / 14\n    let numOneHundredThousands\
    \ = numLen / 15\n    let numOneThousandThousands = numLen / 16\n    let numOneHundredThousandThousands\
    \ = numLen / 17\n    let numOneThousandHundredThousands = numLen / 18\n    let\
    \ numOneHundredThousandHundredThousands = numLen / 19\n    let numOneThousandHundredHundredThousands\
    \ = numLen / 20\n    let numOneHundredHundredHundredThousands = numLen / 21\n\
    \    let numOneHundredHundredHundredHundredThousands = numLen / 22\n    let numOneHundredHundredHundredHundredHundredThousands\
    \ = numLen / 23\n    let numOneHundredHundredHundredHundredHundredHundredThousands\
    \ = numLen / 24\n    let numOneHundredHundredHundredHundredHundredHundredHundredThousands\
    \ = numLen / 25\n    let numOneHundredHundredHundredHundredHundredHundredHundredHundredThousands\
    \ = numLen / 26\n    let numOneHundredHundredHundredHundredHundredHundredHundredHundredHundredThousands\
    \ = numLen / 27\n    let numOneHundredHundredHundredHundredHundredHundredHundredHundredHundredHundredHundredThousands\
    \ = numLen / ", "    var roman = \"\"\n    var i = 0\n    var roman_num = 0\n\
    \    var roman_num_str = \"\"\n    var roman_num_str_temp = \"\"\n    var roman_num_str_temp2\
    \ = \"\"\n    var roman_num_str_temp3 = \"\"\n    var roman_num_str_temp4 = \"\
    \"\n    var roman_num_str_temp5 = \"\"\n    var roman_num_str_temp6 = \"\"\n \
    \   var roman_num_str_temp7 = \"\"\n    var roman_num_str_temp8 = \"\"\n    var\
    \ roman_num_str_temp9 = \"\"\n    var roman_num_str_temp10 = \"\"\n    var roman_num_str_temp11\
    \ = \"\"\n    var roman_num_str_temp12 = \"\"\n    var roman_num_str_temp13 =\
    \ \"\"\n    var roman_num_str_temp14 = \"\"\n    var roman_num_str_temp15 = \"\
    \"\n    var roman_num_str_temp16 = \"\"\n    var roman_num_str_temp17 = \"\"\n\
    \    var roman_num_str_temp18 = \"\"\n    var roman_num_str_temp19 = \"\"\n  \
    \  var roman_num_str_temp20 = \"\"\n    var roman_num_str_temp21 = \"\"\n    var\
    \ roman_num_str_temp22 = \"\"\n    var roman_num_str_temp23 = \"\"\n    var roman_num_str_temp24\
    \ = \"\"\n    var roman_num_str_temp25 = \"\"\n    var roman_num_str_temp26 =\
    \ \"\"\n    var roman_num_str_temp27 = \"\"\n    var roman_num_str_temp28 = \"\
    \"\n    var roman_num_str_temp29 = \"\"\n    var roman_num_str_temp30 = \"\"\n\
    \    var roman_num_str_temp31 = \"\"\n    var roman_num_str_temp32 = \"\"\n  \
    \  var roman_num_str_temp33 = \"\"\n    var roman_num_str_temp34 = \"\"\n    var\
    \ roman_num_str_temp35 = \"\"\n    var roman_num_str_temp36 = \"\"\n    var roman_num_str_temp37\
    \ = \"\"\n    var roman_num_str_temp38 = \"\"\n    var roman_num_str_temp39 =\
    \ \"\"\n    var roman_num_str_temp40 = \"\"\n    var roman_num_str_temp41 = \"\
    \"\n    var roman_num_str_temp42 = \"\"\n    var roman_num_str_temp43 = \"\"\n\
    \    var roman_num_str_temp44 = \"\"\n    var roman_num_str_temp45 = \"\"\n  \
    \  var roman_num_str_temp46 = \"\"\n    var roman_num_str_temp47 = \"\"\n    var\
    \ roman_num_str_temp48 = \"\"\n    var roman_num_str_temp49 = \"\"\n    var roman_num_str_temp50\
    \ = \"\"\n    var roman_num_str_temp51 = \"\"\n    var roman_num_str_temp52 =\
    \ \"\"\n    var roman_num_str_temp53 = \"\"\n    var roman_num_str_temp", "  \
    \  let roman = StringBuilder()\n    let numToRoman = numToRomanTable[number]\n\
    \    if numToRoman == nil {\n        return roman.string\n    }\n    for romanDigit\
    \ in numToRoman! {\n        roman.append(romanDigit)\n    }\n    return roman.string",
  "    if number < 1 || number > 1000 {\n        throw Error::new(ENOENT, \"Invalid\
    \ number\")\n    }\n    let mut roman = String::new();\n    let mut numerals =\
    \ roman.chars();\n    let mut numerals_iter = numerals.clone();\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_uppercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|c| c.to_ascii_lowercase());\n    let mut numerals_iter\
    \ = numerals_iter.map(|", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 0\n\n    for number > 0 {\n    \
    \    roman_numeral_digit_count = Int(log10(Double(number))) + 1\n        roman_numeral_digits\
    \ = String(repeating: \"0\", count: roman_numeral_digit_count)\n        roman_numeral\
    \ = String(repeating: \"i\", count: roman_numeral_digit_count)\n        roman\
    \ = String(repeating: \"m\", count: roman_numeral_digit_count) + roman_numeral\
    \ + roman\n        number -= Int(pow(10.0, Double(roman_numeral_digit_count)))\n\
    \    }\n    return roman.lowercased()", "    let roman = StringBuilder()\n   \
    \ let nums = roman.initWithCapacity(1000)\n    let numsCount = nums.count\n  \
    \  let numsDigits = nums.characters\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigit = numsDigits[numsDigitCount - 1]\n    let numsDigitCount =\
    \ numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount - 1]\n    let\
    \ numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = numsDigits[numsDigitCount\
    \ - 1]\n    let numsDigitCount = numsDigits.count\n    let numsDigit = ", "  \
    \  var roman = \"\"\n    var remainder = number\n    var numeral = \"\"\n    while\
    \ remainder > 0 {\n        remainder -= 1\n        numeral += \"M\"\n    }\n \
    \   while remainder >= 100 {\n        remainder -= 100\n        numeral += \"\
    D\"\n    }\n    while remainder >= 50 {\n        remainder -= 50\n        numeral\
    \ += \"C\"\n    }\n    while remainder >= 10 {\n        remainder -= 10\n    \
    \    numeral += \"L\"\n    }\n    while remainder >= 5 {\n        remainder -=\
    \ 5\n        numeral += \"X\"\n    }\n    while remainder >= 1 {\n        remainder\
    \ -= 1\n        numeral += \"V\"\n    }\n    while remainder >= 0.5 {\n      \
    \  remainder -= 0.5\n        numeral += \"I\"\n    }\n    while remainder >= 0.25\
    \ {\n        remainder -= 0.25\n        numeral += \"X\"\n    }\n    while remainder\
    \ >= 0.1 {\n        remainder -= 0.1\n        numeral += \"I\"\n    }\n    while\
    \ remainder >= 0.01 {\n        remainder -= 0.01\n        numeral += \"I\"\n \
    \   }\n    while remainder >= 0.001 {\n        remainder -= 0.001\n        numeral\
    \ += \"I\"\n    }\n    while remainder >= 0.0001 {\n        remainder -= 0.0001\n\
    \        numeral += \"I\"\n    }\n    while remainder >= 0.00001 {\n        remainder\
    \ -= 0.00001\n        numeral += \"I\"\n    }\n    while remainder >= 0.0000001\
    \ {\n        remainder -= 0.0000001\n        numeral += \"I\"\n    }\n    while\
    \ remainder >= 0.000000001 {\n        remainder -= 0.000000001\n        numeral\
    \ += \"I\"\n    }\n    while remainder >= 0.0000000001 {\n        remainder -=\
    \ 0.0000000001\n        numeral += \"I\"\n    }\n    while remainder >= 0.00000000001\
    \ {\n        remainder -= 0.00000000001\n        numeral += \"I\"\n    }\n   \
    \ while remainder >= 0.000000000001 {\n        remainder -= 0.000000000001\n \
    \       numeral += \"I\"\n    }\n    while remainder >= 0.0000000000001 {\n  \
    \      remainder -= 0.0000000000001\n        numeral += \"I\"\n    }\n    while\
    \ remainder >= 0.000000000000001 {\n        remainder -= 0.000000000000001\n \
    \       numeral += \"I\"\n    }\n    while remainder >= 0.0000000000000001 {\n\
    \        remainder -= 0.0000000000000001\n        numeral += \"I\"\n    }\n  \
    \  while ", "    let roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    var roman = \"\"\n    var num = 0\n    var last = 0\n    var roman_num\
    \ = 0\n    var roman_num_str = \"\"\n    var roman_num_str_last = \"\"\n    var\
    \ roman_num_str_last2 = \"\"\n    var roman_num_str_last3 = \"\"\n    var roman_num_str_last4\
    \ = \"\"\n    var roman_num_str_last5 = \"\"\n    var roman_num_str_last6 = \"\
    \"\n    var roman_num_str_last7 = \"\"\n    var roman_num_str_last8 = \"\"\n \
    \   var roman_num_str_last9 = \"\"\n    var roman_num_str_last10 = \"\"\n    var\
    \ roman_num_str_last11 = \"\"\n    var roman_num_str_last12 = \"\"\n    var roman_num_str_last13\
    \ = \"\"\n    var roman_num_str_last14 = \"\"\n    var roman_num_str_last15 =\
    \ \"\"\n    var roman_num_str_last16 = \"\"\n    var roman_num_str_last17 = \"\
    \"\n    var roman_num_str_last18 = \"\"\n    var roman_num_str_last19 = \"\"\n\
    \    var roman_num_str_last20 = \"\"\n    var roman_num_str_last21 = \"\"\n  \
    \  var roman_num_str_last22 = \"\"\n    var roman_num_str_last23 = \"\"\n    var\
    \ roman_num_str_last24 = \"\"\n    var roman_num_str_last25 = \"\"\n    var roman_num_str_last26\
    \ = \"\"\n    var roman_num_str_last27 = \"\"\n    var roman_num_str_last28 =\
    \ \"\"\n    var roman_num_str_last29 = \"\"\n    var roman_num_str_last30 = \"\
    \"\n    var roman_num_str_last31 = \"\"\n    var roman_num_str_last32 = \"\"\n\
    \    var roman_num_str_last33 = \"\"\n    var roman_num_str_last34 = \"\"\n  \
    \  var roman_num_str_last35 = \"\"\n    var roman_num_str_last36 = \"\"\n    var\
    \ roman_num_str_last37 = \"\"\n    var roman_num_str_last38 = \"\"\n    var roman_num_str_last39\
    \ = \"\"\n    var roman_num_str_last40 = \"\"\n    var roman_num_str_last41 =\
    \ \"\"\n    var roman_num_str_last42 = \"\"\n    var roman_num_str_last43 = \"\
    \"\n    var roman_num_str_last44 = \"\"\n    var roman_num_str_last45 = \"\"\n\
    \    var roman_num_str_last46 = \"\"\n    var roman_num_str_last47 = \"\"\n  \
    \  var roman_num_str_last48 = \"\"\n    var roman_num_str_last49 = \"\"\n    var\
    \ roman_num_str_last50 = \"\"\n    var roman_num_str_last51 = \"\"\n    var roman_num_str_last52\
    \ = \"\"\n    var roman_num_str_last53 = \"\"\n    var ", "    var roman = \"\"\
    \n    var num = 0\n    var roman_num = 0\n    var roman_num_str = \"\"\n    var\
    \ roman_num_str2 = \"\"\n    var roman_num_str3 = \"\"\n    var roman_num_str4\
    \ = \"\"\n    var roman_num_str5 = \"\"\n    var roman_num_str6 = \"\"\n    var\
    \ roman_num_str7 = \"\"\n    var roman_num_str8 = \"\"\n    var roman_num_str9\
    \ = \"\"\n    var roman_num_str10 = \"\"\n    var roman_num_str11 = \"\"\n   \
    \ var roman_num_str12 = \"\"\n    var roman_num_str13 = \"\"\n    var roman_num_str14\
    \ = \"\"\n    var roman_num_str15 = \"\"\n    var roman_num_str16 = \"\"\n   \
    \ var roman_num_str17 = \"\"\n    var roman_num_str18 = \"\"\n    var roman_num_str19\
    \ = \"\"\n    var roman_num_str20 = \"\"\n    var roman_num_str21 = \"\"\n   \
    \ var roman_num_str22 = \"\"\n    var roman_num_str23 = \"\"\n    var roman_num_str24\
    \ = \"\"\n    var roman_num_str25 = \"\"\n    var roman_num_str26 = \"\"\n   \
    \ var roman_num_str27 = \"\"\n    var roman_num_str28 = \"\"\n    var roman_num_str29\
    \ = \"\"\n    var roman_num_str30 = \"\"\n    var roman_num_str31 = \"\"\n   \
    \ var roman_num_str32 = \"\"\n    var roman_num_str33 = \"\"\n    var roman_num_str34\
    \ = \"\"\n    var roman_num_str35 = \"\"\n    var roman_num_str36 = \"\"\n   \
    \ var roman_num_str37 = \"\"\n    var roman_num_str38 = \"\"\n    var roman_num_str39\
    \ = \"\"\n    var roman_num_str40 = \"\"\n    var roman_num_str41 = \"\"\n   \
    \ var roman_num_str42 = \"\"\n    var roman_num_str43 = \"\"\n    var roman_num_str44\
    \ = \"\"\n    var roman_num_str45 = \"\"\n    var roman_num_str46 = \"\"\n   \
    \ var roman_num_str47 = \"\"\n    var roman_num_str48 = \"\"\n    var roman_num_str49\
    \ = \"\"\n    var roman_num_str50 = \"\"\n    var roman_num_str51 = \"\"\n   \
    \ var roman_num_str52 = \"\"\n    var roman_num_str53 = \"\"\n    var roman_num_str54\
    \ = \"\"\n    var roman_num_str55 = \"\"\n    var roman_num_str56 = \"\"\n   \
    \ var roman_num_str57 = \"\"\n    var roman_num_str58 = \"\"\n    var roman_num_str59\
    \ = \"\"\n    var roman_num_str60 = \"\"\n    var roman_num_str61 = \"\"", " \
    \   var roman = \"\"\n    var remainder = number\n    var numeral = \"\"\n   \
    \ while remainder > 0 {\n        var remainderDigit = remainder % 10\n       \
    \ remainder = remainder / 10\n        numeral = String(remainderDigit + 1) + numeral\n\
    \    }\n    if number == 0 {\n        return numeral\n    }\n    roman = String(numeral)\
    \ + roman\n    return roman", "    let roman = StringBuilder()\n    let roman_numerals\
    \ = roman_numerals(number)\n    for roman_numeral in roman_numerals {\n      \
    \  roman.append(roman_numeral)\n    }\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var num: Int\n    var i: Int\n    for i = 1, num < 1000; i++\
    \ {\n        roman = roman + mini_roman_to_int(mini_roman_to_str(i))\n       \
    \ num *= 10\n    }\n    return roman", "    switch number {\n    case 1:\n   \
    \     return \"I\"\n    case 2:\n        return \"II\"\n    case 3:\n        return\
    \ \"III\"\n    case 4:\n        return \"IV\"\n    case 5:\n        return \"\
    V\"\n    case 6:\n        return \"VI\"\n    case 7:\n        return \"VII\"\n\
    \    case 8:\n        return \"VIII\"\n    case 9:\n        return \"IX\"\n  \
    \  case 10:\n        return \"X\"\n    case 11:\n        return \"XI\"\n    case\
    \ 12:\n        return \"XII\"\n    case 13:\n        return \"XIII\"\n    case\
    \ 14:\n        return \"XIV\"\n    case 15:\n        return \"XV\"\n    case 16:\n\
    \        return \"XVI\"\n    case 17:\n        return \"XVII\"\n    case 18:\n\
    \        return \"XVIII\"\n    case 19:\n        return \"XIX\"\n    case 20:\n\
    \        return \"XX\"\n    case 21:\n        return \"XXI\"\n    case 22:\n \
    \       return \"XXII\"\n    case 23:\n        return \"XXIII\"\n    case 24:\n\
    \        return \"XXIV\"\n    case 25:\n        return \"XXV\"\n    case 26:\n\
    \        return \"XXVI\"\n    case 27:\n        return \"XXVII\"\n    case 28:\n\
    \        return \"XXVIII\"\n    case 29:\n        return \"XXIX\"\n    case 30:\n\
    \        return \"XXX\"\n    case 31:\n        return \"XXXI\"\n    case 32:\n\
    \        return \"XXXII\"\n    case 33:\n        return \"XXXIII\"\n    case 34:\n\
    \        return \"XXXIV\"\n    case 35:\n        return \"XXXV\"\n    case 36:\n\
    \        return \"XXXVI\"\n    case 37:\n        return \"XXXVII\"\n    case 38:\n\
    \        return \"XXXVIII\"\n    case 39:\n        return \"XXXIX\"\n    case\
    \ 40:\n        return \"XL\"\n    case 41:\n        return \"L\"\n    case 42:\n\
    \        return \"LX\"\n    case 43:\n        return \"LXX\"\n    case 44:\n \
    \       return \"LXXX\"\n    case 45:\n        return \"LXXXX\"\n    case 46:\n\
    \        return \"LXXXXX\"\n    case 47:\n        return \"LXXXII\"\n    case\
    \ 48:\n        return \"LXXXIII\"\n    case 49:\n        return \"LXXXIV\"\n \
    \   case 50:\n        return \"LXXXV\"\n    case 51:\n        return \"LXXXVI\"\
    \n    case 52:\n        return \"LXXXVII\"\n    case 53:\n        return \"LXXXVIII\"\
    \n    case 54:\n        return \"LXXXIX\"\n    case 55:\n        return \"LXXXVIII\"\
    \n    case 56:\n        return \"LXXXXI\"\n    case 57:\n        return \"L",
  "    let roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = RomanNumeral(number)\n    return roman.romanNumeralLowercase()",
  "    let roman = roman_numeral_map[number]\n    return roman.lowercased()", "  \
    \  let roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = RomanNumerals(number).roman\n    return roman.lowercased()",
  "    let roman = romanNumerals(number)\n    return roman.map({ $0.lowercased() }).joined()",
  "    var roman = \"\"\n    var i = 0\n    var numeral = \"\"\n    for _ in 0..<number\
    \ {\n        numeral = String(number % 10)\n        roman += numeral\n       \
    \ number /= 10\n    }\n    return roman", "    var roman = \"\"\n    var i = 0\n\
    \    var roman_numeral = \"\"\n    var roman_numeral_i = 0\n    var roman_numeral_j\
    \ = 0\n    var roman_numeral_k = 0\n    var roman_numeral_l = 0\n    var roman_numeral_m\
    \ = 0\n    var roman_numeral_n = 0\n    var roman_numeral_o = 0\n    var roman_numeral_p\
    \ = 0\n    var roman_numeral_q = 0\n    var roman_numeral_r = 0\n    var roman_numeral_s\
    \ = 0\n    var roman_numeral_t = 0\n    var roman_numeral_u = 0\n    var roman_numeral_v\
    \ = 0\n    var roman_numeral_w = 0\n    var roman_numeral_x = 0\n    var roman_numeral_y\
    \ = 0\n    var roman_numeral_z = 0\n\n    for i = number; i > 0; i /= 10 {\n \
    \       roman_numeral = roman_numeral + String(i % 10)\n    }\n\n    for i = roman_numeral.count;\
    \ i > 0; i /= 10 {\n        roman_numeral_i = roman_numeral_i + String(i % 10)\n\
    \    }\n\n    for i = roman_numeral_i.count; i > 0; i /= 10 {\n        roman_numeral_j\
    \ = roman_numeral_j + String(i % 10)\n    }\n\n    for i = roman_numeral_j.count;\
    \ i > 0; i /= 10 {\n        roman_numeral_k = roman_numeral_k + String(i % 10)\n\
    \    }\n\n    for i = roman_numeral_k.count; i > 0; i /= 10 {\n        roman_numeral_l\
    \ = roman_numeral_l + String(i % 10)\n    }\n\n    for i = roman_numeral_l.count;\
    \ i > 0; i /= 10 {\n        roman_numeral_m = roman_numeral_m + String(i % 10)\n\
    \    }\n\n    for i = roman_numeral_m.count; i > 0; i /= 10 {\n        roman_numeral_n\
    \ = roman_numeral_n + String(i % 10)\n    }\n\n    for i = roman_numeral_n.count;\
    \ i > 0; i /= 10 {\n        roman_numeral_o = roman_numeral_o + String(i % 10)\n\
    \    }\n\n    for i = roman_numeral_o.count; i > 0; i /= 10 {\n        roman_numeral_p\
    \ = roman_numeral_p + String(i % 10)\n    }\n\n    for i = roman_numeral_p.count;\
    \ i > 0; i /= 10 {\n        roman_numeral_q = roman_numeral_q + String(i % 10)\n\
    \    }\n\n    for i = roman_numeral_q.count; i > 0; i /= 10 {\n        roman_numeral_r\
    \ = roman_numeral_r", "    var roman = \"\"\n    var num: Int\n    var i: Int\n\
    \    for i = 1, num < 1000; i++ {\n        roman = roman + mini_roman_to_int(roman_digits[num])\n\
    \        num *= 10\n    }\n    return roman", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 0\n    var roman_numeral_digit_count_max = 0\n    var roman_numeral_digit_count_min\
    \ = 0\n    var roman_numeral_digit_count_max_min = 0\n    var roman_numeral_digit_count_max_min_index\
    \ = 0\n    var roman_numeral_digit_count_max_min_index2 = 0\n    var roman_numeral_digit_count_max_min_index3\
    \ = 0\n    var roman_numeral_digit_count_max_min_index4 = 0\n    var roman_numeral_digit_count_max_min_index5\
    \ = 0\n    var roman_numeral_digit_count_max_min_index6 = 0\n    var roman_numeral_digit_count_max_min_index7\
    \ = 0\n    var roman_numeral_digit_count_max_min_index8 = 0\n    var roman_numeral_digit_count_max_min_index9\
    \ = 0\n    var roman_numeral_digit_count_max_min_index10 = 0\n    var roman_numeral_digit_count_max_min_index11\
    \ = 0\n    var roman_numeral_digit_count_max_min_index12 = 0\n    var roman_numeral_digit_count_max_min_index13\
    \ = 0\n    var roman_numeral_digit_count_max_min_index14 = 0\n    var roman_numeral_digit_count_max_min_index15\
    \ = 0\n    var roman_numeral_digit_count_max_min_index16 = 0\n    var roman_numeral_digit_count_max_min_index17\
    \ = 0\n    var roman_numeral_digit_count_max_min_index18 = 0\n    var roman_numeral_digit_count_max_min_index19\
    \ = 0\n    var roman_numeral_digit_count_max_min_index20 = 0\n    var roman_numeral_digit_count_max_min_index21\
    \ = 0\n    var roman_numeral_digit_count_max_min_index22 = 0\n    var roman_numeral_digit_count_max_min_index23\
    \ = 0\n    var roman_numeral_digit_count_max_min_index24 = 0\n    var roman_numeral_digit_count_max_min_index25\
    \ = 0\n    var roman_numeral_digit_count_max_min_index26 = 0\n    var roman_numeral_digit_count_max_min_index27\
    \ = 0\n    var roman_numeral_digit_count_max_min_index28 = 0\n    var roman_numeral_digit_count_max_min_index29\
    \ = 0\n    var roman_numeral_digit_count_max_min_index30 = 0\n    var roman_numeral_digit_count_max_min_index31\
    \ = 0\n    var roman_numeral_digit_count_max_min_index32 = 0\n    var roman_numeral_digit_count_max_min_index33\
    \ = 0\n    var roman_numeral_digit_count_max_min_index34 = 0\n    var roman_numeral_digit_count_max_min_index35",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  var roman = \"\"\n    var num = 0\n    var index = 0\n    while number > 0\
    \ {\n        num += 1\n        number -= num\n        index = index * 10 + num\n\
    \        roman = roman.characters.prefix(index) + roman.characters.suffix(index)\n\
    \    }\n    return roman.lowercased()", "    let roman = Array(1...number).map\
    \ { roman_numeral($0) }\n    return roman.join()", "    var roman = \"\"\n   \
    \ var numeral = \"\"\n    var remainder = number\n    var i = -1\n    for _ in\
    \ 0..<4 {\n        i += 1\n        numeral = String(remainder % 10)\n        remainder\
    \ = remainder / 10\n        if numeral.isEmpty {\n            roman = roman.prefix(1)\
    \ + numeral\n        } else {\n            roman = roman.prefix(1) + numeral +\
    \ roman.suffix(1)\n        }\n    }\n    return roman", "    let roman = roman_numerals(number)\n\
    \    return roman.map(String::init).joined()", "    guard number > 0 && number\
    \ <= 1000 else {\n        return \"\"\n    }\n    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_count = 1\n    var roman_numeral_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_count = 1\n    var roman_numeral_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_count = 1\n \
    \   var roman_numeral_digit_digit_digit_digit_digit_digit_digit_count = 1\n  \
    \  var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_digit_count\
    \ = 1\n    var roman_numeral_digit_digit_digit_digit_digit_digit_", "    var roman\
    \ = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n\
    \    var roman_numeral_digit_count = 1\n    var roman_numeral_digit_sum = 0\n\
    \    var roman_numeral_digit_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_index_max = 0\n    var roman_numeral_digit_index_min\
    \ = 0\n    var roman_numeral_digit_sum_index_max = 0\n    var roman_numeral_digit_sum_index_min\
    \ = 0\n    var roman_numeral_digit_index_max_min = 0\n    var roman_numeral_digit_index_min_max\
    \ = 0\n    var roman_numeral_digit_sum_max_min = 0\n    var roman_numeral_digit_sum_min_max\
    \ = 0\n    var roman_numeral_digit_index_max_min_min = 0\n    var roman_numeral_digit_index_min_max_min\
    \ = 0\n    var roman_numeral_digit_sum_max_min_min = 0\n    var roman_numeral_digit_sum_min_max_min\
    \ = 0\n    var roman_numeral_digit_index_max_min_min_min = 0\n    var roman_numeral_digit_index_min_max_min_min\
    \ = 0\n    var roman_numeral_digit_sum_max_min_min_min = 0\n    var roman_numeral_digit_sum_min_max_min_min\
    \ = 0\n    var roman_numeral_digit_index_max_min_min_min_min = 0\n    var roman_numeral_digit_index_min_max_min_min_min\
    \ = 0\n    var roman_numeral_digit_sum_max_min_min_min_min = 0\n    var roman_numeral_digit_sum_min_max_min_min_min\
    \ = 0\n    var roman_numeral_digit_index_max_min_min_min_min_min = 0\n    var\
    \ roman_numeral_digit_index_min_max_min_min_min_min = 0\n    var roman_numeral_digit_sum_max_min_min_min_min_min\
    \ = 0\n    var roman_numeral_digit_sum_min_max_min_min_min_min = 0\n    var roman_numeral_digit_index_max_min_min_min_min_min_min\
    \ = 0\n    var roman_numeral_digit_index_min_max_min_min_min_min_min = 0\n   \
    \ var roman_numeral_digit_sum_max_min_min_min_min_min_min = 0\n    var roman_numeral_digit_sum_min_max_min_min_min_min_min\
    \ = 0\n    var roman_numeral_digit_index_max_min_min_min_min_min_min_min = 0\n\
    \    var roman_numeral_digit_index_min_max_min_min_min_min_min_min = 0\n    var\
    \ roman_numeral_digit_sum_max_min_min_min_min_min_min_min = 0\n    var roman_numeral_digit_sum_min_max_min_min_min_min_min_min\
    \ = 0\n    var roman_numeral_digit_index_max_min_min_min_min_min_min_min_min =\
    \ 0\n    var ro", "    let roman = StringBuilder()\n    let romanDigits = StringBuilder()\n\
    \    let romanNumerals = StringBuilder()\n    let romanNumeralsDigits = StringBuilder()\n\
    \    let romanNumeralsRoman = StringBuilder()\n    let romanNumeralsRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRoman = StringBuilder()\n    let\
    \ romanNumeralsRomanRomanDigits = StringBuilder()\n    let romanNumeralsRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanDigits = StringBuilder()\n\
    \    let romanNumeralsRomanRomanRomanRoman = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRoman = StringBuilder()\n\
    \    let romanNumeralsRomanRomanRomanRomanRomanDigits = StringBuilder()\n    let\
    \ romanNumeralsRomanRomanRomanRomanRomanRoman = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRomanDigits\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRoman\
    \ = StringBuilder()\n    let romanNumeralsRomanRomanRomanRomanRomanRomanRomanDigits\
    \ = String", "    var roman = \"\"\n    var numeral = \"\"\n    var remainder\
    \ = number\n    var i = 0\n    while remainder > 0 {\n        numeral = String(remainder\
    \ % 10)\n        remainder = remainder / 10\n        if i == 0 {\n           \
    \ roman += numeral\n        } else {\n            roman += String(numeral) + String(roman[i-1])\n\
    \        }\n        i += 1\n    }\n    return roman", "    let roman = RomanNumerals()\n\
    \    let roman_numeral = roman.roman_numerals[number]\n    return roman_numeral.lowercased()",
  "    let roman = Array(1...number).map { roman_numeral($0) }\n    return roman.join()",
  "    var roman = \"\"\n    var num = 0\n    var roman_num = 0\n    var roman_num_str\
    \ = \"\"\n    var roman_num_str_len = \"\"\n    var roman_num_str_len2 = 0\n \
    \   var roman_num_str_len3 = 0\n    var roman_num_str_len4 = 0\n    var roman_num_str_len5\
    \ = 0\n    var roman_num_str_len6 = 0\n    var roman_num_str_len7 = 0\n    var\
    \ roman_num_str_len8 = 0\n    var roman_num_str_len9 = 0\n    var roman_num_str_len10\
    \ = 0\n    var roman_num_str_len11 = 0\n    var roman_num_str_len12 = 0\n    var\
    \ roman_num_str_len13 = 0\n    var roman_num_str_len14 = 0\n    var roman_num_str_len15\
    \ = 0\n    var roman_num_str_len16 = 0\n    var roman_num_str_len17 = 0\n    var\
    \ roman_num_str_len18 = 0\n    var roman_num_str_len19 = 0\n    var roman_num_str_len20\
    \ = 0\n    var roman_num_str_len21 = 0\n    var roman_num_str_len22 = 0\n    var\
    \ roman_num_str_len23 = 0\n    var roman_num_str_len24 = 0\n    var roman_num_str_len25\
    \ = 0\n    var roman_num_str_len26 = 0\n    var roman_num_str_len27 = 0\n    var\
    \ roman_num_str_len28 = 0\n    var roman_num_str_len29 = 0\n    var roman_num_str_len30\
    \ = 0\n    var roman_num_str_len31 = 0\n    var roman_num_str_len32 = 0\n    var\
    \ roman_num_str_len33 = 0\n    var roman_num_str_len34 = 0\n    var roman_num_str_len35\
    \ = 0\n    var roman_num_str_len36 = 0\n    var roman_num_str_len37 = 0\n    var\
    \ roman_num_str_len38 = 0\n    var roman_num_str_len39 = 0\n    var roman_num_str_len40\
    \ = 0\n    var roman_num_str_len41 = 0\n    var roman_num_str_len42 = 0\n    var\
    \ roman_num_str_len43 = 0\n    var roman_num_str_len44 = 0\n    var roman_num_str_len45\
    \ = 0\n    var roman_num_str_len46 = 0\n    var roman_num_str_len47 = 0\n    var\
    \ roman_num_str_len48 = 0\n    var roman_num_str_len49 = 0\n    var roman_num_str_len50\
    \ = 0\n    var roman_num_str_len51 = 0\n    var roman_num_str_len52 = 0\n    var\
    \ roman_num_str_len53 = 0\n    var roman_num_str_len54 = 0\n    var roman_num_str_",
  "    let roman = romanNumerals(number)\n    return roman.map({ $0.lowercased() }).joined()",
  "    guard number > 0 && number <= 1000 else {\n        return \"\"\n    }\n   \
    \ var roman = \"\"\n    var last = \"\"\n    var lastDigit = 0\n    var lastDigitCount\
    \ = 0\n    var isLastDigitZero = false\n    for digit in String(number).unicodeScalars\
    \ {\n        let digitCount = digit.value - lastDigit\n        if lastDigitCount\
    \ > 0 {\n            roman += last\n        }\n        last = String(digitCount)\n\
    \        lastDigitCount = digitCount\n        lastDigit = digit.value\n      \
    \  if digit.value == 0 {\n            isLastDigitZero = true\n        }\n    }\n\
    \    if lastDigitCount > 0 {\n        roman += last\n    }\n    if isLastDigitZero\
    \ {\n        roman = \"0\"\n    }\n    return roman", "    var roman = \"\"\n\
    \    var numeral = number\n    var remainder = number\n    var numeralString =\
    \ \"\"\n    var numeralStringArray = [String]()\n    var numeralStringArrayIndex\
    \ = 0\n    var numeralStringArrayIndexMax = numeralStringArray.count\n    var\
    \ numeralStringArrayMax = numeralStringArray.count\n    var numeralStringArrayIndexMin\
    \ = 0\n    var numeralStringArrayIndexMaxMin = numeralStringArray.count\n    var\
    \ numeralStringArrayMaxMin = numeralStringArray.count\n    var numeralStringArrayMaxMinIndex\
    \ = 0\n    var numeralStringArrayMaxMinIndexMax = numeralStringArray.count\n \
    \   var numeralStringArrayMaxMinIndexMin = 0\n    var numeralStringArrayMaxMinIndexMaxMin\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMax = 0\n\
    \    var numeralStringArrayMaxMinIndexMinMaxMax = numeralStringArray.count\n \
    \   var numeralStringArrayMaxMinIndexMinMaxMax = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax = numeralStringArray.count\n\
    \    var numeralStringArrayMaxMinIndexMinMaxMaxMax = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax = numeralStringArray.count\n\
    \    var numeralStringArrayMaxMinIndexMinMaxMaxMax = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax = numeralStringArray.count\n\
    \    var numeralStringArrayMaxMinIndexMinMaxMaxMax = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax = numeralStringArray.count\n\
    \    var numeralStringArrayMaxMinIndexMinMaxMaxMax = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = numeralStringArray.count\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax\
    \ = 0\n    var numeralStringArrayMaxMinIndexMinMaxMaxMax = numer", "    var roman\
    \ = \"\"\n    var numeral = \"\"\n    var i = number\n    var j = 0\n    var roman_num\
    \ = 0\n    var numeral_num = 0\n    var roman_num_str = \"\"\n    var numeral_num_str\
    \ = \"\"\n    var roman_num_str_temp = \"\"\n    var numeral_num_str_temp = \"\
    \"\n    var roman_num_str_temp2 = \"\"\n    var numeral_num_str_temp2 = \"\"\n\
    \    var roman_num_str_temp3 = \"\"\n    var numeral_num_str_temp3 = \"\"\n  \
    \  var roman_num_str_temp4 = \"\"\n    var numeral_num_str_temp4 = \"\"\n    var\
    \ roman_num_str_temp5 = \"\"\n    var numeral_num_str_temp5 = \"\"\n    var roman_num_str_temp6\
    \ = \"\"\n    var numeral_num_str_temp6 = \"\"\n    var roman_num_str_temp7 =\
    \ \"\"\n    var numeral_num_str_temp7 = \"\"\n    var roman_num_str_temp8 = \"\
    \"\n    var numeral_num_str_temp8 = \"\"\n    var roman_num_str_temp9 = \"\"\n\
    \    var numeral_num_str_temp9 = \"\"\n    var roman_num_str_temp10 = \"\"\n \
    \   var numeral_num_str_temp10 = \"\"\n    var roman_num_str_temp11 = \"\"\n \
    \   var numeral_num_str_temp11 = \"\"\n    var roman_num_str_temp12 = \"\"\n \
    \   var numeral_num_str_temp12 = \"\"\n    var roman_num_str_temp13 = \"\"\n \
    \   var numeral_num_str_temp13 = \"\"\n    var roman_num_str_temp14 = \"\"\n \
    \   var numeral_num_str_temp14 = \"\"\n    var roman_num_str_temp15 = \"\"\n \
    \   var numeral_num_str_temp15 = \"\"\n    var roman_num_str_temp16 = \"\"\n \
    \   var numeral_num_str_temp16 = \"\"\n    var roman_num_str_temp17 = \"\"\n \
    \   var numeral_num_str_temp17 = \"\"\n    var roman_num_str_temp18 = \"\"\n \
    \   var numeral_num_str_temp18 = \"\"\n    var roman_num_str_temp19 = \"\"\n \
    \   var numeral_num_str_temp19 = \"\"\n    var roman_num_str_temp20 = \"\"\n \
    \   var numeral_num_str_temp20 = \"\"\n    var roman_num_str_temp21 = \"\"\n \
    \   var numeral_num_str_temp21 = \"\"\n    var roman_num_str_temp22 = \"\"\n \
    \   var numeral_num_str_temp22 = \"\"\n    var roman_num_str_temp23 = \"\"\n \
    \   var numeral_num_str_temp23 = \"\"\n    var roman_num_str_temp24 = \"\"\n \
    \   var numeral_num_str_temp24 = \"\"\n    var roman_num_str_temp25 = \"\"\n \
    \   var numeral_num_str_temp25 = \"\"\n    var roman_num_str_temp26 = \"\"\n \
    \   var numeral_num_str_temp26 = \"\"\n", "    let roman = romanNumerals(number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    var roman =\
    \ \"\"\n    var romanDigits = \"\"\n    var romanNumeral = \"\"\n    var romanNumeralDigits\
    \ = \"\"\n    var romanNumeralDigit = \"\"\n    var romanNumeralDigitCount = \"\
    \"\n    var romanNumeralDigitCountDigit = \"\"\n    var romanNumeralDigitCountDigit2\
    \ = \"\"\n    var romanNumeralDigitCountDigit3 = \"\"\n    var romanNumeralDigitCountDigit4\
    \ = \"\"\n    var romanNumeralDigitCountDigit5 = \"\"\n    var romanNumeralDigitCountDigit6\
    \ = \"\"\n    var romanNumeralDigitCountDigit7 = \"\"\n    var romanNumeralDigitCountDigit8\
    \ = \"\"\n    var romanNumeralDigitCountDigit9 = \"\"\n    var romanNumeralDigitCountDigit10\
    \ = \"\"\n    var romanNumeralDigitCountDigit11 = \"\"\n    var romanNumeralDigitCountDigit12\
    \ = \"\"\n    var romanNumeralDigitCountDigit13 = \"\"\n    var romanNumeralDigitCountDigit14\
    \ = \"\"\n    var romanNumeralDigitCountDigit15 = \"\"\n    var romanNumeralDigitCountDigit16\
    \ = \"\"\n    var romanNumeralDigitCountDigit17 = \"\"\n    var romanNumeralDigitCountDigit18\
    \ = \"\"\n    var romanNumeralDigitCountDigit19 = \"\"\n    var romanNumeralDigitCountDigit20\
    \ = \"\"\n    var romanNumeralDigitCountDigit21 = \"\"\n    var romanNumeralDigitCountDigit22\
    \ = \"\"\n    var romanNumeralDigitCountDigit23 = \"\"\n    var romanNumeralDigitCountDigit24\
    \ = \"\"\n    var romanNumeralDigitCountDigit25 = \"\"\n    var romanNumeralDigitCountDigit26\
    \ = \"\"\n    var romanNumeralDigitCountDigit27 = \"\"\n    var romanNumeralDigitCountDigit28\
    \ = \"\"\n    var romanNumeralDigitCountDigit29 = \"\"\n    var romanNumeralDigitCountDigit30\
    \ = \"\"\n    var romanNumeralDigitCountDigit31 = \"\"\n    var romanNumeralDigitCountDigit32\
    \ = \"\"\n    var romanNumeralDigitCountDigit33 = \"\"\n    var romanNumeralDigitCountDigit34\
    \ = \"\"\n    var romanNumeralDigitCountDigit35 = \"\"\n    var romanNumeralDigitCountDigit36\
    \ = \"\"\n    var romanNumeralDigitCountDigit37 = \"\"\n    var romanNumeralDigitCountDigit38\
    \ = \"\"\n    var romanNumeralDigitCountDigit39 = \"\"\n    var romanNumeralDigitCountDigit40\
    \ = \"\"\n    var romanNumeralDigitCountDigit41 = \"\"\n    var romanNumeralDigitCountDigit42\
    \ = \"\"\n    var ro", "    var roman = \"\"\n    var roman_numeral = \"\"\n \
    \   var roman_numeral_digits = \"\"\n    var roman_numeral_digits_count = 0\n\n\
    \    for number > 0 {\n        var remainder = number % 1000\n        roman_numeral\
    \ = String(remainder)\n        roman_numeral_digits = roman_numeral[roman_numeral.startIndex..<roman_numeral.endIndex]\n\
    \        roman_numeral_digits_count = roman_numeral_digits.count\n        roman\
    \ = roman.prefix(roman_numeral_digits_count)\n        roman = roman.suffix(roman_numeral_digits_count)\n\
    \        roman = roman.prefix(roman_numeral_digits_count + 1).append(roman_numeral)\n\
    \        number /= 1000\n    }\n\n    return roman.lowercased()", "    var roman\
    \ = \"\"\n    var i = 0\n    var numeral = \"\"\n    var isNegative = false\n\
    \    var isZero = false\n    var isOne = false\n    var isTwo = false\n    var\
    \ isThree = false\n    var isFour = false\n    var isFive = false\n    var isSix\
    \ = false\n    var isSeven = false\n    var isEight = false\n    var isNine =\
    \ false\n\n    if number < 0 || number > 1000 {\n        return \"\"\n    }\n\n\
    \    for i = number; i > 0; i-- {\n        numeral = String(i % 10)\n        if\
    \ numeral == \"0\" {\n            isZero = true\n        }\n        if numeral\
    \ == \"1\" {\n            isOne = true\n        }\n        if numeral == \"2\"\
    \ {\n            isTwo = true\n        }\n        if numeral == \"3\" {\n    \
    \        isThree = true\n        }\n        if numeral == \"4\" {\n          \
    \  isFour = true\n        }\n        if numeral == \"5\" {\n            isFive\
    \ = true\n        }\n        if numeral == \"6\" {\n            isSix = true\n\
    \        }\n        if numeral == \"7\" {\n            isSeven = true\n      \
    \  }\n        if numeral == \"8\" {\n            isEight = true\n        }\n \
    \       if numeral == \"9\" {\n            isNine = true\n        }\n        if\
    \ numeral == \"X\" {\n            isNegative = true\n        }\n        if numeral\
    \ == \"V\" {\n            isNegative = true\n        }\n        if numeral ==\
    \ \"I\" {\n            isNegative = true\n        }\n        if numeral == \"\
    X\" {\n            isNegative = true\n        }\n        if numeral == \"L\" {\n\
    \            isNegative = true\n        }\n        if numeral == \"C\" {\n   \
    \         isNegative = true\n        }\n        if numeral == \"D\" {\n      \
    \      isNegative = true\n        }\n        if numeral == \"M\" {\n         \
    \   isNegative = true\n        }\n        if numeral == \"M\" {\n            isNegative\
    \ = true\n        }\n        if numeral == \"C\" {\n            isNegative = true\n\
    \        }\n        if numeral == \"M\" {\n            isNegative = true\n   \
    \     }\n        if numeral == \"M\" {\n            isNegative = true\n      \
    \  }\n        if numeral == \"M\" {\n            isNegative = true\n        }\n\
    \        if numeral == \"M\" {\n            isNegative = true\n        }\n   \
    \     if numeral == \"M\" {\n            isNegative = true\n        }\n      \
    \  if numeral == \"M\" {\n            isNegative = true\n        }\n        if\
    \ numeral == \"M\" {\n            isNegative = true\n        }\n        if ",
  "    var roman = \"\"\n    var remainder = number\n    var numeral = \"\"\n    while\
    \ remainder > 0 {\n        remainder -= 1\n        numeral += \"M\"\n    }\n \
    \   if number > 0 {\n        numeral += \"CM\"\n    }\n    if number > 100 {\n\
    \        numeral += \"D\"\n    }\n    if number > 500 {\n        numeral += \"\
    CD\"\n    }\n    if number > 1000 {\n        numeral += \"C\"\n    }\n    if number\
    \ > 5000 {\n        numeral += \"XC\"\n    }\n    if number > 10000 {\n      \
    \  numeral += \"L\"\n    }\n    if number > 50000 {\n        numeral += \"XL\"\
    \n    }\n    if number > 100000 {\n        numeral += \"X\"\n    }\n    if number\
    \ > 500000 {\n        numeral += \"IX\"\n    }\n    if number > 1000000 {\n  \
    \      numeral += \"V\"\n    }\n    if number > 5000000 {\n        numeral +=\
    \ \"IV\"\n    }\n    if number > 10000000 {\n        numeral += \"I\"\n    }\n\
    \    if number > 50000000 {\n        numeral += \"II\"\n    }\n    if number >\
    \ 100000000 {\n        numeral += \"III\"\n    }\n    if number > 500000000 {\n\
    \        numeral += \"N\"\n    }\n    if number > 1000000000 {\n        numeral\
    \ += \"III\"\n    }\n    if number > 5000000000 {\n        numeral += \"II\"\n\
    \    }\n    if number > 10000000000 {\n        numeral += \"N\"\n    }\n    if\
    \ number > 50000000000 {\n        numeral += \"V\"\n    }\n    if number > 100000000000\
    \ {\n        numeral += \"IV\"\n    }\n    if number > 500000000000 {\n      \
    \  numeral += \"VI\"\n    }\n    if number > 1000000000000 {\n        numeral\
    \ += \"I\"\n    }\n    if number > 5000000000000 {\n        numeral += \"I\"\n\
    \    }\n    if number > 10000000000000 {\n        numeral += \"I\"\n    }\n  \
    \  if number > 50000000000000 {\n        numeral += \"I\"\n    }\n    if number\
    \ > 100000000000000 {\n        numeral += \"I\"\n    }\n    if number > 500000000000000\
    \ {\n        numeral += \"I\"\n    }\n    if number > 1000000000000000 {\n   \
    \     numeral += \"I\"\n    }\n    if number > 5000000000000000 {\n        numeral\
    \ += \"I\"\n    }\n    if number > 1000000000000000000 {\n        numer", "  \
    \  var roman = \"\"\n    var num = 0\n    var roman_num = 0\n    var roman_num_str\
    \ = \"\"\n    var roman_num_str_len = 0\n    var roman_num_str_len_roman_num =\
    \ 0\n    var roman_num_str_len_roman_num_str = \"\"\n\n    if number < 0 || number\
    \ > 1000 {\n        return \"\"\n    }\n\n    roman_num_str_len_roman_num_str\
    \ = String(roman_num_str_len_roman_num)\n\n    for num in 1...number {\n     \
    \   roman_num_str = String(roman_num)\n        roman_num_str_len = String(roman_num_str_len_roman_num)\n\
    \        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\n\
    \n        roman_num_str = String(roman_num_str) + roman_num_str_len\n        roman_num_str_len_roman_num_str\
    \ = String(roman_num_str_len_roman_num_str) + roman_num_str_len_roman_num\n  \
    \      roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len\n\n        roman_num_str = String(roman_num_str) + roman_num_str_len\n\
    \        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len_roman_num\n        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len\n\n        roman_num_str = String(roman_num_str) + roman_num_str_len\n\
    \        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len_roman_num\n        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len\n\n        roman_num_str = String(roman_num_str) + roman_num_str_len\n\
    \        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len_roman_num\n        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len\n\n        roman_num_str = String(roman_num_str) + roman_num_str_len\n\
    \        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len_roman_num\n        roman_num_str_len_roman_num_str = String(roman_num_str_len_roman_num_str)\
    \ + roman_num_str_len\n\n", "    let roman = Array(1...number).map { roman_numeral($0)\
    \ }\n    return roman.joined()", "    let roman = roman_numerals(number)\n   \
    \ return roman.map(String.init).joinWithSeparator(\"\")", "    let roman = Roman(number)\n\
    \    return roman.miniRoman()", "    let roman = Array(1...number).map { roman_numeral($0)\
    \ }\n    return roman.join()", "    var roman = \"\"\n    var num: Int\n    var\
    \ i: Int\n\n    for i = 1, num = number; num /= 10 {\n        roman += String(num\
    \ % 10)\n    }\n\n    return roman", "    let roman = roman_numeral(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var num = \"\"\n \
    \   var i = number\n    var j = 0\n    var roman_num = 0\n    var roman_num_str\
    \ = \"\"\n    var roman_num_str2 = \"\"\n    var roman_num_str3 = \"\"\n    var\
    \ roman_num_str4 = \"\"\n    var roman_num_str5 = \"\"\n    var roman_num_str6\
    \ = \"\"\n    var roman_num_str7 = \"\"\n    var roman_num_str8 = \"\"\n    var\
    \ roman_num_str9 = \"\"\n    var roman_num_str10 = \"\"\n    var roman_num_str11\
    \ = \"\"\n    var roman_num_str12 = \"\"\n    var roman_num_str13 = \"\"\n   \
    \ var roman_num_str14 = \"\"\n    var roman_num_str15 = \"\"\n    var roman_num_str16\
    \ = \"\"\n    var roman_num_str17 = \"\"\n    var roman_num_str18 = \"\"\n   \
    \ var roman_num_str19 = \"\"\n    var roman_num_str20 = \"\"\n    var roman_num_str21\
    \ = \"\"\n    var roman_num_str22 = \"\"\n    var roman_num_str23 = \"\"\n   \
    \ var roman_num_str24 = \"\"\n    var roman_num_str25 = \"\"\n    var roman_num_str26\
    \ = \"\"\n    var roman_num_str27 = \"\"\n    var roman_num_str28 = \"\"\n   \
    \ var roman_num_str29 = \"\"\n    var roman_num_str30 = \"\"\n    var roman_num_str31\
    \ = \"\"\n    var roman_num_str32 = \"\"\n    var roman_num_str33 = \"\"\n   \
    \ var roman_num_str34 = \"\"\n    var roman_num_str35 = \"\"\n    var roman_num_str36\
    \ = \"\"\n    var roman_num_str37 = \"\"\n    var roman_num_str38 = \"\"\n   \
    \ var roman_num_str39 = \"\"\n    var roman_num_str40 = \"\"\n    var roman_num_str41\
    \ = \"\"\n    var roman_num_str42 = \"\"\n    var roman_num_str43 = \"\"\n   \
    \ var roman_num_str44 = \"\"\n    var roman_num_str45 = \"\"\n    var roman_num_str46\
    \ = \"\"\n    var roman_num_str47 = \"\"\n    var roman_num_str48 = \"\"\n   \
    \ var roman_num_str49 = \"\"\n    var roman_num_str50 = \"\"\n    var roman_num_str51\
    \ = \"\"\n    var roman_num_str52 = \"\"\n    var roman_num_str53 = \"\"\n   \
    \ var roman_num_str54 = \"\"\n    var roman_num_str55 = \"\"\n    var roman_num_str56\
    \ = \"\"\n    var roman_num_str57 = \"\"\n    var roman_num_str58 = \"\"\n   \
    \ var roman_num_str59 = \"\"\n    var roman_num_str60 = \"\"\n", "    var roman\
    \ = \"\"\n    var i = 0\n    for num in 1...number {\n        roman = roman +\
    \ int_to_roman(num)\n        i++\n    }\n    return roman.lowercased()", "   \
    \ var roman = \"\"\n    var numeral = \"\"\n    var remainder = number\n    var\
    \ i = -1\n    for _ in 0..<4 {\n        numeral = \"M\"\n        remainder, remainder\
    \ = divmod(remainder, 1000)\n        roman = numeral + roman\n    }\n    for _\
    \ in 0..<4 {\n        numeral = \"C\"\n        remainder, remainder = divmod(remainder,\
    \ 100)\n        roman = numeral + roman\n    }\n    for _ in 0..<4 {\n       \
    \ numeral = \"L\"\n        remainder, remainder = divmod(remainder, 10)\n    \
    \    roman = numeral + roman\n    }\n    for _ in 0..<4 {\n        numeral = \"\
    X\"\n        remainder, remainder = divmod(remainder, 10)\n        roman = numeral\
    \ + roman\n    }\n    for _ in 0..<4 {\n        numeral = \"V\"\n        remainder,\
    \ remainder = divmod(remainder, 10)\n        roman = numeral + roman\n    }\n\
    \    for _ in 0..<4 {\n        numeral = \"I\"\n        remainder, remainder =\
    \ divmod(remainder, 10)\n        roman = numeral + roman\n    }\n    for _ in\
    \ 0..<4 {\n        numeral = \"X\"\n        remainder, remainder = divmod(remainder,\
    \ 10)\n        roman = numeral + roman\n    }\n    for _ in 0..<4 {\n        numeral\
    \ = \"I\"\n        remainder, remainder = divmod(remainder, 10)\n        roman\
    \ = numeral + roman\n    }\n    for _ in 0..<4 {\n        numeral = \"I\"\n  \
    \      remainder, remainder = divmod(remainder, 10)\n        roman = numeral +\
    \ roman\n    }\n    for _ in 0..<4 {\n        numeral = \"I\"\n        remainder,\
    \ remainder = divmod(remainder, 10)\n        roman = numeral + roman\n    }\n\
    \    for _ in 0..<4 {\n        numeral = \"I\"\n        remainder, remainder =\
    \ divmod(remainder, 10)\n        roman = numeral + roman\n    }\n    for _ in\
    \ 0..<4 {\n        numeral = \"I\"\n        remainder, remainder = divmod(remainder,\
    \ 10)\n        roman = numeral + roman\n    }\n    for _ in 0..<4 {\n        numeral\
    \ = \"I\"\n        remainder, remainder = divmod(remainder, 10)\n        roman\
    \ = numeral + roman\n    }", "    if number < 1 || number > 1000 {\n        return\
    \ \"\"\n    }\n\n    var roman = \"\"\n    var numeral = \"\"\n    var lastDigit\
    \ = 0\n\n    for digit in 1...number {\n        let remainder = number % 10\n\
    \        numeral += String(remainder)\n        roman = String(remainder) + roman\n\
    \        number /= 10\n    }\n\n    if number > 0 {\n        numeral += String(number)\n\
    \        roman = String(number) + roman\n    }\n\n    if numeral.count > 0 {\n\
    \        roman = roman.prefix(numeral.count) + numeral\n    }\n\n    if lastDigit\
    \ > 0 {\n        roman = String(lastDigit) + roman\n    }\n\n    return roman.lowercased()",
  "    var roman = \"\"\n    var num: Int\n    var romanNum: Int\n    var romanNumString:\
    \ String\n    var romanNumStringUpper: String\n    var romanNumStringLower: String\n\
    \    var romanNumStringUpperString: String\n    var romanNumStringLowerString:\
    \ String\n    var romanNumStringUpperStringString: String\n    var romanNumStringLowerStringString:\
    \ String\n    var romanNumStringUpperStringStringString: String\n    var romanNumStringLowerStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringString: String\n    var\
    \ romanNumStringLowerStringStringStringString: String\n    var romanNumStringUpperStringStringStringString:\
    \ String\n    var romanNumStringLowerStringStringStringStringString: String\n\
    \    var romanNumStringUpperStringStringStringStringString: String\n    var romanNumStringLowerStringStringStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringStringString: String\n\
    \    var romanNumStringLowerStringStringStringStringString: String\n    var romanNumStringUpperStringStringStringStringString:\
    \ String\n    var romanNumStringLowerStringStringStringStringString: String\n\
    \    var romanNumStringUpperStringStringStringStringString: String\n    var romanNumStringLowerStringStringStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringStringString: String\n\
    \    var romanNumStringLowerStringStringStringStringString: String\n    var romanNumStringUpperStringStringStringStringString:\
    \ String\n    var romanNumStringLowerStringStringStringStringString: String\n\
    \    var romanNumStringUpperStringStringStringStringString: String\n    var romanNumStringLowerStringStringStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringStringString: String\n\
    \    var romanNumStringLowerStringStringStringStringString: String\n    var romanNumStringUpperStringStringStringStringString:\
    \ String\n    var romanNumStringLowerStringStringStringStringString: String\n\
    \    var romanNumStringUpperStringStringStringStringString: String\n    var romanNumStringLowerStringStringStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringStringString: String\n\
    \    var romanNumStringLowerStringStringStringStringString: String\n    var romanNumStringUpperStringStringStringStringString:\
    \ String\n    var romanNumStringLowerStringStringStringStringString: String\n\
    \    var romanNumStringUpperStringStringStringStringString: String\n    var romanNumStringLowerStringStringStringStringString:\
    \ String\n    var romanNumStringUpperStringStringStringStringString: String\n\
    \    var romanNumStringLowerStringStringStringStringString: String", "    guard\
    \ number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n    var roman\
    \ = \"\"\n    var numeral = \"\"\n    var numerals = [String]()\n    var numeralIndex\
    \ = 0\n    var numeralCount = 0\n    var lastNumeralIndex = -1\n    var lastNumeralCount\
    \ = 0\n    var lastNumeral = \"\"\n    var lastNumeralIndex2 = -1\n    var lastNumeralCount2\
    \ = 0\n    var lastNumeral2 = \"\"\n    var lastNumeralIndex3 = -1\n    var lastNumeralCount3\
    \ = 0\n    var lastNumeral3 = \"\"\n    var lastNumeralIndex4 = -1\n    var lastNumeralCount4\
    \ = 0\n    var lastNumeral4 = \"\"\n    var lastNumeralIndex5 = -1\n    var lastNumeralCount5\
    \ = 0\n    var lastNumeral5 = \"\"\n    var lastNumeralIndex6 = -1\n    var lastNumeralCount6\
    \ = 0\n    var lastNumeral6 = \"\"\n    var lastNumeralIndex7 = -1\n    var lastNumeralCount7\
    \ = 0\n    var lastNumeral7 = \"\"\n    var lastNumeralIndex8 = -1\n    var lastNumeralCount8\
    \ = 0\n    var lastNumeral8 = \"\"\n    var lastNumeralIndex9 = -1\n    var lastNumeralCount9\
    \ = 0\n    var lastNumeral9 = \"\"\n    var lastNumeralIndex10 = -1\n    var lastNumeralCount10\
    \ = 0\n    var lastNumeral10 = \"\"\n    var lastNumeralIndex11 = -1\n    var\
    \ lastNumeralCount11 = 0\n    var lastNumeral11 = \"\"\n    var lastNumeralIndex12\
    \ = -1\n    var lastNumeralCount12 = 0\n    var lastNumeral12 = \"\"\n    var\
    \ lastNumeralIndex13 = -1\n    var lastNumeralCount13 = 0\n    var lastNumeral13\
    \ = \"\"\n    var lastNumeralIndex14 = -1\n    var lastNumeralCount14 = 0\n  \
    \  var lastNumeral14 = \"\"\n    var lastNumeralIndex15 = -1\n    var lastNumeralCount15\
    \ = 0\n    var lastNumeral15 = \"\"\n    var lastNumeralIndex16 = -1\n    var\
    \ lastNumeralCount16 = 0\n    var lastNumeral16 = \"\"\n    var lastNumeralIndex17\
    \ = -1\n    var lastNumeralCount17 = 0\n    var lastNumeral17 = \"\"\n    var\
    \ lastNumeralIndex18 = -1\n    var lastNumeralCount18 = 0\n    var lastNumeral18\
    \ = \"\"\n    var lastNumeralIndex19 = -1\n    var lastNumeralCount19 = 0\n  \
    \  var lastNumeral19 = \"\"\n    var lastNumeralIndex20 = -1\n    var lastNumeralCount20\
    \ = 0\n    var lastNumeral20 = \"\"\n    var lastNumeralIndex21 = -1\n", "   \
    \ var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 0\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index35", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var i = 0\n    var\
    \ j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o\
    \ = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t =\
    \ 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n\
    \    var z = 0\n    var num = 0\n    var romanNum = \"\"\n    var isNegative =\
    \ false\n    var isZero = false\n    var isOne = false\n    var isTwo = false\n\
    \    var isThree = false\n    var isFour = false\n    var isFive = false\n   \
    \ var isSix = false\n    var isSeven = false\n    var isEight = false\n    var\
    \ isNine = false\n    var isTen = false\n    var isEleven = false\n    var isTwelve\
    \ = false\n    var isThirteen = false\n    var isFourteen = false\n    var isFifteen\
    \ = false\n    var isSixteen = false\n    var isSeventeen = false\n    var isEighteen\
    \ = false\n    var isNineteen = false\n    var isTwenty = false\n    var isTwentyOne\
    \ = false\n    var isTwentyTwo = false\n    var isTwentyThree = false\n    var\
    \ isTwentyFour = false\n    var isTwentyFive = false\n    var isTwentySix = false\n\
    \    var isTwentySeven = false\n    var isTwentyEight = false\n    var isTwentyNine\
    \ = false\n    var isThirty = false\n    var isThirtyOne = false\n    var isThirtyTwo\
    \ = false\n    var isThirtyThree = false\n    var isThirtyFour = false\n    var\
    \ isThirtyFive = false\n    var isThirtySix = false\n    var isThirtySeven = false\n\
    \    var isThirtyEight = false\n    var isThirtyNine = false\n    var isForty\
    \ = false\n    var isFortyOne = false\n    var isFortyTwo = false\n    var isFortyThree\
    \ = false\n    var isFortyFour = false\n    var isFortyFive = false\n    var isFortySix\
    \ = false\n    var isFortySeven = false\n    var isFortyEight = false\n    var\
    \ isFortyNine = false\n    var isFifty = false\n    var isFiftyOne = false\n \
    \   var isFiftyTwo = false\n    var isFiftyThree = false\n    var isFiftyFour\
    \ = false\n    var isFiftyFive = false\n    var isFiftySix = false\n    var isFiftySeven\
    \ = false\n    var isFif", "    if number < 1 || number > 1000 {\n        return\
    \ \"\"\n    }\n\n    var roman = \"\"\n    var numeral = number\n    var index\
    \ = 0\n    var roman_numeral = \"\"\n\n    while numeral > 0 {\n        var remainder\
    \ = numeral % 10\n        numeral = numeral / 10\n        roman_numeral = roman_numeral\
    \ + roman_numerals[remainder]\n        index = index + 1\n    }\n\n    roman =\
    \ roman.insert(index, roman_numeral)\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var i = 0\n    var num = 0\n    var num2 = 0\n    var num3\
    \ = 0\n    var num4 = 0\n    var num5 = 0\n    var num6 = 0\n    var num7 = 0\n\
    \    var num8 = 0\n    var num9 = 0\n    var num10 = 0\n    var num11 = 0\n  \
    \  var num12 = 0\n    var num13 = 0\n    var num14 = 0\n    var num15 = 0\n  \
    \  var num16 = 0\n    var num17 = 0\n    var num18 = 0\n    var num19 = 0\n  \
    \  var num20 = 0\n    var num21 = 0\n    var num22 = 0\n    var num23 = 0\n  \
    \  var num24 = 0\n    var num25 = 0\n    var num26 = 0\n    var num27 = 0\n  \
    \  var num28 = 0\n    var num29 = 0\n    var num30 = 0\n    var num31 = 0\n  \
    \  var num32 = 0\n    var num33 = 0\n    var num34 = 0\n    var num35 = 0\n  \
    \  var num36 = 0\n    var num37 = 0\n    var num38 = 0\n    var num39 = 0\n  \
    \  var num40 = 0\n    var num41 = 0\n    var num42 = 0\n    var num43 = 0\n  \
    \  var num44 = 0\n    var num45 = 0\n    var num46 = 0\n    var num47 = 0\n  \
    \  var num48 = 0\n    var num49 = 0\n    var num50 = 0\n    var num51 = 0\n  \
    \  var num52 = 0\n    var num53 = 0\n    var num54 = 0\n    var num55 = 0\n  \
    \  var num56 = 0\n    var num57 = 0\n    var num58 = 0\n    var num59 = 0\n  \
    \  var num60 = 0\n    var num61 = 0\n    var num62 = 0\n    var num63 = 0\n  \
    \  var num64 = 0\n    var num65 = 0\n    var num66 = 0\n    var num67 = 0\n  \
    \  var num68 = 0\n    var num69 = 0\n    var num70 = 0\n    var num71 = 0\n  \
    \  var num72 = 0\n    var num73 = 0\n    var num74 = 0\n    var num75 = 0\n  \
    \  var num76 = 0\n    var num77 = 0\n    var num78 = 0\n    var num79 = 0\n  \
    \  var num80 = 0\n    var num81 = 0\n    var num82 = 0\n    var num83 = 0\n  \
    \  var num84 = 0\n    var num85 = 0\n    var num86 = 0\n    var num87 = 0\n  \
    \  var num88 = 0\n    var num89 = 0\n    var num90 = 0\n    var num91 = 0\n  \
    \  var num92 = 0\n    var num93 = 0\n    var num94 = 0\n    var num95 = 0\n  \
    \  var num96 = 0\n    var num97 = 0\n    var num98 = 0\n    var num99 = 0\n  \
    \  var num100 = 0\n    var num101 = 0\n", "    if number < 1 || number > 1000\
    \ {\n        throw ArgumentError(\"number must be between 1 and 1000\")\n    }\n\
    \    var roman = \"\"\n    var roman_numeral = \"\"\n    var numeral_value = number\n\
    \    var numeral_value_str = String(numeral_value)\n    var numeral_value_str_length\
    \ = String(numeral_value_str).count\n\n    for _ in 0..<numeral_value_str_length\
    \ {\n        var numeral_value_digit = numeral_value_str.index(numeral_value_str.startIndex,\
    \ offsetBy: 0)\n        var numeral_value_digit_value = Int(numeral_value_digit)\n\
    \        var numeral_value_digit_value_str = String(numeral_value_digit_value)\n\
    \        var numeral_value_digit_value_str_length = String(numeral_value_digit_value_str).count\n\
    \n        if numeral_value_digit_value_str_length > 1 {\n            numeral_value_digit_value_str\
    \ = String(numeral_value_digit_value_str[0..<numeral_value_digit_value_str_length\
    \ - 1])\n        }\n        roman += numeral_value_digit_value_str\n    }\n  \
    \  roman_numeral = roman\n    return roman_numeral.lowercased()", "    var roman\
    \ = \"\"\n    var remainder = number\n    var i = 2\n    while remainder > 0 {\n\
    \        remainder -= i\n        roman += mini_roman[i]\n        i += 1\n    }\n\
    \    return roman", "    var roman = \"\"\n    var num: Int\n    var digit: Int\n\
    \    var romanDigit: Int\n    var romanDigitString = \"\"\n    var romanDigitStringUpper\
    \ = \"\"\n    var romanDigitStringLower = \"\"\n\n    for num = 0; num < number;\
    \ num++ {\n        digit = number % 10\n        romanDigit = digit * 100\n   \
    \     romanDigitString = String(romanDigit)\n        romanDigitStringUpper = String(romanDigit).uppercased()\n\
    \        romanDigitStringLower = String(romanDigit).lowercased()\n        roman\
    \ += romanDigitString\n        roman = roman.substring(1)\n        roman += romanDigitStringUpper\n\
    \        roman = roman.substring(1)\n        roman += romanDigitStringLower\n\
    \    }\n\n    return roman", "    if number < 1 || number > 1000 {\n        return\
    \ \"\"\n    }\n    var roman = \"\"\n    var num = 0\n    var i = 1\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 1\n    var n = 0\n    var o =\
    \ 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n\
    \    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n \
    \   var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n  \
    \  var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n   \
    \ var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var\
    \ o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t\
    \ = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y =\
    \ 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n\
    \    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n \
    \   var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n  \
    \  var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n   \
    \ var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var\
    \ y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d\
    \ = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n\
    \    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n \
    \   var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n  \
    \  var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n   \
    \ var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var\
    \ i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n\
    \ = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s =\
    \ 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n\
    \    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c", "   \
    \ let roman = mini_roman(number)\n    return roman.lowercased()", "    guard number\
    \ >= 1 && number <= 1000 else {\n        return \"\"\n    }\n    var roman = \"\
    \"\n    var remainder = number\n    var index = 0\n    while remainder > 0 {\n\
    \        let remainderDigit = remainder % 10\n        roman = String(repeating:\
    \ \"0\", count: index) + roman\n        remainder = remainder / 10\n        index\
    \ = index + 1\n    }\n    return roman", "    var roman = \"\"\n    var remainder\
    \ = number\n    var numeral = \"\"\n    var i = -1\n    for _ in 0..<4 {\n   \
    \     i += 1\n        numeral += String(remainder % 10)\n        remainder /=\
    \ 10\n    }\n    numeral += String(remainder)\n    roman = numeral\n    roman\
    \ = roman.lowercased()\n    return roman", "    let roman = roman_numerals(number)\n\
    \    return roman.map(String::init).joined()", "    let roman = StringBuilder()\n\
    \    let numStr = String(number)\n    let numLen = numStr.count\n    let numDigits\
    \ = numLen / 3\n    let numRest = numLen % 3\n    let numDigit = numLen / 9\n\
    \    let numRestDigit = numLen % 9\n    let numTens = numLen / 90\n    let numRestTens\
    \ = numLen % 90\n    let numOnes = numLen / 5000\n    let numRestOnes = numLen\
    \ % 5000\n    let numFives = numLen / 5000\n    let numRestFives = numLen % 5000\n\
    \    let numOnesDigit = numLen / 5000\n    let numRestOnesDigit = numLen % 5000\n\
    \    let numTensDigit = numLen / 5000\n    let numRestTensDigit = numLen % 5000\n\
    \    let numOnesTens = numLen / 5000\n    let numRestOnesTens = numLen % 5000\n\
    \    let numOnesOnes = numLen / 5000\n    let numRestOnesOnes = numLen % 5000\n\
    \    let numOnesFives = numLen / 5000\n    let numRestOnesFives = numLen % 5000\n\
    \    let numOnesOnesDigit = numLen / 5000\n    let numRestOnesOnesDigit = numLen\
    \ % 5000\n    let numOnesOnesTens = numLen / 5000\n    let numRestOnesOnesTens\
    \ = numLen % 5000\n    let numOnesOnesOnes = numLen / 5000\n    let numRestOnesOnesOnes\
    \ = numLen % 5000\n    let numOnesOnesFives = numLen / 5000\n    let numRestOnesOnesFives\
    \ = numLen % 5000\n    let numOnesOnesOnesDigit = numLen / 5000\n    let numRestOnesOnesOnesDigit\
    \ = numLen % 5000\n    let numOnesOnesOnesTens = numLen / 5000\n    let numRestOnesOnesOnesTens\
    \ = numLen % 5000\n    let numOnesOnesOnesOnes = numLen / 5000\n    let numRestOnesOnesOnesOnes\
    \ = numLen % 5000\n    let numOnesOnesOnesFives = numLen / 5000\n    let numRestOnesOnesOnesFives\
    \ = numLen % 5000\n    let numOnesOnesOnesOnesDigit = numLen / 5000\n    let numRestOnesOnesOnesOnesDigit\
    \ = numLen % 5000\n    let numOnesOne", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digits_length\
    \ = 0\n    var roman_numeral_digits_index = 0\n    var roman_numeral_digits_last_index\
    \ = 0\n    var roman_numeral_digits_last_digit = 0\n    var roman_numeral_digits_last_digit_index\
    \ = 0\n    var roman_numeral_digits_last_digit_index2 = 0\n    var roman_numeral_digits_last_digit_index3\
    \ = 0\n    var roman_numeral_digits_last_digit_index4 = 0\n    var roman_numeral_digits_last_digit_index5\
    \ = 0\n    var roman_numeral_digits_last_digit_index6 = 0\n    var roman_numeral_digits_last_digit_index7\
    \ = 0\n    var roman_numeral_digits_last_digit_index8 = 0\n    var roman_numeral_digits_last_digit_index9\
    \ = 0\n    var roman_numeral_digits_last_digit_index10 = 0\n    var roman_numeral_digits_last_digit_index11\
    \ = 0\n    var roman_numeral_digits_last_digit_index12 = 0\n    var roman_numeral_digits_last_digit_index13\
    \ = 0\n    var roman_numeral_digits_last_digit_index14 = 0\n    var roman_numeral_digits_last_digit_index15\
    \ = 0\n    var roman_numeral_digits_last_digit_index16 = 0\n    var roman_numeral_digits_last_digit_index17\
    \ = 0\n    var roman_numeral_digits_last_digit_index18 = 0\n    var roman_numeral_digits_last_digit_index19\
    \ = 0\n    var roman_numeral_digits_last_digit_index20 = 0\n    var roman_numeral_digits_last_digit_index21\
    \ = 0\n    var roman_numeral_digits_last_digit_index22 = 0\n    var roman_numeral_digits_last_digit_index23\
    \ = 0\n    var roman_numeral_digits_last_digit_index24 = 0\n    var roman_numeral_digits_last_digit_index25\
    \ = 0\n    var roman_numeral_digits_last_digit_index26 = 0\n    var roman_numeral_digits_last_digit_index27\
    \ = 0\n    var roman_numeral_digits_last_digit_index28 = 0\n    var roman_numeral_digits_last_digit_index29\
    \ = 0\n    var roman_numeral_digits_last_digit_index30 = 0\n    var roman_numeral_digits_last_digit_index31\
    \ = 0\n    var roman_numeral_digits_last_digit_index32 = 0\n    var roman_numeral_digits_last_digit_index33\
    \ = 0\n    var roman_numeral_digits_last_digit_index34 = 0\n    var roman_numeral_digits_last_",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 1\n    var roman_numeral_digit_sum\
    \ = 0\n    var roman_numeral_digit_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_sum_index\
    \ = 0\n    var roman_numeral_digit_sum_index = 0\n    var roman_numer", "    let\
    \ roman = roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    var roman = \"\"\n    var num: Int\n    var numStr: String\n    var\
    \ i: Int\n    for i = 1, numStr = String(number); i < 1000; i++ {\n        num\
    \ = Int(numStr)\n        roman += mini_roman[num - 1]\n        numStr = String(num\
    \ / 10)\n    }\n    return roman", "    let roman = roman_numeral(number)\n  \
    \  return roman.lowercased()", "    let roman = roman_numerals(number)\n    return\
    \ roman.map(String::init).joined()", "    let roman = Array(1...number).map {\
    \ roman_numeral($0) }\n    return roman.joined()", "    var roman = \"\"\n   \
    \ var roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 0\n    var roman_numeral_digit_count_minus_one = 0\n    var roman_numeral_digit_count_minus_two\
    \ = 0\n    var roman_numeral_digit_count_minus_three = 0\n    var roman_numeral_digit_count_minus_four\
    \ = 0\n    var roman_numeral_digit_count_minus_five = 0\n    var roman_numeral_digit_count_minus_six\
    \ = 0\n    var roman_numeral_digit_count_minus_seven = 0\n    var roman_numeral_digit_count_minus_eight\
    \ = 0\n    var roman_numeral_digit_count_minus_nine = 0\n    var roman_numeral_digit_count_minus_ten\
    \ = 0\n    var roman_numeral_digit_count_minus_eleven = 0\n    var roman_numeral_digit_count_minus_twelve\
    \ = 0\n    var roman_numeral_digit_count_minus_thirteen = 0\n    var roman_numeral_digit_count_minus_fourteen\
    \ = 0\n    var roman_numeral_digit_count_minus_fifteen = 0\n    var roman_numeral_digit_count_minus_sixteen\
    \ = 0\n    var roman_numeral_digit_count_minus_seventeen = 0\n    var roman_numeral_digit_count_minus_eighteen\
    \ = 0\n    var roman_numeral_digit_count_minus_nineteen = 0\n    var roman_numeral_digit_count_minus_twenty\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty_one = 0\n    var roman_numeral_digit_count_minus_twenty_two\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty_three = 0\n    var roman_numeral_digit_count_minus_twenty_four\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty_five = 0\n    var roman_numeral_digit_count_minus_twenty_six\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty_seven = 0\n    var roman_numeral_digit_count_minus_twenty_eight\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty_nine = 0\n    var roman_numeral_digit_count_minus_thirty\
    \ = 0\n    var roman_numeral_digit_count_minus_thirty_one = 0\n    var roman_numeral_digit_count_minus_thirty_two\
    \ = 0\n    var roman_numeral_digit_count_minus_thirty_three = 0\n    var roman_numeral_digit_count_minus_thirty_four\
    \ = 0\n    var roman_numeral_digit_count_minus_thirty_five = 0\n", "    let roman\
    \ = int_to_roman(number)\n    return roman.lowercased()", "    let roman = StringBuilder()\n\
    \    let nums = numberToRoman(number)\n    for num in nums {\n        roman.append(num)\n\
    \    }\n    return roman.lowercaseString", "    let roman = StringBuilder()\n\
    \    let nums = String(number)\n    let numsLen = nums.characters.count\n    let\
    \ numsDigits = nums.characters\n    let numsDigitCount = numsDigits.count\n  \
    \  let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = numsDigits.count\n    let numsDigitCount = numsDigits.count\n\
    \    let numsDigitCount = num", "    let roman = Roman(number)\n    return roman.roman",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var numeral = \"\"\n  \
    \  var numeral_roman = \"\"\n    var numeral_roman_numeral = \"\"\n    var numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral = \"\"\n    var numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral = \"\"\n \
    \   var numeral_roman_numeral_roman_numeral_roman_numeral_roman = \"\"\n    var\
    \ numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral = \"\"\n   \
    \ var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman =\
    \ \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_ro",
  "    var roman = \"\"\n    var num = 0\n    var roman_num = 0\n    var roman_num_str\
    \ = \"\"\n    var roman_num_str_len = 0\n    var roman_num_str_len2 = 0\n    var\
    \ roman_num_str_len3 = 0\n    var roman_num_str_len4 = 0\n    var roman_num_str_len5\
    \ = 0\n    var roman_num_str_len6 = 0\n    var roman_num_str_len7 = 0\n    var\
    \ roman_num_str_len8 = 0\n    var roman_num_str_len9 = 0\n    var roman_num_str_len10\
    \ = 0\n    var roman_num_str_len11 = 0\n    var roman_num_str_len12 = 0\n    var\
    \ roman_num_str_len13 = 0\n    var roman_num_str_len14 = 0\n    var roman_num_str_len15\
    \ = 0\n    var roman_num_str_len16 = 0\n    var roman_num_str_len17 = 0\n    var\
    \ roman_num_str_len18 = 0\n    var roman_num_str_len19 = 0\n    var roman_num_str_len20\
    \ = 0\n    var roman_num_str_len21 = 0\n    var roman_num_str_len22 = 0\n    var\
    \ roman_num_str_len23 = 0\n    var roman_num_str_len24 = 0\n    var roman_num_str_len25\
    \ = 0\n    var roman_num_str_len26 = 0\n    var roman_num_str_len27 = 0\n    var\
    \ roman_num_str_len28 = 0\n    var roman_num_str_len29 = 0\n    var roman_num_str_len30\
    \ = 0\n    var roman_num_str_len31 = 0\n    var roman_num_str_len32 = 0\n    var\
    \ roman_num_str_len33 = 0\n    var roman_num_str_len34 = 0\n    var roman_num_str_len35\
    \ = 0\n    var roman_num_str_len36 = 0\n    var roman_num_str_len37 = 0\n    var\
    \ roman_num_str_len38 = 0\n    var roman_num_str_len39 = 0\n    var roman_num_str_len40\
    \ = 0\n    var roman_num_str_len41 = 0\n    var roman_num_str_len42 = 0\n    var\
    \ roman_num_str_len43 = 0\n    var roman_num_str_len44 = 0\n    var roman_num_str_len45\
    \ = 0\n    var roman_num_str_len46 = 0\n    var roman_num_str_len47 = 0\n    var\
    \ roman_num_str_len48 = 0\n    var roman_num_str_len49 = 0\n    var roman_num_str_len50\
    \ = 0\n    var roman_num_str_len51 = 0\n    var roman_num_str_len52 = 0\n    var\
    \ roman_num_str_len53 = 0\n    var roman_num_str_len54 = 0\n    var roman_num_str_",
  "    var roman = \"\"\n    var num = 0\n    var i = 1\n    for _ in 0..<number {\n\
    \        roman = roman + roman_table[num]\n        num = num * 10 + i\n      \
    \  i += 1\n    }\n    return roman.lowercased()", "    var roman = \"\"\n    var\
    \ roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digits_length\
    \ = 0\n    var roman_numeral_digits_index = 0\n    var roman_numeral_digits_length_index\
    \ = 0\n    var roman_numeral_digits_index2 = 0\n    var roman_numeral_digits_length_index2\
    \ = 0\n    var roman_numeral_digits_index3 = 0\n    var roman_numeral_digits_length_index3\
    \ = 0\n    var roman_numeral_digits_index4 = 0\n    var roman_numeral_digits_length_index4\
    \ = 0\n    var roman_numeral_digits_index5 = 0\n    var roman_numeral_digits_length_index5\
    \ = 0\n    var roman_numeral_digits_index6 = 0\n    var roman_numeral_digits_length_index6\
    \ = 0\n    var roman_numeral_digits_index7 = 0\n    var roman_numeral_digits_length_index7\
    \ = 0\n    var roman_numeral_digits_index8 = 0\n    var roman_numeral_digits_length_index8\
    \ = 0\n    var roman_numeral_digits_index9 = 0\n    var roman_numeral_digits_length_index9\
    \ = 0\n    var roman_numeral_digits_index10 = 0\n    var roman_numeral_digits_length_index10\
    \ = 0\n    var roman_numeral_digits_index11 = 0\n    var roman_numeral_digits_length_index11\
    \ = 0\n    var roman_numeral_digits_index12 = 0\n    var roman_numeral_digits_length_index12\
    \ = 0\n    var roman_numeral_digits_index13 = 0\n    var roman_numeral_digits_length_index13\
    \ = 0\n    var roman_numeral_digits_index14 = 0\n    var roman_numeral_digits_length_index14\
    \ = 0\n    var roman_numeral_digits_index15 = 0\n    var roman_numeral_digits_length_index15\
    \ = 0\n    var roman_numeral_digits_index16 = 0\n    var roman_numeral_digits_length_index16\
    \ = 0\n    var roman_numeral_digits_index17 = 0\n    var roman_numeral_digits_length_index17\
    \ = 0\n    var roman_numeral_digits_index18 = 0\n    var roman_numeral_digits_length_index18\
    \ = 0\n    var roman_numeral_digits_index19 = 0\n    var roman_numeral_digits_length_index19\
    \ = 0\n    var roman_numeral_digits_index20 = 0\n    var roman_numeral_digits_length_index20\
    \ = 0\n    var roman_numeral_digits_index21 = 0\n    var roman_numeral_digits_length_index21\
    \ = 0\n", "    var roman = \"\"\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = number\n    var n = number\n    var o = number\n \
    \   var p = number\n    var q = number\n    var r = number\n    var s = number\n\
    \    var t = number\n    var u = number\n    var v = number\n    var w = number\n\
    \    var x = number\n    var y = number\n    var z = number\n    var a = number\n\
    \    var b = number\n    var c = number\n    var d = number\n    var e = number\n\
    \    var f = number\n    var g = number\n    var h = number\n    var i = number\n\
    \    var j = number\n    var k = number\n    var l = number\n    var m = number\n\
    \    var n = number\n    var o = number\n    var p = number\n    var q = number\n\
    \    var r = number\n    var s = number\n    var t = number\n    var u = number\n\
    \    var v = number\n    var w = number\n    var x = number\n    var y = number\n\
    \    var z = number\n    var a = number\n    var b = number\n    var c = number\n\
    \    var d = number\n    var e = number\n    var f = number\n    var g = number\n\
    \    var h = number\n    var i = number\n    var j = number\n    var k = number\n\
    \    var l = number\n    var m = number\n    var n = number\n    var o = number\n\
    \    var p = number\n    var q = number\n    var r = number\n    var s = number\n\
    \    var t = number\n    var u = number\n    var v = number\n    var w = number\n\
    \    var x = number\n    var y = number\n    var z = number\n    var a = number\n\
    \    var b = number\n    var c = number\n    var d = number\n    var e = number\n\
    \    var f = number\n    var g = number\n    var h = number\n    var i = number\n\
    \    var j = number\n    var k = number\n    var l = number\n    var m = number\n\
    \    var n = number\n    var o = number\n    var p = number\n    var q = number\n\
    \    var r = number\n    var s = number\n    var t = number\n    var u = number\n\
    \    var v = number\n    var w = number\n    var x = number\n    var y = number\n\
    \    var z = number\n    var a = number\n    var b = number\n    var c = number\n\
    \    var d = number\n    var e = number\n    var f = number\n    var g = number\n\
    \    var h = number\n    var i = number\n    var j = number\n    var k = number\n\
    \    var l = number\n    var m = number\n    var n = number\n    var o = number\n\
    \    var p = number\n    var q = number\n    var r = number\n    var s = number\n\
    \    var t = number\n    var u = number\n    var v = number\n    var w = number\n\
    \    var x = number\n    var y = number\n    var z = number\n    var a = number\n\
    \    var b = number\n    var c = number\n    var d = number\n    var e = number\n",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var numeral = \"\"\n  \
    \  var numeral_array = [Int]()\n    var numeral_array_index = 0\n    var numeral_array_length\
    \ = 0\n    var numeral_array_max = 0\n    var numeral_array_max_index = 0\n  \
    \  var numeral_array_max_length = 0\n    var numeral_array_max_value = 0\n   \
    \ var numeral_array_max_value_index = 0\n    var numeral_array_max_value_length\
    \ = 0\n    var numeral_array_max_value_roman = \"\"\n    var numeral_array_max_value_roman_index\
    \ = 0\n    var numeral_array_max_value_roman_length = 0\n    var numeral_array_max_value_roman_numeral\
    \ = \"\"\n    var numeral_array_max_value_roman_numeral_index = 0\n    var numeral_array_max_value_roman_numeral_length\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array = [Int]()\n    var\
    \ numeral_array_max_value_roman_numeral_array_index = 0\n    var numeral_array_max_value_roman_numeral_array_length\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max = 0\n    var numeral_array_max_value_roman_numeral_array_max_index\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_length = 0\n  \
    \  var numeral_array_max_value_roman_numeral_array_max_value = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_index\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_length =\
    \ 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman = \"\"\
    \n    var numeral_array_max_value_roman_numeral_array_max_value_roman_index =\
    \ 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_length\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral\
    \ = \"\"\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_index\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_length\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_array\
    \ = [Int]()\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_array_index\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_array_length\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_array_max\
    \ = 0\n    var numeral_array_max_value_roman_numeral_array_max_value_roman_numeral_array_max_index",
  "    if number < 1 || number > 1000 {\n        return \"\"\n    }\n\n    var roman\
    \ = \"\"\n    var num = 0\n    var index = 0\n    var isNegative = false\n\n \
    \   for _ in 0..<number {\n        roman = roman + mini_roman[index]\n       \
    \ num = num * 10 + mini_roman.index(mini_roman[index])\n        index++\n    }\n\
    \n    if num < 0 {\n        isNegative = true\n        num = -num\n    }\n\n \
    \   if num == 0 {\n        return roman\n    }\n\n    if isNegative {\n      \
    \  roman = roman.dropLast()\n    }\n\n    return roman", "    switch number {\n\
    \    case 1:\n        return \"x\"\n    case 2:\n        return \"c\"\n    case\
    \ 3:\n        return \"d\"\n    case 4:\n        return \"e\"\n    case 5:\n \
    \       return \"f\"\n    case 6:\n        return \"g\"\n    case 7:\n       \
    \ return \"h\"\n    case 8:\n        return \"i\"\n    case 9:\n        return\
    \ \"j\"\n    case 10:\n        return \"k\"\n    case 11:\n        return \"l\"\
    \n    case 12:\n        return \"m\"\n    case 13:\n        return \"n\"\n   \
    \ case 14:\n        return \"o\"\n    case 15:\n        return \"p\"\n    case\
    \ 16:\n        return \"q\"\n    case 17:\n        return \"r\"\n    case 18:\n\
    \        return \"s\"\n    case 19:\n        return \"t\"\n    case 20:\n    \
    \    return \"u\"\n    case 21:\n        return \"v\"\n    case 22:\n        return\
    \ \"w\"\n    case 23:\n        return \"x\"\n    case 24:\n        return \"y\"\
    \n    case 25:\n        return \"z\"\n    case 26:\n        return \"aa\"\n  \
    \  case 27:\n        return \"ab\"\n    case 28:\n        return \"ac\"\n    case\
    \ 29:\n        return \"ad\"\n    case 30:\n        return \"ae\"\n    case 31:\n\
    \        return \"af\"\n    case 32:\n        return \"ag\"\n    case 33:\n  \
    \      return \"ai\"\n    case 34:\n        return \"aj\"\n    case 35:\n    \
    \    return \"ak\"\n    case 36:\n        return \"al\"\n    case 37:\n      \
    \  return \"am\"\n    case 38:\n        return \"an\"\n    case 39:\n        return\
    \ \"ao\"\n    case 40:\n        return \"ap\"\n    case 41:\n        return \"\
    aq\"\n    case 42:\n        return \"ar\"\n    case 43:\n        return \"as\"\
    \n    case 44:\n        return \"at\"\n    case 45:\n        return \"au\"\n \
    \   case 46:\n        return \"av\"\n    case 47:\n        return \"aw\"\n   \
    \ case 48:\n        return \"ax\"\n    case 49:\n        return \"ay\"\n    case\
    \ 50:\n        return \"az\"\n    case 51:\n        return \"ba\"\n    case 52:\n\
    \        return \"bb\"\n    case 53:\n        return \"bc\"\n    case 54:\n  \
    \      return \"bd\"\n    case 55:\n        return \"be\"\n    case 56:\n    \
    \    return \"bf\"\n    case 57:\n        return \"bg\"\n    case 58:\n      \
    \  return \"bh\"\n    case 59:\n        return \"bi\"\n    case 60:\n        return\
    \ \"bj\"\n    case 61:\n        return \"bk\"\n    case 62:\n        return \"\
    bl\"\n    case 63:\n        return \"bm\"\n    case 64:\n        return \"bn\"\
    \n    case 65:\n        return \"bo\"\n    case 66:\n        return \"bp\"\n \
    \   case 67:\n        return \"bq\"\n    case 68:\n        return \"", "    let\
    \ roman = Array(1...number).map { roman_numeral($0) }\n    return roman.joined()",
  "    var roman = \"\"\n    var remainder = number\n    var index = 0\n    while\
    \ remainder > 1000 {\n        remainder -= 1000\n        roman = roman.insert(index,\
    \ \"M\")\n        index++\n    }\n    while remainder > 500 {\n        remainder\
    \ -= 500\n        roman = roman.insert(index, \"CM\")\n        index++\n    }\n\
    \    while remainder > 100 {\n        remainder -= 100\n        roman = roman.insert(index,\
    \ \"D\")\n        index++\n    }\n    while remainder > 50 {\n        remainder\
    \ -= 50\n        roman = roman.insert(index, \"CD\")\n        index++\n    }\n\
    \    while remainder > 10 {\n        remainder -= 10\n        roman = roman.insert(index,\
    \ \"C\")\n        index++\n    }\n    while remainder > 5 {\n        remainder\
    \ -= 5\n        roman = roman.insert(index, \"XC\")\n        index++\n    }\n\
    \    while remainder > 1 {\n        remainder -= 1\n        roman = roman.insert(index,\
    \ \"L\")\n        index++\n    }\n    while remainder > 0.5 {\n        remainder\
    \ -= 0.5\n        roman = roman.insert(index, \"XL\")\n        index++\n    }\n\
    \    while remainder > 0.25 {\n        remainder -= 0.25\n        roman = roman.insert(index,\
    \ \"X\")\n        index++\n    }\n    while remainder > 0.1 {\n        remainder\
    \ -= 0.1\n        roman = roman.insert(index, \"IX\")\n        index++\n    }\n\
    \    while remainder > 0.05 {\n        remainder -= 0.05\n        roman = roman.insert(index,\
    \ \"V\")\n        index++\n    }\n    while remainder > 0.01 {\n        remainder\
    \ -= 0.01\n        roman = roman.insert(index, \"IV\")\n        index++\n    }\n\
    \    while remainder > 0.005 {\n        remainder -= 0.005\n        roman = roman.insert(index,\
    \ \"I\")\n        index++\n    }\n    while remainder > 0.001 {\n        remainder\
    \ -= 0.001\n        roman = roman.insert(index, \"II\")\n        index++\n   \
    \ }\n    while remainder > 0.0005 {\n        remainder -= 0.0005\n        roman\
    \ = roman.insert(index, \"III\")\n        index++\n    }\n    while remainder\
    \ > 0.0001 {\n        remainder -= 0.0001\n        roman = roman.insert(index,\
    \ \"IV\")\n", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    switch number {\n    case 1:\n        return \"I\"\n    case 2:\n        return\
    \ \"II\"\n    case 3:\n        return \"III\"\n    case 4:\n        return \"\
    IV\"\n    case 5:\n        return \"V\"\n    case 6:\n        return \"VI\"\n\
    \    case 7:\n        return \"VII\"\n    case 8:\n        return \"VIII\"\n \
    \   case 9:\n        return \"IX\"\n    case 10:\n        return \"X\"\n    case\
    \ 11:\n        return \"XI\"\n    case 12:\n        return \"XII\"\n    case 13:\n\
    \        return \"XIII\"\n    case 14:\n        return \"XIV\"\n    case 15:\n\
    \        return \"XV\"\n    case 16:\n        return \"XVI\"\n    case 17:\n \
    \       return \"XVII\"\n    case 18:\n        return \"XVIII\"\n    case 19:\n\
    \        return \"XIX\"\n    case 20:\n        return \"XX\"\n    case 21:\n \
    \       return \"XXI\"\n    case 22:\n        return \"XXII\"\n    case 23:\n\
    \        return \"XXIII\"\n    case 24:\n        return \"XXIV\"\n    case 25:\n\
    \        return \"XXV\"\n    case 26:\n        return \"XXVI\"\n    case 27:\n\
    \        return \"XXVII\"\n    case 28:\n        return \"XXVIII\"\n    case 29:\n\
    \        return \"XXIX\"\n    case 30:\n        return \"XXX\"\n    case 31:\n\
    \        return \"XXXI\"\n    case 32:\n        return \"XXXII\"\n    case 33:\n\
    \        return \"XXXIII\"\n    case 34:\n        return \"XXXIV\"\n    case 35:\n\
    \        return \"XXXV\"\n    case 36:\n        return \"XXXVI\"\n    case 37:\n\
    \        return \"XXXVII\"\n    case 38:\n        return \"XXXVIII\"\n    case\
    \ 39:\n        return \"XXXIX\"\n    case 40:\n        return \"XL\"\n    case\
    \ 41:\n        return \"L\"\n    case 42:\n        return \"LX\"\n    case 43:\n\
    \        return \"LXX\"\n    case 44:\n        return \"LXXX\"\n    case 45:\n\
    \        return \"LXXXX\"\n    case 46:\n        return \"LXXXXX\"\n    case 47:\n\
    \        return \"LXXXII\"\n    case 48:\n        return \"LXXXIII\"\n    case\
    \ 49:\n        return \"LXXXIV\"\n    case 50:\n        return \"LXXXV\"\n   \
    \ case 51:\n        return \"LXXXVI\"\n    case 52:\n        return \"LXXXVII\"\
    \n    case 53:\n        return \"LXXXVIII\"\n    case 54:\n        return \"LXXXIX\"\
    \n    case 55:\n        return \"LXXXVIII\"\n    case 56:\n        return \"LXXXXI\"\
    \n    case 57:\n        return \"L", "    if number < 1 || number > 1000 {\n \
    \       throw Error::new(ErrorKind::InvalidInput, \"Invalid input\")\n    }\n\n\
    \    let mut roman = String::new();\n    let mut numeral = number;\n    let mut\
    \ remainder = number;\n\n    while numeral > 0 {\n        let remainder_digit\
    \ = remainder % 10;\n        roman.push((numeral % 10) + remainder_digit.to_string());\n\
    \        numeral /= 10;\n        remainder /= 10;\n    }\n\n    roman.push(remainder.to_string());\n\
    \    roman.to_lowercase()", "    var roman = \"\"\n    var remainder = number\n\
    \    var index = 0\n    while remainder > 0 {\n        var remainderDigit = remainder\
    \ % 100\n        remainder = remainder / 100\n        var nextDigit = remainder\
    \ % 10\n        remainder = remainder / 10\n        roman = roman.insert(index,\
    \ String(nextDigit))\n        index = index + 1\n    }\n    return roman.lowercased()",
  "    let roman = Roman(number)\n    return roman.roman", "    let roman = StringBuilder()\n\
    \    let nums = Array(1...number)\n    let numsCount = nums.count\n    var numsSum\
    \ = 0\n    for n in nums {\n        numsSum += n\n    }\n    var romanNum = numsSum\n\
    \    var romanNumCount = 0\n    while romanNumCount < numsCount {\n        let\
    \ romanDigit = romanNum % 10\n        roman.append(romanDigit)\n        romanNum\
    \ /= 10\n        romanNumCount += 1\n    }\n    return roman.lowercaseString",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var i = 0\n    var numeral = \"\"\n    var roman_numeral =\
    \ \"\"\n    var roman_numeral_upper = \"\"\n    var roman_numeral_lower = \"\"\
    \n    var roman_numeral_upper_lower = \"\"\n    var roman_numeral_upper_lower_roman\
    \ = \"\"\n    var roman_numeral_lower_roman = \"\"\n    var roman_numeral_upper_lower_roman\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper = \"\"\n    var roman_numeral_upper_lower_roman_lower\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower = \"\"\n    var\
    \ roman_numeral_upper_lower_roman_upper_lower_roman = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_lower = \"\
    \"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower = \"\
    \"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_lower\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_lower_", "    let roman = romanNumerals(number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    let roman =\
    \ roman_numerals(number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    if number < 1 || number > 1000 {\n        throw Error::new(ErrorKind::InvalidInput,\
    \ \"Invalid input\")\n    }\n    let mut roman = String::new();\n    let mut numeral\
    \ = number;\n    let mut prev_numeral = number;\n    while numeral > 0 {\n   \
    \     let remainder = numeral % 10;\n        roman.push((remainder as char).to_string());\n\
    \        numeral /= 10;\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > 0 {\n        roman.push((numeral\
    \ as char).to_string());\n    }\n    if numeral > ", "    let roman = roman_numerals(number)\n\
    \    return roman.map(String::init).joined()", "    var roman = \"\"\n    var\
    \ num = 0\n    var last = 0\n    var romanDigit = 0\n    var romanDigitCount =\
    \ 0\n    var romanDigitCountLast = 0\n    var romanDigitCountLastLast = 0\n  \
    \  var romanDigitCountLastLastLast = 0\n    var romanDigitCountLastLastLast =\
    \ 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast = 0\n    var romanDigitCountLastLastLastLast\
    \ = 0\n    var romanDigitCountLastLastLastLast", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var romanNum = number\n\
    \    var romanNumString = \"\"\n    var romanNumStringArray = [String]()\n   \
    \ var romanNumStringArrayIndex = 0\n    var romanNumStringArrayCount = 0\n   \
    \ var romanNumStringArrayMax = 0\n    var romanNumStringArrayMaxIndex = 0\n  \
    \  var romanNumStringArrayMaxCount = 0\n    var romanNumStringArrayMin = 0\n \
    \   var romanNumStringArrayMinIndex = 0\n    var romanNumStringArrayMinCount =\
    \ 0\n    var romanNumStringArraySum = 0\n    var romanNumStringArraySumIndex =\
    \ 0\n    var romanNumStringArraySumCount = 0\n    var romanNumStringArraySumMax\
    \ = 0\n    var romanNumStringArraySumMaxIndex = 0\n    var romanNumStringArraySumMaxCount\
    \ = 0\n    var romanNumStringArraySumMin = 0\n    var romanNumStringArraySumMinIndex\
    \ = 0\n    var romanNumStringArraySumMinCount = 0\n    var romanNumStringArraySumMaxRoman\
    \ = 0\n    var romanNumStringArraySumMaxRomanIndex = 0\n    var romanNumStringArraySumMaxRomanCount\
    \ = 0\n    var romanNumStringArraySumMinRoman = 0\n    var romanNumStringArraySumMinRomanIndex\
    \ = 0\n    var romanNumStringArraySumMinRomanCount = 0\n    var romanNumStringArraySumMaxRomanString\
    \ = \"\"\n    var romanNumStringArraySumMaxRomanStringIndex = 0\n    var romanNumStringArraySumMaxRomanStringCount\
    \ = 0\n    var romanNumStringArraySumMinRomanString = \"\"\n    var romanNumStringArraySumMinRomanStringIndex\
    \ = 0\n    var romanNumStringArraySumMinRomanStringCount = 0\n    var romanNumStringArraySumMaxRomanString\
    \ = \"\"\n    var romanNumStringArraySumMaxRomanStringIndex = 0\n    var romanNumStringArraySumMaxRomanStringCount\
    \ = 0\n    var romanNumStringArraySumMinRomanString = \"\"\n    var romanNumStringArraySumMinRomanStringIndex\
    \ = 0\n    var romanNumStringArraySumMinRomanStringCount = 0\n    var romanNumStringArraySumMaxRomanString\
    \ = \"\"\n    var romanNumStringArraySumMaxRomanStringIndex = 0\n    var romanNumStringArraySumMaxRomanStringCount\
    \ = 0\n    var romanNumStringArraySumMinRomanString = \"\"\n    var romanNumStringArraySumMinRomanStringIndex\
    \ = 0\n    var romanNumString", "    if number < 1 || number > 1000 {\n      \
    \  throw Error::new(ErrorKind::InvalidInput, \"Invalid input\")\n    }\n    let\
    \ mut roman = String::new();\n    let mut prev_digit = String::new();\n    let\
    \ mut prev_roman = String::new();\n    let mut prev_prev_digit = String::new();\n\
    \    let mut prev_prev_roman = String::new();\n    let mut prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_roman = String::new();\n    let\
    \ mut prev_prev_prev_prev_digit = String::new();\n    let mut prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_digit = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_digit = String::new();\n    let\
    \ mut prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_digit\
    \ = ", "    let roman = Array(1...number).map {\n        switch $0 {\n       \
    \ case 1:\n            return \"i\"\n        case 2:\n            return \"ii\"\
    \n        case 3:\n            return \"iii\"\n        case 4:\n            return\
    \ \"iv\"\n        case 5:\n            return \"v\"\n        case 6:\n       \
    \     return \"vi\"\n        case 7:\n            return \"vii\"\n        case\
    \ 8:\n            return \"viii\"\n        case 9:\n            return \"ix\"\n\
    \        case 10:\n            return \"x\"\n        case 11:\n            return\
    \ \"xi\"\n        case 12:\n            return \"xii\"\n        case 13:\n   \
    \         return \"xiii\"\n        case 14:\n            return \"xiv\"\n    \
    \    case 15:\n            return \"xv\"\n        case 16:\n            return\
    \ \"xvi\"\n        case 17:\n            return \"xvii\"\n        case 18:\n \
    \           return \"xviii\"\n        case 19:\n            return \"xix\"\n \
    \       case 20:\n            return \"xx\"\n        case 21:\n            return\
    \ \"xxi\"\n        case 22:\n            return \"xxii\"\n        case 23:\n \
    \           return \"xxiii\"\n        case 24:\n            return \"xxiv\"\n\
    \        case 25:\n            return \"xxv\"\n        case 26:\n            return\
    \ \"xxvi\"\n        case 27:\n            return \"xxvii\"\n        case 28:\n\
    \            return \"xxviii\"\n        case 29:\n            return \"xxix\"\n\
    \        case 30:\n            return \"xxx\"\n        case 31:\n            return\
    \ \"xxxi\"\n        case 32:\n            return \"xxxii\"\n        case 33:\n\
    \            return \"xxxiii\"\n        case 34:\n            return \"xxxiv\"\
    \n        case 35:\n            return \"xxxv\"\n        case 36:\n          \
    \  return \"xxxvi\"\n        case 37:\n            return \"xxxvii\"\n       \
    \ case 38:\n            return \"xxxviii\"\n        case 39:\n            return\
    \ \"xxxiv\"\n        case 40:\n            return \"xxxv\"\n        case 41:\n\
    \            return \"xxxvi\"\n        case 42:\n            return \"xxxvii\"\
    \n        case 43:\n            return \"xxxviii\"\n        case 44:\n       \
    \     return \"xxxiv\"\n        case 45:\n            return \"xxxvi\"\n     \
    \   case 46:\n            return \"xxxvii\"\n        case 47:\n            return\
    \ \"xxxviii\"\n        case 48:\n            return \"xxxiv\"\n        case 49:\n\
    \            return \"xxxvi\"\n        case 50:\n            return \"xxxvii\"\
    \n        case 51:\n            return \"xxxviii\"\n        case 52:\n       \
    \     return \"xxxiv\"\n        case 53:\n            return \"xxxvi\"\n     \
    \   case 54:\n            return \"xxxvii\"\n        case 55:\n            return\
    \ \"xxxviii\"\n        case 56:\n            return \"xxxiv\"\n        case 57:\n\
    \            return \"xxxvi\"\n        case 58", "    var roman = \"\"\n    var\
    \ num = 0\n    var i = 0\n    for num < number {\n        roman = roman + int_to_roman(num)\n\
    \        num = num * 10\n        i += 1\n    }\n    return roman.lowercased()",
  "    var roman = \"\"\n    var numeral = \"\"\n    var index = 0\n    var isNegative\
    \ = false\n    if number < 0 {\n        isNegative = true\n        number = -number\n\
    \    }\n    if number < 1000 {\n        numeral = String(number)\n    } else {\n\
    \        numeral = String(number)\n        while numeral.hasPrefix(\"0\") {\n\
    \            numeral = String(numeral.dropFirst())\n        }\n    }\n    for\
    \ index in 0..<numeral.count {\n        let char = numeral[index]\n        switch\
    \ char {\n        case \"M\":\n            roman += \"M\"\n        case \"D\"\
    :\n            roman += \"D\"\n        case \"C\":\n            roman += \"C\"\
    \n        case \"L\":\n            roman += \"L\"\n        case \"X\":\n     \
    \       roman += \"XL\"\n        case \"V\":\n            roman += \"V\"\n   \
    \     case \"I\":\n            roman += \"IX\"\n        case \"X\":\n        \
    \    roman += \"XX\"\n        case \"9\":\n            roman += \"IX\"\n     \
    \   case \"8\":\n            roman += \"V\"\n        case \"7\":\n           \
    \ roman += \"VI\"\n        case \"6\":\n            roman += \"VII\"\n       \
    \ case \"5\":\n            roman += \"VIII\"\n        case \"4\":\n          \
    \  roman += \"IV\"\n        case \"3\":\n            roman += \"II\"\n       \
    \ case \"2\":\n            roman += \"III\"\n        case \"1\":\n           \
    \ roman += \"IIII\"\n        default:\n            roman += char\n        }\n\
    \    }\n    if isNegative {\n        roman = \"-\" + roman\n    }\n    return\
    \ roman", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = roman_numeral(number)\n    return roman.lowercased()", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    if number < 1 || number > 1000 {\n     \
    \   return \"\"\n    }\n\n    var roman = \"\"\n    var numeral = number\n   \
    \ var numeralString = \"\"\n    var numeralStringBuilder = StringBuilder()\n\n\
    \    // Iterate through each numeral and convert it to a roman numeral\n    //\
    \ and append it to the string\n    while numeral > 0 {\n        var remainder\
    \ = numeral % 10\n        numeral = numeral / 10\n        numeralString = String(remainder)\
    \ + numeralString\n    }\n\n    // Append the numeral to the string\n    numeralStringBuilder.append(numeralString)\n\
    \n    // Iterate through each numeral and convert it to a roman numeral\n    //\
    \ and append it to the string\n    while numeralStringBuilder.length > 1 {\n \
    \       var remainder = numeralStringBuilder.last!.characters.last ?? \"\"\n \
    \       var numeralStringBuilder = StringBuilder()\n        numeralStringBuilder.append(numeralStringBuilder.last!.characters.prefix(1))\n\
    \        numeralStringBuilder.append(String(remainder))\n        numeralStringBuilder.append(numeralStringBuilder.last!)\n\
    \        roman = roman + numeralStringBuilder.reverse().joinWithSeparator(\"\"\
    )\n    }\n\n    return roman.lowercased()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var numeral_value = number\n    var numeral_value_str = String(numeral_value)\n\
    \    var numeral_value_str_length = String(numeral_value_str).length\n    var\
    \ numeral_value_str_length_minus_1 = numeral_value_str_length - 1\n    var numeral_value_str_length_minus_2\
    \ = numeral_value_str_length - 2\n    var numeral_value_str_length_minus_3 = numeral_value_str_length\
    \ - 3\n    var numeral_value_str_length_minus_4 = numeral_value_str_length - 4\n\
    \    var numeral_value_str_length_minus_5 = numeral_value_str_length - 5\n   \
    \ var numeral_value_str_length_minus_6 = numeral_value_str_length - 6\n    var\
    \ numeral_value_str_length_minus_7 = numeral_value_str_length - 7\n    var numeral_value_str_length_minus_8\
    \ = numeral_value_str_length - 8\n    var numeral_value_str_length_minus_9 = numeral_value_str_length\
    \ - 9\n    var numeral_value_str_length_minus_10 = numeral_value_str_length -\
    \ 10\n    var numeral_value_str_length_minus_11 = numeral_value_str_length - 11\n\
    \    var numeral_value_str_length_minus_12 = numeral_value_str_length - 12\n \
    \   var numeral_value_str_length_minus_13 = numeral_value_str_length - 13\n  \
    \  var numeral_value_str_length_minus_14 = numeral_value_str_length - 14\n   \
    \ var numeral_value_str_length_minus_15 = numeral_value_str_length - 15\n    var\
    \ numeral_value_str_length_minus_16 = numeral_value_str_length - 16\n    var numeral_value_str_length_minus_17\
    \ = numeral_value_str_length - 17\n    var numeral_value_str_length_minus_18 =\
    \ numeral_value_str_length - 18\n    var numeral_value_str_length_minus_19 = numeral_value_str_length\
    \ - 19\n    var numeral_value_str_length_minus_20 = numeral_value_str_length -\
    \ 20\n    var numeral_value_str_length_minus_21 = numeral_value_str_length - 21\n\
    \    var numeral_value_str_length_minus_22 = numeral_value_str_length - 22\n \
    \   var numeral_value_str_length_minus_23 = numeral_value_str_length - 23\n  \
    \  var numeral_value_str_length_minus_24 = numeral_value_str_length - 24\n   \
    \ var numeral_value_str_length_minus_25 = numeral_value_str_length - 25\n    var\
    \ numeral_value_str_length_minus_26 = numeral_value_str_length - 26\n    var numeral_value_str_length_minus_27\
    \ = numeral_value_str_length - 27\n    var numeral_value_str_length_minus_28 =\
    \ numeral_value_str_length - 28\n    var numeral_value_str_length_", "    let\
    \ roman = mini_roman_to_int(number)\n    return roman_to_string(roman)", "   \
    \ let roman = StringBuilder()\n    let romanDigits = romanDigits(number)\n   \
    \ for digit in romanDigits {\n        roman.append(digit)\n    }\n    return roman.lowercaseString",
  "    let roman = roman_numerals(number)\n    return roman.map(String::init).joinWithSeparator(\"\
    \")", "    let roman = int_to_roman(number)\n    return roman.lowercased()", " \
    \   guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n \
    \   var roman = \"\"\n    var remainder = number\n    while remainder > 0 {\n\
    \        let remainderDigit = remainder % 10\n        roman = String(remainderDigit\
    \ + roman)\n        remainder = Int(remainder / 10)\n    }\n    return roman.lowercased()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    if number\
    \ < 1 || number > 1000 {\n        throw ArgumentError(\"number must be between\
    \ 1 and 1000\")\n    }\n    var roman = \"\"\n    var remainder = number\n   \
    \ var i = 1\n    while remainder > 0 {\n        remainder, remainder = remainder\
    \ / 10, remainder % 10\n        roman += roman_digits[i]\n        i++\n    }\n\
    \    return roman", "    var roman = \"\"\n    var num = 0\n    var i = 0\n  \
    \  var j = 0\n    var roman_num = 0\n    var roman_num_str = \"\"\n    var roman_num_str_reverse\
    \ = \"\"\n    var roman_num_str_temp = \"\"\n    var roman_num_str_temp_reverse\
    \ = \"\"\n    var roman_num_str_temp2 = \"\"\n    var roman_num_str_temp_reverse2\
    \ = \"\"\n    var roman_num_str_temp3 = \"\"\n    var roman_num_str_temp_reverse3\
    \ = \"\"\n    var roman_num_str_temp4 = \"\"\n    var roman_num_str_temp_reverse4\
    \ = \"\"\n    var roman_num_str_temp5 = \"\"\n    var roman_num_str_temp_reverse5\
    \ = \"\"\n    var roman_num_str_temp6 = \"\"\n    var roman_num_str_temp_reverse6\
    \ = \"\"\n    var roman_num_str_temp7 = \"\"\n    var roman_num_str_temp_reverse7\
    \ = \"\"\n    var roman_num_str_temp8 = \"\"\n    var roman_num_str_temp_reverse8\
    \ = \"\"\n    var roman_num_str_temp9 = \"\"\n    var roman_num_str_temp_reverse9\
    \ = \"\"\n    var roman_num_str_temp10 = \"\"\n    var roman_num_str_temp_reverse10\
    \ = \"\"\n    var roman_num_str_temp11 = \"\"\n    var roman_num_str_temp_reverse11\
    \ = \"\"\n    var roman_num_str_temp12 = \"\"\n    var roman_num_str_temp_reverse12\
    \ = \"\"\n    var roman_num_str_temp13 = \"\"\n    var roman_num_str_temp_reverse13\
    \ = \"\"\n    var roman_num_str_temp14 = \"\"\n    var roman_num_str_temp_reverse14\
    \ = \"\"\n    var roman_num_str_temp15 = \"\"\n    var roman_num_str_temp_reverse15\
    \ = \"\"\n    var roman_num_str_temp16 = \"\"\n    var roman_num_str_temp_reverse16\
    \ = \"\"\n    var roman_num_str_temp17 = \"\"\n    var roman_num_str_temp_reverse17\
    \ = \"\"\n    var roman_num_str_temp18 = \"\"\n    var roman_num_str_temp_reverse18\
    \ = \"\"\n    var roman_num_str_temp19 = \"\"\n    var roman_num_str_temp_reverse19\
    \ = \"\"\n    var roman_num_str_temp20 = \"\"\n    var roman_num_str_temp_reverse20\
    \ = \"\"\n    var roman_num_str_temp21 = \"\"\n    var roman_num_str_temp_reverse21\
    \ = \"\"\n    var roman_num_str_temp22 = \"\"\n    var roman_num_str_temp_reverse22\
    \ = \"\"\n    var roman_num_str_temp23 = \"\"\n    var roman_num_str_temp_reverse23\
    \ = \"\"\n    var roman_num_str_temp24 = \"\"\n    var roman_num_str_", "    var\
    \ roman = \"\"\n    var roman_numeral = \"\"\n    var numeral = \"\"\n    var\
    \ numeral_roman = \"\"\n    var numeral_roman_numeral = \"\"\n    var numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral = \"\"\n    var numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral = \"\"\n \
    \   var numeral_roman_numeral_roman_numeral_roman_numeral_roman = \"\"\n    var\
    \ numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral = \"\"\n   \
    \ var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman =\
    \ \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral\
    \ = \"\"\n    var numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_roman_numeral_",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digits_count = 0\n    var roman_numeral_digits_index\
    \ = 0\n    var roman_numeral_digits_index_count = 0\n    var roman_numeral_digits_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_min\
    \ = 0\n    var roman_numeral_digits_index_max_min_count = 0\n    var roman_numeral_digits_index_max_min_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max = 0\n    var roman_numeral_digits_index_max_min_count_max_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max = 0\n  \
    \  var roman_numeral_digits_index_max_min_count_max_count_max_count = 0\n    var\
    \ roman_numeral_digits_index_max_min_count_max_count_max_count_max = 0\n    var\
    \ roman_numeral_digits_index_max_min_count_max_count_max_count_max_count = 0\n\
    \    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numeral_digits_index_max_min_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max_count_max\
    \ = 0\n    var roman_numer", "    var roman = \"\"\n    var num = 0\n    var i\
    \ = 0\n    for _ in 0..<number {\n        roman = roman + roman_numerals[num]\n\
    \        num = num * 10 + roman_numerals[i]\n        i += 1\n    }\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var num: Int\n    var i: Int\n\
    \    for i = 1, num < 1000; i++ {\n        roman = roman + mini_roman_to_int(roman_to_mini_roman(Int(i)))\n\
    \    }\n    return roman", "    let roman = IntToRoman(number)\n    return roman.lowercased()",
  "    if number < 1 || number > 1000 {\n        return \"\"\n    }\n    var roman\
    \ = \"\"\n    var num = 0\n    var i = 1\n    for num < number {\n        roman\
    \ = roman + int_to_roman(i)\n        i++\n    }\n    return roman.lowercased()",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 1\n    var roman_numeral_digit_count_minus_one\
    \ = 0\n    var roman_numeral_digit_count_minus_two = 0\n    var roman_numeral_digit_count_minus_three\
    \ = 0\n    var roman_numeral_digit_count_minus_four = 0\n    var roman_numeral_digit_count_minus_five\
    \ = 0\n    var roman_numeral_digit_count_minus_six = 0\n    var roman_numeral_digit_count_minus_seven\
    \ = 0\n    var roman_numeral_digit_count_minus_eight = 0\n    var roman_numeral_digit_count_minus_nine\
    \ = 0\n    var roman_numeral_digit_count_minus_ten = 0\n    var roman_numeral_digit_count_minus_eleven\
    \ = 0\n    var roman_numeral_digit_count_minus_twelve = 0\n    var roman_numeral_digit_count_minus_thirteen\
    \ = 0\n    var roman_numeral_digit_count_minus_fourteen = 0\n    var roman_numeral_digit_count_minus_fifteen\
    \ = 0\n    var roman_numeral_digit_count_minus_sixteen = 0\n    var roman_numeral_digit_count_minus_seventeen\
    \ = 0\n    var roman_numeral_digit_count_minus_eighteen = 0\n    var roman_numeral_digit_count_minus_nineteen\
    \ = 0\n    var roman_numeral_digit_count_minus_twenty = 0\n    var roman_numeral_digit_count_minus_thirty\
    \ = 0\n    var roman_numeral_digit_count_minus_forty = 0\n    var roman_numeral_digit_count_minus_fifty\
    \ = 0\n    var roman_numeral_digit_count_minus_sixty = 0\n    var roman_numeral_digit_count_minus_seventy\
    \ = 0\n    var roman_numeral_digit_count_minus_eighty = 0\n    var roman_numeral_digit_count_minus_ninety\
    \ = 0\n    var roman_numeral_digit_count_minus_hundred = 0\n    var roman_numeral_digit_count_minus_thousand\
    \ = 0\n    var roman_numeral_digit_count_minus_million = 0\n    var roman_numeral_digit_count_minus_billion\
    \ = 0\n    var roman_numeral_digit_count_minus_trillion = 0\n    var roman_numeral_digit_count_minus_quadrillion\
    \ = 0\n    var roman_numeral_digit_count_minus_quintillion = 0\n    var roman_numeral_digit_count_minus_sextillion\
    \ = 0\n    var roman_numeral_digit_count_minus_septillion = 0\n    var ", "  \
    \  var roman = \"\"\n    var numeral = \"\"\n    var index = 0\n    var numeral_index\
    \ = 0\n    var numeral_length = \"\"\n    var numeral_length_index = 0\n    var\
    \ numeral_length_length = 0\n    var numeral_length_length_roman = \"\"\n    var\
    \ numeral_length_length_numeral = \"\"\n    var numeral_length_length_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral = \"\"\n    var numeral_length_length_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_roman = \"\"\n\
    \    var numeral_length_length_numeral_numeral_numeral_numeral_roman = \"\"\n\
    \    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_roman =\
    \ \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_roman\
    \ = \"\"\n    var numeral_length_length_numeral_numeral_numeral_numeral_numer",
  "    let roman = StringBuilder()\n    let numDigits = Int(log10(Double(number)))\
    \ + 1\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let numDigits = min(numDigits,\
    \ 4)\n    let numDigits = max(numDigits, 1)\n    let ", "    var roman = \"\"\n\
    \    var roman_numeral = \"\"\n    var roman_numeral_length = 0\n    var roman_numeral_length_index\
    \ = 0\n    var roman_numeral_length_string = \"\"\n\n    // Convert integer to\
    \ roman numeral\n    for number > 0 {\n        roman_numeral = String(number %\
    \ 10)\n        roman_numeral_length_index = (roman_numeral.length + 1)\n     \
    \   roman_numeral_length_string = String(roman_numeral_length_index)\n       \
    \ roman_numeral = roman_numeral + roman_numeral_string\n        roman_numeral_length\
    \ = roman_numeral_length + roman_numeral_length_string\n        number = number\
    \ / 10\n    }\n\n    // Convert roman numeral to integer\n    for roman_numeral_length_index\
    \ in 0..<roman_numeral_length {\n        roman_numeral_length_string = String(roman_numeral_length_index)\n\
    \        roman_numeral = roman_numeral + roman_numeral_string\n    }\n\n    //\
    \ Convert roman numeral to string\n    for roman_numeral_length_index in 0..<roman_numeral_length\
    \ {\n        roman_numeral_length_string = String(roman_numeral_length_index)\n\
    \        roman_numeral = roman_numeral + roman_numeral_string\n    }\n\n    //\
    \ Convert roman numeral to lowercase\n    for roman_numeral_length_index in 0..<roman_numeral_length\
    \ {\n        roman_numeral_length_string = String(roman_numeral_length_index)\n\
    \        roman_numeral = roman_numeral + roman_numeral_string\n    }\n\n    //\
    \ Return roman numeral\n    return roman_numeral", "    var roman = \"\"\n   \
    \ var num = 0\n    var roman_num = 0\n    var roman_num_str = \"\"\n    var roman_num_str2\
    \ = \"\"\n    var roman_num_str3 = \"\"\n    var roman_num_str4 = \"\"\n    var\
    \ roman_num_str5 = \"\"\n    var roman_num_str6 = \"\"\n    var roman_num_str7\
    \ = \"\"\n    var roman_num_str8 = \"\"\n    var roman_num_str9 = \"\"\n    var\
    \ roman_num_str10 = \"\"\n    var roman_num_str11 = \"\"\n    var roman_num_str12\
    \ = \"\"\n    var roman_num_str13 = \"\"\n    var roman_num_str14 = \"\"\n   \
    \ var roman_num_str15 = \"\"\n    var roman_num_str16 = \"\"\n    var roman_num_str17\
    \ = \"\"\n    var roman_num_str18 = \"\"\n    var roman_num_str19 = \"\"\n   \
    \ var roman_num_str20 = \"\"\n    var roman_num_str21 = \"\"\n    var roman_num_str22\
    \ = \"\"\n    var roman_num_str23 = \"\"\n    var roman_num_str24 = \"\"\n   \
    \ var roman_num_str25 = \"\"\n    var roman_num_str26 = \"\"\n    var roman_num_str27\
    \ = \"\"\n    var roman_num_str28 = \"\"\n    var roman_num_str29 = \"\"\n   \
    \ var roman_num_str30 = \"\"\n    var roman_num_str31 = \"\"\n    var roman_num_str32\
    \ = \"\"\n    var roman_num_str33 = \"\"\n    var roman_num_str34 = \"\"\n   \
    \ var roman_num_str35 = \"\"\n    var roman_num_str36 = \"\"\n    var roman_num_str37\
    \ = \"\"\n    var roman_num_str38 = \"\"\n    var roman_num_str39 = \"\"\n   \
    \ var roman_num_str40 = \"\"\n    var roman_num_str41 = \"\"\n    var roman_num_str42\
    \ = \"\"\n    var roman_num_str43 = \"\"\n    var roman_num_str44 = \"\"\n   \
    \ var roman_num_str45 = \"\"\n    var roman_num_str46 = \"\"\n    var roman_num_str47\
    \ = \"\"\n    var roman_num_str48 = \"\"\n    var roman_num_str49 = \"\"\n   \
    \ var roman_num_str50 = \"\"\n    var roman_num_str51 = \"\"\n    var roman_num_str52\
    \ = \"\"\n    var roman_num_str53 = \"\"\n    var roman_num_str54 = \"\"\n   \
    \ var roman_num_str55 = \"\"\n    var roman_num_str56 = \"\"\n    var roman_num_str57\
    \ = \"\"\n    var roman_num_str58 = \"\"\n    var roman_num_str59 = \"\"\n   \
    \ var roman_num_str60 = \"\"\n    var roman_num_str61 = \"\"", "    var roman\
    \ = \"\"\n    var num = 0\n    var roman_num = 0\n    var roman_num_str = \"\"\
    \n    var roman_num_str_index = 0\n    var roman_num_str_length = \"\"\n    var\
    \ roman_num_str_length_index = 0\n    var roman_num_str_length_num = 0\n    var\
    \ roman_num_str_length_num_str = \"\"\n    var roman_num_str_length_num_str_index\
    \ = 0\n    var roman_num_str_length_num_str_length = \"\"\n    var roman_num_str_length_num_str_length_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num = 0\n    var roman_num_str_length_num_str_length_num_str\
    \ = \"\"\n    var roman_num_str_length_num_str_length_num_str_index = 0\n    var\
    \ roman_num_str_length_num_str_length_num_str_length = \"\"\n    var roman_num_str_length_num_str_length_num_str_length_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num = 0\n  \
    \  var roman_num_str_length_num_str_length_num_str_length_num_str = \"\"\n   \
    \ var roman_num_str_length_num_str_length_num_str_length_num_str_index = 0\n \
    \   var roman_num_str_length_num_str_length_num_str_length_num_str_length = \"\
    \"\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str\
    \ = \"\"\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length\
    \ = \"\"\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str\
    \ = \"\"\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_index\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num\
    \ = 0\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str\
    \ = \"\"\n    var roman_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_length_num_str_index\
    \ = 0", "    let roman = roman_numeral_map[number]\n    return roman.lowercased()",
  "    var roman = \"\"\n    var num = \"\"\n    var i = 0\n    var j = 0\n    var\
    \ roman_num = 0\n    var roman_num_str = \"\"\n    var roman_num_str2 = \"\"\n\
    \    var roman_num_str3 = \"\"\n    var roman_num_str4 = \"\"\n    var roman_num_str5\
    \ = \"\"\n    var roman_num_str6 = \"\"\n    var roman_num_str7 = \"\"\n    var\
    \ roman_num_str8 = \"\"\n    var roman_num_str9 = \"\"\n    var roman_num_str10\
    \ = \"\"\n    var roman_num_str11 = \"\"\n    var roman_num_str12 = \"\"\n   \
    \ var roman_num_str13 = \"\"\n    var roman_num_str14 = \"\"\n    var roman_num_str15\
    \ = \"\"\n    var roman_num_str16 = \"\"\n    var roman_num_str17 = \"\"\n   \
    \ var roman_num_str18 = \"\"\n    var roman_num_str19 = \"\"\n    var roman_num_str20\
    \ = \"\"\n    var roman_num_str21 = \"\"\n    var roman_num_str22 = \"\"\n   \
    \ var roman_num_str23 = \"\"\n    var roman_num_str24 = \"\"\n    var roman_num_str25\
    \ = \"\"\n    var roman_num_str26 = \"\"\n    var roman_num_str27 = \"\"\n   \
    \ var roman_num_str28 = \"\"\n    var roman_num_str29 = \"\"\n    var roman_num_str30\
    \ = \"\"\n    var roman_num_str31 = \"\"\n    var roman_num_str32 = \"\"\n   \
    \ var roman_num_str33 = \"\"\n    var roman_num_str34 = \"\"\n    var roman_num_str35\
    \ = \"\"\n    var roman_num_str36 = \"\"\n    var roman_num_str37 = \"\"\n   \
    \ var roman_num_str38 = \"\"\n    var roman_num_str39 = \"\"\n    var roman_num_str40\
    \ = \"\"\n    var roman_num_str41 = \"\"\n    var roman_num_str42 = \"\"\n   \
    \ var roman_num_str43 = \"\"\n    var roman_num_str44 = \"\"\n    var roman_num_str45\
    \ = \"\"\n    var roman_num_str46 = \"\"\n    var roman_num_str47 = \"\"\n   \
    \ var roman_num_str48 = \"\"\n    var roman_num_str49 = \"\"\n    var roman_num_str50\
    \ = \"\"\n    var roman_num_str51 = \"\"\n    var roman_num_str52 = \"\"\n   \
    \ var roman_num_str53 = \"\"\n    var roman_num_str54 = \"\"\n    var roman_num_str55\
    \ = \"\"\n    var roman_num_str56 = \"\"\n    var roman_num_str57 = \"\"\n   \
    \ var roman_num_str58 = \"\"\n    var roman_num_str59 = \"\"\n    var roman_num_str60\
    \ = \"\"\n    var ", "    let roman = roman_numerals(number)\n    return roman.map(String::init).joinWithSeparator(\"\
    \")", "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 1\n    var roman_numeral_digit_total\
    \ = 0\n    var roman_numeral_digit_index = 0\n    var roman_numeral_digit_value\
    \ = \"\"\n    var roman_numeral_digit_base = 0\n    var roman_numeral_digit_base_digits\
    \ = 0\n    var roman_numeral_digit_base_digits_index = 0\n    var roman_numeral_digit_base_digits_value\
    \ = \"\"\n    var roman_numeral_digit_base_digits_value_length = 0\n    var roman_numeral_digit_base_digits_value_length_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value = 0\n    var\
    \ roman_numeral_digit_base_digits_value_length_value_index = 0\n    var roman_numeral_digit_base_digits_value_length_value_length\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length_value\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length_value_index\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length_value_length\
    \ = 0\n    var roman_numeral_digit_base_digits_value_length_value_length_value_length_value_length_value_length_value_length_index\
    \ = 0\n    var roman_numeral_"]
stop_tokens:
- "\n}"

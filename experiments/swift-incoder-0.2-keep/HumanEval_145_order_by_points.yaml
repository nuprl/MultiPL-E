name: HumanEval_145_order_by_points
language: swift
prompt: "\n/// Write a function which sorts the given list of integers\n/// in ascending\
  \ order according to the sum of their digits.\n/// Note: if there are several items\
  \ with similar sum of their digits,\n/// order them based on their index in original\
  \ list.\n/// For example:\n/// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
  \ -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc order_by_points(nums:\
  \ [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12])\
  \ == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145,\
  \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
  \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
  \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3])\
  \ == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3,\
  \ 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
  \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
completions: ["    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        if sum > 0 {\n            result.append(num)\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var sum =\
    \ 0\n    for n in nums {\n        sum += n\n    }\n    for n in nums {\n     \
    \   if sum < 0 {\n            sum += n\n        } else {\n            sum += n\
    \ % 10\n        }\n        result.append(n)\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum > 0 {\n            result.insert(sum, num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n\
    \            sum -= 10\n        }\n        if sum == 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum > 0 {\n            result.insert(num, 0)\n\
    \            sum -= num\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += num\n       \
    \ } else {\n            if sum == 0 {\n                result.append(num)\n  \
    \          } else {\n                let index = nums.indexOf(num)\n         \
    \       result[index] = num\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ 10\n        }\n        if sum > 0 {\n            sum -= 10\n        }\n    \
    \    if sum == 0 {\n            result.insert(num, at: result.index(of: num))\n\
    \        }\n    }\n    return result", "    let len = nums.count\n    var sum\
    \ = 0\n    var result = [Int]()\n    for i in 0..<len {\n        sum += nums[i]\n\
    \        result.append(sum)\n    }\n    return result.sorted(by: { (a, b) -> Bool\
    \ in\n        let aSum = a % 10\n        let bSum = b % 10\n        return aSum\
    \ < bSum ? true : aSum > bSum\n    })", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        return sum - a < sum - b\n    })\n    return result",
  "    var numsSorted = nums\n    for i := 0; i < len(nums); i++ {\n        for j\
    \ := i + 1; j < len(nums); j++ {\n            if nums[j] < nums[i] {\n       \
    \         numsSorted = numsSorted[:j] + numsSorted[j+1:]\n                break\n\
    \            }\n        }\n    }\n    return numsSorted", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    for i := 0; i < len(result); i++ {\n        result[i] = result[i]\
    \ - sum\n    }\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for num in nums {\n        sum += num\n        if sum > 0 {\n           \
    \ result.append(num)\n        }\n    }\n    return result", "    var result =\
    \ [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n      \
    \  result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n      \
    \  let aSum = a.toInt()\n        let bSum = b.toInt()\n        return aSum < bSum\
    \ || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n    })\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for n in nums {\n \
    \       sum += n\n    }\n    for n in nums {\n        if sum < 0 {\n         \
    \   sum += n\n        } else {\n            if sum == 0 {\n                result.append(n)\n\
    \            } else {\n                let index = nums.indexOf(sum)\n       \
    \         result.append(nums[index])\n                nums[index] = n\n      \
    \          sum -= n\n            }\n        }\n    }\n    return result", "  \
    \  var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum < 0 {\n            sum = 0\n        }\n        if sum >\
    \ 0 {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        let aDigit = a % 10\n        let bDigit = b % 10\n        if aDigit\
    \ == bDigit {\n            return a < b\n        } else {\n            return\
    \ aDigit < bDigit\n        }\n    })\n    return result", "    var sum = 0\n \
    \   var result = [Int]()\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aDigit = a % 10\n\
    \        let bDigit = b % 10\n        return aDigit == bDigit || aDigit < bDigit\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ n in nums {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by:\
    \ {\n        sum - $0\n    })\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        if sum >\
    \ 0 {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum\
    \ += 10\n        }\n        if sum > 0 {\n            sum += num\n        }\n\
    \        if sum == 0 {\n            result.insert(num, at: 0)\n        }\n   \
    \ }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for num\
    \ in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += num\n        } else {\n            if\
    \ sum == 0 {\n                result.append(num)\n            } else {\n     \
    \           let index = sum % 10\n                result.append(num)\n       \
    \         result.append(index)\n            }\n            sum = 0\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum < 0 {\n            sum = 0\n\
    \        }\n        if sum > 0 {\n            result.append(num)\n        }\n\
    \    }\n    return result", "    let len = nums.count\n    var result = [Int](repeating:\
    \ 0, count: len)\n    var sum = 0\n    for i in 0..<len {\n        sum += nums[i]\n\
    \        result[i] = sum\n    }\n    return result", "    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n    }\n    var result = [Int]()\n    for\
    \ num in nums {\n        if sum < 0 {\n            sum += num\n        } else\
    \ {\n            sum -= num\n        }\n        result.append(num)\n    }\n  \
    \  return result", "    var sum = 0\n    var result = [Int]()\n    for n in nums\
    \ {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        return sum - a < sum - b\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ 10\n        }\n        if sum > 0 {\n            sum += num\n        }\n   \
    \     result.append(num)\n    }\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    for num\
    \ in nums {\n        if sum < 0 {\n            sum += 10\n        }\n        if\
    \ sum > 0 {\n            sum += num\n        }\n        if sum == 0 {\n      \
    \      result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for n in nums {\n \
    \       sum += n\n    }\n    for n in nums {\n        if sum < 0 {\n         \
    \   sum += n\n        } else {\n            result.append(n)\n            sum\
    \ -= n\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aSum = sum\n    \
    \    let bSum = sum\n        let aIndex = a.hashValue % aSum\n        let bIndex\
    \ = b.hashValue % bSum\n        return aIndex < bIndex\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for n in nums {\n        sum +=\
    \ n\n    }\n    for n in nums {\n        if sum < 0 {\n            sum += n\n\
    \        } else {\n            if sum == 0 {\n                result.append(n)\n\
    \            } else {\n                let index = nums.index {\n            \
    \        $0 >= n && $0 < sum\n                }\n                result.append(nums[index])\n\
    \            }\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    for num\
    \ in nums {\n        if sum > 0 {\n            for _ in 0..<sum {\n          \
    \      result.append(0)\n            }\n            result.append(num)\n     \
    \       sum -= num\n        } else {\n            result.append(num)\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    var sum = 0\n \
    \   for num in nums {\n        sum += num\n        result.append(num)\n    }\n\
    \    var i = 0\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ num\n            result[i] = -num\n            i++\n        } else {\n     \
    \       sum -= num\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        if sum >\
    \ 0 {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n        return\
    \ aSum > bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n    })\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        result.append(num)\n    }\n    var i = 0\n\
    \    for num in result {\n        if sum < 0 {\n            sum *= -1\n      \
    \      i += 1\n        }\n        if sum == 0 {\n            break\n        }\n\
    \    }\n    return result.sorted()", "    var result = [Int]()\n    var sum =\
    \ 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n\
    \            result.insert(sum - num, num)\n            sum -= num\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var sum\
    \ = 0\n    var result = [Int]()\n    for num in nums {\n        sum += num\n \
    \       result.append(num)\n    }\n    return result.sorted(by: { (a, b) -> Bool\
    \ in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n        return\
    \ aSum < bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n    })",
  "    var sum = 0\n    var result = [Int]()\n    for num in nums {\n        sum +=\
    \ num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        let aDigit = a % 10\n        let bDigit = b % 10\n        return\
    \ aDigit < bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n\
    \    })\n    return result", "    var sum = 0\n    var result = [Int]()\n    for\
    \ n in nums {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aDigit = a % 10\n        let bDigit = b % 10\n\
    \        return aDigit > bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n\
    \    })\n    return result", "    var sum: Int = 0\n    var result: [Int] = []\n\
    \    for num in nums {\n        sum += num\n        result.append(num)\n    }\n\
    \    result.sort(by: { (a, b) -> Bool in\n        let aSum = sum - a\n       \
    \ let bSum = sum - b\n        return aSum < bSum\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for n in\
    \ nums {\n        sum += n\n    }\n    for n in nums {\n        if sum < 0 {\n\
    \            sum += n\n        } else {\n            if sum == 0 {\n         \
    \       result.append(n)\n            } else {\n                let index = nums.indexOf(sum)\n\
    \                result.append(nums[index])\n                nums.remove(at: index)\n\
    \                sum -= nums[index]\n            }\n        }\n    }\n    return\
    \ result", "    var sum = 0\n    var result = [Int]()\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum < bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ n in nums {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = sum - a\n        let bSum = sum - b\n\
    \        return aSum < bSum\n    })\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: {\n        sum - $0\n    })\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        if sum > 0 {\n            result.append(num)\n        }\n  \
    \  }\n    return result", "    let len = nums.count\n    if len == 0 {\n     \
    \   return nums\n    }\n    var numsCopy = nums\n    var sum = 0\n    for i in\
    \ 0..<len {\n        sum += numsCopy[i]\n        numsCopy[i] = 0\n    }\n    var\
    \ result = [Int]()\n    var index = 0\n    for num in nums {\n        if num !=\
    \ 0 {\n            result[index] = num\n            index++\n        }\n    }\n\
    \    for num in numsCopy {\n        if num != 0 {\n            result[index] =\
    \ num\n            index++\n        }\n    }\n    return result", "    var sum\
    \ = 0\n    var result = [Int]()\n    for num in nums {\n        sum += num\n \
    \       result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n \
    \       let aDigit = a % 10\n        let bDigit = b % 10\n        return aDigit\
    \ > bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n    })\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0\
    \ {\n            sum += 10\n        }\n        if sum > 0 {\n            sum -=\
    \ 10\n        }\n        result.append(num)\n    }\n    return result", "    var\
    \ sum = 0\n    var result = [Int]()\n    for num in nums {\n        sum += num\n\
    \        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n\
    \        let aDigit = a % 10\n        let bDigit = b % 10\n        return aDigit\
    \ > bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n    })\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0\
    \ {\n            sum += num\n        } else {\n            result.append(num)\n\
    \            sum -= num\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n    \
    \    let aSum = a.toInt()\n        let bSum = b.toInt()\n        return aSum <\
    \ bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n    })\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        if sum > 0 {\n            result.append(num)\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var sum =\
    \ 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n       \
    \     result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n\
    \            result.append(num)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum < 0 {\n            sum = 0\n        }\n        if sum > 9 {\n\
    \            sum = 9\n        }\n        result.append(num)\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum < bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n    }\n    for num in nums {\n        if\
    \ sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n        \
    \    sum -= 10\n        }\n        if sum == 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += num\n        } else {\n            if\
    \ sum == 0 {\n                result.append(num)\n            } else {\n     \
    \           let index = sum % 10\n                result.append(nums[index])\n\
    \                sum -= nums[index]\n            }\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aDigit = a % 10\n        let bDigit = b % 10\n\
    \        return aDigit < bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var sum = 0\n    for num in nums {\n\
    \        sum += num\n    }\n    var result = [Int]()\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += num\n        } else {\n            if\
    \ sum == 0 {\n                result.append(num)\n            } else {\n     \
    \           let index = sum % 10\n                result.append(num)\n       \
    \         sum -= index\n            }\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        if sum > 0 {\n            result.append(num)\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.insert(sum,\
    \ num)\n            sum = 0\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n    \
    \    let aSum = a.toInt()\n        let bSum = b.toInt()\n        return aSum <\
    \ bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n    })\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\n\
    \        let num1 = $0\n        let num2 = $1\n        return sum - num1 - num2\n\
    \    })\n    return result", "    let sum = nums.reduce(0, +)\n    var result\
    \ = [Int]()\n    for n in nums {\n        if n > 0 && n < sum {\n            result.insert(n,\
    \ at: 0)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var sum = 0\n    for num in nums {\n        sum += num\n        if sum > 0\
    \ {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        if sum > 0 {\n            result.append(num)\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.insert(sum,\
    \ num)\n            sum = 0\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        if sum > 0 {\n            result.append(num)\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var sum =\
    \ 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n\
    \            sum -= 10\n        }\n        if sum == 0 {\n            result.insert(num,\
    \ at: 0)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        return sum - a < sum\
    \ - b\n    })\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for num in nums {\n        sum += num\n        if sum > 0 {\n           \
    \ result.append(num)\n        }\n    }\n    return result", "    var result =\
    \ [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n\
    \            result.insert(num, at: 0)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ num\n        } else {\n            if sum > 0 {\n                result.insert(sum,\
    \ num)\n                sum = 0\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        result.append(num)\n    }\n    for num in nums {\n        if sum\
    \ < 0 {\n            sum *= -1\n            sum += num\n        }\n    }\n   \
    \ return result", "    var result = [Int]()\n    var sum = 0\n    for num in nums\
    \ {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0 {\n\
    \            sum += 10\n        }\n        if sum > 0 {\n            sum -= 10\n\
    \        }\n        result.append(num)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for n in nums {\n        sum += n\n    }\n \
    \   for n in nums {\n        if sum < 0 {\n            sum += n\n        } else\
    \ {\n            if sum == 0 {\n                result.append(n)\n           \
    \ } else {\n                if sum < n {\n                    result.append(n)\n\
    \                } else {\n                    result.append(sum)\n          \
    \          result.append(n)\n                }\n            }\n            sum\
    \ = 0\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ sum = 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums\
    \ {\n        if sum < 0 {\n            sum += 10\n        }\n        if sum >\
    \ 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n            result.insert(num,\
    \ at: result.index(of: num))\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum -= 10\n        }\n        result.append(num)\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        result.append(num)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum == bSum || (aSum > bSum ? true : a.toInt() < b.toInt())\n\
    \    })\n    return result", "    let numsCopy = nums.copy()\n    let len = nums.count\n\
    \    var sum = 0\n    for i in 0..<len {\n        sum += numsCopy[i]\n       \
    \ numsCopy[i] = 0\n    }\n    var result = [Int]()\n    for i in 0..<len {\n \
    \       let index = nums.firstIndex(of: i)\n        if index != nil {\n      \
    \      result.append(nums[index!])\n            nums[index!] = 0\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += num\n       \
    \ } else {\n            sum += num * 10\n        }\n        result.append(num)\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n    }\n    for num in nums {\n        if\
    \ sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n        \
    \    sum -= 10\n        }\n        if sum == 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for n in nums {\n        sum += n\n    }\n    for n in nums {\n   \
    \     if sum < 0 {\n            sum += n\n        } else {\n            result.append(n)\n\
    \        }\n    }\n    return result", "    var sum = 0\n    var result = [Int]()\n\
    \    for num in nums {\n        sum += num\n        result.append(num)\n    }\n\
    \    result.sort(by: { (a, b) -> Bool in\n        let aSum = sum\n        let\
    \ bSum = sum\n        let aIndex = a.hashValue % aSum\n        let bIndex = b.hashValue\
    \ % bSum\n        return aIndex < bIndex\n    })\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    var result = [Int]()\n    for num in nums {\n        if sum < 0 {\n     \
    \       sum += num\n        } else {\n            if sum == 0 {\n            \
    \    result.append(num)\n            } else {\n                let index = sum\
    \ % 10\n                result.append(num)\n                result.append(index)\n\
    \                sum -= index\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum > 0 {\n            for _ in\
    \ 0..<(sum / 10) {\n                result.append(0)\n            }\n        \
    \    result.append(num)\n            sum -= num\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        if sum > 0 {\n            result.insert(sum, num)\n\
    \            sum = 0\n        }\n    }\n    return result", "    var result =\
    \ [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n\
    \            result.append(num)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \    }\n    for num in nums {\n        if sum < 0 {\n            sum += 10\n \
    \       }\n        if sum > 0 {\n            sum += num\n        }\n        if\
    \ sum == 0 {\n            result.append(num)\n        }\n    }\n    return result",
  "    var sum = 0\n    var result = [Int]()\n    for num in nums {\n        sum +=\
    \ num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        return sum - a < sum - b\n    })\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: {\n        sum == $0.sumOfDigits()\
    \ ? $0.index() < $1.index() : $0.sumOfDigits() < $1.sumOfDigits()\n    })\n  \
    \  return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum < 0 {\n            sum = 0\n    \
    \    }\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var sum = 0\n    var result = [Int]()\n    for n in\
    \ nums {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = sum - a\n        let bSum = sum - b\n\
    \        return aSum < bSum\n    })\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        if sum >\
    \ 0 {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var sum = 0\n    var result = [Int]()\n    for num in nums {\n        sum\
    \ += num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        let aSum = sum\n        let bSum = sum\n        sum = aSum + b\n\
    \        return sum == aSum\n    })\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        if sum >\
    \ 0 {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum\
    \ += num\n        if sum > 0 {\n            result.append(num)\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n    }\n    for num in nums {\n        if\
    \ sum < 0 {\n            sum += num\n        } else {\n            if sum > 0\
    \ {\n                sum += num\n            }\n        }\n        result.append(num)\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n    }\n    for num in nums {\n        if\
    \ sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n        \
    \    sum -= 10\n        }\n        if sum == 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n    \
    \    let aSum = a.toInt()\n        let bSum = b.toInt()\n        if aSum == bSum\
    \ {\n            return a.toInt() < b.toInt()\n        }\n        return aSum\
    \ < bSum\n    })\n    return result", "    var result = [Int]()\n    var sum =\
    \ 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n       \
    \     result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum < 0 {\n            sum = 0\n        }\n        if sum > 0 {\n    \
    \        result.append(num)\n        }\n    }\n    return result", "    var numsSorted\
    \ = nums\n    var sum = 0\n    for num in numsSorted {\n        sum += num\n \
    \   }\n    for num in numsSorted {\n        if sum > 0 {\n            sum -= num\n\
    \            numsSorted.insert(num, at: 0)\n        }\n    }\n    return numsSorted",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool\
    \ in\n        let aDigit = a % 10\n        let bDigit = b % 10\n        return\
    \ aDigit > bDigit || (aDigit == bDigit && a.compare(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        result.append(num)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum == bSum || (aSum > 0 && bSum > 0 && aSum < bSum)\n    })\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum < 0 {\n            sum = 0\n    \
    \    }\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var sum = 0\n    var result = [Int]()\n    for n in\
    \ nums {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        return sum - a < sum - b\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ 10\n        }\n        if sum > 0 {\n            sum -= 10\n        }\n    \
    \    if sum == 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        if aSum == bSum {\n            return a.toInt() < b.toInt()\n       \
    \ }\n        return aSum < bSum\n    })\n    return result", "    var result =\
    \ [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n\
    \            result.append(num)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n    }\n    for num in nums {\n        if sum < 0 {\n    \
    \        sum += 10\n        }\n        if sum > 0 {\n            sum -= 10\n \
    \       }\n        if sum == 0 {\n            result.append(num)\n        }\n\
    \    }\n    return result", "    var sum = 0\n    var result = [Int]()\n    for\
    \ num in nums {\n        sum += num\n        result.append(num)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum == bSum ? a.toInt() < b.toInt() : aSum > bSum\n    })\n \
    \   return result", "    var sum = 0\n    var result = [Int]()\n    for n in nums\
    \ {\n        sum += n\n        result.append(n)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        return sum - a < sum - b\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum < 0 {\n            sum = 0\n        }\n        if sum >\
    \ 9 {\n            sum = 9\n        }\n        result.append(num)\n    }\n   \
    \ return result", "    var result = [Int]()\n    var sum = 0\n    for num in nums\
    \ {\n        sum += num\n        result.append(num)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum < bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum < 0 {\n     \
    \       sum = 0\n        }\n        if sum > 9 {\n            sum = 0\n      \
    \  }\n        if result.contains(sum) {\n            let index = result.index(of:\
    \ sum)\n            result[index] = num\n        } else {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for n in nums {\n        sum += n\n        result.append(n)\n    }\n\
    \    result.sort(by: {\n        sum - $0\n    })\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \    }\n    for num in nums {\n        if sum < 0 {\n            sum += 10\n \
    \       }\n        if sum > 0 {\n            sum -= 10\n        }\n        if\
    \ sum == 0 {\n            result.append(num)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for n in nums {\n        sum +=\
    \ n\n        if sum > 0 {\n            result.append(n)\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0\
    \ {\n            sum += 10\n        }\n        if sum > 0 {\n            sum -=\
    \ 10\n        }\n        if sum == 0 {\n            result.append(num)\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for num in nums {\n        sum += num\n        if sum > 0 {\n           \
    \ result.insert(sum, num)\n            sum = 0\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum < 0 {\n            sum *= -1\n        }\n        if sum\
    \ > 0 {\n            result.append(num)\n        }\n    }\n    return result",
  "    var numsSorted = nums\n    var sum = 0\n    for num in numsSorted {\n     \
    \   sum += num\n    }\n    var index = 0\n    for num in numsSorted {\n      \
    \  if sum < 0 {\n            numsSorted.insert(num, at: index)\n            sum\
    \ = 0\n        } else {\n            sum += num\n        }\n        index += 1\n\
    \    }\n    return numsSorted", "    var result = [Int]()\n    var sum = 0\n \
    \   for num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for n in nums {\n        sum += n\n    }\n    for n in nums {\n   \
    \     if sum < 0 {\n            sum += n\n        } else {\n            sum +=\
    \ n % 10\n        }\n        result.append(n)\n    }\n    return result", "  \
    \  var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0\
    \ {\n            sum += 10\n        }\n        if sum > 0 {\n            sum -=\
    \ 10\n        }\n        if sum == 0 {\n            result.append(num)\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for num in nums {\n        sum += num\n        if sum > 0 {\n           \
    \ result.append(num)\n        }\n    }\n    return result", "    var sum = 0\n\
    \    var result = [Int]()\n    for num in nums {\n        sum += num\n       \
    \ result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n       \
    \ let aSum = a.toInt()\n        let bSum = b.toInt()\n        if aSum == bSum\
    \ { return a.toInt() < b.toInt() }\n        return aSum < bSum\n    })\n    return\
    \ result", "    var sum = 0\n    var result = [Int]()\n    for n in nums {\n \
    \       sum += n\n        result.append(n)\n    }\n    result.sort(by: { (a, b)\
    \ -> Bool in\n        let aSum = sum\n        let bSum = sum\n        sum = aSum\
    \ + b\n        return sum < 0\n    })\n    return result", "    var sum = 0\n\
    \    var result = [Int]()\n    for n in nums {\n        sum += n\n        result.append(n)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aDigit = a % 10\n\
    \        let bDigit = b % 10\n        return aDigit < bDigit || (aDigit == bDigit\
    \ && a.compareTo(b) == .orderedAscending)\n    })\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n    }\n    for num in nums {\n        if sum < 0 {\n    \
    \        sum += 10\n        }\n        if sum > 0 {\n            sum -= 10\n \
    \       }\n        if sum == 0 {\n            result.insert(num, at: result.index(of:\
    \ num))\n        }\n    }\n    return result", "    var result = [Int]()\n   \
    \ var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aSum = a.toInt()\n\
    \        let bSum = b.toInt()\n        return aSum < bSum || (aSum == bSum &&\
    \ a.compareTo(b) == .orderedAscending)\n    })\n    return result", "    let len\
    \ = nums.count\n    var sum = 0\n    var result = [Int]()\n    for i in 0..<len\
    \ {\n        sum += nums[i]\n        result.append(sum)\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ 10\n        }\n        if sum > 0 {\n            sum -= 10\n        }\n    \
    \    if sum == 0 {\n            result.insert(num, at: 0)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aSum = a.toInt()\n\
    \        let bSum = b.toInt()\n        return aSum < bSum || (aSum == bSum &&\
    \ a.compareTo(b) == .orderedAscending)\n    })\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var sum = 0\n    var result = [Int]()\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        if aSum == bSum {\n            return a.toInt() < b.toInt()\n       \
    \ }\n        return aSum > bSum\n    })\n    return result", "    var numsSorted\
    \ = nums\n    var sum = 0\n    for num in numsSorted {\n        sum += num\n \
    \       numsSorted.remove(at: numsSorted.index(of: num))\n    }\n    return numsSorted.sorted()",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        result.append(num)\n    }\n    result.sort(by:\
    \ { (a, b) -> Bool in\n        let aDigit = a % 10\n        let bDigit = b % 10\n\
    \        if aDigit == bDigit {\n            return a < b\n        }\n        return\
    \ aDigit < bDigit\n    })\n    return result", "    var result = [Int]()\n   \
    \ var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        return sum - a < sum\
    \ - b\n    })\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for n in nums {\n        sum += n\n    }\n    for n in nums {\n        if\
    \ sum < 0 {\n            sum += n\n        } else {\n            if sum == 0 {\n\
    \                result.append(n)\n            } else {\n                let index\
    \ = nums.indexOf(sum)\n                result.append(nums[index])\n          \
    \      nums.remove(at: index)\n                nums.remove(at: index)\n      \
    \          sum -= nums[index]\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n    }\n    for num in nums {\n        if sum < 0\
    \ {\n            sum += num\n        } else {\n            if sum == 0 {\n   \
    \             result.append(num)\n            } else {\n                let index\
    \ = nums.firstIndex(of: num)!\n                result.append(nums[index])\n  \
    \              sum -= nums[index]\n            }\n        }\n    }\n    return\
    \ result", "    var numsSorted = [Int]()\n    var sum = 0\n    for num in nums\
    \ {\n        sum += num\n        numsSorted.append(num)\n    }\n    var numsSortedCopy\
    \ = numsSorted\n    var index = 0\n    for num in numsSorted {\n        for _\
    \ in 0..<num {\n            numsSortedCopy[index] = numsSortedCopy[index] + 1\n\
    \            index++\n        }\n    }\n    return numsSortedCopy", "    var sum\
    \ = 0\n    var result = [Int]()\n    for num in nums {\n        sum += num\n \
    \       result.append(num)\n    }\n    var sorted = [Int]()\n    for num in result\
    \ {\n        if sum < 0 {\n            sorted.append(num)\n            sum = 0\n\
    \        } else {\n            sum -= num\n        }\n    }\n    return sorted",
  "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    var result\
    \ = [Int]()\n    for num in nums {\n        if sum < 0 {\n            sum += num\n\
    \        } else {\n            if sum > 0 {\n                sum += num\n    \
    \        } else {\n                result.append(num)\n            }\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    var sum = 0\n \
    \   for n in nums {\n        sum += n\n    }\n    for n in nums {\n        if\
    \ sum < 0 {\n            sum += n\n        } else {\n            if sum == 0 {\n\
    \                result.append(n)\n            } else {\n                let index\
    \ = sum / 10\n                result.append(nums[index])\n                sum\
    \ -= index * 10\n            }\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \        if sum < 0 {\n            sum = 0\n        }\n        if sum > 9 {\n\
    \            sum = 0\n        }\n        result.append(num)\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n    }\n    for num in nums {\n        if sum < 0 {\n    \
    \        sum += 10\n        }\n        if sum > 0 {\n            sum -= 10\n \
    \       }\n        if sum == 0 {\n            result.append(num)\n        }\n\
    \    }\n    return result", "    var sum = 0\n    var result = [Int]()\n    for\
    \ num in nums {\n        sum += num\n        result.append(num)\n    }\n    var\
    \ i = 0\n    for num in result {\n        if sum < 0 {\n            sum *= -1\n\
    \            sum -= num\n        } else {\n            sum += num\n        }\n\
    \        result[i] = num\n        i += 1\n    }\n    return result", "    var\
    \ result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n\
    \    }\n    for num in nums {\n        if sum < 0 {\n            sum += num\n\
    \        } else {\n            if sum == 0 {\n                result.append(num)\n\
    \            } else {\n                let index = nums.indexOf(num)\n       \
    \         result[index] = num\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n    }\n    for num in nums {\n        if sum < 0 {\n            sum +=\
    \ 10\n        }\n        if sum > 0 {\n            sum += num\n        }\n   \
    \     result.append(num)\n    }\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aSum = a.toInt()\n\
    \        let bSum = b.toInt()\n        return aSum < bSum || (aSum == bSum &&\
    \ a.compareTo(b) == .orderedAscending)\n    })\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: {\n        sum - $0\n    })\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum > 0 {\n            result.insert(sum,\
    \ num)\n            sum = 0\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n    \
    \    let aSum = a.toInt()\n        let bSum = b.toInt()\n        if aSum == bSum\
    \ {\n            return a.toInt() < b.toInt()\n        } else {\n            return\
    \ aSum < bSum\n        }\n    })\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    for num\
    \ in nums {\n        if sum < 0 {\n            sum += 10\n        }\n        if\
    \ sum > 0 {\n            sum -= 10\n        }\n        if sum == 0 {\n       \
    \     result.append(num)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum < 0 {\n            sum = 0\n        }\n        if sum > 9 {\n    \
    \        sum = 9\n        }\n        if sum == 0 {\n            continue\n   \
    \     }\n        if result.contains(sum) {\n            continue\n        }\n\
    \        result.append(num)\n    }\n    return result", "    var result = [Int]()\n\
    \    var sum = 0\n    for n in nums {\n        sum += n\n    }\n    for n in nums\
    \ {\n        if sum < 0 {\n            sum += n\n        } else {\n          \
    \  sum += n % 10\n        }\n        if sum < 0 {\n            sum = 0\n     \
    \   }\n        if sum > 9 {\n            sum -= 10\n        }\n        result.append(n)\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ n in nums {\n        sum += n\n    }\n    for n in nums {\n        if sum <\
    \ 0 {\n            sum += n\n        } else {\n            sum += n % 10\n   \
    \     }\n        result.append(n)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    \
    \    if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var numsSorted = nums\n    var sum = 0\n    for num in numsSorted\
    \ {\n        sum += num\n    }\n    var result = [Int]()\n    for num in numsSorted\
    \ {\n        if sum < 0 {\n            result.insert(num, sum)\n        } else\
    \ {\n            result.insert(num, sum + 10)\n        }\n        sum -= num\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n    }\n    for num in nums {\n\
    \        if sum < 0 {\n            sum += 10\n        }\n        if sum == 0 {\n\
    \            result.append(num)\n        }\n        if sum > 0 {\n           \
    \ sum -= num\n        }\n    }\n    return result", "    var sum = 0\n    var\
    \ result = [Int]()\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        return sum - a < sum\
    \ - b\n    })\n    return result", "    var result = [Int]()\n    var sum = 0\n\
    \    for num in nums {\n        sum += num\n    }\n    for num in nums {\n   \
    \     if sum < 0 {\n            sum += 10\n        }\n        if sum > 0 {\n \
    \           sum -= 10\n        }\n        result.append(num)\n    }\n    return\
    \ result", "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n\
    \        sum += num\n        if sum < 0 {\n            sum = 0\n        }\n  \
    \      if sum > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", "    var sum = 0\n    var result = [Int]()\n    for num in nums {\n\
    \        sum += num\n        result.append(num)\n    }\n    result.sort(by: {\
    \ (a, b) -> Bool in\n        let aSum = a.toInt()\n        let bSum = b.toInt()\n\
    \        return aSum < bSum || (aSum == bSum && a.compareTo(b) == .orderedAscending)\n\
    \    })\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result", "    var sum\
    \ = 0\n    var result = [Int]()\n    for num in nums {\n        sum += num\n \
    \       result.append(num)\n    }\n    result.sort(by: { (a, b) -> Bool in\n \
    \       let aSum = a.toInt()\n        let bSum = b.toInt()\n        return aSum\
    \ == bSum || (aSum > 0 && bSum > 0 && aSum < bSum)\n    })\n    return result",
  "    var result = [Int]()\n    var sum = 0\n    for num in nums {\n        sum +=\
    \ num\n        if sum > 0 {\n            result.append(num)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var sum = 0\n    for num in\
    \ nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        result.append(num)\n\
    \    }\n    result.sort(by: { (a, b) -> Bool in\n        let aSum = sum\n    \
    \    let bSum = sum\n        if aSum == bSum {\n            return a < b\n   \
    \     }\n        return aSum < bSum\n    })\n    return result", "    var result\
    \ = [Int]()\n    var sum = 0\n    for num in nums {\n        sum += num\n    }\n\
    \    for num in nums {\n        if sum < 0 {\n            sum += 10\n        }\n\
    \        if sum > 0 {\n            sum += num\n        }\n        if sum == 0\
    \ {\n            result.append(num)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var sum = 0\n    for n in nums {\n        sum +=\
    \ n\n    }\n    for n in nums {\n        if sum < 0 {\n            sum += n\n\
    \        } else {\n            if sum > 0 {\n                sum += n\n      \
    \      }\n            result.insert(sum, sum)\n            sum = 0\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var sum = 0\n    for\
    \ num in nums {\n        sum += num\n        if sum > 0 {\n            result.append(num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var sum\
    \ = 0\n    for num in nums {\n        sum += num\n        if sum > 0 {\n     \
    \       result.append(num)\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

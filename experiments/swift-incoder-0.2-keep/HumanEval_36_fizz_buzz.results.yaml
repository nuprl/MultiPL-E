language: swift
name: HumanEval_36_fizz_buzz
results:
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n / 10) * 10 + n % 10\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpvs1g_jvm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 10) * 10 + n % 10\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) * 11 + fizz_buzz(n / 13)\
    \ * 13\n    }\n    return fizz_buzz(n / 11) * 11\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp09llfg2u.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) * 11 + fizz_buzz(n / 13) * 13\n            \
    \             ^\n                         n: \n/tmp/tmp09llfg2u.swift:14:51: error:\
    \ missing argument label 'n:' in call\n        return fizz_buzz(n / 11) * 11 +\
    \ fizz_buzz(n / 13) * 13\n                                                  ^\n\
    \                                                  n: \n/tmp/tmp09llfg2u.swift:16:22:\
    \ error: missing argument label 'n:' in call\n    return fizz_buzz(n / 11) * 11\n\
    \                     ^\n                     n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpyodoktc6/tmpyodoktc6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16e5eacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16e5ba3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16e5ba3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16e5ba27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyodoktc6                        0x000055e686fa2338 <unavailable> + 4920

    5    libc.so.6                          0x00002b16e6098460 __libc_start_main +
    245

    6    tmpyodoktc6                        0x000055e686fa1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return 1 + fizz_buzz(n / 11)\n    }\n    return\
    \ fizz_buzz(n / 13)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpk6zt2ueg.swift:14:30: error: missing argument label 'n:' in call\n\
    \        return 1 + fizz_buzz(n / 11)\n                             ^\n      \
    \                       n: \n/tmp/tmpk6zt2ueg.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 13)\n                     ^\n \
    \                    n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 11) + fizz_buzz(n / 13) + 1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp5yxyuc9w.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmp5yxyuc9w.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmp5yxyuc9w.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11) + fizz_buzz(n / 13) + 1\n \
    \                    ^\n                     n: \n/tmp/tmp5yxyuc9w.swift:16:42:\
    \ error: missing argument label 'n:' in call\n    return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13) + 1\n                                         ^\n                    \
    \                     n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count = 0\n\
    \    for num in 1...n {\n        if num % 11 == 0 || num % 13 == 0 {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpcky5i3f2/tmpcky5i3f2.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0ec659c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0ec350b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0ec350988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0ec34f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcky5i3f2                        0x000055c164ea3338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad0ec845460 __libc_start_main +
    245

    6    tmpcky5i3f2                        0x000055c164ea2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n / 10) * 10 + n % 10\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpvs1g_jvm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 10) * 10 + n % 10\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n / 10) * 10 + n % 10\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpvs1g_jvm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 10) * 10 + n % 10\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpyodoktc6/tmpyodoktc6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16e5eacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16e5ba3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16e5ba3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16e5ba27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyodoktc6                        0x000055e686fa2338 <unavailable> + 4920

    5    libc.so.6                          0x00002b16e6098460 __libc_start_main +
    245

    6    tmpyodoktc6                        0x000055e686fa1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0 || n % 13\
    \ == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n    }\n    return\
    \ fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpk_episyf.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmpk_episyf.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmpk_episyf.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11)\n                     ^\n \
    \                    n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ Int(ceil(log10(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpshtkjil_.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log10(n)))\n               ^~~~\n/tmp/tmpshtkjil_.swift:13:21: error:\
    \ cannot find 'log10' in scope\n    return Int(ceil(log10(n)))\n             \
    \       ^~~~~\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0 || n % 13\
    \ == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n    }\n    return\
    \ fizz_buzz(n / 11) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppi67p935.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmppi67p935.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmppi67p935.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11) + 1\n                     ^\n\
    \                     n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpqq1pxvfj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9tghpflu.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp9tghpflu.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9tghpflu.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp9tghpflu.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 10 {\n        return n\n    }\n    if n % 11 == 0 || n % 13\
    \ == 0 {\n        return fizz_buzz(n / 10) + 1\n    }\n    return fizz_buzz(n\
    \ / 10) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpiftgds4x.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 10) + 1\n                         ^\n          \
    \               n: \n/tmp/tmpiftgds4x.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n / 10) + 1\n                     ^\n   \
    \                  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpw9vih9ek.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmpw9vih9ek.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmpw9vih9ek.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n     \
    \                ^\n                     n: \n/tmp/tmpw9vih9ek.swift:16:42: error:\
    \ missing argument label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n\
    \ % 10)\n                                         ^\n                        \
    \                 n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count = 0\n\
    \    for number in 1...n {\n        if number % 11 == 0 || number % 13 == 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpmt_jvmz4/tmpmt_jvmz4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ccf38ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ccf085b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ccf085988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ccf0847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmt_jvmz4                        0x0000558148e3e338 <unavailable> + 4920

    5    libc.so.6                          0x00002b2ccf57a460 __libc_start_main +
    245

    6    tmpmt_jvmz4                        0x0000558148e3dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 10 {\n        return n\n    }\n    if n % 11 == 0 || n % 13\
    \ == 0 {\n        return n\n    }\n    return fizz_buzz(n / 10) * 10 + n % 10\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpsmdwkvv_.swift:16:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 10) * 10 + n % 10\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpfufx8d_1.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 10)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpw9vih9ek.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmpw9vih9ek.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmpw9vih9ek.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n     \
    \                ^\n                     n: \n/tmp/tmpw9vih9ek.swift:16:42: error:\
    \ missing argument label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n\
    \ % 10)\n                                         ^\n                        \
    \                 n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp1gr13fty.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmp1gr13fty.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmp1gr13fty.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n     \
    \                ^\n                     n: \n/tmp/tmp1gr13fty.swift:16:42: error:\
    \ missing argument label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n\
    \ % 10)\n                                         ^\n                        \
    \                 n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count = 0\n\
    \    for number in 1...n {\n        if number % 11 == 0 || number % 13 == 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpmt_jvmz4/tmpmt_jvmz4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ccf38ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ccf085b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ccf085988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ccf0847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmt_jvmz4                        0x0000558148e3e338 <unavailable> + 4920

    5    libc.so.6                          0x00002b2ccf57a460 __libc_start_main +
    245

    6    tmpmt_jvmz4                        0x0000558148e3dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count = 0\n\
    \    for number in 1...n {\n        if number % 11 == 0 || number % 13 == 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpmt_jvmz4/tmpmt_jvmz4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ccf38ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ccf085b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ccf085988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ccf0847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmt_jvmz4                        0x0000558148e3e338 <unavailable> + 4920

    5    libc.so.6                          0x00002b2ccf57a460 __libc_start_main +
    245

    6    tmpmt_jvmz4                        0x0000558148e3dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count = 0\n\
    \    for number in 1...n {\n        if number % 11 == 0 || number % 13 == 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpmt_jvmz4/tmpmt_jvmz4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ccf38ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ccf085b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ccf085988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ccf0847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmt_jvmz4                        0x0000558148e3e338 <unavailable> + 4920

    5    libc.so.6                          0x00002b2ccf57a460 __libc_start_main +
    245

    6    tmpmt_jvmz4                        0x0000558148e3dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 11) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpr5k55_sm.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmpr5k55_sm.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmpr5k55_sm.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11) + 1\n                     ^\n\
    \                     n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n / 11) * 11 + fizz_buzz(n / 13)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpwm6trmxd.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 11) * 11 + fizz_buzz(n / 13)\n                     ^\n\
    \                     n: \n/tmp/tmpwm6trmxd.swift:13:47: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11) * 11 + fizz_buzz(n / 13)\n\
    \                                              ^\n                           \
    \                   n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp1gr13fty.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmp1gr13fty.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmp1gr13fty.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n % 10)\n     \
    \                ^\n                     n: \n/tmp/tmp1gr13fty.swift:16:42: error:\
    \ missing argument label 'n:' in call\n    return fizz_buzz(n / 10) + fizz_buzz(n\
    \ % 10)\n                                         ^\n                        \
    \                 n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n / 10) * 10 + n % 10\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpvs1g_jvm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n / 10) * 10 + n % 10\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpyodoktc6/tmpyodoktc6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16e5eacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16e5ba3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16e5ba3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16e5ba27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyodoktc6                        0x000055e686fa2338 <unavailable> + 4920

    5    libc.so.6                          0x00002b16e6098460 __libc_start_main +
    245

    6    tmpyodoktc6                        0x000055e686fa1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n % 11 ==\
    \ 0 || n % 13 == 0 {\n        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n \
    \   }\n    return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpsupv_ev6.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n                      \
    \   ^\n                         n: \n/tmp/tmpsupv_ev6.swift:14:46: error: missing\
    \ argument label 'n:' in call\n        return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                             ^\n                    \
    \                         n: \n/tmp/tmpsupv_ev6.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n     \
    \                ^\n                     n: \n/tmp/tmpsupv_ev6.swift:16:42: error:\
    \ missing argument label 'n:' in call\n    return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n                                         ^\n                        \
    \                 n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg49fe81.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpqq1pxvfj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11 == 0 ||\
    \ num % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpg7786u37/tmpg7786u37.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba754623c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba75431ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba75431a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7543197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7786u37                        0x00005587e7cc5338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba75480f460 __libc_start_main +
    245

    6    tmpg7786u37                        0x00005587e7cc4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n    return\
    \ 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe64z9yvf.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy9zvv5dm.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 == 0 || n\
    \ % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwcv58gx0/tmpwcv58gx0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78b5c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78b58feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78b58fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78b58fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwcv58gx0                        0x000056144ef00338 <unavailable> + 4920

    5    libc.so.6                          0x00002b78b5df3460 __libc_start_main +
    245

    6    tmpwcv58gx0                        0x000056144eefffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    let digits = [7, 8, 9]\n    let multiples = [11, 13]\n    var count\
    \ = 0\n    for d in digits {\n        if n % d == 0 {\n            count += 1\n\
    \        }\n    }\n    for m in multiples {\n        if n % m == 0 {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpmz8gez07/tmpmz8gez07.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a28d0ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a28a05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a28a05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a28a047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmz8gez07                        0x000055a7bb1ce533 <unavailable> + 5427

    5    libc.so.6                          0x00002b9a28efa460 __libc_start_main +
    245

    6    tmpmz8gez07                        0x000055a7bb1ce169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for number in 1...n {\n        if number % 11\
    \ == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz19q2kqn/tmpz19q2kqn.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad875861c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad875558b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad875558988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8755577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz19q2kqn                        0x000055be24f8e338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad875a4d460 __libc_start_main +
    245

    6    tmpz19q2kqn                        0x000055be24f8dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014147

name: HumanEval_151_double_the_difference
language: swift
prompt: "\n/// Given a list of numbers, return the sum of squares of the numbers\n\
  /// in the list that are odd. Ignore numbers that are negative or not integers.\n\
  /// double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n/// double_the_difference([-1,\
  \ -2, 0]) == 0\n/// double_the_difference([9, -2]) == 81\n/// double_the_difference([0])\
  \ == 0  \n/// If the input list is empty, return 0.\nfunc double_the_difference(lst:\
  \ [Double]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(double_the_difference(lst: [] as [Double])\
  \ == 0)\nassert(double_the_difference(lst: [5.0, 4.0]) == 25)\nassert(double_the_difference(lst:\
  \ [0.1, 0.2, 0.3]) == 0)\nassert(double_the_difference(lst: [-10.0, -20.0, -30.0])\
  \ == 0)\nassert(double_the_difference(lst: [-1.0, -2.0, 8.0]) == 0)\nassert(double_the_difference(lst:\
  \ [0.2, 3.0, 5.0]) == 34)\nassert(double_the_difference(lst: [-9.0, -7.0, -5.0,\
  \ -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165)"
completions: ["    if lst.count == 0 {\n        return 0\n    }\n    var sum = 0\n\
    \    for num in lst {\n        if num % 2 == 1 {\n            sum += num\n   \
    \     }\n    }\n    return sum", "    guard lst.count > 0 else { return 0 }\n\
    \    var sum = 0\n    for num in lst {\n        sum += num * num\n    }\n    return\
    \ sum", "    guard lst.count > 0 else { return 0 }\n    var sum = 0\n    for x\
    \ in lst {\n        if x % 2 == 1 {\n            sum += x * x\n        }\n   \
    \ }\n    return sum", "    var sum = 0\n    for num in lst {\n        if num >\
    \ 0 {\n            sum += num * num\n        }\n    }\n    return sum", "    \n\
    \    var sum = 0\n    \n    for x in lst {\n        if x % 2 == 1 {\n        \
    \    sum += x * x\n        }\n    }\n    \n    return sum", "    guard lst.count\
    \ > 0 else { return 0 }\n    var sum = 0\n    for num in lst {\n        if num\
    \ % 2 == 1 {\n            sum += num * num\n        }\n    }\n    return sum",
  "    var sum = 0\n    for num in lst {\n        if num > 0 {\n            sum +=\
    \ num * num\n        }\n    }\n    return sum", "    \n    var sum = 0\n    \n\
    \    for number in lst {\n        if number % 2 == 1 {\n            sum += number\n\
    \        }\n    }\n    \n    return sum", "    guard lst.count > 0 else { return\
    \ 0 }\n    var sum = 0\n    for n in lst {\n        sum += n * n\n    }\n    return\
    \ sum", "    var sum = 0\n    for num in lst {\n        if num > 0 {\n       \
    \     sum += num * num\n        }\n    }\n    return sum", "    \n    var sum\
    \ = 0\n    \n    for number in lst {\n        if number > 0 {\n            sum\
    \ += number * number\n        }\n    }\n    \n    return sum", "    guard lst.count\
    \ > 0 else { return 0 }\n    var sum = 0\n    for n in lst {\n        if n % 2\
    \ == 1 {\n            sum += n * n\n        }\n    }\n    return sum", "    \n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x * x\n        }\n    }\n    return sum", "    guard lst.count > 0 else {\
    \ return 0 }\n    var sum = 0\n    for i in lst {\n        if i % 2 == 1 {\n \
    \           sum += i\n        }\n    }\n    return sum", "    var sum = 0\n  \
    \  for x in lst {\n        if x % 2 == 1 {\n            sum += x * x\n       \
    \ }\n    }\n    return sum", "    guard lst.count > 0 else { return 0 }\n    var\
    \ sum = 0\n    for num in lst {\n        if num % 2 == 1 {\n            sum +=\
    \ num\n        }\n    }\n    return sum", "    guard lst.count > 0 else { return\
    \ 0 }\n    var sum = 0\n    for num in lst {\n        if num % 2 == 1 {\n    \
    \        sum += num\n        }\n    }\n    return sum", "    \n    if lst.count\
    \ == 0 {\n        return 0\n    }\n    \n    var sum = 0\n    \n    for x in lst\
    \ {\n        if x % 2 == 1 {\n            sum += x * x\n        }\n    }\n   \
    \ \n    return sum", "    guard lst.count > 0 else { return 0 }\n    var sum =\
    \ 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum += x * x\n \
    \       }\n    }\n    return sum", "    \n    if lst.count == 0 {\n        return\
    \ 0\n    }\n    \n    var sum = 0\n    \n    for num in lst {\n        if num\
    \ % 2 == 1 {\n            sum += num\n        }\n    }\n    \n    return sum"]
stop_tokens:
- "\n}"

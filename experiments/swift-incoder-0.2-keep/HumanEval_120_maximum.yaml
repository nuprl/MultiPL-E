name: HumanEval_120_maximum
language: swift
prompt: "\n/// Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n/// of length k with the maximum k numbers in arr.\n/// Example 1:\n///\
  \ Input: arr = [-3, -4, 5], k = 3\n/// Output: [-4, -3, 5]\n/// Example 2:\n///\
  \ Input: arr = [4, -4, 4], k = 2\n/// Output: [4, 4]\n/// Example 3:\n/// Input:\
  \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n/// Output: [2]\n/// Note:\n/// 1. The\
  \ length of the array will be in the range of [1, 1000].\n/// 2. The elements in\
  \ the array will be in the range of [-1000, 1000].\n/// 3. 0 <= k <= len(arr)\n\
  func maximum(arr: [Int], k: Int) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(maximum(arr: [-3, -4, 5], k: 3) == [-4,\
  \ -3, 5])\nassert(maximum(arr: [4, -4, 4], k: 2) == [4, 4])\nassert(maximum(arr:\
  \ [-3, 2, 1, 2, -1, -2, 1], k: 1) == [2])\nassert(maximum(arr: [123, -123, 20, 0,\
  \ 1, 2, -3], k: 3) == [2, 20, 123])\nassert(maximum(arr: [-123, 20, 0, 1, 2, -3],\
  \ k: 4) == [0, 1, 2, 20])\nassert(maximum(arr: [5, 15, 0, 3, -13, -8, 0], k: 7)\
  \ == [-13, -8, 0, 0, 3, 5, 15])\nassert(maximum(arr: [-1, 0, 2, 5, 3, -10], k: 2)\
  \ == [3, 5])\nassert(maximum(arr: [1, 0, 5, -7], k: 1) == [5])\nassert(maximum(arr:\
  \ [4, -4], k: 2) == [-4, 4])\nassert(maximum(arr: [-10, 10], k: 2) == [-10, 10])\n\
  assert(maximum(arr: [1, 2, 3, -23, 243, -400, 0], k: 0) == [] as [Int])"
completions: ["    precondition(k <= arr.count, \"k is out of range\")\n    var result\
    \ = [Int]()\n    var max = 0\n    for element in arr {\n        if element > max\
    \ {\n            max = element\n        }\n    }\n    for element in arr {\n \
    \       if element == max {\n            result.append(element)\n        }\n \
    \   }\n    return result", "    if k == 0 || k > arr.count {\n        return arr\n\
    \    }\n    \n    var max = [Int]()\n    \n    for index in 0..<k {\n        if\
    \ arr[index] > max[0] {\n            max = [arr[index]]\n        } else if arr[index]\
    \ == max[0] {\n            max.append(arr[index])\n        }\n    }\n    \n  \
    \  return max", '    return arr.sorted { $0 > $1 }.prefix(k)', "    var max =\
    \ [Int]()\n    var maxIndex = 0\n    for index in 0..<arr.count {\n        if\
    \ arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n     \
    \       maxIndex = index\n        }\n    }\n    return max[maxIndex..<maxIndex+k]",
  "    var max = [Int]()\n    for x in arr {\n        if x < 0 {\n            max\
    \ = append(max, -x)\n        } else {\n            max = append(max, x)\n    \
    \    }\n    }\n    max = maximumSort(max, k)\n    return max", "    if k == 0\
    \ || arr.isEmpty {\n        return arr\n    }\n    \n    var max = [Int]()\n \
    \   var maxIndex = 0\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1]\
    \ {\n            max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n  \
    \  }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1] {\n           \
    \ max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n    }\n    \n    for\
    \ i in 0..<k {\n        if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n\
    \            maxIndex = k-1\n        }\n    }\n    \n    for i in 0..<k {\n  \
    \      if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n            maxIndex\
    \ = k-1\n        }\n    }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1]\
    \ {\n            max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n  \
    \  }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1] {\n           \
    \ max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n    }\n    \n    for\
    \ i in 0..<k {\n        if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n\
    \            maxIndex = k-1\n        }\n    }\n    \n    for i in 0..<k {\n  \
    \      if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n            maxIndex\
    \ = k-1\n        }\n    }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1]\
    \ {\n            max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n  \
    \  }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1] {\n           \
    \ max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n    }\n    \n    for\
    \ i in 0..<k {\n        if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n\
    \            maxIndex = k-1\n        }\n    }\n    \n    for i in 0..<k {\n  \
    \      if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n            maxIndex\
    \ = k-1\n        }\n    }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1]\
    \ {\n            max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n  \
    \  }\n    \n    for i in 0..<k {\n        if arr[i] > max[k-1] {\n           \
    \ max[k-1] = arr[i]\n            maxIndex = k-1\n        }\n    }\n    \n    for\
    \ i in 0..<k {", "    \n    var max = [Int]()\n    \n    if arr.count > k {\n\
    \        max = arr[k..<arr.count]\n    } else {\n        max = arr\n    }\n  \
    \  \n    return max", "    \n    // write your code here\n    \n    return arr",
  "    if k == 0 || arr.isEmpty() {\n        return arr\n    }\n    \n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n  \
    \      if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    var max = [Int]()\n  \
    \  \n    for x in arr {\n        if x > max[0] {\n            max[0] = x\n   \
    \     }\n    }\n    \n    for x in arr {\n        if x > max[1] {\n          \
    \  max[1] = x\n        }\n    }\n    \n    for x in arr {\n        if x > max[2]\
    \ {\n            max[2] = x\n        }\n    }\n    \n    return max[k..<3]", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<arr.count {\n\
    \        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    return max[maxIndex..<maxIndex+k]",
  "    \n    var max = [Int]()\n    \n    for x in arr {\n        if x > max[0] {\n\
    \            max[0] = x\n        }\n    }\n    \n    for x in arr {\n        if\
    \ x == max[0] {\n            for y in max {\n                if y > x {\n    \
    \                max[1] = y\n                }\n            }\n        }\n   \
    \ }\n    \n    for x in arr {\n        if x == max[1] {\n            for y in\
    \ max {\n                if y > x {\n                    max[2] = y\n        \
    \        }\n            }\n        }\n    }\n    \n    return max[k..<3]", " \
    \   \n    var max = [Int]()\n    \n    for x in arr {\n        if x < 0 {\n  \
    \          continue\n        }\n        \n        if k == 0 {\n            max\
    \ = append(max, x)\n            continue\n        }\n        \n        if x >\
    \ max[k-1] {\n            max[k-1] = x\n        }\n        \n        k--\n   \
    \ }\n    \n    return max", "    \n    var max = [Int]()\n    \n    for x in arr\
    \ {\n        if x < 0 {\n            continue\n        }\n        if k == 0 {\n\
    \            max = append(max, x)\n            continue\n        }\n        if\
    \ x > max[k] {\n            max[k] = x\n        }\n        k--\n    }\n    \n\
    \    return max", "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n\
    \    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<k].sorted()",
  "    var result = [Int]()\n    var max = 0\n    for element in arr {\n        if\
    \ element > max {\n            max = element\n        }\n    }\n    for element\
    \ in arr {\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    if k == result.count {\n        return result\n    }\n\
    \    if k > result.count {\n        return result\n    }\n    for element in arr\
    \ {\n        if element > max {\n            result.append(element)\n        }\n\
    \    }\n    return result", "    if k > arr.count {\n        return arr\n    }\n\
    \    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<k\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max", "    if\
    \ k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max = [Int]()\n\
    \    var maxIndex = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] >\
    \ max[maxIndex] {\n            max[maxIndex] = arr[i]\n            maxIndex =\
    \ i\n        }\n    }\n    \n    return max[maxIndex..<k+1]", "    var result\
    \ = [Int]()\n    var max = 0\n    for x in arr {\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in arr {\n        if x == max {\n\
    \            result.append(x)\n        }\n    }\n    for x in arr {\n        if\
    \ x < max {\n            result.append(x)\n        }\n    }\n    if k == result.count\
    \ {\n        return result\n    }\n    if k > result.count {\n        return result\n\
    \    }\n    if k == 0 {\n        return result\n    }\n    if k == 1 {\n     \
    \   return result\n    }\n    if k == result.count - 1 {\n        return result\n\
    \    }\n    if k == result.count - 2 {\n        return result\n    }\n    if k\
    \ == result.count - 3 {\n        return result\n    }\n    if k == result.count\
    \ - 4 {\n        return result\n    }\n    if k == result.count - 5 {\n      \
    \  return result\n    }\n    if k == result.count - 6 {\n        return result\n\
    \    }\n    if k == result.count - 7 {\n        return result\n    }\n    if k\
    \ == result.count - 8 {\n        return result\n    }\n    if k == result.count\
    \ - 9 {\n        return result\n    }\n    if k == result.count - 10 {\n     \
    \   return result\n    }\n    if k == result.count - 11 {\n        return result\n\
    \    }\n    if k == result.count - 12 {\n        return result\n    }\n    if\
    \ k == result.count - 13 {\n        return result\n    }\n    if k == result.count\
    \ - 14 {\n        return result\n    }\n    if k == result.count - 15 {\n    \
    \    return result\n    }\n    if k == result.count - 16 {\n        return result\n\
    \    }\n    if k == result.count - 17 {\n        return result\n    }\n    if\
    \ k == result.count - 18 {\n        return result\n    }\n    if k == result.count\
    \ - 19 {\n        return result\n    }\n    if k == result.count - 20 {\n    \
    \    return result\n    }\n    if k == result.count - 21 {\n        return result\n\
    \    }\n    if k == result.count - 22 {\n        return result\n    }\n    if\
    \ k == result.count - 23 {\n        return result\n    }\n    if k == result.count\
    \ - 24 {\n        return result\n    }\n    if k == result.count - 25 {\n    \
    \    return result\n    }\n    if k == result.count - 26 {\n        return result\n\
    \    }\n    if k == result.count - 27 {\n        return result\n    }\n    if\
    \ k == result.count - 28 {\n        return result\n    }\n    if k == result.count\
    \ - 29 {\n        return result\n    }\n    if k == result.count - 30 {\n    \
    \    return result\n    }\n    if k == result.count - 31 {\n        return result\n\
    \    }\n    if k == result.count - 32 {", "    \n    // write your code here\n\
    \    \n    var max = [Int]()\n    \n    for var i = 0; i < k; i++ {\n        if\
    \ arr[i] > max[0] {\n            max[0] = arr[i]\n        }\n    }\n    \n   \
    \ for var i = 0; i < k; i++ {\n        if arr[i] > max[1] {\n            max[1]\
    \ = arr[i]\n        }\n    }\n    \n    return max", '    return arr.sorted {
    $0 > $1 }.prefix(k)', "    precondition(k <= arr.count, \"k should be less than\
    \ or equal to the length of arr\")\n    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for index in 0..<k {\n        if arr[index] > max[maxIndex] {\n     \
    \       max[maxIndex] = arr[index]\n            maxIndex = index\n        }\n\
    \    }\n    return max", "    \n    var max = [Int]()\n    \n    for index in\
    \ 0..<k {\n        if arr[index] > max[index] {\n            max = [Int](repeatElement(arr[index],\
    \ count: k - 1))\n        }\n    }\n    \n    return max", "    var result = Array<Int>()\n\
    \    var max = 0\n    for element in arr {\n        if element > max {\n     \
    \       max = element\n        }\n    }\n    for element in arr {\n        if\
    \ element == max {\n            result.append(element)\n        }\n    }\n   \
    \ for element in arr {\n        if element > max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element == max {\n   \
    \         result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element > max {\n            result.append(element)\n        }\n \
    \   }\n    for element in arr {\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element > max {\n    \
    \        result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element == max {\n            result.append(element)\n        }\n\
    \    }\n    for element in arr {\n        if element > max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element == max {\n   \
    \         result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element > max {\n            result.append(element)\n        }\n \
    \   }\n    for element in arr {\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element > max {\n    \
    \        result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element == max {\n            result.append(element)\n        }\n\
    \    }\n    for element in arr {\n        if element > max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element == max {\n   \
    \         result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element > max {\n            result.append(element)\n        }\n \
    \   }\n    for element in arr {\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element > max {\n    \
    \        result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element == max {\n            result.append(element)\n        }\n\
    \    }\n    for element in arr {\n        if element > max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element == max {\n   \
    \         result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element > max {\n            result.append(element)\n        }\n \
    \   }\n    for element in arr {\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    for element in arr {\n        if element > max {\n    \
    \        result.append(element)\n        }\n    }\n    for element in arr {\n\
    \        if element == max {\n            result.append(element)\n        }\n\
    \    }\n    for element in arr {\n        if element ", "    \n    // write your\
    \ code here\n    \n    return arr", '    return maximumHelper(arr, k)', "    var\
    \ result = [Int]()\n    var max = 0\n    for element in arr {\n        if element\
    \ > max {\n            max = element\n        }\n    }\n    for element in arr\
    \ {\n        if element == max {\n            result.append(element)\n       \
    \ }\n    }\n    for _ in 0..<k {\n        result.append(max!)\n    }\n    return\
    \ result", "    \n    let maxArray = Array(arr)\n    \n    if k == 1 {\n     \
    \   return maxArray\n    }\n    \n    if k > maxArray.count {\n        return\
    \ maxArray\n    }\n    \n    var maxArrayCopy = maxArray\n    \n    for _ in 0..<k-1\
    \ {\n        maxArrayCopy = maxArrayCopy.sorted()\n    }\n    \n    return maxArrayCopy",
  "    \n    // write your code here\n    \n    return arr", "    \n    // write your\
    \ code here\n    \n    return arr", "    var result = Array<Int>()\n    var max\
    \ = 0\n    for element in arr {\n        if element > max {\n            max =\
    \ element\n        }\n    }\n    for element in arr {\n        if element == max\
    \ {\n            result.insert(element, at: 0)\n        }\n    }\n    result.sort(by:\
    \ {$0 > $1})\n    return result[k..<result.count]", "    \n    // write your code\
    \ here\n    \n    return arr", "    if k > arr.count {\n        return arr\n \
    \   }\n    \n    var max = [Int](repeating: 0, count: k)\n    var maxIndex = 0\n\
    \    \n    for i in 0..<arr.count {\n        if arr[i] > max[maxIndex] {\n   \
    \         max[maxIndex] = arr[i]\n            maxIndex = maxIndex + 1\n      \
    \  }\n    }\n    \n    return max", "    \n    // write your code here\n    \n\
    \    return arr", "    if k > arr.count {\n        return arr\n    }\n    var\
    \ result = arr\n    var maxIndex = k\n    for index in stride(from: 0, to: arr.count,\
    \ by: k) {\n        if result[index] > result[index+k] {\n            result[index]\
    \ = result[index+k]\n            maxIndex = index\n        }\n    }\n    return\
    \ result.prefix(maxIndex)", "    \n    var max = [Int]()\n    var maxIndex = 0\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max", "    if k == 0 || arr.isEmpty {\n    \
    \    return arr\n    }\n    var result = arr\n    var maxIndex = -1\n    for index\
    \ in 0..<k {\n        if result[index] > result[index+1] {\n            result[index],\
    \ result[index+1] = result[index+1], result[index]\n        }\n        if maxIndex\
    \ < 0 || result[index] > result[maxIndex] {\n            maxIndex = index\n  \
    \      }\n    }\n    return result", "    \n    // 1. Sort arr\n    arr.sort()\n\
    \    \n    // 2. Return arr[k..<arr.count]\n    return arr[k..<arr.count]", " \
    \   if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n    \
    \    if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  "    \n    var max = [Int]()\n    \n    for index in 0..<arr.count {\n        if\
    \ arr.count > k {\n            break\n        }\n        \n        if arr[index]\
    \ > max[0] {\n            max = [arr[index]]\n        } else {\n            max\
    \ = append(max, arr[index])\n        }\n    }\n    \n    return max", "    \n\
    \    // write your code here\n    \n    return arr", '    return arr.sorted {
    $0 < $1 }.prefix(k)', "    var result = Array(repeating: 0, count: k)\n    var\
    \ max = 0\n    for element in arr {\n        if element > max {\n            max\
    \ = element\n        }\n    }\n    for element in arr {\n        if element ==\
    \ max {\n            result[element - max] = element\n        }\n    }\n    return\
    \ result", "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n\
    \    var max = [Int]()\n    var maxIndex = 0\n    \n    for i in 0..<arr.count\
    \ {\n        if arr[i] > max[maxIndex] {\n            max[maxIndex] = arr[i]\n\
    \            maxIndex = i\n        }\n    }\n    \n    return max[k..<maxIndex]",
  "    \n    var max = [Int]()\n    \n    for x in arr {\n        if x > max[0] {\n\
    \            max[0] = x\n        }\n    }\n    \n    for x in arr {\n        if\
    \ x > max[1] {\n            max[1] = x\n        }\n    }\n    \n    for x in arr\
    \ {\n        if x > max[2] {\n            max[2] = x\n        }\n    }\n    \n\
    \    return max[k..<3]", "    \n    var max = [Int]()\n    \n    for x in arr\
    \ {\n        if x > max[0] {\n            max[0] = x\n        }\n    }\n    \n\
    \    for x in arr {\n        if x > max[1] {\n            max[1] = x\n       \
    \ }\n    }\n    \n    return max[k..<arr.count]", "    \n    let result = Array(repeating:\
    \ 0, count: k)\n    \n    for i in 0..<arr.count {\n        result[i] = max(arr[i],\
    \ result[i])\n    }\n    \n    return result", "    \n    // write your code here\n\
    \    \n    return arr", '    return arr.sorted().prefix(k)', "    if k == 0 ||\
    \ k > arr.count {\n        return arr\n    }\n    \n    var max = [Int](repeating:\
    \ -Int.max, count: k)\n    \n    for i in 0..<k {\n        max[i] = max(arr[i],\
    \ max[i])\n    }\n    \n    return max", "    \n    var max = [Int]()\n    \n\
    \    for element in arr {\n        if element > max[0] {\n            max[0] =\
    \ element\n        }\n    }\n    \n    for element in arr {\n        if element\
    \ > max[1] {\n            max[1] = element\n        }\n    }\n    \n    for element\
    \ in arr {\n        if element > max[2] {\n            max[2] = element\n    \
    \    }\n    }\n    \n    return max[k..<3]", '    return arr.sorted { $0 > $1
    }.prefix(k)', '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    let result\
    \ = Array(repeating: 0, count: k)\n    \n    if arr.count > 0 {\n        \n  \
    \      if k == 1 {\n            \n            for i in 0..<arr.count {\n     \
    \           result[i] = arr[i]\n            }\n            \n        } else {\n\
    \            \n            for i in 0..<arr.count {\n                \n      \
    \          if arr[i] > result[result.count - k] {\n                    result[result.count\
    \ - k] = arr[i]\n                }\n            }\n        }\n    }\n    \n  \
    \  return result", "    var max = [Int]()\n    for x in arr {\n        if max\
    \ < x {\n            max = x\n        }\n    }\n    for x in arr {\n        if\
    \ x == max {\n            max.append(x)\n        }\n    }\n    return max[k..<arr.count]",
  "    \n    // write your code here\n    \n    return arr", "    var max = [Int]()\n\
    \    for x in arr {\n        if x < 0 {\n            continue\n        }\n   \
    \     if k == 0 {\n            max = append(max, x)\n            continue\n  \
    \      }\n        if x > max[k-1] {\n            max[k-1] = x\n        }\n   \
    \ }\n    return max", "    if arr.count < k {\n        return arr\n    }\n   \
    \ \n    var max = [Int](repeating: -Int.max, count: k)\n    \n    for i in 0..<arr.count\
    \ {\n        if arr[i] > max[k-1] {\n            max[k-1] = arr[i]\n        }\n\
    \    }\n    \n    return max", "    \n    var max = [Int]()\n    \n    for element\
    \ in arr {\n        if element > max[0] {\n            max[0] = element\n    \
    \    }\n    }\n    \n    for element in arr {\n        if element > max[1] {\n\
    \            max[1] = element\n        }\n    }\n    \n    for element in arr\
    \ {\n        if element > max[2] {\n            max[2] = element\n        }\n\
    \    }\n    \n    return max[k..<3]", "    if k == 0 || arr.isEmpty {\n      \
    \  return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n\
    \    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n \
    \           max[maxIndex] = arr[index]\n            maxIndex = index\n       \
    \ }\n    }\n    \n    return max[maxIndex..<maxIndex+k]", "    if k == 0 || arr.isEmpty\
    \ {\n        return arr\n    }\n    \n    var max = [Int](repeating: -Int.max,\
    \ count: k)\n    var maxIndex = 0\n    \n    for i in 0..<arr.count {\n      \
    \  if arr[i] > max[maxIndex] {\n            max[maxIndex] = arr[i]\n         \
    \   maxIndex = maxIndex + 1\n        }\n    }\n    \n    return max", "    \n\
    \    let result = Array(repeating: 0, count: k)\n    \n    for i in 0..<arr.count\
    \ {\n        result[i] = max(arr[i], result[i])\n    }\n    \n    return result",
  "    \n    var max = [Int]()\n    \n    for element in arr {\n        if element\
    \ > max[0] {\n            max[0] = element\n        }\n    }\n    \n    for element\
    \ in arr {\n        if element > max[0] {\n            max[0] = element\n    \
    \    }\n    }\n    \n    return max", "    \n    var max = [Int]()\n    \n   \
    \ if arr.count < k {\n        return max\n    }\n    \n    for index in 0..<k\
    \ {\n        if arr[index] > max[index] {\n            max[index] = arr[index]\n\
    \        }\n    }\n    \n    return max", "    if k == 0 || arr.isEmpty() {\n\
    \        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max[maxIndex..<k].sorted()", "    var result\
    \ = Array<Int>()\n    var max = 0\n    for element in arr {\n        if element\
    \ > max {\n            max = element\n        }\n    }\n    for element in arr\
    \ {\n        if element == max {\n            result.append(element)\n       \
    \ }\n    }\n    for element in arr {\n        if element > max {\n           \
    \ result.append(element)\n        }\n    }\n    return result[k..<result.count]",
  "    \n    var max = [Int]()\n    \n    if arr.count > k {\n        return arr\n\
    \    }\n    \n    for i in 0..<k {\n        if arr[i] > max[0] {\n           \
    \ max = [arr[i]]\n        } else {\n            max.append(arr[i])\n        }\n\
    \    }\n    \n    return max", "    if k == 0 || arr.isEmpty {\n        return\
    \ arr\n    }\n    var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    return max[maxIndex..<k].sorted()",
  "    var result = [Int]()\n    var max = 0\n    for x in arr {\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    for x in arr {\n        if x ==\
    \ max {\n            result.append(x)\n        }\n    }\n    if result.count >\
    \ k {\n        result = result[k..<result.count]\n    }\n    return result", " \
    \   if k == 0 || arr.isEmpty() {\n        return arr\n    }\n    \n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n  \
    \      if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  "    \n    // write your code here\n    \n    return arr", "    var result = [Int]()\n\
    \    var max = 0\n    for element in arr {\n        if element > max {\n     \
    \       max = element\n        }\n    }\n    for element in arr {\n        if\
    \ element == max {\n            result.append(element)\n        }\n    }\n   \
    \ for _ in 0..<k {\n        result.remove(at: 0)\n    }\n    return result", " \
    \   \n    var max = [Int]()\n    \n    if arr.count > 0 {\n        \n        if\
    \ k == 1 {\n            \n            for i in 0..<arr.count {\n             \
    \   \n                if arr[i] > max[0] {\n                    \n           \
    \         max[0] = arr[i]\n                }\n            }\n            \n  \
    \      } else {\n            \n            for i in 0..<k {\n                \n\
    \                if arr[i] > max[0] {\n                    \n                \
    \    max[0] = arr[i]\n                }\n            }\n            \n       \
    \     for i in 1..<arr.count {\n                \n                if arr[i] >\
    \ max[0] {\n                    \n                    max[0] = arr[i]\n      \
    \          }\n            }\n        }\n    }\n    \n    return max", '    return
    Array(arr).sorted().prefix(k)', "    if k == 0 || arr.isEmpty {\n        return\
    \ arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for\
    \ i in 0..<arr.count {\n        if arr[i] > max[k] {\n            maxIndex = i\n\
    \            max = [arr[i]]\n        } else if arr[i] == max[k] {\n          \
    \  max.append(arr[i])\n        }\n    }\n    \n    return max", "    \n    //\
    \ Write your code here\n    \n    return arr", "    \n    var max = [Int]()\n\
    \    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n        if arr[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    \n    return max[0..<k] ", "    if k > arr.count\
    \ {\n        return []\n    }\n    \n    var max = [Int](repeating: -Int.max,\
    \ count: k)\n    \n    for i in 0..<arr.count {\n        if arr[i] > max[k-1]\
    \ {\n            max[k-1] = arr[i]\n        }\n    }\n    \n    return max", " \
    \   if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int](repeating: -Int.max, count: k)\n    var maxIndex = 0\n    \n    for i\
    \ in 0..<arr.count {\n        if arr[i] > max[maxIndex] {\n            max[maxIndex]\
    \ = arr[i]\n            maxIndex = maxIndex + 1\n        }\n    }\n    \n    return\
    \ max", "    var result = Array<Int>()\n    var max = 0\n    for element in arr\
    \ {\n        if element > max {\n            max = element\n        }\n    }\n\
    \    for element in arr {\n        if element == max {\n            result.insert(element,\
    \ at: 0)\n        }\n    }\n    if result.count > k {\n        result = result[k..<result.count]\n\
    \    }\n    return result", "    \n    // Write your code here\n    \n    return\
    \ arr", "    \n    // 1. Your code here\n    \n    return arr", "    var result\
    \ = Array(repeating: 0, count: k)\n    var max = 0\n    for element in arr {\n\
    \        if element > max {\n            max = element\n        }\n    }\n   \
    \ for element in arr {\n        if element == max {\n            result[element\
    \ - max] = element\n        }\n    }\n    return result", "    var max = [Int]()\n\
    \    for x in arr {\n        if x > max[0] {\n            max[0] = x\n       \
    \ }\n    }\n    for x in arr {\n        if x == max[0] {\n            for y in\
    \ max {\n                if y > x {\n                    max[1] = y\n        \
    \            break\n                }\n            }\n        }\n    }\n    return\
    \ max[k..<arr.count]", "    if k == 0 || arr.isEmpty() {\n        return arr\n\
    \    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index\
    \ in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex]\
    \ = arr[index]\n            maxIndex = index\n        }\n    }\n    \n    return\
    \ max[maxIndex..<maxIndex+k]", "    var max = [Int]()\n    for x in arr {\n  \
    \      if x > max[0] {\n            max[0] = x\n        }\n        if x > max[1]\
    \ {\n            max[1] = x\n        }\n    }\n    return max[k..<arr.count]",
  '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    var max = [Int]()\n  \
    \  \n    if arr.count > 0 {\n        \n        for i in 0..<k {\n            \n\
    \            if arr[i] > max[0] {\n                \n                max = [arr[i]]\n\
    \                \n            } else {\n                \n                max\
    \ = [max[0]...arr[i]]\n            }\n        }\n    }\n    \n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<arr.count {\n\
    \        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    return max", "    if k >\
    \ arr.count {\n        return arr\n    }\n    \n    var max = [Int](repeating:\
    \ -Int.max, count: k)\n    \n    for i in 0..<k {\n        if arr[i] > max[i]\
    \ {\n            max[i] = arr[i]\n        }\n    }\n    \n    return max", " \
    \   \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    if maxIndex < k {\n\
    \        for index in maxIndex..<k {\n            max.append(arr[index])\n   \
    \     }\n    }\n    \n    return max", "    if k == 0 || arr.isEmpty {\n     \
    \   return arr\n    }\n    var max = [Int](repeating: -Int.max, count: k)\n  \
    \  var maxIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] >\
    \ max[k-1] {\n            max[k-1] = arr[index]\n            maxIndex = k-1\n\
    \        }\n    }\n    return max", "    if k == 0 || arr.isEmpty {\n        return\
    \ arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for\
    \ index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n        \
    \    max[maxIndex] = arr[index]\n            maxIndex = index\n        }\n   \
    \ }\n    \n    return max[maxIndex..<maxIndex+k]", '    return arr.sorted { $0
    > $1 }.prefix(k)', '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    //\
    \ 1. Create a result array\n    var result = [Int]()\n    \n    // 2. Create a\
    \ variable to hold the maximum value\n    var maxVal = arr[0]\n    \n    // 3.\
    \ Create a variable to hold the index of the maximum value\n    var maxIndex =\
    \ 0\n    \n    // 4. Traverse the array and find the maximum value\n    for i\
    \ in 1..<arr.count {\n        if arr[i] > maxVal {\n            maxVal = arr[i]\n\
    \            maxIndex = i\n        }\n    }\n    \n    // 5. Copy the maximum\
    \ value to the result array\n    result.append(maxVal)\n    \n    // 6. Copy the\
    \ maximum value to the result array\n    result.append(arr[maxIndex])\n    \n\
    \    // 7. Copy the remaining elements to the result array\n    for i in maxIndex+1..<arr.count\
    \ {\n        result.append(arr[i])\n    }\n    \n    // 8. Sort the result array\n\
    \    result.sort()\n    \n    // 9. Return the result array\n    return result",
  "    if k == 0 || arr.isEmpty() {\n        return arr\n    }\n    var max = [Int]()\n\
    \    var maxIndex = 0\n    for index in 0..<arr.count {\n        if arr[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    return max[0..<k-1]", "    if k == 0 || arr.isEmpty\
    \ {\n        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex\
    \ = -1\n    \n    for i in 0..<arr.count {\n        if arr[i] > max[0] {\n   \
    \         maxIndex = i\n            max = [arr[i]]\n        } else if arr[i] ==\
    \ max[0] {\n            max.append(arr[i])\n        }\n    }\n    \n    if maxIndex\
    \ == -1 {\n        return arr\n    }\n    \n    var maxIndex = -1\n    \n    for\
    \ i in 0..<arr.count {\n        if arr[i] > max[0] {\n            maxIndex = i\n\
    \            max = [arr[i]]\n        } else if arr[i] == max[0] {\n          \
    \  max.append(arr[i])\n        }\n    }\n    \n    if maxIndex == -1 {\n     \
    \   return arr\n    }\n    \n    var maxIndex = -1\n    \n    for i in 0..<arr.count\
    \ {\n        if arr[i] > max[0] {\n            maxIndex = i\n            max =\
    \ [arr[i]]\n        } else if arr[i] == max[0] {\n            max.append(arr[i])\n\
    \        }\n    }\n    \n    if maxIndex == -1 {\n        return arr\n    }\n\
    \    \n    for i in 0..<arr.count {\n        if arr[i] > max[0] {\n          \
    \  maxIndex = i\n            max = [arr[i]]\n        } else if arr[i] == max[0]\
    \ {\n            max.append(arr[i])\n        }\n    }\n    \n    if maxIndex ==\
    \ -1 {\n        return arr\n    }\n    \n    for i in 0..<arr.count {\n      \
    \  if arr[i] > max[0] {\n            maxIndex = i\n            max = [arr[i]]\n\
    \        } else if arr[i] == max[0] {\n            max.append(arr[i])\n      \
    \  }\n    }\n    \n    if maxIndex == -1 {\n        return arr\n    }\n    \n\
    \    for i in 0..<arr.count {\n        if arr[i] > max[0] {\n            maxIndex\
    \ = i\n            max = [arr[i]]\n        } else if arr[i] == max[0] {\n    \
    \        max.append(arr[i])\n        }\n    }\n    \n    if maxIndex == -1 {\n\
    \        return arr\n    }\n    \n    for i in 0..<arr.count {\n        if arr[i]\
    \ > max[0] {\n            maxIndex = i\n            max = [arr[i]]\n        }\
    \ else if arr[i] == max[0] {\n            max.append(arr[i])\n        }\n    }\n\
    \    \n    if maxIndex == -1 {\n        return arr\n    }\n    \n    for i in\
    \ 0..<arr.count {\n        if arr[i] > max[0] {\n            maxIndex = i\n  \
    \          max = [arr[i]]\n        } else if arr[i] == max[0] {\n            max.append(arr[i])\n\
    \        }\n    }\n    \n    if ", "    if k == 0 || k > arr.count {\n       \
    \ return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n\
    \    for i in 0..<k {\n        if arr[i] > max[maxIndex] {\n            max[maxIndex]\
    \ = arr[i]\n            maxIndex = i\n        }\n    }\n    \n    return max",
  "    if k == 0 || k > arr.count {\n        return arr\n    }\n    \n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n  \
    \      if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<k+1]",
  '    return arr.sorted().prefix(k)', '    return arr.sorted { $0 < $1 }.prefix(k)',
  "    if k == 0 || arr.isEmpty() {\n        return arr\n    }\n    var max = [Int]()\n\
    \    var maxIndex = 0\n    for index in 0..<arr.count {\n        if arr[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    return max[maxIndex..<maxIndex+k]", '    return arr.sorted
    { $0 > $1 }.prefix(k)', "    precondition(k <= arr.count, \"k should be less than\
    \ or equal to arr.count\")\n    \n    var max = [Int]()\n    var maxIndex = 0\n\
    \    \n    for index in 0..<k {\n        if arr[index] > max[maxIndex] {\n   \
    \         max[maxIndex] = arr[index]\n            maxIndex = index\n        }\n\
    \    }\n    \n    return max", "    \n    var max = [Int]()\n    \n    for x in\
    \ arr {\n        if x > max[0] {\n            max[0] = x\n        }\n    }\n \
    \   \n    for x in arr {\n        if x > max[1] {\n            max[1] = x\n  \
    \      }\n    }\n    \n    return max[k..<k.count]", "    \n    var max = [Int]()\n\
    \    \n    for x in arr {\n        if x < 0 {\n            max = append(max, 0)\n\
    \        } else {\n            max = append(max, x)\n        }\n    }\n    \n\
    \    if k == 1 {\n        return max\n    }\n    \n    if k == len(max) {\n  \
    \      return max\n    }\n    \n    var maxIndex = 0\n    \n    for x in max {\n\
    \        if x > max[maxIndex] {\n            maxIndex = maxIndex\n        }\n\
    \    }\n    \n    var maxIndex2 = 0\n    \n    for x in max {\n        if x >\
    \ max[maxIndex2] {\n            maxIndex2 = maxIndex2\n        }\n    }\n    \n\
    \    var maxIndex3 = 0\n    \n    for x in max {\n        if x > max[maxIndex3]\
    \ {\n            maxIndex3 = maxIndex3\n        }\n    }\n    \n    var maxIndex4\
    \ = 0\n    \n    for x in max {\n        if x > max[maxIndex4] {\n           \
    \ maxIndex4 = maxIndex4\n        }\n    }\n    \n    var maxIndex5 = 0\n    \n\
    \    for x in max {\n        if x > max[maxIndex5] {\n            maxIndex5 =\
    \ maxIndex5\n        }\n    }\n    \n    var maxIndex6 = 0\n    \n    for x in\
    \ max {\n        if x > max[maxIndex6] {\n            maxIndex6 = maxIndex6\n\
    \        }\n    }\n    \n    var maxIndex7 = 0\n    \n    for x in max {\n   \
    \     if x > max[maxIndex7] {\n            maxIndex7 = maxIndex7\n        }\n\
    \    }\n    \n    var maxIndex8 = 0\n    \n    for x in max {\n        if x >\
    \ max[maxIndex8] {\n            maxIndex8 = maxIndex8\n        }\n    }\n    \n\
    \    var maxIndex9 = 0\n    \n    for x in max {\n        if x > max[maxIndex9]\
    \ {\n            maxIndex9 = maxIndex9\n        }\n    }\n    \n    var maxIndex10\
    \ = 0\n    \n    for x in max {\n        if x > max[maxIndex10] {\n          \
    \  maxIndex10 = maxIndex10\n        }\n    }\n    \n    var maxIndex11 = 0\n \
    \   \n    for x in max {\n        if x > max[maxIndex11] {\n            maxIndex11\
    \ = maxIndex11\n        }\n    }\n    \n    var maxIndex12 = 0\n    \n    for\
    \ x in max {\n        if x > max[maxIndex12] {\n            maxIndex12 = maxIndex12\n\
    \        }\n    }\n    \n    var maxIndex13 = 0\n    \n    for x in max {\n  \
    \      if x > max[maxIndex13] {\n            maxIndex13 = maxIndex13\n", "   \
    \ \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    // write your code here\n\
    \    \n    return arr", "    if k == 0 || k > arr.count {\n        return arr\n\
    \    }\n    \n    var max = [Int]()\n    \n    for index in 0..<k {\n        if\
    \ arr[index] > max[0] {\n            max = [arr[index]]\n        } else if arr[index]\
    \ == max[0] {\n            max.append(arr[index])\n        }\n    }\n    \n  \
    \  return max", "    if k == 0 || arr.isEmpty() {\n        return arr\n    }\n\
    \    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[index] {\n            maxIndex = index\n    \
    \        max = [arr[index]]\n        } else if arr[index] == max[index] {\n  \
    \          max.append(arr[index])\n        }\n    }\n    \n    return max[0 ..<\
    \ k].sorted()", '    return arr.sorted { $0 > $1 }.prefix(k)', "    \n    // write\
    \ your code here\n    \n    return arr", "    if k == 0 || k > arr.count {\n \
    \       return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n\
    \    \n    for i in 0..<k {\n        if arr[i] > max[0] {\n            maxIndex\
    \ = i\n            max = [arr[i]]\n        } else if arr[i] > max[0] {\n     \
    \       max = append(max, arr[i])\n        }\n    }\n    \n    return max", " \
    \   if k == 0 || arr.isEmpty() {\n        return arr\n    }\n    \n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n  \
    \      if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[0..<maxIndex]",
  "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n    \
    \    if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  "    \n    // write your code here\n    \n    return arr", "    \n    var max =\
    \ [Int]()\n    \n    for element in arr {\n        if element > max[0] {\n   \
    \         max[0] = element\n        }\n    }\n    \n    for element in arr {\n\
    \        if element > max[k] {\n            max[k] = element\n        }\n    }\n\
    \    \n    return max", "    if k == 0 || arr.isEmpty {\n        return arr\n\
    \    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index\
    \ in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex]\
    \ = arr[index]\n            maxIndex = index\n        }\n    }\n    \n    return\
    \ max[maxIndex..<maxIndex+k]", "    \n    // 1. Sort arr\n    arr.sort()\n   \
    \ \n    // 2. Return arr[k..<arr.count] \n    return arr[k..<arr.count]", "  \
    \  if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int]()\n    var maxIndex = -1\n    \n    for i in 0..<arr.count {\n       \
    \ if arr[i] > max[maxIndex] {\n            maxIndex = i\n            max = [arr[i]]\n\
    \        } else if arr[i] == max[maxIndex] {\n            max.append(arr[i])\n\
    \        }\n    }\n    \n    return max[0..<k - 1]", '    return arr.sorted {
    $0 < $1 }.prefix(k)', "    precondition(k <= arr.count, \"k should be less than\
    \ or equal to arr.count\")\n    var max = [Int](repeating: 0, count: k)\n    for\
    \ index in 0..<arr.count {\n        if arr[index] > max[index] {\n           \
    \ max[index] = arr[index]\n        }\n    }\n    return max", "    \n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n  \
    \      if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  "    precondition(k <= arr.count, \"k must be less than or equal to the length of\
    \ the array\")\n    var max = [Int]()\n    for index in 0..<k {\n        if arr[index]\
    \ > max[index] {\n            max = [Int](repeatElement(arr[index], k))\n    \
    \    }\n    }\n    return max", "    if k == 0 || arr.isEmpty {\n        return\
    \ arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for\
    \ i in 0..<arr.count {\n        if arr[i] > max[maxIndex] {\n            max[maxIndex]\
    \ = arr[i]\n            maxIndex = i\n        }\n    }\n    \n    return max[maxIndex..<k].sorted()",
  '    return Array(arr).sorted().prefix(k)', "    if k == 0 || arr.isEmpty {\n  \
    \      return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = -1\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max[maxIndex..<maxIndex+k]", "    if k > arr.count\
    \ {\n        return arr\n    }\n    \n    var max = [Int](repeating: -1000, count:\
    \ k)\n    \n    for i in 0..<k {\n        max[i] = max(arr[i], max[i])\n    }\n\
    \    \n    return max", "    \n    var max = [Int]()\n    var maxIndex = 0\n \
    \   \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max", "    var max = [Int]()\n    for x in arr\
    \ {\n        if x > max[0] {\n            max[0] = x\n        }\n        if x\
    \ > max[1] {\n            max[1] = x\n        }\n    }\n    return max[k..<arr.count]",
  "    var result = Array<Int>()\n    var maxNum = arr[0]\n    for num in arr {\n\
    \        if num > maxNum {\n            maxNum = num\n        }\n    }\n    for\
    \ num in arr {\n        if num == maxNum {\n            result.insert(num, at:\
    \ 0)\n        }\n    }\n    if result.count > k {\n        result = result[k..<result.count]\n\
    \    }\n    return result", '    return arr.sorted { $0 > $1 }.prefix(k)', " \
    \   \n    let maxCount = arr.count\n    \n    if maxCount == 0 {\n        return\
    \ arr\n    }\n    \n    if maxCount == 1 {\n        return arr\n    }\n    \n\
    \    if k == 1 {\n        return arr\n    }\n    \n    if k == maxCount {\n  \
    \      return arr\n    }\n    \n    var maxArr = [Int]()\n    \n    for i in 0..<maxCount\
    \ {\n        if arr[i] > arr[i+1] {\n            maxArr.append(arr[i])\n     \
    \   } else {\n            maxArr.append(arr[i+1])\n        }\n    }\n    \n  \
    \  return maxArr", '    return Array(arr).sorted().prefix(k)', "    if k == 0\
    \ || arr.isEmpty {\n        return arr\n    }\n    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for i in 0..<k {\n        if arr[i] > max[k-1] {\n       \
    \     maxIndex = k-1\n            max = [Int]()\n        }\n        if arr[i]\
    \ > max[k-1] {\n            max = append(max, arr[i])\n        }\n    }\n    return\
    \ max", "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n   \
    \ var max = [Int]()\n    var maxIndex = 0\n    \n    for i in 0..<k {\n      \
    \  if arr[i] > max[maxIndex] {\n            max[maxIndex] = arr[i]\n         \
    \   maxIndex = i\n        }\n    }\n    \n    return max", "    \n    // write\
    \ your code here\n    \n    return arr", "    var result = [Int]()\n    var max\
    \ = 0\n    for element in arr {\n        if element > max {\n            max =\
    \ element\n        }\n    }\n    for element in arr {\n        if element == max\
    \ {\n            result.append(element)\n        }\n    }\n    if result.count\
    \ < k {\n        for _ in 0..<k - result.count {\n            result.append(0)\n\
    \        }\n    }\n    return result", '    return arr.sorted { $0 > $1 }.prefix(k)',
  "    precondition(k <= arr.count, \"k should be less than or equal to arr.count\"\
    )\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<k\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max", "    precondition(k\
    \ <= arr.count, \"k should be less than or equal to arr.count\")\n    \n    var\
    \ max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<k {\n      \
    \  if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n \
    \           maxIndex = index\n        }\n    }\n    \n    return max", "    \n\
    \    // 1. Your code here\n    \n    return arr", "    \n    var max = [Int]()\n\
    \    \n    for x in arr {\n        if x > max[0] {\n            max[0] = x\n \
    \       }\n    }\n    \n    for x in arr {\n        if x > max[1] {\n        \
    \    max[1] = x\n        }\n    }\n    \n    return max[k..<arr.count]", "   \
    \ \n    var result = [Int]()\n    \n    if arr.count < k {\n        return result\n\
    \    }\n    \n    if k == 1 {\n        return arr\n    }\n    \n    if k == 2\
    \ {\n        if arr[0] > arr[1] {\n            return arr\n        } else {\n\
    \            return [arr[0], arr[1]]\n        }\n    }\n    \n    if k == 3 {\n\
    \        if arr[0] > arr[1] {\n            if arr[0] > arr[2] {\n            \
    \    return arr\n            } else {\n                return [arr[0], arr[2],\
    \ arr[1]]\n            }\n        } else {\n            if arr[1] > arr[2] {\n\
    \                return arr\n            } else {\n                return [arr[1],\
    \ arr[0], arr[2]]\n            }\n        }\n    }\n    \n    if k == 4 {\n  \
    \      if arr[0] > arr[1] {\n            if arr[0] > arr[2] {\n              \
    \  if arr[0] > arr[3] {\n                    return arr\n                } else\
    \ {\n                    return [arr[0], arr[3], arr[2], arr[1]]\n           \
    \     }\n            } else {\n                if arr[1] > arr[2] {\n        \
    \            if arr[1] > arr[3] {\n                        return arr\n      \
    \              } else {\n                        return [arr[1], arr[3], arr[0],\
    \ arr[2]]\n                    }\n                } else {\n                 \
    \   if arr[2] > arr[3] {\n                        return arr\n               \
    \     } else {\n                        return [arr[2], arr[3], arr[0], arr[1]]\n\
    \                    }\n                }\n            }\n        } else {\n \
    \           if arr[1] > arr[2] {\n                if arr[1] > arr[3] {\n     \
    \               if arr[1] > arr[4] {\n                        return arr\n   \
    \                 } else {\n                        return [arr[1], arr[4], arr[0],\
    \ arr[3], arr[2]]\n                    }\n                } else {\n         \
    \           if arr[2] > arr[3] {\n                        if arr[2] > arr[4] {\n\
    \                            return arr\n                        } else {\n  \
    \                          return [arr[2], arr[4], arr[0], arr[3], arr[1]]\n \
    \                       }\n                    } else {\n                    \
    \    if arr[3] > arr[4] {\n                            return arr\n          \
    \              } else {\n                            return [arr[3], arr[4], arr[0],\
    \ arr[1], arr[2]]\n                        }\n                    }\n        \
    \        }\n            } else {\n                if arr[2] > arr[3] {\n     \
    \               if arr[2] > arr[4] {\n                        if arr[2] > arr[5]\
    \ {\n                            return arr\n                        } else {\n\
    \                            return [arr[2], arr[5], arr[0], arr[3], arr[1], arr[4]]\n\
    \                        }\n                    } else {\n                   \
    \     if arr[3] > arr[4] {\n                            if arr[3] > arr[5] {\n\
    \                                return arr\n                            } else\
    \ {\n                                return [arr[3], arr[5], arr[0], arr[1], arr[4],\
    \ arr[2]]\n                            }\n                        } else {\n \
    \                           if arr[4] > arr[5] {\n                           \
    \     return arr\n                            } else {\n                     \
    \           return [arr[4], arr[5], arr[0], arr[1], arr[3], ", "    \n    // write\
    \ your code here\n    \n    return arr", "    \n    var max = [Int]()\n    var\
    \ maxIndex = 0\n    \n    for index in 0..<arr.count {\n        if arr[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]", '    return
    arr.sorted { $0 > $1 }.prefix(k)', "    \n    // write your code here\n    \n\
    \    return arr", "    \n    // write your code here\n    \n    return arr", " \
    \   if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int](repeating: -Int.max, count: k)\n    \n    for i in 0..<arr.count {\n \
    \       if max[k-1] < arr[i] {\n            max[k-1] = arr[i]\n        }\n   \
    \ }\n    \n    return max", "    var result = [Int]()\n    var max = 0\n    for\
    \ x in arr {\n        if x > max {\n            max = x\n        }\n    }\n  \
    \  for x in arr {\n        if x == max {\n            result.append(x)\n     \
    \   }\n    }\n    if result.count > k {\n        result = result[k..<result.count]\n\
    \    }\n    return result", "    \n    var max = [Int]()\n    \n    if arr.count\
    \ < k {\n        return max\n    }\n    \n    for i in 0..<k {\n        if arr[i]\
    \ > max[0] {\n            max[0] = arr[i]\n        }\n    }\n    \n    for i in\
    \ 0..<k {\n        if arr[i] > max[1] {\n            max[1] = arr[i]\n       \
    \ }\n    }\n    \n    return max", "    \n    // Write your code here\n    \n\
    \    return arr", "    if k == 0 || arr == nil || arr.isEmpty {\n        return\
    \ arr\n    }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for\
    \ index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n        \
    \    max[maxIndex] = arr[index]\n            maxIndex = index\n        }\n   \
    \ }\n    \n    return max[maxIndex..<maxIndex+k]", "    if arr.count < k {\n \
    \       return arr\n    }\n    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n        \
    \    max[maxIndex] = arr[index]\n            maxIndex = index\n        }\n   \
    \ }\n    return max", "    \n    var max = [Int]()\n    \n    for x in arr {\n\
    \        if max < x {\n            max = x\n        }\n    }\n    \n    for x\
    \ in arr {\n        if x == max {\n            max.append(x)\n        }\n    }\n\
    \    \n    return max", "    \n    var max = [Int]()\n    \n    if arr.count <\
    \ k {\n        return max\n    }\n    \n    for i in 0..<k {\n        if arr[i]\
    \ > max[0] {\n            max[0] = arr[i]\n        }\n    }\n    \n    for i in\
    \ 1..<arr.count {\n        if arr[i] > max[0] {\n            max[0] = arr[i]\n\
    \        }\n    }\n    \n    return max", "    \n    var result = arr\n    \n\
    \    if k > result.count {\n        return result\n    }\n    \n    if k == result.count\
    \ {\n        return result\n    }\n    \n    if k == 1 {\n        return result.sorted()\n\
    \    }\n    \n    if k == 2 {\n        return result.sorted().prefix(2)\n    }\n\
    \    \n    if k == 3 {\n        return result.sorted().prefix(3)\n    }\n    \n\
    \    if k == 4 {\n        return result.sorted().prefix(4)\n    }\n    \n    if\
    \ k == 5 {\n        return result.sorted().prefix(5)\n    }\n    \n    if k ==\
    \ 6 {\n        return result.sorted().prefix(6)\n    }\n    \n    if k == 7 {\n\
    \        return result.sorted().prefix(7)\n    }\n    \n    if k == 8 {\n    \
    \    return result.sorted().prefix(8)\n    }\n    \n    if k == 9 {\n        return\
    \ result.sorted().prefix(9)\n    }\n    \n    if k == 10 {\n        return result.sorted().prefix(10)\n\
    \    }\n    \n    if k == 11 {\n        return result.sorted().prefix(11)\n  \
    \  }\n    \n    if k == 12 {\n        return result.sorted().prefix(12)\n    }\n\
    \    \n    if k == 13 {\n        return result.sorted().prefix(13)\n    }\n  \
    \  \n    if k == 14 {\n        return result.sorted().prefix(14)\n    }\n    \n\
    \    if k == 15 {\n        return result.sorted().prefix(15)\n    }\n    \n  \
    \  if k == 16 {\n        return result.sorted().prefix(16)\n    }\n    \n    if\
    \ k == 17 {\n        return result.sorted().prefix(17)\n    }\n    \n    if k\
    \ == 18 {\n        return result.sorted().prefix(18)\n    }\n    \n    if k ==\
    \ 19 {\n        return result.sorted().prefix(19)\n    }\n    \n    if k == 20\
    \ {\n        return result.sorted().prefix(20)\n    }\n    \n    if k == 21 {\n\
    \        return result.sorted().prefix(21)\n    }\n    \n    if k == 22 {\n  \
    \      return result.sorted().prefix(22)\n    }\n    \n    if k == 23 {\n    \
    \    return result.sorted().prefix(23)\n    }\n    \n    if k == 24 {\n      \
    \  return result.sorted().prefix(24)\n    }\n    \n    if k == 25 {\n        return\
    \ result.sorted().prefix(25)\n    }\n    \n    if k == 26 {\n        return result.sorted().prefix(26)\n\
    \    }\n    \n    if k == 27 {\n        return result.sorted().prefix(27)\n  \
    \  }\n    \n    if k == 28 {\n        return result.", "    \n    // write your\
    \ code here\n    \n    return arr", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n\
    \            max[maxIndex] = arr[index]\n            maxIndex = index\n      \
    \  }\n    }\n    return max[0..<k]", "    \n    // write your code here\n    \n\
    \    return arr", '    return arr.sorted { $0 > $1 }.prefix(k)', "    if k ==\
    \ 0 || k > arr.count {\n        return arr\n    }\n    var max = [Int]()\n   \
    \ var maxIndex = -1\n    for index in 0..<arr.count {\n        if arr[index] >\
    \ max[index] {\n            maxIndex = index\n            max = [arr[index]]\n\
    \        } else if arr[index] == max[index] {\n            max.append(arr[index])\n\
    \        }\n    }\n    return max[0 ..< k - 1]", "    if k == 0 || arr.isEmpty\
    \ {\n        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex\
    \ = 0\n    \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max[maxIndex..<maxIndex+k]", "    \n    var\
    \ max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n\
    \        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[maxIndex..<maxIndex+k]",
  "    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max", "    if\
    \ k == 0 || k > arr.count {\n        return arr\n    }\n    var max = [Int]()\n\
    \    var maxIndex = 0\n    for index in 0..<k {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    return max", "    \n    let result = Array(repeating: 0,\
    \ count: k)\n    \n    for element in arr {\n        result[element > result[0]\
    \ ? 1 : 0] += 1\n    }\n    \n    return result", "    if k == 0 || arr.isEmpty\
    \ {\n        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex\
    \ = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > max[maxIndex] {\n\
    \            max[maxIndex] = arr[i]\n            maxIndex = i\n        }\n   \
    \ }\n    \n    return max[maxIndex..<k].sorted()", "    \n    let result = Array(repeating:\
    \ 0, count: k)\n    \n    for x in arr {\n        result[result.count-1] = x \n\
    \    }\n    \n    return result", "    var result = Array<Int>()\n    var max\
    \ = 0\n    for x in arr {\n        if x > max {\n            max = x\n       \
    \ }\n    }\n    for x in arr {\n        if x == max {\n            result.append(x)\n\
    \        }\n    }\n    if result.count > k {\n        result = result[k..<result.count]\n\
    \    }\n    return result", "    \n    var max = [Int]()\n    \n    for x in arr\
    \ {\n        if x > max[0] {\n            max[0] = x\n        }\n    }\n    \n\
    \    for x in arr {\n        if x > max[1] {\n            max[1] = x\n       \
    \ }\n    }\n    \n    return max[k..<arr.count]", "    if k == 0 || arr.isEmpty()\
    \ {\n        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex\
    \ = 0\n    \n    for index in 0..<arr.count {\n        if arr[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = arr[index]\n            maxIndex = index\n  \
    \      }\n    }\n    \n    return max[0..<k - 1]", "    \n    var max = [Int]()\n\
    \    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n        if arr[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    \n    var result = [Int]()\n    \n    for index\
    \ in 0..<k {\n        result.append(max[index])\n    }\n    \n    return result",
  "    \n    // write your code here\n    \n    return arr", "    \n    // write your\
    \ code here\n    \n    return arr", "    \n    // write your code here\n    \n\
    \    return arr", "    \n    // write your code here\n    \n    return arr", " \
    \   if arr.count < k {\n        return arr\n    }\n    var max = [Int](repeating:\
    \ 0, count: k)\n    for index in 0..<arr.count {\n        if arr[index] > max[index]\
    \ {\n            max[index] = arr[index]\n        }\n    }\n    return max", " \
    \   \n    var max = [Int]()\n    \n    if arr.count < k {\n        return max\n\
    \    }\n    \n    for index in 0..<k {\n        if arr[index] > max[0] {\n   \
    \         max[0] = arr[index]\n        }\n    }\n    \n    for index in 1..<arr.count\
    \ {\n        if arr[index] > max[0] {\n            if arr[index] > max[1] {\n\
    \                max[1] = arr[index]\n            } else {\n                max[0]\
    \ = arr[index]\n            }\n        }\n    }\n    \n    return max", "    if\
    \ k == 0 || k > arr.count {\n        return arr\n    }\n    \n    var max = [Int]()\n\
    \    var maxIndex = 0\n    \n    for index in 0..<k {\n        if arr[index] >\
    \ max[maxIndex] {\n            max[maxIndex] = arr[index]\n            maxIndex\
    \ = index\n        }\n    }\n    \n    return max", "    if k == 0 || arr.isEmpty\
    \ {\n        return arr\n    }\n    \n    var max = [Int]()\n    var maxIndex\
    \ = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > max[maxIndex] {\n\
    \            max[maxIndex] = arr[i]\n            maxIndex = i\n        }\n   \
    \ }\n    \n    return max[maxIndex..<k]", '    return maximumHelper(arr, k, 0)',
  "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n    \n    var max =\
    \ [Int]()\n    var maxIndex = 0\n    \n    for index in 0..<arr.count {\n    \
    \    if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    \n    return max[0..<k -\
    \ 1]", "    if k == 0 || arr.isEmpty {\n        return arr\n    }\n    var max\
    \ = [Int]()\n    var maxIndex = 0\n    for i in 0..<k {\n        if arr[i] > max[k-1]\
    \ {\n            maxIndex = k-1\n            max = [Int]()\n        }\n      \
    \  if arr[i] > max[k] {\n            max[k-1] = arr[i]\n        }\n        if\
    \ arr[i] > max[maxIndex] {\n            maxIndex = k\n        }\n    }\n    return\
    \ max", "    \n    // write your code here\n    \n    return arr", "    precondition(k\
    \ <= arr.count, \"k should be less than or equal to arr.count\")\n    var max\
    \ = [Int](repeating: -1000, count: k)\n    for x in arr {\n        if x > max[k-1]\
    \ {\n            max[k-1] = x\n        }\n    }\n    return max", "    var max\
    \ = [Int]()\n    for x in arr {\n        if x > max[0] {\n            max[0] =\
    \ x\n        }\n    }\n    for x in arr {\n        if x > max[1] {\n         \
    \   max[1] = x\n        }\n    }\n    for x in arr {\n        if x > max[k] {\n\
    \            max[k] = x\n        }\n    }\n    return max", "    var result =\
    \ arr\n    if k > result.count {\n        return result\n    }\n    if k == 0\
    \ {\n        return result\n    }\n    if k == 1 {\n        return result.sorted()\n\
    \    }\n    \n    var maxIndex = result.count - 1\n    var maxValue = result[0]\n\
    \    \n    for i in 1..k {\n        if result[i] > maxValue {\n            maxValue\
    \ = result[i]\n            maxIndex = i\n        }\n    }\n    \n    result.remove(at:\
    \ maxIndex)\n    result.append(maxValue)\n    \n    return result", "    return\
    \ arr.reduce([], { (res, cur) -> [Int] in\n        if res.count < k {\n      \
    \      res.append(cur)\n        } else if res.count == k {\n            if cur\
    \ > res[0] {\n                res[0] = cur\n            }\n        }\n       \
    \ return res\n    })", "    if k == 0 || arr.isEmpty() {\n        return arr\n\
    \    }\n    var result = Array(repeating: 0, count: k)\n    var max = 0\n    var\
    \ maxIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] > max\
    \ {\n            max = arr[index]\n            maxIndex = index\n        }\n \
    \   }\n    result[maxIndex] = max\n    return result", '    return arr.sorted
    { $0 > $1 }.prefix(k)', "    \n    // write your code here\n    var max = [Int]()\n\
    \    \n    for element in arr {\n        if max < element {\n            max =\
    \ element\n        }\n    }\n    \n    for element in arr {\n        if element\
    \ > max[k] {\n            max[k] = element\n        }\n    }\n    \n    return\
    \ max", "    if k == 0 || arr == nil || arr.isEmpty {\n        return arr\n  \
    \  }\n    \n    var max = [Int]()\n    var maxIndex = 0\n    \n    for i in 0..<k\
    \ {\n        if arr[i] > max[k-1] {\n            maxIndex = k-1\n            max\
    \ = [Int](repeating: arr[i], count: k-1)\n        } else if arr[i] > max[k] {\n\
    \            maxIndex = k\n            max = [Int](repeating: arr[i], count: k)\n\
    \        }\n    }\n    \n    return max", "    if k == 0 || arr.isEmpty() {\n\
    \        return arr\n    }\n    var max = [Int]()\n    var maxIndex = -1\n   \
    \ for index in 0..<arr.count {\n        if arr[index] > max[maxIndex] {\n    \
    \        maxIndex = index\n            max = [arr[index]]\n        } else if arr[index]\
    \ == max[maxIndex] {\n            max.append(arr[index])\n        }\n    }\n \
    \   return max", "    if k == 0 || k > arr.count {\n        return arr\n    }\n\
    \    var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<arr.count {\n\
    \        if arr[index] > max[maxIndex] {\n            max[maxIndex] = arr[index]\n\
    \            maxIndex = index\n        }\n    }\n    return max[0 ..< k - 1]"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_30_get_positive
results:
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x > 0 {\n        \
    \    result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: 0
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    return l.filter{ $0 > 0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824548
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578
- exit_code: -4
  program: "\n/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for x in l {\n        if x >= 0 {\n       \
    \     result.append(x)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4, 5, 6])\nassert(get_positive(l:\
    \ [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l:\
    \ [-1, -2]) == [] as [Int])\nassert(get_positive(l: [] as [Int]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85cy1963/tmp85cy1963.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b49aedfec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49aeaf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49aeaf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49aeaf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85cy1963                        0x000056491ae7378b <unavailable> + 6027

    5    libc.so.6                          0x00002b49aefea460 __libc_start_main +
    245

    6    tmp85cy1963                        0x000056491ae731e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824578

name: HumanEval_59_largest_prime_factor
language: swift
prompt: "\n/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  /// >>> largest_prime_factor(13195)\n/// 29\n/// >>> largest_prime_factor(2048)\n\
  /// 2\nfunc largest_prime_factor(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(largest_prime_factor(n: 15) == 5)\nassert(largest_prime_factor(n:\
  \ 27) == 3)\nassert(largest_prime_factor(n: 63) == 7)\nassert(largest_prime_factor(n:\
  \ 330) == 11)\nassert(largest_prime_factor(n: 13195) == 29)"
completions: ["    var factor: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n \
    \   var p: Int = 0\n    var q: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n\
    \    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int\
    \ = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e:\
    \ Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n   \
    \ var m: Int = 0\n    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n\
    \    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int =\
    \ 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int\
    \ = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b:\
    \ Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var\
    \ f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n   \
    \ var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n\
    \    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n   \
    \ var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n\
    \    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int =\
    \ 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n", "    var max_factor: Int = 0\n    var\
    \ max_factor_index: Int = 0\n    for factor in 2...n {\n        if n % factor\
    \ == 0 {\n            if factor > max_factor {\n                max_factor = factor\n\
    \                max_factor_index = factor\n            }\n        }\n    }\n\
    \    return max_factor", "    var max_factor: Int = 0\n    var max_factor_index:\
    \ Int = 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n          \
    \  if max_factor < i {\n                max_factor = i\n                max_factor_index\
    \ = i\n            }\n        }\n    }\n    return max_factor", "    if n < 2\
    \ {\n        return n\n    }\n    var maxFactor = Int()\n    var maxFactorFound\
    \ = false\n    for factor in 2...n {\n        if n % factor == 0 {\n         \
    \   if maxFactorFound {\n                return factor\n            }\n      \
    \      maxFactorFound = true\n            maxFactor = factor\n        }\n    }\n\
    \    return maxFactor", "    var factor: Int = 0\n    var i: Int = 0\n    var\
    \ j: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var m: Int = 0\n   \
    \ var n: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n\
    \    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int =\
    \ 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int\
    \ = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h:\
    \ Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var\
    \ l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var o: Int = 0\n   \
    \ var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n\
    \    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int\
    \ = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e:\
    \ Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n   \
    \ var m: Int = 0\n    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n\
    \    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int =\
    \ 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int\
    \ = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b:\
    \ Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var\
    \ f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n   \
    \ var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n\
    \    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n", "    if n < 2 {\n   \
    \     return 0\n    }\n    var max_factor = 0\n    var max_factor_index = 0\n\
    \    for i := 2; i <= n / 2; i += 1 {\n        if n % i == 0 {\n            max_factor\
    \ = i\n            max_factor_index = i\n        }\n    }\n    return max_factor_index",
  "    if n < 2 {\n        return n\n    }\n    var max_factor: Int = 0\n    var max_factor_index:\
    \ Int = 0\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n          \
    \  if max_factor < i {\n                max_factor = i\n                max_factor_index\
    \ = i\n            }\n        }\n    }\n    return max_factor", "    if n < 2\
    \ {\n        return n\n    }\n\n    // Sieve of Eratosthenes\n    var primes =\
    \ make([]Int, n+1)\n    var primeFactors = make([]Int, n+1)\n    var primeFactorsLen\
    \ = 0\n    var primeFactorsMax = 0\n    var primeFactorsMaxLen = 0\n    var primeFactorsMaxLen2\
    \ = -1\n\n    primes[0] = 2\n    primes[1] = 3\n    primes[2] = 5\n    primes[3]\
    \ = 7\n    primes[4] = 11\n    primes[5] = 13\n    primes[6] = 17\n    primes[7]\
    \ = 19\n    primes[8] = 23\n    primes[9] = 29\n\n    for i := 2; i < n; i++ {\n\
    \        if primes[i] == 0 {\n            continue\n        }\n\n        primeFactorsLen\
    \ = 0\n        primeFactorsMax = 0\n        primeFactorsMaxLen = 0\n        primeFactorsMaxLen2\
    \ = -1\n\n        for j := 2; j < i; j++ {\n            if primes[j] == 0 {\n\
    \                continue\n            }\n\n            if primes[j] > primeFactorsMax\
    \ {\n                primeFactorsMax = primes[j]\n                primeFactorsMaxLen\
    \ = j\n            }\n\n            if primes[j] > primeFactorsMaxLen2 {\n   \
    \             primeFactorsMaxLen2 = primes[j] // j\n            }\n\n        \
    \    if primes[j] > primeFactorsLen {\n                primeFactorsLen = primes[j]\
    \ // j\n            }\n        }\n\n        if primeFactorsLen > primeFactorsMaxLen\
    \ {\n            primeFactors = primes[:primeFactorsMaxLen]\n            primeFactorsLen\
    \ = primeFactorsMaxLen\n        }\n\n        if primeFactorsLen > primeFactorsMaxLen2\
    \ {\n            primeFactors = primes[:primeFactorsMaxLen2]\n            primeFactorsLen\
    \ = primeFactorsMaxLen2\n        }\n\n        if primeFactorsLen > 0 {\n     \
    \       primes[i] = (primes[i] * primeFactorsLen) / primeFactorsMax\n        }\n\
    \    }\n\n    return primeFactors[0]", "    var largest = 1\n    for factor in\
    \ 2...n {\n        if n % factor == 0 {\n            largest = factor\n      \
    \      break\n        }\n    }\n    return largest", "    if n < 2 {\n       \
    \ return n\n    }\n    var maxFactor = Int()\n    var maxFactorFound = false\n\
    \    var factor = 2\n    while !maxFactorFound {\n        if n % factor == 0 {\n\
    \            maxFactorFound = true\n            maxFactor = factor\n        }\n\
    \        factor++\n    }\n    return maxFactor", "    var max_factor: Int = 0\n\
    \    var max_factor_index: Int = 0\n    for factor in 2...n {\n        if n %\
    \ factor == 0 {\n            if factor > max_factor {\n                max_factor\
    \ = factor\n                max_factor_index = factor\n            }\n       \
    \ }\n    }\n    return max_factor", "    if n < 2 {\n        return n\n    }\n\
    \    var maxFactor = Int()\n    var maxFactorFound = false\n    for factor in\
    \ 2...n {\n        if n % factor == 0 {\n            if maxFactorFound {\n   \
    \             return factor\n            }\n            maxFactorFound = true\n\
    \            maxFactor = factor\n        }\n    }\n    return maxFactor", "  \
    \  if n < 2 {\n        return n\n    }\n    var maxFactor = Int()\n    var maxFactorFound\
    \ = false\n    for factor in 2...n {\n        if n % factor == 0 {\n         \
    \   if maxFactorFound {\n                return factor\n            }\n      \
    \      maxFactorFound = true\n            maxFactor = factor\n        }\n    }\n\
    \    if maxFactorFound {\n        return maxFactor\n    }\n    return n", "  \
    \  var maxFactor = Int()\n    var maxFactorFound = false\n    for factor in 2...n\
    \ {\n        if n % factor == 0 {\n            if maxFactorFound {\n         \
    \       return factor\n            } else {\n                maxFactorFound =\
    \ true\n                maxFactor = factor\n            }\n        }\n    }\n\
    \    if maxFactorFound {\n        return maxFactor\n    } else {\n        return\
    \ n\n    }", "    var largest = 1\n    var largestPrimeFactor = 1\n    for i :=\
    \ 2; i <= n / 2; i += 1 {\n        if n % i == 0 {\n            if largestPrimeFactor\
    \ == 1 {\n                largestPrimeFactor = i\n            } else {\n     \
    \           if largest < largestPrimeFactor {\n                    largest = largestPrimeFactor\n\
    \                }\n                largestPrimeFactor = i\n            }\n  \
    \      }\n    }\n    return largest", "    let maxPrimeFactor = Int(sqrt(Double(n)))\n\
    \    var factor = 1\n    for factor <= maxPrimeFactor {\n        if n % factor\
    \ == 0 {\n            break\n        }\n    }\n    return factor", "    if n <\
    \ 2 {\n        return n\n    }\n    var maxFactor = Int()\n    var maxFactorFound\
    \ = false\n    for factor in 2...n {\n        if n % factor == 0 {\n         \
    \   if maxFactorFound {\n                return factor\n            }\n      \
    \      maxFactorFound = true\n            maxFactor = factor\n        }\n    }\n\
    \    if maxFactorFound {\n        return maxFactor\n    }\n    return n", "  \
    \  var factor: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var p: Int\
    \ = 0\n    var q: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var t:\
    \ Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n   \
    \ var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n\
    \    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int =\
    \ 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int\
    \ = 0\n    var n: Int = 0\n    var o: Int = 0\n    var p: Int = 0\n    var q:\
    \ Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var\
    \ u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n   \
    \ var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n\
    \    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int =\
    \ 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n:\
    \ Int = 0\n    var o: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var\
    \ r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n   \
    \ var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int =\
    \ 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int\
    \ = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k:\
    \ Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var\
    \ o: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n   \
    \ var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n\
    \    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int =\
    \ 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int\
    \ = 0\n    var e: Int = 0\n", "    if n < 2 {\n        return n\n    }\n    var\
    \ maxFactor = Int()\n    var maxFactorFound = false\n    for factor in 2...n {\n\
    \        if n % factor == 0 {\n            if maxFactorFound {\n             \
    \   return factor\n            }\n            maxFactorFound = true\n        \
    \    maxFactor = factor\n        }\n    }\n    if maxFactorFound {\n        return\
    \ maxFactor\n    }\n    return n", "    if n < 2 {\n        return n\n    }\n\
    \    var maxFactor = Int()\n    var maxFactorFound = false\n    var i = 2\n  \
    \  while i <= n {\n        if n % i == 0 {\n            if maxFactorFound {\n\
    \                return maxFactor\n            }\n            maxFactor = i\n\
    \            maxFactorFound = true\n        }\n        i += 1\n    }\n    if maxFactorFound\
    \ {\n        return maxFactor\n    }\n    return n"]
stop_tokens:
- "\n}"

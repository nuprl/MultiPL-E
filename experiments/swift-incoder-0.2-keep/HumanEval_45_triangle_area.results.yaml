language: swift
name: HumanEval_45_triangle_area
results:
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 0
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a) * Double(h) / 2\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h:\
    \ 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824565
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmphpf68c0h.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0))\n           ^~~~\n/tmp/tmphpf68c0h.swift:6:17:\
    \ error: cannot find 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0))\n                ^~~\n/tmp/tmphpf68c0h.swift:6:31: error: cannot find\
    \ 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0))\n       \
    \                       ^~~\n/tmp/tmphpf68c0h.swift:6:38: error: binary operator\
    \ '/' cannot be applied to operands of type 'Int' and 'Double'\n    return sqrt(pow(a,\
    \ 2.0) + pow((h / 2.0), 2.0))\n                                   ~ ^ ~~~\n/tmp/tmphpf68c0h.swift:6:38:\
    \ note: overloads for '/' exist with these partially matching parameter lists:\
    \ (Double, Double), (Duration, Double), (Int, Int)\n    return sqrt(pow(a, 2.0)\
    \ + pow((h / 2.0), 2.0))\n                                     ^\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(Double(a * a + h * h))\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h:\
    \ 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpcd2xmx8n.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(Double(a * a + h * h))\n           ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmplq81m7ia.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n           ^~~~\n/tmp/tmplq81m7ia.swift:6:17:\
    \ error: cannot find 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0))\n                ^~~\n/tmp/tmplq81m7ia.swift:6:31: error: cannot find\
    \ 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n         \
    \                     ^~~\n/tmp/tmplq81m7ia.swift:6:37: error: binary operator\
    \ '/' cannot be applied to operands of type 'Int' and 'Double'\n    return sqrt(pow(a,\
    \ 2.0) + pow(h / 2.0, 2.0))\n                                  ~ ^ ~~~\n/tmp/tmplq81m7ia.swift:6:37:\
    \ note: overloads for '/' exist with these partially matching parameter lists:\
    \ (Double, Double), (Duration, Double), (Int, Int)\n    return sqrt(pow(a, 2.0)\
    \ + pow(h / 2.0, 2.0))\n                                    ^\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a) * Double(h) / Double(6)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmp3_3bljne/tmp3_3bljne.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ad700ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ad6d05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ad6d05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ad6d047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3_3bljne                        0x0000558351a5e1c7 <unavailable> + 4551

    5    libc.so.6                          0x00002b5ad71fa460 __libc_start_main +
    245

    6    tmp3_3bljne                        0x0000558351a5de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmplq81m7ia.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n           ^~~~\n/tmp/tmplq81m7ia.swift:6:17:\
    \ error: cannot find 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0))\n                ^~~\n/tmp/tmplq81m7ia.swift:6:31: error: cannot find\
    \ 'pow' in scope\n    return sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))\n         \
    \                     ^~~\n/tmp/tmplq81m7ia.swift:6:37: error: binary operator\
    \ '/' cannot be applied to operands of type 'Int' and 'Double'\n    return sqrt(pow(a,\
    \ 2.0) + pow(h / 2.0, 2.0))\n                                  ~ ^ ~~~\n/tmp/tmplq81m7ia.swift:6:37:\
    \ note: overloads for '/' exist with these partially matching parameter lists:\
    \ (Double, Double), (Duration, Double), (Int, Int)\n    return sqrt(pow(a, 2.0)\
    \ + pow(h / 2.0, 2.0))\n                                    ^\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(Double(a * a + h * h))\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h:\
    \ 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpcd2xmx8n.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(Double(a * a + h * h))\n           ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpecjwrq98.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h * h, 2.0)))\n                  ^~~~\n/tmp/tmpecjwrq98.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ * h, 2.0)))\n                       ^~~\n/tmp/tmpecjwrq98.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h * h,\
    \ 2.0)))\n                                     ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpam1g56_3.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                  ^~~~\n/tmp/tmpam1g56_3.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                       ^~~\n/tmp/tmpam1g56_3.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0),\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpam1g56_3.swift:6:45:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow((h / 2.0), 2.0)))\n                \
    \                          ~ ^ ~~~\n/tmp/tmpam1g56_3.swift:6:45: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow((h\
    \ / 2.0), 2.0)))\n                                            ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2kwkkgm.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n                  ^~~~\n/tmp/tmpb2kwkkgm.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h\
    \ / 2, 2)))\n                       ^~~\n/tmp/tmpb2kwkkgm.swift:6:36: error: cannot\
    \ find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))\n  \
    \                                 ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h:\
    \ 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpewy53mne.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(pow(a, 2) + pow(h / 2, 2))\n           ^~~~\n/tmp/tmpewy53mne.swift:6:17:\
    \ error: cannot find 'pow' in scope\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n\
    \                ^~~\n/tmp/tmpewy53mne.swift:6:29: error: cannot find 'pow' in\
    \ scope\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n                        \
    \    ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h:\
    \ 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpewy53mne.swift:6:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(pow(a, 2) + pow(h / 2, 2))\n           ^~~~\n/tmp/tmpewy53mne.swift:6:17:\
    \ error: cannot find 'pow' in scope\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n\
    \                ^~~\n/tmp/tmpewy53mne.swift:6:29: error: cannot find 'pow' in\
    \ scope\n    return sqrt(pow(a, 2) + pow(h / 2, 2))\n                        \
    \    ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a) * Double(h) / Double(2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmptqvk94o2.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a) * Double(h) / Double(2)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpsll78a5u.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  ^~~~\n/tmp/tmpsll78a5u.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h\
    \ / 2.0, 2.0)))\n                       ^~~\n/tmp/tmpsll78a5u.swift:6:38: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0,\
    \ 2.0)))\n                                     ^~~\n/tmp/tmpsll78a5u.swift:6:44:\
    \ error: binary operator '/' cannot be applied to operands of type 'Int' and 'Double'\n\
    \    return Double(sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0)))\n                  \
    \                       ~ ^ ~~~\n/tmp/tmpsll78a5u.swift:6:44: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    return Double(sqrt(pow(a, 2.0) + pow(h /\
    \ 2.0, 2.0)))\n                                           ^\n"
  stdout: ''
  timestamp: 1659824627
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmpg8_ci50_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(pow(a, 2) + pow((h / 2), 2)))\n                  ^~~~\n/tmp/tmpg8_ci50_.swift:6:24:\
    \ error: cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h\
    \ / 2), 2)))\n                       ^~~\n/tmp/tmpg8_ci50_.swift:6:36: error:\
    \ cannot find 'pow' in scope\n    return Double(sqrt(pow(a, 2) + pow((h / 2),\
    \ 2)))\n                                   ^~~\n"
  stdout: ''
  timestamp: 1659824626
- exit_code: -4
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(a * h / 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 5, h: 3) == 7.5)\nassert(triangle_area(a: 2, h: 2) == 2.0)\nassert(triangle_area(a:\
    \ 10, h: 8) == 40.0)"
  status: Exception
  stderr: 'tmpp04m4p0m/tmpp04m4p0m.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9925acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9922a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9922a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9922a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp04m4p0m                        0x00005563cf5ec257 <unavailable> + 4695

    5    libc.so.6                          0x00002ad992798460 __libc_start_main +
    245

    6    tmpp04m4p0m                        0x00005563cf5ebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824626
- exit_code: 1
  program: "\n/// Given length of a side and high return area for a triangle.\n///\
    \ >>> triangle_area(5, 3)\n/// 7.5\nfunc triangle_area(a: Int, h: Int) -> Double\
    \ {\n    return Double(sqrt(Double(a * a + h * h)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
    \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
  status: SyntaxError
  stderr: "/tmp/tmp52xojjj_.swift:6:19: error: cannot find 'sqrt' in scope\n    return\
    \ Double(sqrt(Double(a * a + h * h)))\n                  ^~~~\n"
  stdout: ''
  timestamp: 1659824626

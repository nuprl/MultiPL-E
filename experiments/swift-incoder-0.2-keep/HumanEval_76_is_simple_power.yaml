name: HumanEval_76_is_simple_power
language: swift
prompt: "\n/// Your task is to write a function that returns true if a number x is\
  \ a simple\n/// power of n and false in other cases.\n/// x is a simple power of\
  \ n if n**int=x\n/// For example:\n/// is_simple_power(1, 4) => true\n/// is_simple_power(2,\
  \ 2) => true\n/// is_simple_power(8, 2) => true\n/// is_simple_power(3, 2) => false\n\
  /// is_simple_power(3, 1) => false\n/// is_simple_power(5, 3) => false\nfunc is_simple_power(x:\
  \ Int, n: Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_simple_power(x: 16, n: 2) == true)\n\
  assert(is_simple_power(x: 143214, n: 16) == false)\nassert(is_simple_power(x: 4,\
  \ n: 2) == true)\nassert(is_simple_power(x: 9, n: 3) == true)\nassert(is_simple_power(x:\
  \ 16, n: 4) == true)\nassert(is_simple_power(x: 24, n: 2) == false)\nassert(is_simple_power(x:\
  \ 128, n: 4) == false)\nassert(is_simple_power(x: 12, n: 6) == false)\nassert(is_simple_power(x:\
  \ 1, n: 1) == true)\nassert(is_simple_power(x: 1, n: 12) == true)"
completions: ["    if n == 1 {\n        return true\n    }\n    if x == 1 {\n    \
    \    return true\n    }\n    if x == n {\n        return true\n    }\n    if n\
    \ % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return false",
  "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n   \
    \     return is_simple_power(x, n/2)\n    }\n    return false", "    if x == 1\
    \ {\n        return true\n    }\n    if x == n {\n        return true\n    }\n\
    \    if n <= 1 {\n        return false\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n-1)\n    }\n    return is_simple_power(x, n/2)", '    return
    is_simple_power_impl(x, n)', "    if x == 1 {\n        return true\n    }\n  \
    \  if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x > n {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if x > n {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if x > n {\n \
    \       return false\n    }\n    if x == 1 {\n        return true\n    }\n   \
    \ if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x > n {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if x > n {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if x > n {\n \
    \       return false\n    }\n    if x == 1 {\n        return true\n    }\n   \
    \ if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x > n {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if x > n {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if x > n {\n \
    \       return false\n    }\n    if x == 1 {\n        return true\n    }\n   \
    \ if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x > n {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if x > n {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if x > n {\n \
    \       return false\n    }\n    if x == 1 {\n        return true\n    }\n   \
    \ if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x > n {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return true\n    }\n", "    if\
    \ n == 1 {\n        return true\n    }\n    if n == 2 {\n        return true\n\
    \    }\n    if n == 3 {\n        return true\n    }\n    if n == 4 {\n       \
    \ return true\n    }\n    if n == 5 {\n        return true\n    }\n    if n ==\
    \ 6 {\n        return true\n    }\n    if n == 7 {\n        return true\n    }\n\
    \    if n == 8 {\n        return true\n    }\n    if n == 9 {\n        return\
    \ true\n    }\n    if n == 10 {\n        return true\n    }\n    if n == 11 {\n\
    \        return true\n    }\n    if n == 12 {\n        return true\n    }\n  \
    \  if n == 13 {\n        return true\n    }\n    if n == 14 {\n        return\
    \ true\n    }\n    if n == 15 {\n        return true\n    }\n    if n == 16 {\n\
    \        return true\n    }\n    if n == 17 {\n        return true\n    }\n  \
    \  if n == 18 {\n        return true\n    }\n    if n == 19 {\n        return\
    \ true\n    }\n    if n == 20 {\n        return true\n    }\n    if n == 21 {\n\
    \        return true\n    }\n    if n == 22 {\n        return true\n    }\n  \
    \  if n == 23 {\n        return true\n    }\n    if n == 24 {\n        return\
    \ true\n    }\n    if n == 25 {\n        return true\n    }\n    if n == 26 {\n\
    \        return true\n    }\n    if n == 27 {\n        return true\n    }\n  \
    \  if n == 28 {\n        return true\n    }\n    if n == 29 {\n        return\
    \ true\n    }\n    if n == 30 {\n        return true\n    }\n    if n == 31 {\n\
    \        return true\n    }\n    if n == 32 {\n        return true\n    }\n  \
    \  if n == 33 {\n        return true\n    }\n    if n == 34 {\n        return\
    \ true\n    }\n    if n == 35 {\n        return true\n    }\n    if n == 36 {\n\
    \        return true\n    }\n    if n == 37 {\n        return true\n    }\n  \
    \  if n == 38 {\n        return true\n    }\n    if n == 39 {\n        return\
    \ true\n    }\n    if n == 40 {\n        return true\n    }\n    if n == 41 {\n\
    \        return true\n    }\n    if n == 42 {\n        return true\n    }\n  \
    \  if n == 43 {\n        return true\n    }\n    if n == 44 {\n        return\
    \ true\n    }\n    if n == 45 {\n        return true\n    }\n    if n == 46 {\n\
    \        return true\n    }\n    if n == 47 {\n        return true\n    }\n  \
    \  if n == 48 {\n        return true\n    }\n    if n == 49 {\n        return\
    \ true\n    }\n    if n == 50 {\n        return true\n    }\n    if n == 51 {\n\
    \        return true\n    }\n    if n == 52 {\n        return ", "    if x ==\
    \ 1 {\n        return true\n    }\n    if x == n {\n        return true\n    }\n\
    \    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return\
    \ false", "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n    \
    \    return true\n    }\n    if n == 0 {\n        return false\n    }\n    if\
    \ x == 0 {\n        return false\n    }\n    if n == x {\n        return true\n\
    \    }\n    if n == (x * x) {\n        return true\n    }\n    if n == (x * x\
    \ * (x * x)) {\n        return true\n    }\n    return false", '    return is_power_of_two(x)
    && is_power_of_two(n) && is_power_of_two(n*x)', '    return x == n ** Int(x)',
  '    return x == pow(x, n)', "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n == 0 {\n        return false\n    }\n    if n == 2 {\n      \
    \  return is_simple_power(x, n-1)\n    }\n    if n == 3 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 4 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 5 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 6\
    \ {\n        return is_simple_power(x, n-1)\n    }\n    if n == 7 {\n        return\
    \ is_simple_power(x, n-1)\n    }\n    if n == 8 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 9 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 10 {\n        return is_simple_power(x, n-1)\n    }\n    if n ==\
    \ 11 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 12 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    if n == 13 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 14 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 15 {\n        return is_simple_power(x, n-1)\n    }\n    if n ==\
    \ 16 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 17 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    if n == 18 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 19 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 20 {\n        return is_simple_power(x, n-1)\n    }\n    if n ==\
    \ 21 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 22 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    if n == 23 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 24 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 25 {\n        return is_simple_power(x, n-1)\n    }\n    if n ==\
    \ 26 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 27 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    if n == 28 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 29 {\n        return is_simple_power(x, n-1)\n    }\n\
    \    if n == 30 {\n        return is_simple_power(x, n-1)\n    }\n    if n ==\
    \ 31 {\n        return is_simple_power(x, n-1)\n    }\n    if n == 32 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    if n == 33 {\n        return is_simple_power(x,\
    \ n-1)\n", "    if x == 1 {\n        return true\n    }\n    if x == n {\n   \
    \     return true\n    }\n    if n%x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", "    if n == 1 {\n        return true\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n \
    \   }\n    return false", '    return x == n**x', "    if n == 1 {\n        return\
    \ true\n    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n\
    \        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", '    return is_simple_power_helper(x, n, 0)',
  "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % x == 0 {\n   \
    \     return is_simple_power(x, n-1)\n    }\n    return false", "    guard n >\
    \ 0 else { return false }\n    guard x > 0 else { return false }\n    guard x\
    \ != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }\n    guard x != n else { return false }\n    guard\
    \ x != n else { return false }", '    return is_simple_power_impl(x, n)', "  \
    \  guard n > 0 else { return false }\n    guard x == n else { return false }\n\
    \    guard n == 1 || (x & (n - 1)) == 0 else {\n        return false\n    }\n\
    \    return true", "    if x == 1 {\n        return true\n    }\n    if x == n\
    \ {\n        return true\n    }\n    if n <= 1 {\n        return false\n    }\n\
    \    if n % 2 == 0 {\n        return is_simple_power(x, n / 2)\n    }\n    return\
    \ is_simple_power(x, n / 2) || is_simple_power(x, n / 3)", "    var result = true\n\
    \    for _ in 0..<n {\n        if x%n == 0 {\n            result = false\n   \
    \         break\n        }\n        x /= n\n    }\n    return result", "    if\
    \ n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % x == 0 {\n   \
    \     return is_simple_power(x, n-1)\n    }\n    return false", '    return x
    == n ** Int(x)', "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n\
    \        return false\n    }\n    if x == 1 {\n        return true\n    }\n  \
    \  if x == 0 {\n        return false\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x % n == 0 {\n        return is_simple_power(x / n, n)\n    }\n\
    \    return false", "    if x == 1 {\n        return true\n    }\n    if n ==\
    \ 1 {\n        return true\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ 2)\n    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n  \
    \  if n == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n\
    \        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return\
    \ is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ 7)\n    }\n    if n == 8 {\n        return is_simple_power(x, 8)\n    }\n  \
    \  if n == 9 {\n        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n\
    \        return is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return\
    \ is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ 12)\n    }\n    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n\
    \    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n    if n == 15\
    \ {\n        return is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ 17)\n    }\n    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n\
    \    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n    if n == 20\
    \ {\n        return is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return\
    \ is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ 22)\n    }\n    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n\
    \    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n    if n == 25\
    \ {\n        return is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return\
    \ is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return is_simple_power(x,\
    \ 27)\n    }\n    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n\
    \    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n    if n == 30\
    \ {\n        return is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return\
    \ is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return is_simple_power(x,\
    \ 32)\n    }\n    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n\
    \    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n    if n == 35\
    \ {\n        return is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return\
    \ is_simple_power(x, 36", "    if n == 1 {\n        return true\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if x == n {\n      \
    \  return true\n    }\n    if x % n == 0 {\n        return is_simple_power(x /\
    \ n, n)\n    }\n    return false", "    if x == 1 {\n        return true\n   \
    \ }\n    if n == 1 {\n        return true\n    }\n    if n == 2 {\n        return\
    \ is_simple_power(x, 2)\n    }\n    if n == 3 {\n        return is_simple_power(x,\
    \ 3)\n    }\n    if n == 4 {\n        return is_simple_power(x, 4)\n    }\n  \
    \  if n == 5 {\n        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n\
    \        return is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return\
    \ is_simple_power(x, 7)\n    }\n    if n == 8 {\n        return is_simple_power(x,\
    \ 8)\n    }\n    if n == 9 {\n        return is_simple_power(x, 9)\n    }\n  \
    \  if n == 10 {\n        return is_simple_power(x, 10)\n    }\n    if n == 11\
    \ {\n        return is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return\
    \ is_simple_power(x, 12)\n    }\n    if n == 13 {\n        return is_simple_power(x,\
    \ 13)\n    }\n    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n\
    \    if n == 15 {\n        return is_simple_power(x, 15)\n    }\n    if n == 16\
    \ {\n        return is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return\
    \ is_simple_power(x, 17)\n    }\n    if n == 18 {\n        return is_simple_power(x,\
    \ 18)\n    }\n    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n\
    \    if n == 20 {\n        return is_simple_power(x, 20)\n    }\n    if n == 21\
    \ {\n        return is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return\
    \ is_simple_power(x, 22)\n    }\n    if n == 23 {\n        return is_simple_power(x,\
    \ 23)\n    }\n    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n\
    \    if n == 25 {\n        return is_simple_power(x, 25)\n    }\n    if n == 26\
    \ {\n        return is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return\
    \ is_simple_power(x, 27)\n    }\n    if n == 28 {\n        return is_simple_power(x,\
    \ 28)\n    }\n    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n\
    \    if n == 30 {\n        return is_simple_power(x, 30)\n    }\n    if n == 31\
    \ {\n        return is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return\
    \ is_simple_power(x, 32)\n    }\n    if n == 33 {\n        return is_simple_power(x,\
    \ 33)\n    }\n    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n\
    \    if n == 35 {\n        return is_simple_power(x, 35)\n    }\n    if n == 36\
    \ {\n        return is_simple_power(x, 36", '    return is_simple_power_impl(x,
    n)', "    var result = true\n    for _ in 0..<n {\n        if x == n ** Int(x)\
    \ {\n            result = false\n            break\n        }\n    }\n    return\
    \ result", '    return x == n ** Int(x)', "    if n == 1 {\n        return true\n\
    \    }\n    if n == 0 {\n        return false\n    }\n    if x == 1 {\n      \
    \  return true\n    }\n    if x == 0 {\n        return false\n    }\n    if x\
    \ == n {\n        return true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return is_simple_power(x, n/2)", "    if x == 1 {\n       \
    \ return true\n    }\n    if x == n {\n        return true\n    }\n    if n ==\
    \ 1 {\n        return false\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    if n == 3 {\n        return is_simple_power(x, n-2) || is_simple_power(x,\
    \ n-2)\n    }\n    if n == 4 {\n        return is_simple_power(x, n-3) || is_simple_power(x,\
    \ n-3) || is_simple_power(x, n-3)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ n-4) || is_simple_power(x, n-4) || is_simple_power(x, n-4) || is_simple_power(x,\
    \ n-4)\n    }\n    if n == 6 {\n        return is_simple_power(x, n-5) || is_simple_power(x,\
    \ n-5) || is_simple_power(x, n-5) || is_simple_power(x, n-5) || is_simple_power(x,\
    \ n-5)\n    }\n    if n == 7 {\n        return is_simple_power(x, n-6) || is_simple_power(x,\
    \ n-6) || is_simple_power(x, n-6) || is_simple_power(x, n-6) || is_simple_power(x,\
    \ n-6)\n    }\n    if n == 8 {\n        return is_simple_power(x, n-7) || is_simple_power(x,\
    \ n-7) || is_simple_power(x, n-7) || is_simple_power(x, n-7) || is_simple_power(x,\
    \ n-7)\n    }\n    if n == 9 {\n        return is_simple_power(x, n-8) || is_simple_power(x,\
    \ n-8) || is_simple_power(x, n-8) || is_simple_power(x, n-8) || is_simple_power(x,\
    \ n-8)\n    }\n    if n == 10 {\n        return is_simple_power(x, n-9) || is_simple_power(x,\
    \ n-9) || is_simple_power(x, n-9) || is_simple_power(x, n-9) || is_simple_power(x,\
    \ n-9)\n    }\n    if n == 11 {\n        return is_simple_power(x, n-10) || is_simple_power(x,\
    \ n-10) || is_simple_power(x, n-10) || is_simple_power(x, n-10) || is_simple_power(x,\
    \ n-10)\n    }\n    if n == 12 {\n        return is_simple_power(x, n-11) || is_simple_power(x,\
    \ n-11) || is_simple_power(x, n-11) || is_simple_power(x, n-11) || is_simple_power(x,\
    \ n-11)\n    }\n    if n == 13 {\n        return is_simple_power(x, n-12) || is_simple_power(x,\
    \ n-12) || is_simple_power(x, n-12) || is_simple_power(x, n-12) || is_simple_power(x,\
    \ n-12)\n    }\n    if n == 14 {\n        return is_simple_power(x, n-13) || is_simple_power(x,\
    \ n-13) || is_simple_power(x, n-13) || is_simple_power(x, n-13) || is_simple_power(x, ",
  '    return is_simple_power_impl(x, n)', '    return is_simple_power_impl(x, n)',
  "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n        return false\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    if x == 0 {\n       \
    \ return false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return is_simple_power(x, n/2) * is_simple_power(x, n-1)",
  '    return x == n ** int(x)', '    return x == n ** x', '    return is_simple_power_helper(x,
    n, 0)', "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n      \
    \  return false\n    }\n    if x == 1 {\n        return true\n    }\n    if x\
    \ == 0 {\n        return false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n / 2)\n    }\n    return is_simple_power(x, n / 2) || is_simple_power(x, n\
    \ / 2)", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n     \
    \   return true\n    }\n    if n%2 == 0 {\n        return is_simple_power(x, n/2)\n\
    \    }\n    return is_simple_power(x, n-1)", '    return x == n ** Int(x)', " \
    \   if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n//x)\n    }\n\
    \    return false", "    if n == 1 {\n        return true\n    }\n    if n ==\
    \ 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n   \
    \ }\n    if x == 0 {\n        return false\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if x % n == 0 {\n        return is_simple_power(x / n, n)\n\
    \    }\n    return false", "    if x == 1 {\n        return true\n    }\n    if\
    \ x == n {\n        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", "    if n == 1 {\n        return true\n    }\n\
    \    if n == 0 {\n        return false\n    }\n    if x == 1 {\n        return\
    \ true\n    }\n    if x == 0 {\n        return false\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x % n == 0 {\n        return is_simple_power(x\
    \ / n, n)\n    }\n    return false", "    if x == 1 {\n        return true\n \
    \   }\n    if n == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if x == n ** 2 {\n        return true\n    }\n    if x == n\
    \ ** 3 {\n        return true\n    }\n    if x == n ** 4 {\n        return true\n\
    \    }\n    if x == n ** 5 {\n        return true\n    }\n    if x == n ** 6 {\n\
    \        return true\n    }\n    if x == n ** 7 {\n        return true\n    }\n\
    \    if x == n ** 8 {\n        return true\n    }\n    if x == n ** 9 {\n    \
    \    return true\n    }\n    if x == n ** 10 {\n        return true\n    }\n \
    \   if x == n ** 11 {\n        return true\n    }\n    if x == n ** 12 {\n   \
    \     return true\n    }\n    if x == n ** 13 {\n        return true\n    }\n\
    \    if x == n ** 14 {\n        return true\n    }\n    if x == n ** 15 {\n  \
    \      return true\n    }\n    if x == n ** 16 {\n        return true\n    }\n\
    \    if x == n ** 17 {\n        return true\n    }\n    if x == n ** 18 {\n  \
    \      return true\n    }\n    if x == n ** 19 {\n        return true\n    }\n\
    \    if x == n ** 20 {\n        return true\n    }\n    if x == n ** 21 {\n  \
    \      return true\n    }\n    if x == n ** 22 {\n        return true\n    }\n\
    \    if x == n ** 23 {\n        return true\n    }\n    if x == n ** 24 {\n  \
    \      return true\n    }\n    if x == n ** 25 {\n        return true\n    }\n\
    \    if x == n ** 26 {\n        return true\n    }\n    if x == n ** 27 {\n  \
    \      return true\n    }\n    if x == n ** 28 {\n        return true\n    }\n\
    \    if x == n ** 29 {\n        return true\n    }\n    if x == n ** 30 {\n  \
    \      return true\n    }\n    if x == n ** 31 {\n        return true\n    }\n\
    \    if x == n ** 32 {\n        return true\n    }\n    if x == n ** 33 {\n  \
    \      return true\n    }\n    if x == n ** 34 {\n        return true\n    }\n\
    \    if x == n ** 35 {\n        return true\n    }\n    if x == n ** 36 {\n  \
    \      return true\n    }\n    if x == n ** 37 {\n        return true\n    }\n\
    \    if x == n ** 38 {\n        return true\n    }\n    if x == n ** 39 {\n  \
    \      return true\n    }\n    if x == n ** 40 {\n        return true\n    }\n\
    \    if x == n ** 41 {\n        return true\n    }\n    if x == n ** 42 {\n",
  "    if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n <= 1 {\n        return false\n    }\n    if n % 2 == 0 {\n  \
    \      return is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n/2)",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2)\n    }\n\
    \    return is_simple_power(x, n / 2) && is_simple_power(x, n - 1)", "    if n\
    \ == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n \
    \   }\n    if x == n {\n        return true\n    }\n    if n % x == 0 {\n    \
    \    return is_simple_power(x, n-1)\n    } else {\n        return false\n    }",
  "    if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", "    guard n > 0 else { return false }\n    guard x == 0 ||\
    \ x == 1 || (x & (x - 1)) == 0 else {\n        return false\n    }\n    return\
    \ true", "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n     \
    \   return true\n    }\n    if x == n {\n        return true\n    }\n    if n\
    \ % 2 == 0 {\n        return is_simple_power(x, n/2)\n    }\n    return false",
  "    guard n > 0 else { return false }\n    guard x < n else { return false }\n\
    \    guard n == 1 || x == n else { return false }\n    guard n == 2 || x == n\
    \ / 2 else { return false }\n    guard n == 3 || x == n / 3 else { return false\
    \ }\n    guard n == 4 || x == n / 4 else { return false }\n    guard n == 5 ||\
    \ x == n / 5 else { return false }\n    guard n == 6 || x == n / 6 else { return\
    \ false }\n    guard n == 7 || x == n / 7 else { return false }\n    guard n ==\
    \ 8 || x == n / 8 else { return false }\n    guard n == 9 || x == n / 9 else {\
    \ return false }\n    guard n == 10 || x == n / 10 else { return false }\n   \
    \ guard n == 11 || x == n / 11 else { return false }\n    guard n == 12 || x ==\
    \ n / 12 else { return false }\n    guard n == 13 || x == n / 13 else { return\
    \ false }\n    guard n == 14 || x == n / 14 else { return false }\n    guard n\
    \ == 15 || x == n / 15 else { return false }\n    guard n == 16 || x == n / 16\
    \ else { return false }\n    guard n == 17 || x == n / 17 else { return false\
    \ }\n    guard n == 18 || x == n / 18 else { return false }\n    guard n == 19\
    \ || x == n / 19 else { return false }\n    guard n == 20 || x == n / 20 else\
    \ { return false }\n    guard n == 21 || x == n / 21 else { return false }\n \
    \   guard n == 22 || x == n / 22 else { return false }\n    guard n == 23 || x\
    \ == n / 23 else { return false }\n    guard n == 24 || x == n / 24 else { return\
    \ false }\n    guard n == 25 || x == n / 25 else { return false }\n    guard n\
    \ == 26 || x == n / 26 else { return false }\n    guard n == 27 || x == n / 27\
    \ else { return false }\n    guard n == 28 || x == n / 28 else { return false\
    \ }\n    guard n == 29 || x == n / 29 else { return false }\n    guard n == 30\
    \ || x == n / 30 else { return false }\n    guard n == 31 || x == n / 31 else\
    \ { return false }\n    guard n == 32 || x == n / 32 else { return false }\n \
    \   guard n == 33 || x == n / 33 else { return false }\n    ", "    if n == 1\
    \ {\n        return true\n    }\n    if n == 0 {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == 0 {\n        return\
    \ false\n    }\n    if x == n {\n        return true\n    }\n    if x % n == 0\
    \ {\n        return is_simple_power(x / n, n)\n    }\n    return false", '    return
    is_simple_power_impl(x, n)', "    if n == 1 {\n        return true\n    }\n  \
    \  if x == 1 {\n        return true\n    }\n    if n == 0 {\n        return false\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if n == x {\n      \
    \  return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n/x) == 0\n    }\n    return false", '    return is_simple_power_impl(x, n)',
  '    return x == n ** Int(x)', "    var result = true\n    for _ in 0..<n {\n  \
    \      if x == n ** Int(x) {\n            result = false\n            break\n\
    \        }\n    }\n    return result", "    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % x == 0 {\n   \
    \     return is_simple_power(x, n/x+1)\n    }\n    return false", '    return
    x == n ** Int(x)', "    if n == 1 {\n        return true\n    }\n    if n == 0\
    \ {\n        return false\n    }\n    if x == 1 {\n        return true\n    }\n\
    \    if x == 0 {\n        return false\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n/2) * is_simple_power(x,\
    \ n-1)", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n     \
    \   return true\n    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n\
    \    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n\
    \ == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n     \
    \   return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return is_simple_power(x,\
    \ 6)\n    }\n    if n == 7 {\n        return is_simple_power(x, 7)\n    }\n  \
    \  if n == 8 {\n        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n\
    \        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return\
    \ is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return is_simple_power(x,\
    \ 11)\n    }\n    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n\
    \    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n    if n == 14\
    \ {\n        return is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return\
    \ is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return is_simple_power(x,\
    \ 16)\n    }\n    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n\
    \    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n    if n == 19\
    \ {\n        return is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return\
    \ is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return is_simple_power(x,\
    \ 21)\n    }\n    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n\
    \    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n    if n == 24\
    \ {\n        return is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return\
    \ is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return is_simple_power(x,\
    \ 26)\n    }\n    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n\
    \    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n    if n == 29\
    \ {\n        return is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return\
    \ is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return is_simple_power(x,\
    \ 31)\n    }\n    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n\
    \    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n    if n == 34\
    \ {\n        return is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return\
    \ is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return is_simple_power(x,\
    \ 36", '    return x == (n**x)', '    return x == n ** Int(x)', "    if n == 1\
    \ {\n        return true\n    }\n    if n == 0 {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == 0 {\n        return\
    \ false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n//2)\n\
    \    }\n    return is_simple_power(x, n-1)", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return true\n    }\n    if n%2 == 0 {\n\
    \        return is_simple_power(x, n/2)\n    }\n    if n%3 == 0 {\n        return\
    \ is_simple_power(x, n/3)\n    }\n    if n%5 == 0 {\n        return is_simple_power(x,\
    \ n/5)\n    }\n    return false", "    if x == 1 {\n        return true\n    }\n\
    \    if x == n {\n        return true\n    }\n    if n <= 1 {\n        return\
    \ false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n//2)\n\
    \    }\n    return is_simple_power(x, n-1)", "    if n == 1 {\n        return\
    \ true\n    }\n    if n == 0 {\n        return false\n    }\n    if n % 2 == 0\
    \ {\n        return is_simple_power(x, n / 2)\n    }\n    return is_simple_power(x\
    \ * x, n / 2)", "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n\
    \        return true\n    }\n    if x == n {\n        return true\n    }\n   \
    \ if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", "    guard n >= 1 else {\n        return false\n    }\n   \
    \ guard x != 0 else {\n        return false\n    }\n    var result = true\n  \
    \  var power = 1\n    while n > 1 {\n        if n % power == 0 {\n           \
    \ result = false\n            break\n        }\n        power = power * 2\n  \
    \      n = n / 2\n    }\n    return result", "    if n == 1 {\n        return\
    \ true\n    }\n    if n == 0 {\n        return false\n    }\n    if x == 1 {\n\
    \        return true\n    }\n    if x == 0 {\n        return false\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if x % n == 0 {\n        return\
    \ is_simple_power(x / n, n)\n    }\n    return false", '    return is_simple_power_impl(x,
    n)', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0\
    \ {\n        return is_simple_power(x, n / 2)\n    }\n    return false", "   \
    \ if n == 1 {\n        return true\n    }\n    if n == 2 {\n        return true\n\
    \    }\n    if n == 3 {\n        return true\n    }\n    if n == 4 {\n       \
    \ return true\n    }\n    if n == 5 {\n        return true\n    }\n    if n ==\
    \ 6 {\n        return true\n    }\n    if n == 7 {\n        return true\n    }\n\
    \    if n == 8 {\n        return true\n    }\n    if n == 9 {\n        return\
    \ true\n    }\n    if n == 10 {\n        return true\n    }\n    if n == 11 {\n\
    \        return true\n    }\n    if n == 12 {\n        return true\n    }\n  \
    \  if n == 13 {\n        return true\n    }\n    if n == 14 {\n        return\
    \ true\n    }\n    if n == 15 {\n        return true\n    }\n    if n == 16 {\n\
    \        return true\n    }\n    if n == 17 {\n        return true\n    }\n  \
    \  if n == 18 {\n        return true\n    }\n    if n == 19 {\n        return\
    \ true\n    }\n    if n == 20 {\n        return true\n    }\n    if n == 21 {\n\
    \        return true\n    }\n    if n == 22 {\n        return true\n    }\n  \
    \  if n == 23 {\n        return true\n    }\n    if n == 24 {\n        return\
    \ true\n    }\n    if n == 25 {\n        return true\n    }\n    if n == 26 {\n\
    \        return true\n    }\n    if n == 27 {\n        return true\n    }\n  \
    \  if n == 28 {\n        return true\n    }\n    if n == 29 {\n        return\
    \ true\n    }\n    if n == 30 {\n        return true\n    }\n    if n == 31 {\n\
    \        return true\n    }\n    if n == 32 {\n        return true\n    }\n  \
    \  if n == 33 {\n        return true\n    }\n    if n == 34 {\n        return\
    \ true\n    }\n    if n == 35 {\n        return true\n    }\n    if n == 36 {\n\
    \        return true\n    }\n    if n == 37 {\n        return true\n    }\n  \
    \  if n == 38 {\n        return true\n    }\n    if n == 39 {\n        return\
    \ true\n    }\n    if n == 40 {\n        return true\n    }\n    if n == 41 {\n\
    \        return true\n    }\n    if n == 42 {\n        return true\n    }\n  \
    \  if n == 43 {\n        return true\n    }\n    if n == 44 {\n        return\
    \ true\n    }\n    if n == 45 {\n        return true\n    }\n    if n == 46 {\n\
    \        return true\n    }\n    if n == 47 {\n        return true\n    }\n  \
    \  if n == 48 {\n        return true\n    }\n    if n == 49 {\n        return\
    \ true\n    }\n    if n == 50 {\n        return true\n    }\n    if n == 51 {\n\
    \        return true\n    }\n    if n == 52 {\n        return ", "    if x ==\
    \ 1 {\n        return true\n    }\n    if x == n {\n        return true\n    }\n\
    \    if n % x == 0 {\n        return is_simple_power(x, n//x)\n    } else {\n\
    \        return false\n    }", "    if n == 1 {\n        return true\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n \
    \   }\n    return false", "    if n == 1 {\n        return true\n    }\n    if\
    \ x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n    }\n \
    \   return false", '    return is_simple_power_impl(x, n)', "    guard n >= 1\
    \ else {\n        return false\n    }\n    var result = true\n    var power =\
    \ 1\n    while n > power {\n        power = power * n\n        result = result\
    \ && (power == x)\n    }\n    return result", "    if x == 1 {\n        return\
    \ true\n    }\n    if x == n {\n        return true\n    }\n    if n % x == 0\
    \ {\n        return is_simple_power(x, n-1)\n    }\n    return false", "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n   \
    \     return is_simple_power(x, n/2)\n    }\n    return false", '    return is_simple_power_impl(x,
    n)', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n\
    \    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n\
    \        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return\
    \ is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return is_simple_power(x,\
    \ 6)\n    }\n    if n == 7 {\n        return is_simple_power(x, 7)\n    }\n  \
    \  if n == 8 {\n        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n\
    \        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return\
    \ is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return is_simple_power(x,\
    \ 11)\n    }\n    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n\
    \    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n    if n == 14\
    \ {\n        return is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return\
    \ is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return is_simple_power(x,\
    \ 16)\n    }\n    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n\
    \    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n    if n == 19\
    \ {\n        return is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return\
    \ is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return is_simple_power(x,\
    \ 21)\n    }\n    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n\
    \    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n    if n == 24\
    \ {\n        return is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return\
    \ is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return is_simple_power(x,\
    \ 26)\n    }\n    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n\
    \    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n    if n == 29\
    \ {\n        return is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return\
    \ is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return is_simple_power(x,\
    \ 31)\n    }\n    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n\
    \    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n    if n == 34\
    \ {\n        return is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return\
    \ is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return is_simple_power(x,\
    \ 36", "    var result = true\n    var power = 1\n    while n > 0 {\n        if\
    \ x % n == 0 {\n            result = false\n            break\n        }\n   \
    \     power *= n\n        x /= n\n    }\n    return result", "    if x == 1 {\n\
    \        return true\n    }\n    if x == n {\n        return true\n    }\n   \
    \ if n < 0 {\n        return false\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n == 0 {\n        return false\n    }\n    if n == 2 {\n      \
    \  return is_simple_power(x, n-1)\n    }\n    if n == 3 {\n        return is_simple_power(x,\
    \ n-2) || is_simple_power(x, n-2)\n    }\n    if n == 4 {\n        return is_simple_power(x,\
    \ n-3) || is_simple_power(x, n-3)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ n-4) || is_simple_power(x, n-4)\n    }\n    if n == 6 {\n        return is_simple_power(x,\
    \ n-5) || is_simple_power(x, n-5)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ n-6) || is_simple_power(x, n-6)\n    }\n    if n == 8 {\n        return is_simple_power(x,\
    \ n-7) || is_simple_power(x, n-7)\n    }\n    if n == 9 {\n        return is_simple_power(x,\
    \ n-8) || is_simple_power(x, n-8)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ n-9) || is_simple_power(x, n-9)\n    }\n    if n == 11 {\n        return is_simple_power(x,\
    \ n-10) || is_simple_power(x, n-10)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ n-11) || is_simple_power(x, n-11)\n    }\n    if n == 13 {\n        return is_simple_power(x,\
    \ n-12) || is_simple_power(x, n-12)\n    }\n    if n == 14 {\n        return is_simple_power(x,\
    \ n-13) || is_simple_power(x, n-13)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ n-14) || is_simple_power(x, n-14)\n    }\n    if n == 16 {\n        return is_simple_power(x,\
    \ n-15) || is_simple_power(x, n-15)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ n-16) || is_simple_power(x, n-16)\n    }\n    if n == 18 {\n        return is_simple_power(x,\
    \ n-17) || is_simple_power(x, n-17)\n    }\n    if n == 19 {\n        return is_simple_power(x,\
    \ n-18) || is_simple_power(x, n-18)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ n-19) || is_simple_power(x, n-19)\n    }\n    if n == 21 {\n        return is_simple_power(x,\
    \ n-20) || is_simple_power(x, n-20)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ n-21) || is_simple_power(x, n-21)\n    }\n    if n == 23 {\n        return is_simple_",
  '    return x == n ** Int(x)', "    if x == 1 {\n        return true\n    }\n  \
    \  if n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x == n*n*n {\n        return true\n    }\n    return false", " \
    \   if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n   \
    \     return is_simple_power(x, n/2)\n    }\n    return false", "    if n == 1\
    \ {\n        return true\n    }\n    if n == 0 {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == 0 {\n        return\
    \ false\n    }\n    if x == n {\n        return true\n    }\n    if x == n+1 {\n\
    \        return true\n    }\n    if x == n-1 {\n        return true\n    }\n \
    \   if x == n+2 {\n        return true\n    }\n    if x == n+3 {\n        return\
    \ true\n    }\n    if x == n+4 {\n        return true\n    }\n    if x == n+5\
    \ {\n        return true\n    }\n    if x == n+6 {\n        return true\n    }\n\
    \    if x == n+7 {\n        return true\n    }\n    if x == n+8 {\n        return\
    \ true\n    }\n    if x == n+9 {\n        return true\n    }\n    if x == n+10\
    \ {\n        return true\n    }\n    if x == n+11 {\n        return true\n   \
    \ }\n    if x == n+12 {\n        return true\n    }\n    if x == n+13 {\n    \
    \    return true\n    }\n    if x == n+14 {\n        return true\n    }\n    if\
    \ x == n+15 {\n        return true\n    }\n    if x == n+16 {\n        return\
    \ true\n    }\n    if x == n+17 {\n        return true\n    }\n    if x == n+18\
    \ {\n        return true\n    }\n    if x == n+19 {\n        return true\n   \
    \ }\n    if x == n+20 {\n        return true\n    }\n    if x == n+21 {\n    \
    \    return true\n    }\n    if x == n+22 {\n        return true\n    }\n    if\
    \ x == n+23 {\n        return true\n    }\n    if x == n+24 {\n        return\
    \ true\n    }\n    if x == n+25 {\n        return true\n    }\n    if x == n+26\
    \ {\n        return true\n    }\n    if x == n+27 {\n        return true\n   \
    \ }\n    if x == n+28 {\n        return true\n    }\n    if x == n+29 {\n    \
    \    return true\n    }\n    if x == n+30 {\n        return true\n    }\n    if\
    \ x == n+31 {\n        return true\n    }\n    if x == n+32 {\n        return\
    \ true\n    }\n    if x == n+33 {\n        return true\n    }\n    if x == n+34\
    \ {\n        return true\n    }\n    if x == n+35 {\n        return true\n   \
    \ }\n    if x == n+36 {\n        return true\n    }\n    if x == n+37 {\n    \
    \    return true\n    }\n    if x == n+38 {\n        return true\n    }\n    if\
    \ x == n+", '    return is_simple_power_impl(x, n)', '    return x == n ** Int(x)',
  "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % x == 0 {\n   \
    \     return is_simple_power(x, n-1)\n    }\n    return false", "    if x == 1\
    \ {\n        return true\n    }\n    if n == 1 {\n        return true\n    }\n\
    \    if x == n {\n        return true\n    }\n    if x % n == 0 {\n        return\
    \ is_simple_power(x / n, n)\n    }\n    return false", "    if n == 1 {\n    \
    \    return true\n    }\n    if x == 1 {\n        return true\n    }\n    if x\
    \ == n {\n        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", '    return is_simple_power_impl(x, n)', " \
    \   if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n\
    \ == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n     \
    \   return is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", '    return
    is_simple_power_impl(x, n)', "    if n == 1 {\n        return true\n    }\n  \
    \  if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n/x+1)\n    }\n\
    \    return false", '    return is_simple_power_impl(x, n)', "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return true\n    }\n   \
    \ if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n == 3 {\n\
    \        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n        return\
    \ is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", "    if\
    \ n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n   \
    \     return is_simple_power(x, n/2)\n    }\n    return false", "    if x == 1\
    \ {\n        return true\n    }\n    if n == 1 {\n        return true\n    }\n\
    \    if n == 2 {\n        return true\n    }\n    if n == 3 {\n        return\
    \ true\n    }\n    if n == 4 {\n        return true\n    }\n    if n == 5 {\n\
    \        return true\n    }\n    if n == 6 {\n        return true\n    }\n   \
    \ if n == 7 {\n        return true\n    }\n    if n == 8 {\n        return true\n\
    \    }\n    if n == 9 {\n        return true\n    }\n    if n == 10 {\n      \
    \  return true\n    }\n    if n == 11 {\n        return true\n    }\n    if n\
    \ == 12 {\n        return true\n    }\n    if n == 13 {\n        return true\n\
    \    }\n    if n == 14 {\n        return true\n    }\n    if n == 15 {\n     \
    \   return true\n    }\n    if n == 16 {\n        return true\n    }\n    if n\
    \ == 17 {\n        return true\n    }\n    if n == 18 {\n        return true\n\
    \    }\n    if n == 19 {\n        return true\n    }\n    if n == 20 {\n     \
    \   return true\n    }\n    if n == 21 {\n        return true\n    }\n    if n\
    \ == 22 {\n        return true\n    }\n    if n == 23 {\n        return true\n\
    \    }\n    if n == 24 {\n        return true\n    }\n    if n == 25 {\n     \
    \   return true\n    }\n    if n == 26 {\n        return true\n    }\n    if n\
    \ == 27 {\n        return true\n    }\n    if n == 28 {\n        return true\n\
    \    }\n    if n == 29 {\n        return true\n    }\n    if n == 30 {\n     \
    \   return true\n    }\n    if n == 31 {\n        return true\n    }\n    if n\
    \ == 32 {\n        return true\n    }\n    if n == 33 {\n        return true\n\
    \    }\n    if n == 34 {\n        return true\n    }\n    if n == 35 {\n     \
    \   return true\n    }\n    if n == 36 {\n        return true\n    }\n    if n\
    \ == 37 {\n        return true\n    }\n    if n == 38 {\n        return true\n\
    \    }\n    if n == 39 {\n        return true\n    }\n    if n == 40 {\n     \
    \   return true\n    }\n    if n == 41 {\n        return true\n    }\n    if n\
    \ == 42 {\n        return true\n    }\n    if n == 43 {\n        return true\n\
    \    }\n    if n == 44 {\n        return true\n    }\n    if n == 45 {\n     \
    \   return true\n    }\n    if n == 46 {\n        return true\n    }\n    if n\
    \ == 47 {\n        return true\n    }\n    if n == 48 {\n        return true\n\
    \    }\n    if n == 49 {\n        return true\n    }\n    if n == 50 {\n     \
    \   return true\n    }\n    if n == 51 {\n        return true", '    return x
    == n**x', "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n    \
    \    return false\n    }\n    if x == 0 {\n        return false\n    }\n    if\
    \ x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n    }\n \
    \   return is_simple_power(x, n-1)", "    if n == 1 {\n        return true\n \
    \   }\n    if n == 0 {\n        return false\n    }\n    if x == 1 {\n       \
    \ return true\n    }\n    if x == 0 {\n        return false\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return is_simple_power(x, n-1)", "    if x == 1 {\n       \
    \ return true\n    }\n    if x == n {\n        return true\n    }\n    if n ==\
    \ 1 {\n        return false\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ 3)\n    }\n    if n == 3 {\n        return is_simple_power(x, 5)\n    }\n  \
    \  if n == 4 {\n        return is_simple_power(x, 7)\n    }\n    if n == 5 {\n\
    \        return is_simple_power(x, 9)\n    }\n    if n == 6 {\n        return\
    \ is_simple_power(x, 11)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ 13)\n    }\n    if n == 8 {\n        return is_simple_power(x, 15)\n    }\n\
    \    if n == 9 {\n        return is_simple_power(x, 17)\n    }\n    if n == 10\
    \ {\n        return is_simple_power(x, 19)\n    }\n    if n == 11 {\n        return\
    \ is_simple_power(x, 21)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ 23)\n    }\n    if n == 13 {\n        return is_simple_power(x, 25)\n    }\n\
    \    if n == 14 {\n        return is_simple_power(x, 27)\n    }\n    if n == 15\
    \ {\n        return is_simple_power(x, 29)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, 31)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ 33)\n    }\n    if n == 18 {\n        return is_simple_power(x, 35)\n    }\n\
    \    if n == 19 {\n        return is_simple_power(x, 37)\n    }\n    if n == 20\
    \ {\n        return is_simple_power(x, 39)\n    }\n    if n == 21 {\n        return\
    \ is_simple_power(x, 41)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ 43)\n    }\n    if n == 23 {\n        return is_simple_power(x, 45)\n    }\n\
    \    if n == 24 {\n        return is_simple_power(x, 47)\n    }\n    if n == 25\
    \ {\n        return is_simple_power(x, 49)\n    }\n    if n == 26 {\n        return\
    \ is_simple_power(x, 51)\n    }\n    if n == 27 {\n        return is_simple_power(x,\
    \ 53)\n    }\n    if n == 28 {\n        return is_simple_power(x, 55)\n    }\n\
    \    if n == 29 {\n        return is_simple_power(x, 57)\n    }\n    if n == 30\
    \ {\n        return is_simple_power(x, 59)\n    }\n    if n == 31 {\n        return\
    \ is_simple_power(x, 61)\n    }\n    if n == 32 {\n        return is_simple_power(x,\
    \ 63)\n    }\n    if n == 33 {\n        return is_simple_power(x, 65)\n    }\n\
    \    if n == 34 {\n        return is_simple_power(x, 67)\n    }\n    if n == 35",
  "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x % n == 0 {\n   \
    \     return is_simple_power(x / n, n)\n    }\n    return false", "    if x ==\
    \ 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n    }\n\
    \    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n == 3 {\n\
    \        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n        return\
    \ is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", '    return
    x == n ** Int(x)', "    if n == 1 {\n        return true\n    }\n    if x == 1\
    \ {\n        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n/x+1)\n    }\n    return false", "    if n == 1 {\n        return true\n  \
    \  }\n    if n == 2 {\n        return true\n    }\n    if n == 3 {\n        return\
    \ true\n    }\n    if n == 4 {\n        return true\n    }\n    if n == 5 {\n\
    \        return true\n    }\n    if n == 6 {\n        return true\n    }\n   \
    \ if n == 7 {\n        return true\n    }\n    if n == 8 {\n        return true\n\
    \    }\n    if n == 9 {\n        return true\n    }\n    if n == 10 {\n      \
    \  return true\n    }\n    if n == 11 {\n        return true\n    }\n    if n\
    \ == 12 {\n        return true\n    }\n    if n == 13 {\n        return true\n\
    \    }\n    if n == 14 {\n        return true\n    }\n    if n == 15 {\n     \
    \   return true\n    }\n    if n == 16 {\n        return true\n    }\n    if n\
    \ == 17 {\n        return true\n    }\n    if n == 18 {\n        return true\n\
    \    }\n    if n == 19 {\n        return true\n    }\n    if n == 20 {\n     \
    \   return true\n    }\n    if n == 21 {\n        return true\n    }\n    if n\
    \ == 22 {\n        return true\n    }\n    if n == 23 {\n        return true\n\
    \    }\n    if n == 24 {\n        return true\n    }\n    if n == 25 {\n     \
    \   return true\n    }\n    if n == 26 {\n        return true\n    }\n    if n\
    \ == 27 {\n        return true\n    }\n    if n == 28 {\n        return true\n\
    \    }\n    if n == 29 {\n        return true\n    }\n    if n == 30 {\n     \
    \   return true\n    }\n    if n == 31 {\n        return true\n    }\n    if n\
    \ == 32 {\n        return true\n    }\n    if n == 33 {\n        return true\n\
    \    }\n    if n == 34 {\n        return true\n    }\n    if n == 35 {\n     \
    \   return true\n    }\n    if n == 36 {\n        return true\n    }\n    if n\
    \ == 37 {\n        return true\n    }\n    if n == 38 {\n        return true\n\
    \    }\n    if n == 39 {\n        return true\n    }\n    if n == 40 {\n     \
    \   return true\n    }\n    if n == 41 {\n        return true\n    }\n    if n\
    \ == 42 {\n        return true\n    }\n    if n == 43 {\n        return true\n\
    \    }\n    if n == 44 {\n        return true\n    }\n    if n == 45 {\n     \
    \   return true\n    }\n    if n == 46 {\n        return true\n    }\n    if n\
    \ == 47 {\n        return true\n    }\n    if n == 48 {\n        return true\n\
    \    }\n    if n == 49 {\n        return true\n    }\n    if n == 50 {\n     \
    \   return true\n    }\n    if n == 51 {\n        return true\n    }\n    if n\
    \ == 52 {\n        return ", '    return is_simple_power_impl(x, n)', "    guard\
    \ n > 0 else { return false }\n    guard x != 0 else { return false }\n    guard\
    \ n == x else { return false }\n    guard n == Int(pow(x, Double(n))) else { return\
    \ false }\n    return true", "    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if n % x == 0 {\n        return\
    \ is_simple_power(x, n-1)\n    }\n    return false", "    if x == 1 {\n      \
    \  return true\n    }\n    if n == 1 {\n        return true\n    }\n    if n ==\
    \ 2 {\n        return is_simple_power(x, 2)\n    }\n    if n == 3 {\n        return\
    \ is_simple_power(x, 3)\n    }\n    if n == 4 {\n        return is_simple_power(x,\
    \ 4)\n    }\n    if n == 5 {\n        return is_simple_power(x, 5)\n    }\n  \
    \  if n == 6 {\n        return is_simple_power(x, 6)\n    }\n    if n == 7 {\n\
    \        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n        return\
    \ is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return is_simple_power(x,\
    \ 9)\n    }\n    if n == 10 {\n        return is_simple_power(x, 10)\n    }\n\
    \    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n    if n == 12\
    \ {\n        return is_simple_power(x, 12)\n    }\n    if n == 13 {\n        return\
    \ is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return is_simple_power(x,\
    \ 14)\n    }\n    if n == 15 {\n        return is_simple_power(x, 15)\n    }\n\
    \    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n    if n == 17\
    \ {\n        return is_simple_power(x, 17)\n    }\n    if n == 18 {\n        return\
    \ is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return is_simple_power(x,\
    \ 19)\n    }\n    if n == 20 {\n        return is_simple_power(x, 20)\n    }\n\
    \    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n    if n == 22\
    \ {\n        return is_simple_power(x, 22)\n    }\n    if n == 23 {\n        return\
    \ is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return is_simple_power(x,\
    \ 24)\n    }\n    if n == 25 {\n        return is_simple_power(x, 25)\n    }\n\
    \    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n    if n == 27\
    \ {\n        return is_simple_power(x, 27)\n    }\n    if n == 28 {\n        return\
    \ is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return is_simple_power(x,\
    \ 29)\n    }\n    if n == 30 {\n        return is_simple_power(x, 30)\n    }\n\
    \    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n    if n == 32\
    \ {\n        return is_simple_power(x, 32)\n    }\n    if n == 33 {\n        return\
    \ is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return is_simple_power(x,\
    \ 34)\n    }\n    if n == 35 {\n        return is_simple_power(x, 35)\n    }\n\
    \    if n == 36 {\n        return is_simple_power(x, 36", '    return x == n**x',
  "    if n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if n == 0 {\n        return false\n    }\n    if x == 0 {\n      \
    \  return false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n//2)\n    }\n    return is_simple_power(x*x, n-1)", "    guard n > 0 else {\
    \ return false }\n    guard x != 0 else { return false }\n    guard n == 1 ||\
    \ x == 1 else { return false }\n    guard n == x else { return true }\n    return\
    \ is_simple_power(x, n-1)", "    if n == 1 {\n        return true\n    }\n   \
    \ if n == 2 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x % n == 0 {\n   \
    \     return true\n    }\n    return false", "    if n == 1 {\n        return\
    \ true\n    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x % n == 0 {\n        return is_simple_power(x\
    \ / n, n)\n    }\n    return false", "    var result = true\n    for _ in 0..<n\
    \ {\n        if x == n ** Int(x) {\n            result = false\n            break\n\
    \        }\n    }\n    return result", "    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n == 1 {\n       \
    \ return false\n    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n\
    \    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n\
    \ == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n     \
    \   return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return is_simple_power(x,\
    \ 6)\n    }\n    if n == 7 {\n        return is_simple_power(x, 7)\n    }\n  \
    \  if n == 8 {\n        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n\
    \        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return\
    \ is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return is_simple_power(x,\
    \ 11)\n    }\n    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n\
    \    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n    if n == 14\
    \ {\n        return is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return\
    \ is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return is_simple_power(x,\
    \ 16)\n    }\n    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n\
    \    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n    if n == 19\
    \ {\n        return is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return\
    \ is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return is_simple_power(x,\
    \ 21)\n    }\n    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n\
    \    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n    if n == 24\
    \ {\n        return is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return\
    \ is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return is_simple_power(x,\
    \ 26)\n    }\n    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n\
    \    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n    if n == 29\
    \ {\n        return is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return\
    \ is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return is_simple_power(x,\
    \ 31)\n    }\n    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n\
    \    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n    if n == 34\
    \ {\n        return is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return\
    \ is_simple_power(x, 35)\n    }\n    if ", "    guard x > 0 else {\n        return\
    \ false\n    }\n    guard n >= 1 else {\n        return false\n    }\n    if n\
    \ == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n \
    \   }\n    if x == n {\n        return true\n    }\n    if x == n^2 {\n      \
    \  return true\n    }\n    if x == n^3 {\n        return true\n    }\n    if x\
    \ == n^4 {\n        return true\n    }\n    if x == n^5 {\n        return true\n\
    \    }\n    if x == n^6 {\n        return true\n    }\n    if x == n^7 {\n   \
    \     return true\n    }\n    if x == n^8 {\n        return true\n    }\n    if\
    \ x == n^9 {\n        return true\n    }\n    if x == n^10 {\n        return true\n\
    \    }\n    if x == n^11 {\n        return true\n    }\n    if x == n^12 {\n \
    \       return true\n    }\n    if x == n^13 {\n        return true\n    }\n \
    \   if x == n^14 {\n        return true\n    }\n    if x == n^15 {\n        return\
    \ true\n    }\n    if x == n^16 {\n        return true\n    }\n    if x == n^17\
    \ {\n        return true\n    }\n    if x == n^18 {\n        return true\n   \
    \ }\n    if x == n^19 {\n        return true\n    }\n    if x == n^20 {\n    \
    \    return true\n    }\n    if x == n^21 {\n        return true\n    }\n    if\
    \ x == n^22 {\n        return true\n    }\n    if x == n^23 {\n        return\
    \ true\n    }\n    if x == n^24 {\n        return true\n    }\n    if x == n^25\
    \ {\n        return true\n    }\n    if x == n^26 {\n        return true\n   \
    \ }\n    if x == n^27 {\n        return true\n    }\n    if x == n^28 {\n    \
    \    return true\n    }\n    if x == n^29 {\n        return true\n    }\n    if\
    \ x == n^30 {\n        return true\n    }\n    if x == n^31 {\n        return\
    \ true\n    }\n    if x == n^32 {\n        return true\n    }\n    if x == n^33\
    \ {\n        return true\n    }\n    if x == n^34 {\n        return true\n   \
    \ }\n    if x == n^35 {\n        return true\n    }\n    if x == n^36 {\n    \
    \    return true\n    }\n    if x == n^37 {\n        return true\n    }\n    if\
    \ x == n^38 {\n        return true\n    }\n    if x == n^39 {\n        return\
    \ true\n    }\n    if x == n^40 {", '    return is_simple_power_impl(x, n)', '    return
    is_simple_power_impl(x, n)', "    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if n % x == 0 {\n        return\
    \ is_simple_power(x, n/x+1)\n    }\n    return false", "    if n == 1 {\n    \
    \    return true\n    }\n    if x == 1 {\n        return true\n    }\n    if x\
    \ == n {\n        return true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return false", "    if n == 1 {\n        return true\n    }\n\
    \    if n == 2 {\n        return true\n    }\n    if n == 3 {\n        return\
    \ true\n    }\n    if n == 4 {\n        return true\n    }\n    if n == 5 {\n\
    \        return true\n    }\n    if n == 6 {\n        return true\n    }\n   \
    \ if n == 7 {\n        return true\n    }\n    if n == 8 {\n        return true\n\
    \    }\n    if n == 9 {\n        return true\n    }\n    if n == 10 {\n      \
    \  return true\n    }\n    if n == 11 {\n        return true\n    }\n    if n\
    \ == 12 {\n        return true\n    }\n    if n == 13 {\n        return true\n\
    \    }\n    if n == 14 {\n        return true\n    }\n    if n == 15 {\n     \
    \   return true\n    }\n    if n == 16 {\n        return true\n    }\n    if n\
    \ == 17 {\n        return true\n    }\n    if n == 18 {\n        return true\n\
    \    }\n    if n == 19 {\n        return true\n    }\n    if n == 20 {\n     \
    \   return true\n    }\n    if n == 21 {\n        return true\n    }\n    if n\
    \ == 22 {\n        return true\n    }\n    if n == 23 {\n        return true\n\
    \    }\n    if n == 24 {\n        return true\n    }\n    if n == 25 {\n     \
    \   return true\n    }\n    if n == 26 {\n        return true\n    }\n    if n\
    \ == 27 {\n        return true\n    }\n    if n == 28 {\n        return true\n\
    \    }\n    if n == 29 {\n        return true\n    }\n    if n == 30 {\n     \
    \   return true\n    }\n    if n == 31 {\n        return true\n    }\n    if n\
    \ == 32 {\n        return true\n    }\n    if n == 33 {\n        return true\n\
    \    }\n    if n == 34 {\n        return true\n    }\n    if n == 35 {\n     \
    \   return true\n    }\n    if n == 36 {\n        return true\n    }\n    if n\
    \ == 37 {\n        return true\n    }\n    if n == 38 {\n        return true\n\
    \    }\n    if n == 39 {\n        return true\n    }\n    if n == 40 {\n     \
    \   return true\n    }\n    if n == 41 {\n        return true\n    }\n    if n\
    \ == 42 {\n        return true\n    }\n    if n == 43 {\n        return true\n\
    \    }\n    if n == 44 {\n        return true\n    }\n    if n == 45 {\n     \
    \   return true\n    }\n    if n == 46 {\n        return true\n    }\n    if n\
    \ == 47 {\n        return true\n    }\n    if n == 48 {\n        return true\n\
    \    }\n    if n == 49 {\n        return true\n    }\n    if n == 50 {\n     \
    \   return true\n    }\n    if n == 51 {\n        return true\n    }\n    if n\
    \ == 52 {\n        return ", '    return is_power_of_two(x) && is_power_of_two(n)
    && is_power_of_two(n*x)', "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return true\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ 2)\n    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n  \
    \  if n == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n\
    \        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return\
    \ is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ 7)\n    }\n    if n == 8 {\n        return is_simple_power(x, 8)\n    }\n  \
    \  if n == 9 {\n        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n\
    \        return is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return\
    \ is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ 12)\n    }\n    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n\
    \    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n    if n == 15\
    \ {\n        return is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ 17)\n    }\n    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n\
    \    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n    if n == 20\
    \ {\n        return is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return\
    \ is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ 22)\n    }\n    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n\
    \    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n    if n == 25\
    \ {\n        return is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return\
    \ is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return is_simple_power(x,\
    \ 27)\n    }\n    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n\
    \    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n    if n == 30\
    \ {\n        return is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return\
    \ is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return is_simple_power(x,\
    \ 32)\n    }\n    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n\
    \    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n    if n == 35\
    \ {\n        return is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return\
    \ is_simple_power(x, 36", "    if n == 1 {\n        return true\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if n % 2 == 0 {\n  \
    \      return is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n-1)",
  "    if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", "    if x == 1 {\n        return true\n    }\n    if n == 1\
    \ {\n        return true\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ 2)\n    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n  \
    \  if n == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n\
    \        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return\
    \ is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ 7)\n    }\n    if n == 8 {\n        return is_simple_power(x, 8)\n    }\n  \
    \  if n == 9 {\n        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n\
    \        return is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return\
    \ is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ 12)\n    }\n    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n\
    \    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n    if n == 15\
    \ {\n        return is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ 17)\n    }\n    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n\
    \    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n    if n == 20\
    \ {\n        return is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return\
    \ is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ 22)\n    }\n    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n\
    \    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n    if n == 25\
    \ {\n        return is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return\
    \ is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return is_simple_power(x,\
    \ 27)\n    }\n    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n\
    \    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n    if n == 30\
    \ {\n        return is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return\
    \ is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return is_simple_power(x,\
    \ 32)\n    }\n    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n\
    \    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n    if n == 35\
    \ {\n        return is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return\
    \ is_simple_power(x, 36", "    if x == 1 {\n        return true\n    }\n    if\
    \ x == n {\n        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", "    if n == 1 {\n        return true\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n \
    \   }\n    return false", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n    }\n \
    \   return false", "    if x == 1 {\n        return true\n    }\n    if n == 1\
    \ {\n        return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x,\
    \ n-1)\n    }\n    return false", '    return is_simple_power_impl(x, n)', " \
    \   if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x % n == 0 {\n        return is_simple_power(x / n, n)\n    }\n\
    \    return false", "    if x == 1 {\n        return true\n    }\n    if n ==\
    \ 1 {\n        return true\n    }\n    if n == 2 {\n        return is_simple_power(x,\
    \ 2)\n    }\n    if n == 3 {\n        return is_simple_power(x, 3)\n    }\n  \
    \  if n == 4 {\n        return is_simple_power(x, 4)\n    }\n    if n == 5 {\n\
    \        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n        return\
    \ is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return is_simple_power(x,\
    \ 7)\n    }\n    if n == 8 {\n        return is_simple_power(x, 8)\n    }\n  \
    \  if n == 9 {\n        return is_simple_power(x, 9)\n    }\n    if n == 10 {\n\
    \        return is_simple_power(x, 10)\n    }\n    if n == 11 {\n        return\
    \ is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return is_simple_power(x,\
    \ 12)\n    }\n    if n == 13 {\n        return is_simple_power(x, 13)\n    }\n\
    \    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n    if n == 15\
    \ {\n        return is_simple_power(x, 15)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ 17)\n    }\n    if n == 18 {\n        return is_simple_power(x, 18)\n    }\n\
    \    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n    if n == 20\
    \ {\n        return is_simple_power(x, 20)\n    }\n    if n == 21 {\n        return\
    \ is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return is_simple_power(x,\
    \ 22)\n    }\n    if n == 23 {\n        return is_simple_power(x, 23)\n    }\n\
    \    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n    if n == 25\
    \ {\n        return is_simple_power(x, 25)\n    }\n    if n == 26 {\n        return\
    \ is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return is_simple_power(x,\
    \ 27)\n    }\n    if n == 28 {\n        return is_simple_power(x, 28)\n    }\n\
    \    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n    if n == 30\
    \ {\n        return is_simple_power(x, 30)\n    }\n    if n == 31 {\n        return\
    \ is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return is_simple_power(x,\
    \ 32)\n    }\n    if n == 33 {\n        return is_simple_power(x, 33)\n    }\n\
    \    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n    if n == 35\
    \ {\n        return is_simple_power(x, 35)\n    }\n    if n == 36 {\n        return\
    \ is_simple_power(x, 36", "    if n == 1 {\n        return true\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if x == n {\n      \
    \  return true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return is_simple_power(x, n/2) * is_simple_power(x, n-1)",
  '    return is_simple_power_impl(x, n)', "    if n == 1 {\n        return true\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    if n == 0 {\n       \
    \ return false\n    }\n    if x == 0 {\n        return false\n    }\n    if n\
    \ == x {\n        return true\n    }\n    if n == (x * x) {\n        return true\n\
    \    }\n    if n == (x * x * (x * x)) {\n        return true\n    }\n    if n\
    \ == (x * x * (x * x) * (x * x) * (x * x)) {\n        return true\n    }\n   \
    \ if n == (x * x * (x * x) * (x * x) * (x * x) * (x * x) * (x * x)) {\n      \
    \  return true\n    }\n    if n == (x * x * (x * x) * (x * x) * (x * x) * (x *\
    \ x) * (x * x) * (x * x) * (x * x)) {\n        return true\n    }\n    if n ==\
    \ (x * x * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x)\
    \ * (x * x) * (x * x)) {\n        return true\n    }\n    if n == (x * x * (x\
    \ * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) *\
    \ (x * x) * (x * x)) {\n        return true\n    }\n    if n == (x * x * (x *\
    \ x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x\
    \ * x) * (x * x) * (x * x)) {\n        return true\n    }\n    if n == (x * x\
    \ * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x *\
    \ x) * (x * x) * (x * x) * (x * x)) {\n        return true\n    }\n    if n ==\
    \ (x * x * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x)\
    \ * (x * x) * (x * x) * (x * x) * (x * x) * (x * x)) {\n        return true\n\
    \    }\n    if n == (x * x * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) *\
    \ (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x)) {\n   \
    \     return true\n    }\n    if n == (x * x * (x * x) * (x * x) * (x * x) * (x\
    \ * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) *\
    \ (x * x)) {\n        return true\n    }\n    if n == (x * x * (x * x) * (x *\
    \ x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x * x) * (x\
    \ * x) * (x * x) * (x * x)) {\n        return ", '    return x == n**x', "   \
    \ if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", '    return is_power_of_two(x) && is_power_of_two(n) && is_power_of_two(n*x)',
  "    guard n > 0 else { return false }\n    guard x == n else { return false }\n\
    \    guard n == 1 || (n % 2) == 0 else { return false }\n    return true", '    return
    is_simple_power_impl(x, n)', "    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if n % x == 0 {\n        return\
    \ is_simple_power(x, n-1)\n    }\n    return false", "    if n == 1 {\n      \
    \  return true\n    }\n    if x == 1 {\n        return true\n    }\n    if n %\
    \ x == 0 {\n        return is_simple_power(x, n/x) == 0\n    }\n    return false",
  "    if n == 1 {\n        return true\n    }\n    if n == 2 {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2)\n    }\n\
    \    return is_simple_power(x, n - 1)", "    if x == 1 {\n        return true\n\
    \    }\n    if n == 1 {\n        return true\n    }\n    if x == n {\n       \
    \ return true\n    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n\
    \    }\n    return false", "    if n == 1 {\n        return true\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if x == n {\n      \
    \  return true\n    }\n    if x % n == 0 {\n        return is_simple_power(x /\
    \ n, n)\n    }\n    return false", '    return is_simple_power_impl(x, n)', " \
    \   if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n\
    \ == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n     \
    \   return is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", '    return
    is_simple_power_impl(x, n)', "    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if n % x == 0 {\n        return\
    \ is_simple_power(x, n-1)\n    }\n    return false", "    if x == 1 {\n      \
    \  return true\n    }\n    if x == n {\n        return true\n    }\n    if n <=\
    \ 1 {\n        return false\n    }\n    if x % n == 0 {\n        return is_simple_power(x\
    \ / n, n)\n    }\n    return is_simple_power(x, n-1)", "    if x == 1 {\n    \
    \    return true\n    }\n    if x == n {\n        return true\n    }\n    if n\
    \ % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return false",
  '    return x == n ** Int(x)', '    return x == n ** Int(x)', "    if x == 1 {\n\
    \        return true\n    }\n    if x == n {\n        return true\n    }\n   \
    \ if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x == n * (n - 1) {\n\
    \        return true\n    }\n    return false", "    if n == 1 {\n        return\
    \ true\n    }\n    if n == 0 {\n        return false\n    }\n    if x == 0 {\n\
    \        return false\n    }\n    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if x % n == 0 {\n        return\
    \ is_simple_power(x / n, n)\n    }\n    return false", "    if n == 1 {\n    \
    \    return true\n    }\n    if n == 2 {\n        return true\n    }\n    if x\
    \ == 1 {\n        return true\n    }\n    if x == n {\n        return true\n \
    \   }\n    if x == n^2 {\n        return true\n    }\n    if x == n^3 {\n    \
    \    return true\n    }\n    if x == n^4 {\n        return true\n    }\n    if\
    \ x == n^5 {\n        return true\n    }\n    if x == n^6 {\n        return true\n\
    \    }\n    if x == n^7 {\n        return true\n    }\n    if x == n^8 {\n   \
    \     return true\n    }\n    if x == n^9 {\n        return true\n    }\n    if\
    \ x == n^10 {\n        return true\n    }\n    if x == n^11 {\n        return\
    \ true\n    }\n    if x == n^12 {\n        return true\n    }\n    if x == n^13\
    \ {\n        return true\n    }\n    if x == n^14 {\n        return true\n   \
    \ }\n    if x == n^15 {\n        return true\n    }\n    if x == n^16 {\n    \
    \    return true\n    }\n    if x == n^17 {\n        return true\n    }\n    if\
    \ x == n^18 {\n        return true\n    }\n    if x == n^19 {\n        return\
    \ true\n    }\n    if x == n^20 {\n        return true\n    }\n    if x == n^21\
    \ {\n        return true\n    }\n    if x == n^22 {\n        return true\n   \
    \ }\n    if x == n^23 {\n        return true\n    }\n    if x == n^24 {\n    \
    \    return true\n    }\n    if x == n^25 {\n        return true\n    }\n    if\
    \ x == n^26 {\n        return true\n    }\n    if x == n^27 {\n        return\
    \ true\n    }\n    if x == n^28 {\n        return true\n    }\n    if x == n^29\
    \ {\n        return true\n    }\n    if x == n^30 {\n        return true\n   \
    \ }\n    if x == n^31 {\n        return true\n    }\n    if x == n^32 {\n    \
    \    return true\n    }\n    if x == n^33 {\n        return true\n    }\n    if\
    \ x == n^34 {\n        return true\n    }\n    if x == n^35 {\n        return\
    \ true\n    }\n    if x == n^36 {\n        return true\n    }\n    if x == n^37\
    \ {\n        return true\n    }\n    if x == n^38 {\n        return true\n   \
    \ }\n    if x == n^39 {\n        return true\n    }\n    if x == n^40 {\n    \
    \    return true\n    }\n    if x == n^41 {\n        return true\n    }", "  \
    \  if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n <= 1 {\n        return false\n    }\n    if n % 2 == 0 {\n  \
    \      return is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n/2)",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n\
    \ == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n     \
    \   return is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", "    if\
    \ n == 1 {\n        return true\n    }\n    if n == 0 {\n        return false\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    if x == 0 {\n       \
    \ return false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n//2)\n    }\n    return is_simple_power(x*x, n-1)", "    if x == 1 {\n    \
    \    return true\n    }\n    if x == n {\n        return true\n    }\n    if n\
    \ == 1 {\n        return false\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n/2)\n    }\n    return is_simple_power(x, n-1)", "    if n == 1 {\n       \
    \ return true\n    }\n    if x == 1 {\n        return true\n    }\n    if n ==\
    \ 0 {\n        return false\n    }\n    if x == 0 {\n        return false\n  \
    \  }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n     \
    \   return is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n-1)",
  "    if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x < n {\n        return false\n    }\n    if x == n-1 {\n     \
    \   return true\n    }\n    if x == n*n {\n        return true\n    }\n    if\
    \ x == n*(n-1) {\n        return true\n    }\n    return false", "    if n ==\
    \ 1 {\n        return true\n    }\n    if n == 2 {\n        return true\n    }\n\
    \    if n == 3 {\n        return true\n    }\n    if n == 4 {\n        return\
    \ true\n    }\n    if n == 5 {\n        return true\n    }\n    if n == 6 {\n\
    \        return true\n    }\n    if n == 7 {\n        return true\n    }\n   \
    \ if n == 8 {\n        return true\n    }\n    if n == 9 {\n        return true\n\
    \    }\n    if n == 10 {\n        return true\n    }\n    if n == 11 {\n     \
    \   return true\n    }\n    if n == 12 {\n        return true\n    }\n    if n\
    \ == 13 {\n        return true\n    }\n    if n == 14 {\n        return true\n\
    \    }\n    if n == 15 {\n        return true\n    }\n    if n == 16 {\n     \
    \   return true\n    }\n    if n == 17 {\n        return true\n    }\n    if n\
    \ == 18 {\n        return true\n    }\n    if n == 19 {\n        return true\n\
    \    }\n    if n == 20 {\n        return true\n    }\n    if n == 21 {\n     \
    \   return true\n    }\n    if n == 22 {\n        return true\n    }\n    if n\
    \ == 23 {\n        return true\n    }\n    if n == 24 {\n        return true\n\
    \    }\n    if n == 25 {\n        return true\n    }\n    if n == 26 {\n     \
    \   return true\n    }\n    if n == 27 {\n        return true\n    }\n    if n\
    \ == 28 {\n        return true\n    }\n    if n == 29 {\n        return true\n\
    \    }\n    if n == 30 {\n        return true\n    }\n    if n == 31 {\n     \
    \   return true\n    }\n    if n == 32 {\n        return true\n    }\n    if n\
    \ == 33 {\n        return true\n    }\n    if n == 34 {\n        return true\n\
    \    }\n    if n == 35 {\n        return true\n    }\n    if n == 36 {\n     \
    \   return true\n    }\n    if n == 37 {\n        return true\n    }\n    if n\
    \ == 38 {\n        return true\n    }\n    if n == 39 {\n        return true\n\
    \    }\n    if n == 40 {\n        return true\n    }\n    if n == 41 {\n     \
    \   return true\n    }\n    if n == 42 {\n        return true\n    }\n    if n\
    \ == 43 {\n        return true\n    }\n    if n == 44 {\n        return true\n\
    \    }\n    if n == 45 {\n        return true\n    }\n    if n == 46 {\n     \
    \   return true\n    }\n    if n == 47 {\n        return true\n    }\n    if n\
    \ == 48 {\n        return true\n    }\n    if n == 49 {\n        return true\n\
    \    }\n    if n == 50 {\n        return true\n    }\n    if n == 51 {\n     \
    \   return true\n    }\n    if n == 52 {\n        return ", '    return is_simple_power_impl(x,
    n)', '    return is_simple_power_helper(x, n)', "    var result = true\n    var\
    \ power = 1\n    while power < n {\n        if (x == power) {\n            result\
    \ = true\n        } else {\n            result = false\n        }\n        power\
    \ *= x\n    }\n    return result", "    if x == 1 {\n        return true\n   \
    \ }\n    if n == 1 {\n        return true\n    }\n    if n == 2 {\n        return\
    \ is_simple_power(x, 2)\n    }\n    if n == 3 {\n        return is_simple_power(x,\
    \ 3)\n    }\n    if n == 4 {\n        return is_simple_power(x, 4)\n    }\n  \
    \  if n == 5 {\n        return is_simple_power(x, 5)\n    }\n    if n == 6 {\n\
    \        return is_simple_power(x, 6)\n    }\n    if n == 7 {\n        return\
    \ is_simple_power(x, 7)\n    }\n    if n == 8 {\n        return is_simple_power(x,\
    \ 8)\n    }\n    if n == 9 {\n        return is_simple_power(x, 9)\n    }\n  \
    \  if n == 10 {\n        return is_simple_power(x, 10)\n    }\n    if n == 11\
    \ {\n        return is_simple_power(x, 11)\n    }\n    if n == 12 {\n        return\
    \ is_simple_power(x, 12)\n    }\n    if n == 13 {\n        return is_simple_power(x,\
    \ 13)\n    }\n    if n == 14 {\n        return is_simple_power(x, 14)\n    }\n\
    \    if n == 15 {\n        return is_simple_power(x, 15)\n    }\n    if n == 16\
    \ {\n        return is_simple_power(x, 16)\n    }\n    if n == 17 {\n        return\
    \ is_simple_power(x, 17)\n    }\n    if n == 18 {\n        return is_simple_power(x,\
    \ 18)\n    }\n    if n == 19 {\n        return is_simple_power(x, 19)\n    }\n\
    \    if n == 20 {\n        return is_simple_power(x, 20)\n    }\n    if n == 21\
    \ {\n        return is_simple_power(x, 21)\n    }\n    if n == 22 {\n        return\
    \ is_simple_power(x, 22)\n    }\n    if n == 23 {\n        return is_simple_power(x,\
    \ 23)\n    }\n    if n == 24 {\n        return is_simple_power(x, 24)\n    }\n\
    \    if n == 25 {\n        return is_simple_power(x, 25)\n    }\n    if n == 26\
    \ {\n        return is_simple_power(x, 26)\n    }\n    if n == 27 {\n        return\
    \ is_simple_power(x, 27)\n    }\n    if n == 28 {\n        return is_simple_power(x,\
    \ 28)\n    }\n    if n == 29 {\n        return is_simple_power(x, 29)\n    }\n\
    \    if n == 30 {\n        return is_simple_power(x, 30)\n    }\n    if n == 31\
    \ {\n        return is_simple_power(x, 31)\n    }\n    if n == 32 {\n        return\
    \ is_simple_power(x, 32)\n    }\n    if n == 33 {\n        return is_simple_power(x,\
    \ 33)\n    }\n    if n == 34 {\n        return is_simple_power(x, 34)\n    }\n\
    \    if n == 35 {\n        return is_simple_power(x, 35)\n    }\n    if n == 36\
    \ {\n        return is_simple_power(x, 36", "    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x % n == 0 {\n   \
    \     return is_simple_power(x / n, n)\n    }\n    return false", '    return
    is_simple_power_impl(x, n)', '    return x == n ** Int(x)', "    guard n >= 1\
    \ else {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x % n == 0 {\n   \
    \     return is_simple_power(x / n, n)\n    }\n    return false", "    guard x\
    \ > 0 && n > 0 else { return false }\n    var power = 1\n    var result = true\n\
    \    while n > 0 {\n        if n % 2 == 0 {\n            power = power * x\n \
    \           n /= 2\n        } else {\n            power = power * x\n        \
    \    n -= 1\n        }\n    }\n    if power != x {\n        result = false\n \
    \   }\n    return result", '    return is_simple_power_impl(x, n)', "    if x\
    \ == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n \
    \   }\n    if n == 2 {\n        return is_simple_power(x, 2)\n    }\n    if n\
    \ == 3 {\n        return is_simple_power(x, 3)\n    }\n    if n == 4 {\n     \
    \   return is_simple_power(x, 4)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ 5)\n    }\n    if n == 6 {\n        return is_simple_power(x, 6)\n    }\n  \
    \  if n == 7 {\n        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n\
    \        return is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return\
    \ is_simple_power(x, 9)\n    }\n    if n == 10 {\n        return is_simple_power(x,\
    \ 10)\n    }\n    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n\
    \    if n == 12 {\n        return is_simple_power(x, 12)\n    }\n    if n == 13\
    \ {\n        return is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return\
    \ is_simple_power(x, 14)\n    }\n    if n == 15 {\n        return is_simple_power(x,\
    \ 15)\n    }\n    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n\
    \    if n == 17 {\n        return is_simple_power(x, 17)\n    }\n    if n == 18\
    \ {\n        return is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return\
    \ is_simple_power(x, 19)\n    }\n    if n == 20 {\n        return is_simple_power(x,\
    \ 20)\n    }\n    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n\
    \    if n == 22 {\n        return is_simple_power(x, 22)\n    }\n    if n == 23\
    \ {\n        return is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return\
    \ is_simple_power(x, 24)\n    }\n    if n == 25 {\n        return is_simple_power(x,\
    \ 25)\n    }\n    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n\
    \    if n == 27 {\n        return is_simple_power(x, 27)\n    }\n    if n == 28\
    \ {\n        return is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return\
    \ is_simple_power(x, 29)\n    }\n    if n == 30 {\n        return is_simple_power(x,\
    \ 30)\n    }\n    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n\
    \    if n == 32 {\n        return is_simple_power(x, 32)\n    }\n    if n == 33\
    \ {\n        return is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, 34)\n    }\n    if n == 35 {\n        return is_simple_power(x,\
    \ 35)\n    }\n    if n == 36 {\n        return is_simple_power(x, 36", "    if\
    \ x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", '    return is_simple_power_impl(x, n)', "    if x == 1 {\n\
    \        return true\n    }\n    if x == n {\n        return true\n    }\n   \
    \ if n % x == 0 {\n        return is_simple_power(x, n/x+1)\n    }\n    return\
    \ false", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n    \
    \    return true\n    }\n    if x == n {\n        return true\n    }\n    if n\
    \ % 2 == 0 {\n        return is_simple_power(x, n-1)\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n   \
    \     return is_simple_power(x, n/2)\n    }\n    return false", '    return x
    == n ** Int(x)', "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n\
    \        return false\n    }\n    if x == 1 {\n        return true\n    }\n  \
    \  if x == 0 {\n        return false\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x % n == 0 {\n        return is_simple_power(x / n, n)\n    }\n\
    \    return false", "    if x == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if n == 1 {\n        return false\n   \
    \ }\n    if n == 2 {\n        return is_simple_power(x, n-1)\n    }\n    if n\
    \ == 3 {\n        return is_simple_power(x, n-1) && is_simple_power(x, n-2)\n\
    \    }\n    if n == 4 {\n        return is_simple_power(x, n-1) && is_simple_power(x,\
    \ n-2) && is_simple_power(x, n-3)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ n-1) && is_simple_power(x, n-2) && is_simple_power(x, n-3) && is_simple_power(x,\
    \ n-4)\n    }\n    return false", "    if n == 1 {\n        return true\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n \
    \   }\n    return false", '    return x == n**x', '    return is_power_of_two(x)
    && is_power_of_two(n) && is_power_of_two(n*x)', "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return true\n    }\n    if n == 2 {\n\
    \        return is_simple_power(x, 2)\n    }\n    if n == 3 {\n        return\
    \ is_simple_power(x, 3)\n    }\n    if n == 4 {\n        return is_simple_power(x,\
    \ 4)\n    }\n    if n == 5 {\n        return is_simple_power(x, 5)\n    }\n  \
    \  if n == 6 {\n        return is_simple_power(x, 6)\n    }\n    if n == 7 {\n\
    \        return is_simple_power(x, 7)\n    }\n    if n == 8 {\n        return\
    \ is_simple_power(x, 8)\n    }\n    if n == 9 {\n        return is_simple_power(x,\
    \ 9)\n    }\n    if n == 10 {\n        return is_simple_power(x, 10)\n    }\n\
    \    if n == 11 {\n        return is_simple_power(x, 11)\n    }\n    if n == 12\
    \ {\n        return is_simple_power(x, 12)\n    }\n    if n == 13 {\n        return\
    \ is_simple_power(x, 13)\n    }\n    if n == 14 {\n        return is_simple_power(x,\
    \ 14)\n    }\n    if n == 15 {\n        return is_simple_power(x, 15)\n    }\n\
    \    if n == 16 {\n        return is_simple_power(x, 16)\n    }\n    if n == 17\
    \ {\n        return is_simple_power(x, 17)\n    }\n    if n == 18 {\n        return\
    \ is_simple_power(x, 18)\n    }\n    if n == 19 {\n        return is_simple_power(x,\
    \ 19)\n    }\n    if n == 20 {\n        return is_simple_power(x, 20)\n    }\n\
    \    if n == 21 {\n        return is_simple_power(x, 21)\n    }\n    if n == 22\
    \ {\n        return is_simple_power(x, 22)\n    }\n    if n == 23 {\n        return\
    \ is_simple_power(x, 23)\n    }\n    if n == 24 {\n        return is_simple_power(x,\
    \ 24)\n    }\n    if n == 25 {\n        return is_simple_power(x, 25)\n    }\n\
    \    if n == 26 {\n        return is_simple_power(x, 26)\n    }\n    if n == 27\
    \ {\n        return is_simple_power(x, 27)\n    }\n    if n == 28 {\n        return\
    \ is_simple_power(x, 28)\n    }\n    if n == 29 {\n        return is_simple_power(x,\
    \ 29)\n    }\n    if n == 30 {\n        return is_simple_power(x, 30)\n    }\n\
    \    if n == 31 {\n        return is_simple_power(x, 31)\n    }\n    if n == 32\
    \ {\n        return is_simple_power(x, 32)\n    }\n    if n == 33 {\n        return\
    \ is_simple_power(x, 33)\n    }\n    if n == 34 {\n        return is_simple_power(x,\
    \ 34)\n    }\n    if n == 35 {\n        return is_simple_power(x, 35)\n    }\n\
    \    if n == 36 {\n        return is_simple_power(x, 36", '    return x == n **
    Int(x)']
stop_tokens:
- "\n}"

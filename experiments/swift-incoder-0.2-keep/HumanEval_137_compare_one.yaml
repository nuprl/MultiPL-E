name: HumanEval_137_compare_one
language: swift
prompt: "\nenum Value: Equatable, Hashable {\n    case intValue(Int)\n    case doubleValue(Double)\n\
  \    case stringValue(String)\n}\n\n            \n/// Create a function that takes\
  \ integers, floats, or strings representing\n/// real numbers, and returns the larger\
  \ variable in its given variable type.\n/// Return None if the values are equal.\n\
  /// Note: If a real number is represented as a string, the floating point might\
  \ be . or ,\n/// compare_one(1, 2.5) \u279E 2.5\n/// compare_one(1, \"2,3\") \u279E\
  \ \"2,3\"\n/// compare_one(\"5,1\", \"6\") \u279E \"6\"\n/// compare_one(\"1\",\
  \ 1) \u279E None\nfunc compare_one(a: Value, b: Value) -> Value? {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(compare_one(a: .intValue(1), b: .intValue(2))\
  \ == .intValue(2))\nassert(compare_one(a: .intValue(1), b: .doubleValue(2.5)) ==\
  \ .doubleValue(2.5))\nassert(compare_one(a: .intValue(2), b: .intValue(3)) == .intValue(3))\n\
  assert(compare_one(a: .intValue(5), b: .intValue(6)) == .intValue(6))\nassert(compare_one(a:\
  \ .intValue(1), b: .stringValue(\"2,3\")) == .stringValue(\"2,3\"))\nassert(compare_one(a:\
  \ .stringValue(\"5,1\"), b: .stringValue(\"6\")) == .stringValue(\"6\"))\nassert(compare_one(a:\
  \ .stringValue(\"1\"), b: .stringValue(\"2\")) == .stringValue(\"2\"))\nassert(compare_one(a:\
  \ .stringValue(\"1\"), b: .intValue(1)) == nil)"
completions: ["    switch a { case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n\
    \        switch b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aInt > bInt || aDouble > bDouble || aString > bString\n  \
    \      }\n    }\n    return nil", "    switch a { // Compare two values\n    case\
    \ .intValue(_):\n        switch b { // Compare two integers\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Compare two doubles\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return b\n        }\n    }\n    return nil",
  "    switch a { // case Int\n    case .intValue(_):\n        switch b { // case\
    \ Int\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // case Double\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // case String\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt ? b : a\n        default:\
    \ return b\n        }\n    default: return a\n    }", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two values\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two values\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two values\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ smaller\n    case .intValue(_):\n        return b == .intValue(a) ? .intValue(a)\
    \ : .intValue(b)\n    case .doubleValue(_):\n        return b == .doubleValue(a)\
    \ ? .doubleValue(a) : .doubleValue(b)\n    case .stringValue(_):\n        return\
    \ b == .stringValue(a) ? .stringValue(a) : .stringValue(b)\n    }", "    switch\
    \ a { // Switch on a\n    case .intValue(_):\n        switch b { // Switch on\
    \ b\n        case .intValue(_):\n            return a > b ? a : b\n        case\
    \ .doubleValue(_):\n            return a > b ? b : a\n        case .stringValue(_):\n\
    \            return a > b ? b : a\n        }\n    case .doubleValue(_):\n    \
    \    switch b { // Switch on b\n        case .intValue(_):\n            return\
    \ a > b ? b : a\n        case .doubleValue(_):\n            return a > b ? a :\
    \ b\n        case .stringValue(_):\n            return a > b ? a : b\n       \
    \ }\n    case .stringValue(_):\n        switch b { // Switch on b\n        case\
    \ .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { //\
    \ a is Int\n    case .intValue(_):\n        switch b { // b is Int\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // b is Double\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // b is String\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // TODO:\
    \ switch on type\n    case .intValue(_):\n        switch b { // TODO: switch on\
    \ type\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // TODO: switch on type\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // TODO: switch on type\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ b\n        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return b\n      \
    \  case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return b\n      \
    \  case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // TODO:\
    \ switch on type\n    case .intValue(_):\n        return b == .intValue(a)\n \
    \   case .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // case Int\n    case .intValue(_):\n        switch b { // case Int\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return b\n  \
    \      }\n    case .doubleValue(_):\n        switch b { // case Double\n     \
    \   case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // case String\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // case Int\n    case .intValue(_):\n\
    \        return b == .intValue(_) ? .intValue(_) : .stringValue(_)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(_) ? .doubleValue(_) : .stringValue(_)\n   \
    \ case .stringValue(_):\n        return b == .stringValue(_) ? .stringValue(_)\
    \ : .intValue(_)\n    }", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt ? b : a\n        default:\n\
    \            return b\n        }\n    default:\n        return b\n    }", "  \
    \  switch a { // Switch on a's type\n    case .intValue:\n        switch b { //\
    \ Switch on b's type\n        case .intValue:\n            return a.intValue >\
    \ b.intValue ? a : b\n        case .doubleValue:\n            return a.doubleValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.stringValue\
    \ > b.stringValue ? a : b\n        }\n    case .doubleValue:\n        switch b\
    \ { // Switch on b's type\n        case .intValue:\n            return a.doubleValue\
    \ > b.intValue ? a : b\n        case .doubleValue:\n            return a.doubleValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.doubleValue\
    \ > b.stringValue ? a : b\n        }\n    case .stringValue:\n        switch b\
    \ { // Switch on b's type\n        case .intValue:\n            return a.stringValue\
    \ > b.intValue ? a : b\n        case .doubleValue:\n            return a.stringValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.stringValue\
    \ > b.stringValue ? a : b\n        }\n    }\n    return nil", "    switch a {\
    \ // Compare two values\n    case .intValue(aInt):\n        switch b { // Compare\
    \ two integers\n        case .intValue(bInt):\n            return bInt\n     \
    \   case .doubleValue(bDouble):\n            return bDouble\n        case .stringValue(bString):\n\
    \            if let bDouble = Double(bString) {\n                return bDouble\n\
    \            }\n            return bString\n        }\n    case .doubleValue(aDouble):\n\
    \        switch b { // Compare two doubles\n        case .intValue(bInt):\n  \
    \          return bInt\n        case .doubleValue(bDouble):\n            return\
    \ bDouble\n        case .stringValue(bString):\n            if let bDouble = Double(bString)\
    \ {\n                return bDouble\n            }\n            return bString\n\
    \        }\n    case .stringValue(aString):\n        switch b { // Compare two\
    \ strings\n        case .intValue(bInt):\n            return bInt\n        case\
    \ .doubleValue(bDouble):\n            return bDouble\n        case .stringValue(bString):\n\
    \            return bString\n        }\n    }\n    return nil", "    switch a\
    \ { case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n    \
    \    switch b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aInt > bInt || (aInt == bInt && aDouble > bDouble)\n     \
    \   case .stringValue(bString):\n            return aString > bString\n      \
    \  case .doubleValue(bDouble):\n            return aDouble > bDouble\n       \
    \ case .intValue(bInt):\n            return aInt > bInt\n        }\n    case .stringValue(aString):\n\
    \        switch b { case .stringValue(bString), .intValue(bInt), .doubleValue(bDouble):\n\
    \            return aString > bString\n        case .intValue(bInt):\n       \
    \     return aString > bInt\n        case .doubleValue(bDouble):\n           \
    \ return aString > bDouble\n        }\n    case .doubleValue(aDouble):\n     \
    \   switch b { case .stringValue(bString), .intValue(bInt), .doubleValue(bDouble):\n\
    \            return aDouble > bString\n        case .intValue(bInt):\n       \
    \     return aDouble > bInt\n        case .doubleValue(bDouble):\n           \
    \ return aDouble > bDouble\n        }\n    case .intValue(aInt):\n        switch\
    \ b { case .stringValue(bString), .intValue(bInt), .doubleValue(bDouble):\n  \
    \          return aInt > bString\n        case .intValue(bInt):\n            return\
    \ aInt > bInt\n        case .doubleValue(bDouble):\n            return aInt >\
    \ bDouble\n        }\n    }\n    return nil", "    switch a { // Compare two values\n\
    \    case .intValue(_):\n        switch b { // Compare two values\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n     \
    \   case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two values\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two values\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ smaller\n    case .intValue(_):\n        switch b { // b is smaller\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return a\n  \
    \      }\n    case .doubleValue(_):\n        switch b { // b is smaller\n    \
    \    case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // Handle ints\n    case .intValue(_):\n\
    \        switch b { // Handle ints\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Handle doubles\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Handle strings\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { case\
    \ .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n        switch\
    \ b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n  \
    \          if aInt == bInt {\n                return aDouble\n            } else\
    \ if aDouble == bDouble {\n                return aString\n            } else\
    \ {\n                return bString\n            }\n        }\n    }\n    return\
    \ nil", "    switch a { // a is larger\n    case .intValue(_):\n        switch\
    \ b { // b is larger\n        case .intValue(_):\n            return b\n     \
    \   case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? a : b\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a's type\n    case .intValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(aInt),\
    \ .doubleValue(aDouble), .stringValue(aString):\n        switch b { case .intValue(bInt),\
    \ .doubleValue(bDouble), .stringValue(bString):\n            return aInt > bInt\
    \ ? b : a\n        default:\n            return b\n        }\n    default:\n \
    \       return a\n    }", "    switch a { // Compare two values\n    case .intValue(_):\n\
    \        switch b { // Compare two integers\n        case .intValue(_):\n    \
    \        return b\n        case .doubleValue(_):\n            return a\n     \
    \   case .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Compare two doubles\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return a\n        }\n    }\n    return nil",
  "    switch a { // Compare two values\n    case .intValue(_):\n        switch b\
    \ { // Compare two integers\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Compare two doubles\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Compare two strings\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(aInt):\n        switch b { // Compare two integers\n\
    \        case .intValue(bInt):\n            return bInt > aInt // Compare two\
    \ integers\n        case .doubleValue(bDouble):\n            return bDouble >\
    \ aInt // Compare two integers\n        case .stringValue(bString):\n        \
    \    return bString > aInt // Compare two integers\n        }\n    case .doubleValue(aDouble):\n\
    \        switch b { // Compare two doubles\n        case .intValue(bInt):\n  \
    \          return bInt > aDouble // Compare two doubles\n        case .doubleValue(bDouble):\n\
    \            return bDouble > aDouble // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aDouble // Compare two doubles\n        }\n    case\
    \ .stringValue(aString):\n        switch b { // Compare two strings\n        case\
    \ .intValue(bInt):\n            return bInt > aString // Compare two strings\n\
    \        case .doubleValue(bDouble):\n            return bDouble > aString //\
    \ Compare two strings\n        case .stringValue(bString):\n            return\
    \ bString > aString // Compare two strings\n        }\n    }\n    return nil //\
    \ If values are equal, return nil", "    switch a { // Compare two values\n  \
    \  case .intValue(_):\n        switch b { // Compare two integers\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // Compare two doubles\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return b\n  \
    \      }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // TODO:\
    \ Switch to switch case when Swift 4 is released\n    case .intValue(_):\n   \
    \     switch b { // TODO: Switch to switch case when Swift 4 is released\n   \
    \     case .intValue(_):\n            return .intValue(a)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a)\n        case .stringValue(_):\n         \
    \   return .stringValue(a)\n        }\n    case .doubleValue(_):\n        switch\
    \ b { // TODO: Switch to switch case when Swift 4 is released\n        case .intValue(_):\n\
    \            return .doubleValue(a)\n        case .doubleValue(_):\n         \
    \   return .doubleValue(a)\n        case .stringValue(_):\n            return\
    \ .stringValue(a)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ TODO: Switch to switch case when Swift 4 is released\n        case .intValue(_):\n\
    \            return .stringValue(a)\n        case .doubleValue(_):\n         \
    \   return .stringValue(a)\n        case .stringValue(_):\n            return\
    \ .stringValue(a)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(int(a)):\n        switch b { // Compare two integers\n\
    \        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return a\n        case .stringValue(string(b)):\n            return\
    \ a\n        }\n    case .doubleValue(double(a)):\n        switch b { // Compare\
    \ two doubles\n        case .intValue(int(b)):\n            return a\n       \
    \ case .doubleValue(double(b)):\n            return b\n        case .stringValue(string(b)):\n\
    \            return a\n        }\n    case .stringValue(string(a)):\n        switch\
    \ b { // Compare two strings\n        case .intValue(int(b)):\n            return\
    \ a\n        case .doubleValue(double(b)):\n            return b\n        case\
    \ .stringValue(string(b)):\n            return a\n        }\n    }\n    return\
    \ nil", "    switch a { // case Int\n    case .intValue(_):\n        switch b\
    \ { // case Int\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ case Double\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .stringValue(_):\n        switch b { //\
    \ case String\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(_):\n        switch b { // case Int\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // case Double\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n     \
    \   case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ bigger\n    case .intValue(_):\n        switch b { // b is bigger\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // b is bigger\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // b is bigger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(aInt):\n        switch b { // Compare two values\n\
    \        case .intValue(bInt):\n            return bInt > aInt // Compare two\
    \ integers\n        case .doubleValue(bDouble):\n            return bDouble >\
    \ aInt // Compare two doubles\n        case .stringValue(bString):\n         \
    \   return bString > aInt // Compare two strings\n        }\n    case .doubleValue(aDouble):\n\
    \        switch b { // Compare two values\n        case .intValue(bInt):\n   \
    \         return bInt > aDouble // Compare two integers\n        case .doubleValue(bDouble):\n\
    \            return bDouble > aDouble // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aDouble // Compare two strings\n        }\n    case\
    \ .stringValue(aString):\n        switch b { // Compare two values\n        case\
    \ .intValue(bInt):\n            return bInt > aString // Compare two integers\n\
    \        case .doubleValue(bDouble):\n            return bDouble > aString //\
    \ Compare two doubles\n        case .stringValue(bString):\n            return\
    \ bString > aString // Compare two strings\n        }\n    }\n    return nil",
  "    switch a { // case intValue:\n    case .intValue:\n        return b == .intValue\
    \ ? .intValue : b == .doubleValue ? .doubleValue : b == .stringValue ? .stringValue\
    \ : nil\n    case .doubleValue:\n        return b == .doubleValue ? .doubleValue\
    \ : b == .intValue ? .intValue : b == .stringValue ? .stringValue : nil\n    case\
    \ .stringValue:\n        return b == .stringValue ? .stringValue : b == .intValue\
    \ ? .intValue : b == .doubleValue ? .doubleValue : nil\n    }", "    switch a\
    \ { // a is Int\n    case .intValue(_):\n        switch b { // b is Int\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is Double\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is String\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue:\n        switch b { // Switch on b's type\n\
    \        case .intValue:\n            return a > b ? a : b\n        case .doubleValue:\n\
    \            return a > b ? b : a\n        case .stringValue:\n            return\
    \ a > b ? b : a\n        }\n    case .doubleValue:\n        switch b { // Switch\
    \ on b's type\n        case .intValue:\n            return a > b ? b : a\n   \
    \     case .doubleValue:\n            return a > b ? a : b\n        case .stringValue:\n\
    \            return a > b ? a : b\n        }\n    case .stringValue:\n       \
    \ switch b { // Switch on b's type\n        case .intValue:\n            return\
    \ a > b ? b : a\n        case .doubleValue:\n            return a > b ? a : b\n\
    \        case .stringValue:\n            return a > b ? a : b\n        }\n   \
    \ }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue:\n\
    \        switch b { // Switch on b's type\n        case .intValue:\n         \
    \   return a.intValue > b.intValue ? a : b\n        case .doubleValue:\n     \
    \       return a.doubleValue > b.doubleValue ? a : b\n        case .stringValue:\n\
    \            return a.stringValue > b.stringValue ? a : b\n        }\n    case\
    \ .doubleValue:\n        switch b { // Switch on b's type\n        case .intValue:\n\
    \            return a.doubleValue > b.intValue ? a : b\n        case .doubleValue:\n\
    \            return a.doubleValue > b.doubleValue ? a : b\n        case .stringValue:\n\
    \            return a.doubleValue > b.stringValue ? a : b\n        }\n    case\
    \ .stringValue:\n        switch b { // Switch on b's type\n        case .intValue:\n\
    \            return a.stringValue > b.intValue ? a : b\n        case .doubleValue:\n\
    \            return a.stringValue > b.doubleValue ? a : b\n        case .stringValue:\n\
    \            return a.stringValue > b.stringValue ? a : b\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ smaller\n    case .intValue(_):\n        return b == .intValue(a)\n    case\
    \ .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return a > b ? a : b\n\
    \        case .doubleValue(_):\n            return a > b ? b : a\n        case\
    \ .stringValue(_):\n            return a > b ? b : a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a > b ? a : b\n        case .doubleValue(_):\n            return\
    \ a > b ? b : a\n        case .stringValue(_):\n            return a > b ? b :\
    \ a\n        }\n    case .stringValue(_):\n        switch b { // Switch on b's\
    \ type\n        case .intValue(_):\n            return a > b ? a : b\n       \
    \ case .doubleValue(_):\n            return a > b ? b : a\n        case .stringValue(_):\n\
    \            return a > b ? b : a\n        }\n    }\n    return nil", "    switch\
    \ a { // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(i):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(i):\n            return\
    \ i // Return i\n        case .doubleValue(let d):\n            return d // Return\
    \ d\n        case .stringValue(let s):\n            if let i = Int(s) { // If\
    \ s is a valid integer\n                return i // Return i\n            }\n\
    \            if let d = Double(s) { // If s is a valid double\n              \
    \  return d // Return d\n            }\n            return s // Return s\n   \
    \     }\n    case .doubleValue(let d):\n        switch b { // Switch on b's type\n\
    \        case .intValue(i):\n            return d // Return d\n        case .doubleValue(let\
    \ d):\n            return d // Return d\n        case .stringValue(let s):\n \
    \           if let i = Int(s) { // If s is a valid integer\n                return\
    \ i // Return i\n            }\n            if let d = Double(s) { // If s is\
    \ a valid double\n                return d // Return d\n            }\n      \
    \      return s // Return s\n        }\n    case .stringValue(let s):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(i):\n            return\
    \ i // Return i\n        case .doubleValue(let d):\n            return d // Return\
    \ d\n        case .stringValue(let s):\n            if let i = Int(s) { // If\
    \ s is a valid integer\n                return i // Return i\n            }\n\
    \            if let d = Double(s) { // If s is a valid double\n              \
    \  return d // Return d\n            }\n            return s // Return s\n   \
    \     }\n    }\n    return nil // Return nil", "    switch a { // Compare two\
    \ values\n    case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n\
    \        switch b { // Compare two values\n        case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt || (aInt == bInt && aDouble\
    \ > bDouble)\n        case .stringValue(bString):\n            return aString\
    \ > bString\n        case .doubleValue(bDouble):\n            return aDouble >\
    \ bDouble\n        case .intValue(bInt):\n            return aInt > bInt\n   \
    \     default:\n            return nil\n        }\n    case .stringValue(aString):\n\
    \        switch b { // Compare two values\n        case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aString > bString\n        case .stringValue(bString):\n\
    \            return aString > bString\n        case .doubleValue(bDouble):\n \
    \           return aString > bString\n        case .intValue(bInt):\n        \
    \    return aString > bString\n        default:\n            return nil\n    \
    \    }\n    case .doubleValue(aDouble):\n        switch b { // Compare two values\n\
    \        case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aDouble > bDouble\n        case .stringValue(bString):\n \
    \           return aDouble > bString\n        case .doubleValue(bDouble):\n  \
    \          return aDouble > bDouble\n        case .intValue(bInt):\n         \
    \   return aDouble > bDouble\n        default:\n            return nil\n     \
    \   }\n    case .intValue(aInt):\n        switch b { // Compare two values\n \
    \       case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aInt > bInt\n        case .stringValue(bString):\n       \
    \     return aInt > bString\n        case .doubleValue(bDouble):\n           \
    \ return aInt > bDouble\n        case .intValue(bInt):\n            return aInt\
    \ > bInt\n        default:\n            return nil\n        }\n    }", "    switch\
    \ a { // a is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        switch b { // b is larger\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // b is larger\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt ? .intValue(aInt) : aDouble\
    \ > bDouble ? .doubleValue(aDouble) : aString > bString ? .stringValue(aString)\
    \ : nil\n        }\n    }\n    return nil", "    switch a { // a is smaller\n\
    \    case .intValue(_):\n        return b\n    case .doubleValue(_):\n       \
    \ return b\n    case .stringValue(_):\n        return b\n    }\n    \n    switch\
    \ b { // b is smaller\n    case .intValue(_):\n        return a\n    case .doubleValue(_):\n\
    \        return a\n    case .stringValue(_):\n        return a\n    }\n    \n\
    \    // both are strings\n    if a.stringValue < b.stringValue {\n        return\
    \ a\n    } else {\n        return b\n    }", "    switch a { // a is smaller\n\
    \    case .intValue(_):\n        switch b { // b is smaller\n        case .intValue(_):\n\
    \            return .intValue(a)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // b is smaller\n  \
    \      case .intValue(_):\n            return .doubleValue(a)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a)\n        case .stringValue(_):\n         \
    \   return .stringValue(a)\n        }\n    case .stringValue(_):\n        switch\
    \ b { // b is smaller\n        case .intValue(_):\n            return .stringValue(a)\n\
    \        case .doubleValue(_):\n            return .stringValue(a)\n        case\
    \ .stringValue(_):\n            return .stringValue(a)\n        }\n    }\n   \
    \ return nil", "    switch a { // a is smaller\n    case .intValue(_):\n     \
    \   switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(_):\n        switch b { // case Int\n        case .intValue(_):\n\
    \            return .intValue(a)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // case Double\n   \
    \     case .intValue(_):\n            return .doubleValue(a)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a)\n        case .stringValue(_):\n         \
    \   return .stringValue(a)\n        }\n    case .stringValue(_):\n        switch\
    \ b { // case String\n        case .intValue(_):\n            return .stringValue(a)\n\
    \        case .doubleValue(_):\n            return .stringValue(a)\n        case\
    \ .stringValue(_):\n            return .stringValue(a)\n        }\n    }\n   \
    \ return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Compare two values\n    case .intValue(_):\n      \
    \  switch b { // Compare two ints\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n        \
    \    return .doubleValue(a.doubleValue > b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        }\n \
    \   case .doubleValue(_):\n        switch b { // Compare two doubles\n       \
    \ case .intValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Compare two values\n   \
    \ case .intValue(_):\n        switch b { // Compare two integers\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // Compare two doubles\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return b\n  \
    \      }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is larger\n    case .intValue(_):\n        switch\
    \ b { // b is larger\n        case .intValue(_):\n            return a\n     \
    \   case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return .intValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .intValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    \n\
    \    switch b { // b is larger\n    case .intValue(_):\n        return a\n   \
    \ case .doubleValue(_):\n        return a\n    case .stringValue(_):\n       \
    \ return a\n    }\n    \n    // both are strings\n    if a.stringValue < b.stringValue\
    \ {\n        return a\n    }\n    \n    return b", "    switch a { // Switch on\
    \ a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Handle\
    \ ints\n    case .intValue(_):\n        switch b { // Handle ints\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue() < b.intValue())\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue()\
    \ < b.doubleValue())\n        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue())\n        }\n    case .doubleValue(_):\n        switch b {\
    \ // Handle doubles\n        case .intValue(_):\n            return .doubleValue(a.doubleValue()\
    \ < b.intValue())\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue()\
    \ < b.doubleValue())\n        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue())\n        }\n    case .stringValue(_):\n        switch b {\
    \ // Handle strings\n        case .intValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.intValue())\n        case .doubleValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.doubleValue())\n        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue())\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        return b\n    case .doubleValue(_):\n        return b\n    case .stringValue(_):\n\
    \        return b\n    }\n    \n    switch b { // b is smaller\n    case .intValue(_):\n\
    \        return a\n    case .doubleValue(_):\n        return a\n    case .stringValue(_):\n\
    \        return a\n    }\n    \n    // Both are strings\n    if a.stringValue()\
    \ < b.stringValue() {\n        return a\n    }\n    \n    return b", "    switch\
    \ a { // case Int\n    case .intValue(_):\n        switch b { // case Int\n  \
    \      case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // case Double\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // case String\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        return b\n    case .doubleValue(_):\n        return b\n    case .stringValue(_):\n\
    \        return b\n    }\n    switch b { // b is smaller\n    case .intValue(_):\n\
    \        return a\n    case .doubleValue(_):\n        return a\n    case .stringValue(_):\n\
    \        return a\n    }\n    return nil", "    switch a { // Compare two values\n\
    \    case .intValue(aInt):\n        switch b { // Compare two integers\n     \
    \   case .intValue(bInt):\n            return aInt > bInt ? .intValue(aInt) :\
    \ .intValue(bInt)\n        case .doubleValue(bDouble):\n            return aInt\
    \ > bDouble ? .intValue(aInt) : .doubleValue(bDouble)\n        case .stringValue(bString):\n\
    \            return aInt > bString ? .intValue(aInt) : .stringValue(bString)\n\
    \        }\n    case .doubleValue(aDouble):\n        switch b { // Compare two\
    \ doubles\n        case .intValue(bInt):\n            return aDouble > bInt ?\
    \ .doubleValue(aDouble) : .intValue(bInt)\n        case .doubleValue(bDouble):\n\
    \            return aDouble > bDouble ? .doubleValue(aDouble) : .doubleValue(bDouble)\n\
    \        case .stringValue(bString):\n            return aDouble > bString ? .doubleValue(aDouble)\
    \ : .stringValue(bString)\n        }\n    case .stringValue(aString):\n      \
    \  switch b { // Compare two strings\n        case .intValue(bInt):\n        \
    \    return aString > bInt ? .stringValue(aString) : .intValue(bInt)\n       \
    \ case .doubleValue(bDouble):\n            return aString > bDouble ? .stringValue(aString)\
    \ : .doubleValue(bDouble)\n        case .stringValue(bString):\n            return\
    \ aString > bString ? .stringValue(aString) : .stringValue(bString)\n        }\n\
    \    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            if aInt == bInt {\n                return\
    \ aDouble\n            } else if aDouble == bDouble {\n                return\
    \ aString\n            } else {\n                return bString\n            }\n\
    \        }\n    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt ? b : a\n        default:\n\
    \            return b\n        }\n    default:\n        return a\n    }", '    switch
    a { case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString) where aInt
    == bInt where aDouble == bDouble where aString == bString where aInt == bInt where
    aDouble == bDouble where aString == bString where aInt == bInt where aDouble ==
    bDouble where aString == bString where aInt == bInt where aDouble == bDouble where
    aString == bString where aInt == bInt where aDouble == bDouble where aString ==
    bString where aInt == bInt where aDouble == bDouble where aString == bString where
    aInt == bInt where aDouble == bDouble where aString == bString where aInt == bInt
    where aDouble == bDouble where aString == bString where aInt == bInt where aDouble
    == bDouble where aString == bString where aInt == bInt where aDouble == bDouble
    where aString == bString where aInt == bInt where aDouble == bDouble where aString
    == bString where aInt == bInt where aDouble == bDouble where aString == bString
    where aInt == bInt where aDouble == bDouble where aString == bString where aInt
    == bInt where aDouble == bDouble where aString == bString where aInt == bInt where
    aDouble == bDouble where aString == bString where aInt == bInt where aDouble ==
    bDouble where aString == bString where aInt == bInt where aDouble == bDouble where
    aString == bString where aInt == bInt where aDouble == bDouble where aString ==
    bString where aInt == bInt where aDouble == bDouble where aString == bString where
    aInt == bInt where aDouble == bDouble where aString == bString where aInt == bInt
    where aDouble == bDouble where aString == bString where aInt == bInt where aDouble
    == bDouble where aString == bString where aInt == bInt where aDouble == bDouble
    where aString == bString where aInt == bInt where aDouble == bDouble where aString
    == bString where aInt == bInt where aDou', "    switch a { // a is smaller\n \
    \   case .intValue(_):\n        switch b { // b is smaller\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(_):\n        switch b { // case Int\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // case Double\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(_):\n        switch b { // case Int\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // case Double\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? a : b\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { //\
    \ Compare two values\n    case .intValue(_):\n        switch b { // Compare two\
    \ integers\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // case Int\n    case .intValue(_):\n\
    \        switch b { // case Int\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // case Double\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(intVal):\n        switch b { // Compare two integers\n\
    \        case .intValue(intVal):\n            return intVal\n        case .doubleValue(doubleVal):\n\
    \            return doubleVal\n        case .stringValue(stringVal):\n       \
    \     return stringVal\n        }\n    case .doubleValue(doubleVal):\n       \
    \ switch b { // Compare two doubles\n        case .intValue(intVal):\n       \
    \     return intVal\n        case .doubleValue(doubleVal):\n            return\
    \ doubleVal\n        case .stringValue(stringVal):\n            return stringVal\n\
    \        }\n    case .stringValue(stringVal):\n        switch b { // Compare two\
    \ strings\n        case .intValue(intVal):\n            return intVal\n      \
    \  case .doubleValue(doubleVal):\n            return doubleVal\n        case .stringValue(stringVal):\n\
    \            return stringVal\n        }\n    }\n    return nil", "    switch\
    \ a { // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue:\n        switch b { // Switch on b's type\n\
    \        case .intValue:\n            return a.intValue > b.intValue ? a : b\n\
    \        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    case .doubleValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.doubleValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.doubleValue > b.stringValue\
    \ ? a : b\n        }\n    case .stringValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.stringValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.stringValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    }\n    return nil", "    switch a { // TODO: switch\
    \ on type\n    case .intValue(_):\n        return b == .intValue(a)\n    case\
    \ .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // a is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is larger\n    case .intValue(_):\n        return b == .intValue(a)\n    case\
    \ .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // Compare two values\n    case .intValue(_):\n        switch b { // Compare\
    \ two integers\n        case .intValue(_):\n            return b\n        case\
    \ .doubleValue(_):\n            return a\n        case .stringValue(_):\n    \
    \        return a\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Compare two strings\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(aInt),\
    \ .doubleValue(aDouble), .stringValue(aString):\n        switch b { case .intValue(bInt),\
    \ .doubleValue(bDouble), .stringValue(bString):\n            return aInt > bInt\
    \ ? b : a\n        default: return b\n        }\n    default: return a\n    }",
  "    switch a { // a is smaller\n    case .intValue(_):\n        switch b { // b\
    \ is smaller\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // Compare two values\n   \
    \ case .intValue(_):\n        switch b { // Compare two integers\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(intVal):\n        switch b { // Compare two integers\n\
    \        case .intValue(intVal):\n            return intVal\n        case .doubleValue(doubleVal):\n\
    \            if doubleVal == intVal {\n                return .intValue(intVal)\n\
    \            }\n            return .doubleValue(doubleVal)\n        case .stringValue(stringVal):\n\
    \            if stringVal == intVal {\n                return .intValue(intVal)\n\
    \            }\n            if stringVal == doubleVal {\n                return\
    \ .doubleValue(doubleVal)\n            }\n            return .stringValue(stringVal)\n\
    \        }\n    case .doubleValue(doubleVal):\n        switch b { // Compare two\
    \ doubles\n        case .intValue(intVal):\n            if doubleVal == intVal\
    \ {\n                return .intValue(intVal)\n            }\n            return\
    \ .doubleValue(doubleVal)\n        case .doubleValue(doubleVal):\n           \
    \ return doubleVal\n        case .stringValue(stringVal):\n            if doubleVal\
    \ == stringVal {\n                return .stringValue(stringVal)\n           \
    \ }\n            if stringVal == doubleVal {\n                return .stringValue(stringVal)\n\
    \            }\n            return .doubleValue(doubleVal)\n        }\n    case\
    \ .stringValue(stringVal):\n        switch b { // Compare two strings\n      \
    \  case .intValue(intVal):\n            if stringVal == intVal {\n           \
    \     return .intValue(intVal)\n            }\n            if stringVal == doubleVal\
    \ {\n                return .doubleValue(doubleVal)\n            }\n         \
    \   return .stringValue(stringVal)\n        case .doubleValue(doubleVal):\n  \
    \          if stringVal == doubleVal {\n                return .stringValue(stringVal)\n\
    \            }\n            if stringVal == intVal {\n                return .stringValue(stringVal)\n\
    \            }\n            return .doubleValue(doubleVal)\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on a's type\n    case .intValue(i):\n\
    \        switch b { // Switch on b's type\n        case .intValue(i):\n      \
    \      return i // Return i\n        case .doubleValue(let d):\n            return\
    \ d // Return d\n        case .stringValue(let s):\n            if s.isEmpty {\n\
    \                return s // Return s\n            }\n            if s.contains(\"\
    .\") {\n                return s // Return s\n            }\n            if s.contains(\"\
    ,\") {\n                return s // Return s\n            }\n            return\
    \ nil // Return nil\n        }\n    case .doubleValue(let d):\n        switch\
    \ b { // Switch on b's type\n        case .intValue(i):\n            return d\
    \ // Return d\n        case .doubleValue(let d):\n            return d // Return\
    \ d\n        case .stringValue(let s):\n            if s.isEmpty {\n         \
    \       return d // Return d\n            }\n            if s.contains(\".\")\
    \ {\n                return d // Return d\n            }\n            if s.contains(\"\
    ,\") {\n                return d // Return d\n            }\n            return\
    \ nil // Return nil\n        }\n    case .stringValue(let s):\n        switch\
    \ b { // Switch on b's type\n        case .intValue(i):\n            return s\
    \ // Return s\n        case .doubleValue(let d):\n            return s // Return\
    \ s\n        case .stringValue(let s):\n            if s.isEmpty {\n         \
    \       return s // Return s\n            }\n            if s.contains(\".\")\
    \ {\n                return s // Return s\n            }\n            if s.contains(\"\
    ,\") {\n                return s // Return s\n            }\n            return\
    \ nil // Return nil\n        }\n    }\n    return nil // Return nil", "    switch\
    \ a { case .intValue(_), .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            if b == .intValue(aInt)\
    \ {\n                return b\n            } else if b == .doubleValue(aDouble)\
    \ {\n                return b\n            } else if b == .stringValue(aString)\
    \ {\n                return b\n            }\n    }\n    return nil", "    switch\
    \ a { // Switch on a.\n    case .intValue(int(a)):\n        switch b { // Switch\
    \ on b.\n        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    case .doubleValue(double(a)):\n        switch b { // Switch\
    \ on b.\n        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    case .stringValue(string(a)):\n        switch b { // Switch\
    \ on b.\n        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    }\n    return nil", "    switch a { case .intValue(aInt),\
    \ .doubleValue(aDouble), .stringValue(aString):\n        switch b { case .intValue(bInt),\
    \ .doubleValue(bDouble), .stringValue(bString):\n            return aInt > bInt\
    \ || (aInt == bInt && aDouble > bDouble)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString > bString)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString == bString && aInt == bInt)\n                ||\
    \ (aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt &&\
    \ aDouble > bDouble)\n                || (aInt == bInt && aDouble == bDouble &&\
    \ aString == bString && aInt == bInt && aDouble == bDouble && aString > bString)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble > bDouble && aString > bString)\n                || (aInt == bInt\
    \ && aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble > bDouble && aString == bString)\n              \
    \  || (aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble == ", "    switch a { // Compare two values\n    case .intValue(_):\n\
    \        switch b { // Compare two integers\n        case .intValue(_):\n    \
    \        return .intValue(a)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return .doubleValue(a)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(a)\n        case .stringValue(_):\n\
    \            return .stringValue(a)\n        }\n    case .stringValue(_):\n  \
    \      switch b { // Compare two strings\n        case .intValue(_):\n       \
    \     return .stringValue(a)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    }\n    return nil", "    switch a { // a is larger\n    case .intValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return b\n       \
    \ case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is Int\n    case .intValue(a):\n        switch b { // b is Int\n        case\
    \ .intValue(b):\n            return a > b ? .intValue(a) : .intValue(b)\n    \
    \    case .doubleValue(b):\n            return a > b ? .doubleValue(a) : .doubleValue(b)\n\
    \        case .stringValue(b):\n            return a > b ? .stringValue(a) : .stringValue(b)\n\
    \        }\n    case .doubleValue(a):\n        switch b { // b is Double\n   \
    \     case .intValue(b):\n            return a > b ? .doubleValue(a) : .doubleValue(b)\n\
    \        case .doubleValue(b):\n            return a > b ? .doubleValue(a) : .doubleValue(b)\n\
    \        case .stringValue(b):\n            return a > b ? .stringValue(a) : .stringValue(b)\n\
    \        }\n    case .stringValue(a):\n        switch b { // b is String\n   \
    \     case .intValue(b):\n            return a > b ? .stringValue(a) : .stringValue(b)\n\
    \        case .doubleValue(b):\n            return a > b ? .stringValue(a) : .stringValue(b)\n\
    \        case .stringValue(b):\n            return a > b ? .stringValue(a) : .stringValue(b)\n\
    \        }\n    }\n    return nil", "    switch a { // a is bigger\n    case .intValue(_):\n\
    \        return b == .intValue(a)\n    case .doubleValue(_):\n        return b\
    \ == .doubleValue(a)\n    case .stringValue(_):\n        return b == .stringValue(a)\n\
    \    }\n    return nil", "    switch a { // Switch on a\n    case .intValue(_):\n\
    \        switch b { // Switch on b\n        case .intValue(_):\n            return\
    \ b\n        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on b\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .stringValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        return b == .intValue(_) ? .intValue(_) : .doubleValue(_)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(_) ? .doubleValue(_) : .stringValue(_)\n   \
    \ case .stringValue(_):\n        return b == .stringValue(_) ? .stringValue(_)\
    \ : .intValue(_)\n    }", "    switch a { // case intValue:\n    case .intValue:\n\
    \        switch b { // case intValue:\n        case .intValue:\n            return\
    \ .intValue\n        case .doubleValue:\n            return .doubleValue\n   \
    \     case .stringValue:\n            return .stringValue\n        }\n    case\
    \ .doubleValue:\n        switch b { // case doubleValue:\n        case .intValue:\n\
    \            return .doubleValue\n        case .doubleValue:\n            return\
    \ .doubleValue\n        case .stringValue:\n            return .stringValue\n\
    \        case .stringValue:\n            return .stringValue\n        }\n    case\
    \ .stringValue:\n        switch b { // case stringValue:\n        case .intValue:\n\
    \            return .stringValue\n        case .doubleValue:\n            return\
    \ .stringValue\n        case .stringValue:\n            return .stringValue\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? b : a\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a\n    case .intValue(_):\n        switch b { // Switch on b\n   \
    \     case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n \
    \       case .doubleValue(_):\n            return .stringValue(a.stringValue >\
    \ b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ smaller\n    case .intValue(_):\n        switch b { // b is smaller\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return b\n  \
    \      }\n    case .doubleValue(_):\n        switch b { // b is smaller\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is larger\n    case .intValue(_):\n\
    \        return b == .intValue(a)\n    case .doubleValue(_):\n        return b\
    \ == .doubleValue(a)\n    case .stringValue(_):\n        return b == .stringValue(a)\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ ints\n    case .intValue(aInt):\n        switch b { // Compare ints\n      \
    \  case .intValue(bInt):\n            return aInt > bInt ? .intValue(aInt) : .intValue(bInt)\n\
    \        case .doubleValue(bDouble):\n            return aInt > bDouble ? .intValue(aInt)\
    \ : .doubleValue(bDouble)\n        case .stringValue(bString):\n            return\
    \ aInt > bString ? .intValue(aInt) : .stringValue(bString)\n        }\n    case\
    \ .doubleValue(aDouble):\n        switch b { // Compare doubles\n        case\
    \ .intValue(bInt):\n            return aDouble > bInt ? .doubleValue(aDouble)\
    \ : .intValue(bInt)\n        case .doubleValue(bDouble):\n            return aDouble\
    \ > bDouble ? .doubleValue(aDouble) : .doubleValue(bDouble)\n        case .stringValue(bString):\n\
    \            return aDouble > bString ? .doubleValue(aDouble) : .stringValue(bString)\n\
    \        }\n    case .stringValue(aString):\n        switch b { // Compare strings\n\
    \        case .intValue(bInt):\n            return aString > bInt ? .stringValue(aString)\
    \ : .intValue(bInt)\n        case .doubleValue(bDouble):\n            return aString\
    \ > bDouble ? .stringValue(aString) : .doubleValue(bDouble)\n        case .stringValue(bString):\n\
    \            return aString > bString ? .stringValue(aString) : .stringValue(bString)\n\
    \        }\n    }\n    return nil", "    switch a { // a is smaller\n    case\
    \ .intValue(_):\n        switch b { // b is smaller\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ b\n        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two ints\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which case to return\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n          \
    \  return .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is smaller\n    case .intValue(_):\n        switch\
    \ b { // b is smaller\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return b\n      \
    \  case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    \n\
    \    switch b { // b is smaller\n    case .intValue(_):\n        return a\n  \
    \  case .doubleValue(_):\n        return a\n    case .stringValue(_):\n      \
    \  return a\n    }\n    \n    return nil", "    switch a { // a is smaller\n \
    \   case .intValue(_):\n        return b\n    case .doubleValue(_):\n        return\
    \ b\n    case .stringValue(_):\n        return b\n    }\n    \n    switch b {\
    \ // b is smaller\n    case .intValue(_):\n        return a\n    case .doubleValue(_):\n\
    \        return a\n    case .stringValue(_):\n        return a\n    }\n    \n\
    \    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt || (aInt == bInt && aDouble\
    \ > bDouble)\n                || (aInt == bInt && aDouble == bDouble && aString\
    \ > bString)\n                || (aInt == bInt && aDouble == bDouble && aString\
    \ == bString && aInt < bInt)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString == bString && aInt == bInt && aDouble < bDouble)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString < bString)\n              \
    \  || (aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble == bDouble && aString == bString)\n                || (aInt == bInt\
    \ && aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aDouble < bDouble)\n                || (aInt == bInt\
    \ && aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aDouble == bDouble && aString < bString)\n        \
    \        || (aInt == bInt && aDouble == bDouble && aString == bString && aInt\
    \ == bInt && aDouble == bDouble && aString == bString && aDouble == bDouble &&\
    \ aString == bString)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aDouble == bDouble && aString == bString && aDouble < bDouble)\n        \
    \        || (aInt == bInt && aDouble == bDouble && aString == bString && aInt\
    \ == bInt && aDouble == bDouble && aString == bString && aDouble == bDouble &&\
    \ aString == bString && aDouble == bDouble)\n                || (aInt == bInt\
    \ && aDouble == b", "    switch a { // case is required because Value is a protocol\n\
    \    case .intValue(_):\n        switch b { // case is required because Value\
    \ is a protocol\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ case is required because Value is a protocol\n        case .intValue(_):\n \
    \           return a\n        case .doubleValue(_):\n            return b\n  \
    \      case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // case is required because Value is a protocol\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on a.\n    case .intValue(i):\n\
    \        switch b { // Switch on b.\n        case .intValue(i):\n            return\
    \ i\n        case .doubleValue(let d):\n            return d\n        case .stringValue(let\
    \ s):\n            if let i = Int(s) {\n                return i\n           \
    \ }\n            if let d = Double(s) {\n                return d\n          \
    \  }\n            return s\n        }\n    case .doubleValue(let d):\n       \
    \ switch b { // Switch on b.\n        case .intValue(i):\n            return d\n\
    \        case .doubleValue(let d):\n            return d\n        case .stringValue(let\
    \ s):\n            if let d = Double(s) {\n                return d\n        \
    \    }\n            if let i = Int(s) {\n                return i\n          \
    \  }\n            return s\n        }\n    case .stringValue(let s):\n       \
    \ switch b { // Switch on b.\n        case .intValue(i):\n            return s\n\
    \        case .doubleValue(let d):\n            return s\n        case .stringValue(let\
    \ s):\n            if let i = Int(s) {\n                return i\n           \
    \ }\n            if let d = Double(s) {\n                return d\n          \
    \  }\n            return s\n        }\n    }\n    return nil", "    switch a {\
    \ // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return b\n        case\
    \ .doubleValue(_):\n            return a\n        case .stringValue(_):\n    \
    \        return a\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return b\n     \
    \   case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return b\n\
    \        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    \n\
    \    switch b { // b is smaller\n    case .intValue(_):\n        return a\n  \
    \  case .doubleValue(_):\n        return a\n    case .stringValue(_):\n      \
    \  return a\n    }\n    \n    return nil // equal", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return a > b ? a : b\n        case .doubleValue(_):\n           \
    \ return a > b ? b : a\n        case .stringValue(_):\n            return a >\
    \ b ? a : b\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return a > b ? b : a\n\
    \        case .doubleValue(_):\n            return a > b ? a : b\n        case\
    \ .stringValue(_):\n            return a > b ? b : a\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a > b ? b : a\n        case .doubleValue(_):\n            return\
    \ a > b ? a : b\n        case .stringValue(_):\n            return a > b ? a :\
    \ b\n        }\n    }\n    return nil", "    switch a { // a is larger\n    case\
    \ .intValue(_):\n        return b\n    case .doubleValue(_):\n        return b\n\
    \    case .stringValue(_):\n        return b\n    }\n    \n    switch b { // b\
    \ is larger\n    case .intValue(_):\n        return a\n    case .doubleValue(_):\n\
    \        return a\n    case .stringValue(_):\n        return a\n    }\n    \n\
    \    return nil // a is equal to b", "    switch a { // a is smaller\n    case\
    \ .intValue(_):\n        switch b { // b is smaller\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on type to determine\
    \ which case to return\n    case .intValue(_):\n        switch b { // Switch on\
    \ type to determine which case to return\n        case .intValue(_):\n       \
    \     return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n  \
    \      case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.intValue ? a.stringValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue:\n        switch b { // Switch on b's type\n\
    \        case .intValue:\n            return a.intValue > b.intValue ? a : b\n\
    \        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    case .doubleValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.doubleValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.doubleValue > b.stringValue\
    \ ? a : b\n        }\n    case .stringValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.stringValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.stringValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    }\n    return nil", "    switch a { // a is larger\n\
    \    case .intValue(_):\n        switch b { // b is larger\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ b\n        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // TODO:\
    \ switch on type\n    case .intValue(_):\n        return b == .intValue(a)\n \
    \   case .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // a is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Compare two values\n    case .intValue(_):\n      \
    \  switch b { // Compare two integers\n        case .intValue(_):\n          \
    \  return b\n        case .doubleValue(_):\n            return a\n        case\
    \ .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Compare two doubles\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return a\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return a\n        }\n    }\n    return nil",
  "    switch a { // Compare two values\n    case .intValue(_):\n        switch b\
    \ { // Compare two integers\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    \n\
    \    switch b { // b is larger\n    case .intValue(_):\n        return a\n   \
    \ case .doubleValue(_):\n        return a\n    case .stringValue(_):\n       \
    \ return a\n    }\n    \n    return nil", "    switch a { // Compare ints\n  \
    \  case .intValue(_):\n        switch b { // Compare doubles\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue() < b.doubleValue() ? a : b)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue() ? a : b)\n        }\n    case .doubleValue(_):\n        switch\
    \ b { // Compare strings\n        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue() ? a : b)\n        case .intValue(_):\n            return .intValue(a.intValue()\
    \ < b.intValue() ? a : b)\n        }\n    case .stringValue(_):\n        switch\
    \ b { // Compare strings\n        case .stringValue(_):\n            return .stringValue(a.stringValue()\
    \ < b.stringValue() ? a : b)\n        case .intValue(_):\n            return .intValue(a.intValue()\
    \ < b.intValue() ? a : b)\n        }\n    }\n    return nil", '    switch a {
    case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString) where aInt
    == bInt where aDouble == bDouble where aString == bString where aInt == bInt where
    aDouble == bDouble where aString == bString where aInt == bInt where aDouble ==
    bDouble where aString == bString where aInt == bInt where aDouble == bDouble where
    aString == bString where aInt == bInt where aDouble == bDouble where aString ==
    bString where aInt == bInt where aDouble == bDouble where aString == bString where
    aInt == bInt where aDouble == bDouble where aString == bString where aInt == bInt
    where aDouble == bDouble where aString == bString where aInt == bInt where aDouble
    == bDouble where aString == bString where aInt == bInt where aDouble == bDouble
    where aString == bString where aInt == bInt where aDouble == bDouble where aString
    == bString where aInt == bInt where aDouble == bDouble where aString == bString
    where aInt == bInt where aDouble == bDouble where aString == bString where aInt
    == bInt where aDouble == bDouble where aString == bString where aInt == bInt where
    aDouble == bDouble where aString == bString where aInt == bInt where aDouble ==
    bDouble where aString == bString where aInt == bInt where aDouble == bDouble where
    aString == bString where aInt == bInt where aDouble == bDouble where aString ==
    bString where aInt == bInt where aDouble == bDouble where aString == bString where
    aInt == bInt where aDouble == bDouble where aString == bString where aInt == bInt
    where aDouble == bDouble where aString == bString where aInt == bInt where aDouble
    == bDouble where aString == bString where aInt == bInt where aDouble == bDouble
    where aString == bString where aInt == bInt where aDouble == bDouble where aString
    == bString where aInt == bInt where aDou', "    switch a { // a is larger\n  \
    \  case .intValue(_):\n        return b == .intValue(a)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(a)\n    case .stringValue(_):\n        return\
    \ b == .stringValue(a)\n    }\n    return nil", "    switch a { // Switch on a's\
    \ type\n    case .intValue(_):\n        switch b { // Switch on b's type\n   \
    \     case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n        \
    \    return .doubleValue(a.doubleValue > b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        }\n \
    \   case .doubleValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ smaller\n    case .intValue(_):\n        return b == .intValue(a) ? .intValue(a)\
    \ : .intValue(b)\n    case .doubleValue(_):\n        return b == .doubleValue(a)\
    \ ? .doubleValue(a) : .doubleValue(b)\n    case .stringValue(_):\n        return\
    \ b == .stringValue(a) ? .stringValue(a) : .stringValue(b)\n    }", "    switch\
    \ a { // Compare two values\n    case .intValue(_):\n        switch b { // Compare\
    \ two integers\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare two doubles\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Compare two strings\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Compare two values\n   \
    \ case .intValue(_):\n        switch b { // Compare two integers\n        case\
    \ .intValue(_):\n            return .intValue(a)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a)\n        case .stringValue(_):\n         \
    \   return .stringValue(a)\n        }\n    case .doubleValue(_):\n        switch\
    \ b { // Compare two doubles\n        case .intValue(_):\n            return .doubleValue(a)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a)\n        case\
    \ .stringValue(_):\n            return .stringValue(a)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return .stringValue(a)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    }\n    return nil", "    switch a { // a is smaller\n    case\
    \ .intValue(_):\n        switch b { // b is smaller\n        case .intValue(_):\n\
    \            return .intValue(a)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a)\n        case .stringValue(_):\n            return .stringValue(a)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // b is smaller\n  \
    \      case .intValue(_):\n            return .doubleValue(a)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a)\n        case .stringValue(_):\n         \
    \   return .stringValue(a)\n        }\n    case .stringValue(_):\n        switch\
    \ b { // b is smaller\n        case .intValue(_):\n            return .stringValue(a)\n\
    \        case .doubleValue(_):\n            return .stringValue(a)\n        case\
    \ .stringValue(_):\n            return .stringValue(a)\n        }\n    }\n   \
    \ return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return b\n        case .doubleValue(_):\n            return a\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a\n        case .doubleValue(_):\n            return b\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a\n        case .doubleValue(_):\n            return b\n       \
    \ case .stringValue(_):\n            return a\n        }\n    }\n    return nil",
  "    switch a { // Compare two values\n    case .intValue(_):\n        switch b\
    \ { // Compare two integers\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Compare two doubles\n        case .intValue(_):\n     \
    \       return .intValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .intValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is larger\n    case .intValue(_):\n        switch\
    \ b { // b is larger\n        case .intValue(_):\n            return a\n     \
    \   case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(i):\n        switch b { // Switch on b.\n        case\
    \ .intValue(i):\n            return i\n        case .doubleValue(let d):\n   \
    \         return d > i ? d : i\n        case .stringValue(let s):\n          \
    \  if let i = Int(s) {\n                return i\n            }\n            if\
    \ let d = Double(s) {\n                return d > i ? d : i\n            }\n \
    \           return s\n        }\n    case .doubleValue(let d):\n        switch\
    \ b { // Switch on b.\n        case .intValue(i):\n            return d > i ?\
    \ d : i\n        case .doubleValue(let d):\n            return d > i ? d : i\n\
    \        case .stringValue(let s):\n            if let i = Int(s) {\n        \
    \        return i\n            }\n            if let d = Double(s) {\n       \
    \         return d > i ? d : i\n            }\n            return s\n        }\n\
    \    case .stringValue(let s):\n        switch b { // Switch on b.\n        case\
    \ .intValue(i):\n            return s\n        case .doubleValue(let d):\n   \
    \         return s\n        case .stringValue(let s):\n            if let i =\
    \ Int(s) {\n                return s\n            }\n            if let d = Double(s)\
    \ {\n                return s\n            }\n            return s\n        }\n\
    \    }\n    return nil", "    switch a { // a is Int\n    case .intValue(_):\n\
    \        switch b { // b is Int\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is Double\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        return b == .intValue(a)\n    case\
    \ .doubleValue(_):\n        return b == .doubleValue(a)\n    case .stringValue(_):\n\
    \        return b == .stringValue(a)\n    }\n    return nil", "    switch a {\
    \ // Compare two values\n    case .intValue(aInt):\n        switch b { // Compare\
    \ two integers\n        case .intValue(bInt):\n            return bInt > aInt\
    \ // Compare two integers\n        case .doubleValue(bDouble):\n            return\
    \ bDouble > aInt // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aInt // Compare two strings\n        }\n    case\
    \ .doubleValue(aDouble):\n        switch b { // Compare two doubles\n        case\
    \ .intValue(bInt):\n            return bInt > aDouble // Compare two integers\n\
    \        case .doubleValue(bDouble):\n            return bDouble > aDouble //\
    \ Compare two doubles\n        case .stringValue(bString):\n            return\
    \ bString > aDouble // Compare two strings\n        }\n    case .stringValue(aString):\n\
    \        switch b { // Compare two strings\n        case .intValue(bInt):\n  \
    \          return bInt > aString // Compare two integers\n        case .doubleValue(bDouble):\n\
    \            return bDouble > aString // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aString // Compare two strings\n        }\n    }\n\
    \    return nil // If values are equal, return nil", "    switch a { case .intValue(aInt),\
    \ .doubleValue(aDouble), .stringValue(aString):\n        switch b { case .intValue(bInt),\
    \ .doubleValue(bDouble), .stringValue(bString):\n            return aInt > bInt\
    \ || (aInt == bInt && aDouble > bDouble)\n        case .stringValue(bString):\n\
    \            return aString > bString\n        case .doubleValue(bDouble):\n \
    \           return aDouble > bDouble\n        case .intValue(bInt):\n        \
    \    return aInt > bInt\n        }\n    case .stringValue(aString):\n        switch\
    \ b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n  \
    \          return aString < bString\n        case .stringValue(bString):\n   \
    \         return aString < bString\n        case .doubleValue(bDouble):\n    \
    \        return aString < bString\n        case .intValue(bInt):\n           \
    \ return aString < bString\n        }\n    case .doubleValue(aDouble):\n     \
    \   switch b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aDouble < bDouble\n        case .stringValue(bString):\n \
    \           return aDouble < bString\n        case .doubleValue(bDouble):\n  \
    \          return aDouble < bDouble\n        case .intValue(bInt):\n         \
    \   return aDouble < bDouble\n        }\n    case .intValue(aInt):\n        switch\
    \ b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n  \
    \          return aInt < bInt\n        case .stringValue(bString):\n         \
    \   return aInt < bString\n        case .doubleValue(bDouble):\n            return\
    \ aInt < bDouble\n        case .intValue(bInt):\n            return aInt < bInt\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? a : b\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { case\
    \ .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n        switch\
    \ b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n  \
    \          return aInt > bInt || aDouble > bDouble ? a : b\n        }\n    }\n\
    \    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n  \
    \      return b == .intValue(a)\n    case .doubleValue(_):\n        return b ==\
    \ .doubleValue(a)\n    case .stringValue(_):\n        return b == .stringValue(a)\n\
    \    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt || (aInt == bInt && aDouble\
    \ > bDouble)\n        }\n    }\n    return nil", "    switch a { case .intValue(aInt),\
    \ .doubleValue(aDouble), .stringValue(aString):\n        switch b { case .intValue(bInt),\
    \ .doubleValue(bDouble), .stringValue(bString):\n            return aInt > bInt\
    \ ? b : a\n        default:\n            return b\n        }\n    default:\n \
    \       return b\n    }", "    switch a { // Compare ints\n    case .intValue(_):\n\
    \        switch b { // Compare doubles\n        case .doubleValue(_):\n      \
    \      return b\n        case .stringValue(_):\n            return a\n       \
    \ }\n    case .doubleValue(_):\n        switch b { // Compare strings\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return a\n  \
    \      }\n    case .stringValue(_):\n        switch b { // Compare strings\n \
    \       case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is smaller\n    case .intValue(_):\n        return\
    \ b == .intValue(_) ? .intValue(_) : .stringValue(_)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(_) ? .doubleValue(_) : .stringValue(_)\n   \
    \ case .stringValue(_):\n        return b == .stringValue(_) ? .stringValue(_)\
    \ : .intValue(_)\n    }", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Compare ints\n    case .intValue(_):\n\
    \        switch b { // Compare doubles\n        case .doubleValue(_):\n      \
    \      return b\n        case .stringValue(_):\n            return a\n       \
    \ }\n    case .doubleValue(_):\n        switch b { // Compare strings\n      \
    \  case .intValue(_):\n            return a\n        case .doubleValue(_):\n \
    \           return b\n        case .stringValue(_):\n            return a\n  \
    \      }\n    case .stringValue(_):\n        switch b { // Compare strings\n \
    \       case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { case .intValue(aInt), .doubleValue(aDouble),\
    \ .stringValue(aString):\n        switch b { case .intValue(bInt), .doubleValue(bDouble),\
    \ .stringValue(bString):\n            return aInt > bInt || (aInt == bInt && aDouble\
    \ > bDouble)\n                || (aInt == bInt && aDouble == bDouble && aString\
    \ > bString)\n                || (aInt == bInt && aDouble == bDouble && aString\
    \ == bString && aInt < bInt)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString == bString && aInt == bInt && aDouble < bDouble)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString < bString)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt > bInt)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt)\n\
    \                || (aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble && aString == bString && aInt == bInt\
    \ && aDouble < bDouble)\n                || (aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString == bString\
    \ && aInt == bInt && aDouble == bDouble)\n                || (aInt == bInt &&\
    \ aDouble == bDouble && aString == bString && aInt == bInt && aDouble == bDouble\
    \ && aString == bString && aInt == bInt && aDouble == bDouble && aString ", " \
    \   switch a { // case Int\n    case .intValue(_):\n        switch b { // case\
    \ Int\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // case Double\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // case String\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // TODO: Switch to switch on\
    \ enum\n    case .intValue(aInt):\n        switch b { // TODO: Switch to switch\
    \ on enum\n        case .intValue(bInt):\n            return aInt > bInt ? .intValue(aInt)\
    \ : .intValue(bInt)\n        case .doubleValue(bDouble):\n            return aInt\
    \ > bDouble ? .intValue(aInt) : .doubleValue(bDouble)\n        case .stringValue(bString):\n\
    \            return aInt > bString ? .intValue(aInt) : .stringValue(bString)\n\
    \        }\n    case .doubleValue(aDouble):\n        switch b { // TODO: Switch\
    \ to switch on enum\n        case .intValue(bInt):\n            return aDouble\
    \ > bInt ? .doubleValue(aDouble) : .intValue(bInt)\n        case .doubleValue(bDouble):\n\
    \            return aDouble > bDouble ? .doubleValue(aDouble) : .doubleValue(bDouble)\n\
    \        case .stringValue(bString):\n            return aDouble > bString ? .doubleValue(aDouble)\
    \ : .stringValue(bString)\n        }\n    case .stringValue(aString):\n      \
    \  switch b { // TODO: Switch to switch on enum\n        case .intValue(bInt):\n\
    \            return aString > bInt ? .stringValue(aString) : .intValue(bInt)\n\
    \        case .doubleValue(bDouble):\n            return aString > bDouble ? .stringValue(aString)\
    \ : .doubleValue(bDouble)\n        case .stringValue(bString):\n            return\
    \ aString > bString ? .stringValue(aString) : .stringValue(bString)\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return b\n        case .doubleValue(_):\n            return a\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a\n        case .doubleValue(_):\n            return b\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a\n        case .doubleValue(_):\n            return b\n       \
    \ case .stringValue(_):\n            return a\n        }\n    }\n    return nil",
  "    switch a { // Compare two values\n    case .intValue(aInt):\n        switch\
    \ b { // Compare two ints\n        case .intValue(bInt):\n            return bInt\
    \ > aInt // Compare two ints\n        case .doubleValue(bDouble):\n          \
    \  return bDouble > aInt // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aInt // Compare two strings\n        }\n    case\
    \ .doubleValue(aDouble):\n        switch b { // Compare two doubles\n        case\
    \ .intValue(bInt):\n            return bInt > aDouble // Compare two ints\n  \
    \      case .doubleValue(bDouble):\n            return bDouble > aDouble // Compare\
    \ two doubles\n        case .stringValue(bString):\n            return bString\
    \ > aDouble // Compare two strings\n        }\n    case .stringValue(aString):\n\
    \        switch b { // Compare two strings\n        case .intValue(bInt):\n  \
    \          return bInt > aString // Compare two ints\n        case .doubleValue(bDouble):\n\
    \            return bDouble > aString // Compare two doubles\n        case .stringValue(bString):\n\
    \            return bString > aString // Compare two strings\n        }\n    }\n\
    \    return nil // If values are equal, return nil", "    switch a { // TODO:\
    \ switch to enum\n    case .intValue(aInt):\n        switch b { // TODO: switch\
    \ to enum\n        case .intValue(bInt):\n            return aInt > bInt ? .intValue(aInt)\
    \ : .intValue(bInt)\n        case .doubleValue(bDouble):\n            return aInt\
    \ > bDouble ? .doubleValue(aInt) : .doubleValue(bDouble)\n        case .stringValue(bString):\n\
    \            return aInt > bString ? .stringValue(aInt) : .stringValue(bString)\n\
    \        }\n    case .doubleValue(aDouble):\n        switch b { // TODO: switch\
    \ to enum\n        case .intValue(bInt):\n            return aDouble > bInt ?\
    \ .doubleValue(aDouble) : .doubleValue(bInt)\n        case .doubleValue(bDouble):\n\
    \            return aDouble > bDouble ? .doubleValue(aDouble) : .doubleValue(bDouble)\n\
    \        case .stringValue(bString):\n            return aDouble > bString ? .doubleValue(aDouble)\
    \ : .doubleValue(bString)\n        }\n    case .stringValue(aString):\n      \
    \  switch b { // TODO: switch to enum\n        case .intValue(bInt):\n       \
    \     return aString > bInt ? .stringValue(aString) : .stringValue(bInt)\n   \
    \     case .doubleValue(bDouble):\n            return aString > bDouble ? .stringValue(aString)\
    \ : .stringValue(bDouble)\n        case .stringValue(bString):\n            return\
    \ aString > bString ? .stringValue(aString) : .stringValue(bString)\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return b\n        case .doubleValue(_):\n            return a\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return b\n        case .doubleValue(_):\n            return a\n       \
    \ case .stringValue(_):\n            return a\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return b\n        case .doubleValue(_):\n            return a\n       \
    \ case .stringValue(_):\n            return a\n        }\n    }\n    return nil",
  "    switch a { // case is exhaustive\n    case .intValue(i):\n        switch b\
    \ { // case is exhaustive\n        case .intValue(i):\n            return i\n\
    \        case .doubleValue(let d):\n            return d > i ? .doubleValue(d)\
    \ : .intValue(i)\n        case .stringValue(let s):\n            if let i = Int(s)\
    \ {\n                return .intValue(i)\n            }\n            if let d\
    \ = Double(s) {\n                return .doubleValue(d) > i ? .doubleValue(d)\
    \ : .intValue(i)\n            }\n            return .stringValue(s)\n        }\n\
    \    case .doubleValue(let d):\n        switch b { // case is exhaustive\n   \
    \     case .intValue(i):\n            return d\n        case .doubleValue(let\
    \ d):\n            return d > i ? .doubleValue(d) : .intValue(i)\n        case\
    \ .stringValue(let s):\n            if let i = Int(s) {\n                return\
    \ .intValue(i)\n            }\n            if let d = Double(s) {\n          \
    \      return .doubleValue(d) > i ? .doubleValue(d) : .intValue(i)\n         \
    \   }\n            return .stringValue(s)\n        }\n    case .stringValue(let\
    \ s):\n        switch b { // case is exhaustive\n        case .intValue(i):\n\
    \            return s\n        case .doubleValue(let d):\n            return d\
    \ > i ? .doubleValue(d) : .intValue(i)\n        case .stringValue(let s):\n  \
    \          if let i = Int(s) {\n                return .intValue(i)\n        \
    \    }\n            if let d = Double(s) {\n                return .doubleValue(d)\
    \ > i ? .doubleValue(d) : .intValue(i)\n            }\n            return .stringValue(s)\n\
    \        }\n    }\n    return nil", "    switch a { // TODO: Use a switch statement\
    \ to compare the values\n    case .intValue(aInt):\n        if b == .intValue(bInt)\
    \ {\n            return aInt\n        } else if b == .doubleValue(bDouble) {\n\
    \            return .doubleValue(bDouble)\n        } else if b == .stringValue(bString)\
    \ {\n            return .stringValue(bString)\n        }\n    case .doubleValue(aDouble):\n\
    \        if b == .intValue(bInt) {\n            return .intValue(bInt)\n     \
    \   } else if b == .doubleValue(bDouble) {\n            return aDouble\n     \
    \   } else if b == .stringValue(bString) {\n            return .stringValue(bString)\n\
    \        }\n    case .stringValue(aString):\n        if b == .intValue(bInt) {\n\
    \            return .intValue(bInt)\n        } else if b == .doubleValue(bDouble)\
    \ {\n            return .doubleValue(bDouble)\n        } else if b == .stringValue(bString)\
    \ {\n            return aString\n        }\n    }\n    return nil", "    switch\
    \ a { // Switch on a\n    case .intValue(aInt):\n        switch b { // Switch\
    \ on b\n        case .intValue(bInt):\n            return bInt > aInt // Compare\
    \ bInt to aInt\n        case .doubleValue(bDouble):\n            return bDouble\
    \ > aInt // Compare bDouble to aInt\n        case .stringValue(bString):\n   \
    \         return bString > aInt // Compare bString to aInt\n        }\n    case\
    \ .doubleValue(aDouble):\n        switch b { // Switch on b\n        case .intValue(bInt):\n\
    \            return bInt > aDouble // Compare bInt to aDouble\n        case .doubleValue(bDouble):\n\
    \            return bDouble > aDouble // Compare bDouble to aDouble\n        case\
    \ .stringValue(bString):\n            return bString > aDouble // Compare bString\
    \ to aDouble\n        }\n    case .stringValue(aString):\n        switch b { //\
    \ Switch on b\n        case .intValue(bInt):\n            return bInt > aString\
    \ // Compare bInt to aString\n        case .doubleValue(bDouble):\n          \
    \  return bDouble > aString // Compare bDouble to aString\n        case .stringValue(bString):\n\
    \            return bString > aString // Compare bString to aString\n        }\n\
    \    }\n    return nil // If both are strings, compare them alphabetically", " \
    \   switch a { // a is smaller\n    case .intValue(_):\n        switch b { //\
    \ b is smaller\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ b is smaller\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    case .stringValue(_):\n        switch b { //\
    \ b is smaller\n        case .intValue(_):\n            return a\n        case\
    \ .doubleValue(_):\n            return b\n        case .stringValue(_):\n    \
    \        return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.stringValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Handle\
    \ ints\n    case .intValue(_):\n        return b == .intValue(_) ? .intValue(_)\
    \ : .intValue(_)\n    case .doubleValue(_):\n        return b == .doubleValue(_)\
    \ ? .doubleValue(_) : .doubleValue(_)\n    case .stringValue(_):\n        return\
    \ b == .stringValue(_) ? .stringValue(_) : .stringValue(_)\n    }", "    switch\
    \ a { case .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n  \
    \      switch b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n\
    \            return aInt > bInt || (aInt == bInt && aDouble > bDouble)\n     \
    \   }\n    }\n    return nil", "    switch a { // Switch on a's type\n    case\
    \ .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Compare\
    \ two values\n    case .intValue(_):\n        switch b { // Compare two integers\n\
    \        case .intValue(_):\n            return b\n        case .doubleValue(_):\n\
    \            return a\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    case .stringValue(_):\n        switch b { // Compare two strings\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return a\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        return b == .intValue(a) ? .intValue(a) : .intValue(b)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(a) ? .doubleValue(a) : .doubleValue(b)\n   \
    \ case .stringValue(_):\n        return b == .stringValue(a) ? .stringValue(a)\
    \ : .stringValue(b)\n    }", "    switch a { // case Int\n    case .intValue(_):\n\
    \        switch b { // case Int\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // case Double\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(a):\n        switch b { // case Int\n        case .intValue(b):\n\
    \            return b\n        case .doubleValue(b):\n            return a\n \
    \       case .stringValue(b):\n            return a\n        }\n    case .doubleValue(a):\n\
    \        switch b { // case Double\n        case .intValue(b):\n            return\
    \ a\n        case .doubleValue(b):\n            return b\n        case .stringValue(b):\n\
    \            return a\n        }\n    case .stringValue(a):\n        switch b\
    \ { // case String\n        case .intValue(b):\n            return a\n       \
    \ case .doubleValue(b):\n            return b\n        case .stringValue(b):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { case\
    \ .intValue(aInt), .doubleValue(aDouble), .stringValue(aString):\n        switch\
    \ b { case .intValue(bInt), .doubleValue(bDouble), .stringValue(bString):\n  \
    \          if aInt == bInt { return .intValue(aInt) }\n            if aDouble\
    \ == bDouble { return .doubleValue(aDouble) }\n            if aString == bString\
    \ { return .stringValue(aString) }\n        }\n    }\n    return nil", "    switch\
    \ a { // a is smaller\n    case .intValue(_):\n        switch b { // b is smaller\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is smaller\n   \
    \     case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // a is smaller\n    case .intValue(_):\n\
    \        switch b { // b is smaller\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return b\n      \
    \  case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is smaller\n        case .intValue(_):\n            return b\n      \
    \  case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    }\n    return nil", "    switch a { // case\
    \ Int\n    case .intValue(_):\n        switch b { // case Int\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // case Double\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case String\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue:\n        switch b { // Switch on b's type\n\
    \        case .intValue:\n            return a.intValue > b.intValue ? a : b\n\
    \        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    case .doubleValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.doubleValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.doubleValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.doubleValue > b.stringValue\
    \ ? a : b\n        }\n    case .stringValue:\n        switch b { // Switch on\
    \ b's type\n        case .intValue:\n            return a.stringValue > b.intValue\
    \ ? a : b\n        case .doubleValue:\n            return a.stringValue > b.doubleValue\
    \ ? a : b\n        case .stringValue:\n            return a.stringValue > b.stringValue\
    \ ? a : b\n        }\n    }\n    return nil", "    switch a { // a is smaller\n\
    \    case .intValue(_):\n        return b == .intValue(a)\n    case .doubleValue(_):\n\
    \        return b == .doubleValue(a)\n    case .stringValue(_):\n        return\
    \ b == .stringValue(a)\n    }\n    return nil", "    switch a { // Switch on a's\
    \ type\n    case .intValue(_):\n        switch b { // Switch on b's type\n   \
    \     case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? b : a\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a.\n    case .intValue(int(a)):\n        switch b { // Switch on b.\n\
    \        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    case .doubleValue(double(a)):\n        switch b { // Switch\
    \ on b.\n        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    case .stringValue(string(a)):\n        switch b { // Switch\
    \ on b.\n        case .intValue(int(b)):\n            return b\n        case .doubleValue(double(b)):\n\
    \            return b\n        case .stringValue(string(b)):\n            return\
    \ b\n        }\n    }\n    return nil", "    switch a { // Switch on a's type\n\
    \    case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.stringValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue:\n        switch\
    \ b { // Switch on b's type\n        case .intValue:\n            return a.intValue\
    \ > b.intValue ? a : b\n        case .doubleValue:\n            return a.doubleValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.stringValue\
    \ > b.stringValue ? a : b\n        }\n    case .doubleValue:\n        switch b\
    \ { // Switch on b's type\n        case .intValue:\n            return a.doubleValue\
    \ > b.intValue ? a : b\n        case .doubleValue:\n            return a.doubleValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.doubleValue\
    \ > b.stringValue ? a : b\n        }\n    case .stringValue:\n        switch b\
    \ { // Switch on b's type\n        case .intValue:\n            return a.stringValue\
    \ > b.intValue ? a : b\n        case .doubleValue:\n            return a.stringValue\
    \ > b.doubleValue ? a : b\n        case .stringValue:\n            return a.stringValue\
    \ > b.stringValue ? a : b\n        }\n    }\n    return nil"]
stop_tokens:
- "\n}"

name: HumanEval_80_is_happy
language: swift
prompt: "\n/// You are given a string s.\n/// Your task is to check if the string\
  \ is happy or not.\n/// A string is happy if its length is at least 3 and every\
  \ 3 consecutive letters are distinct\n/// For example:\n/// is_happy(a) => False\n\
  /// is_happy(aa) => False\n/// is_happy(abcd) => True\n/// is_happy(aabb) => False\n\
  /// is_happy(adb) => True\n/// is_happy(xyy) => False\nfunc is_happy(s: String)\
  \ -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_happy(s: \"a\") == false)\nassert(is_happy(s:\
  \ \"aa\") == false)\nassert(is_happy(s: \"abcd\") == true)\nassert(is_happy(s: \"\
  aabb\") == false)\nassert(is_happy(s: \"adb\") == true)\nassert(is_happy(s: \"xyy\"\
  ) == false)\nassert(is_happy(s: \"iopaxpoi\") == true)\nassert(is_happy(s: \"iopaxioi\"\
  ) == false)"
completions: ["    if s.isEmpty {\n        return false\n    }\n    if s.count < 3\
    \ {\n        return false\n    }\n    var lastLetter = s[0]\n    for letter in\
    \ s.dropFirst() {\n        if letter == lastLetter {\n            return false\n\
    \        }\n        lastLetter = letter\n    }\n    return true", "    let len\
    \ = s.characters.count\n    if len < 3 {\n        return false\n    }\n    var\
    \ count = 0\n    for c in s.characters {\n        if c == s.characters[count]\
    \ {\n            count += 1\n        } else {\n            count = 0\n       \
    \ }\n        if count >= 3 {\n            return false\n        }\n    }\n   \
    \ return true", "    var i = 0\n    var j = 0\n    var k = 0\n    var count =\
    \ 0\n    for _ in s.characters {\n        i += 1\n        j += 1\n        k +=\
    \ 1\n        if i == j && j == k {\n            count += 1\n        }\n    }\n\
    \    return count >= 3 && count == s.characters.count", "    if s.isEmpty {\n\
    \        return true\n    }\n    if s.count == 3 {\n        if s.isDistinct {\n\
    \            return true\n        }\n    }\n    return false", "    if s.isEmpty\
    \ {\n        return false\n    }\n    if s.count < 3 {\n        return false\n\
    \    }\n    var last: Character?\n    for c in s.characters {\n        if last\
    \ == nil {\n            last = c\n        } else {\n            if last != c {\n\
    \                return false\n            }\n            last = nil\n       \
    \ }\n    }\n    return true", "    var count = 0\n    for letter in s {\n    \
    \    if letter == letter {\n            count += 1\n        } else if letter ==\
    \ letter {\n            count += 1\n        } else if letter == letter {\n   \
    \         count += 1\n        } else {\n            return false\n        }\n\
    \    }\n    return count >= 3 && count == s.characters.count", "    var count\
    \ = 0\n    for c in s {\n        if !is_distinct(&c, &s[count]) {\n          \
    \  count += 1\n        }\n    }\n    return count >= 3", "    if s.isEmpty {\n\
    \        return true\n    }\n    let len = s.characters.count\n    if len < 3\
    \ {\n        return false\n    }\n    let letters = Array(s.characters)\n    let\
    \ set = Set(letters)\n    return set.count == len && set.count == letters.count",
  "    let len = s.characters.count\n    if len < 3 {\n        return false\n    }\n\
    \    var last: Character? = nil\n    for char in s.characters {\n        if char\
    \ == last {\n            return false\n        }\n        last = char\n    }\n\
    \    return true", "    var count = 0\n    for letter in s {\n        if letter\
    \ == letter {\n            count += 1\n        } else if letter == letter + letter\
    \ {\n            count += 1\n        } else if letter == letter + letter + letter\
    \ {\n            count += 1\n        } else {\n            return false\n    \
    \    }\n    }\n    return count >= 3", "    if s.isEmpty {\n        return true\n\
    \    }\n    if s.count < 3 {\n        return false\n    }\n    var lastChar =\
    \ s[0]\n    for char in s.dropFirst() {\n        if char == lastChar {\n     \
    \       return false\n        }\n        lastChar = char\n    }\n    return true",
  "    let len = s.characters.count\n    if len < 3 {\n        return false\n    }\n\
    \    var count = 0\n    for c in s.characters {\n        if c == s[count] {\n\
    \            count += 1\n        } else {\n            count = 0\n        }\n\
    \        if count == 3 {\n            return true\n        }\n    }\n    return\
    \ false", "    var count = 0\n    for letter in s.characters {\n        if letter\
    \ == letter {\n            count += 1\n        } else if letter == letter + letter\
    \ {\n            count += 1\n        } else if letter == letter + letter + letter\
    \ {\n            count += 1\n        } else {\n            return false\n    \
    \    }\n    }\n    return count >= 3 && count == s.characters.count", "    let\
    \ len = s.characters.count\n    if len < 3 {\n        return false\n    }\n  \
    \  var last: Character?\n    for char in s.characters {\n        if char == last\
    \ {\n            return false\n        }\n        last = char\n    }\n    return\
    \ true", "    var count = 0\n    for c in s {\n        if count % 3 == 0 {\n \
    \           if s.rangeOfString(c) == nil {\n                return false\n   \
    \         }\n        } else {\n            if s.rangeOfString(c) != nil {\n  \
    \              return false\n            }\n        }\n        count += 1\n  \
    \  }\n    return true", "    let len = s.characters.count\n    if len < 3 { return\
    \ false }\n    var last: Character?\n    for char in s.characters {\n        if\
    \ char == last {\n            return false\n        }\n        last = char\n \
    \   }\n    return true", "    let len = s.characters.count\n    if len < 3 {\n\
    \        return false\n    }\n    var lastChar = s.characters.last!\n    for char\
    \ in s.characters[0..<len] {\n        if char == lastChar {\n            return\
    \ false\n        }\n        lastChar = char\n    }\n    return true", "    let\
    \ len = s.characters.count\n    if len < 3 {\n        return false\n    }\n  \
    \  var lastChar = s.characters.last\n    for char in s.characters[0..<len] {\n\
    \        if char == lastChar {\n            return false\n        }\n        lastChar\
    \ = char\n    }\n    return true", "    let len = s.characters.count\n    if len\
    \ < 3 {\n        return false\n    }\n    var lastChar: Character?\n    for char\
    \ in s.characters {\n        if char == lastChar {\n            return false\n\
    \        }\n        lastChar = char\n    }\n    return true", "    let len = s.characters.count\n\
    \    if len < 3 {\n        return false\n    }\n    var lastChar = s.characters.last\n\
    \    for char in s.characters.dropLast() {\n        if char == lastChar {\n  \
    \          return false\n        }\n        lastChar = char\n    }\n    return\
    \ true"]
stop_tokens:
- "\n}"
